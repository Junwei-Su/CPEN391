/*
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "Colours.h"
#include "graphic.h"



//menu constants
#define BOXW 150;
#define BOXH 150;
#define NUMBOX 3;

void menuBox(int x1, int y1) {

	int boxW = BOXW;
	int boxH = BOXH;

	DrawSolidRectangle(x1, y1, x1+boxW, y1, x1, y1+boxH, x1+boxW, y1+boxH, GRAY);
	DrawRectangle(x1, y1, x1+boxW, y1, x1, y1+boxH, x1+boxW, y1+boxH, LIGHT_SLATE_GRAY);

}

void symbolGPS(int xCentre, int yCentre, int rad){

	int colour = STEEL_BLUE;

	drawcircle(xCentre, yCentre, rad, colour);
	drawSolidcircle(xCentre, yCentre, rad/2, colour);

	DrawVline(xCentre, yCentre + rad - 10, xCentre, yCentre + rad + 10, colour);
	DrawVline(xCentre, yCentre - rad - 10, xCentre, yCentre - rad + 10, colour);
	DrawHline(xCentre + rad - 10, yCentre, xCentre + rad + 10, yCentre, colour);
	DrawHline(xCentre - rad - 10, yCentre, xCentre - rad + 10, yCentre, colour);


}



int main()
{

	clearScreen(LIGHT_CYAN);
	int x_offset = 50;
	int y_offset = 50;
	int x_centre = 400;
	int y_centre = 240;
	int radius = 100;

	write(325, y_offset, "NeverLost", 16, SLATE_GRAY, LIGHT_CYAN);

	DrawSolidRectangle(0, 120, 800, 120, 0, 440, 800, 440, MEDIUM_SPRING_GREEN);
	DrawRectangle(0, 120, 800, 120, 0, 440, 800, 440, BLUE);

	/*
	int i;
	for (i = 0; i < NUMBOX; i++){
		menuBox( 10 ,430);
		m
	}
	*/

	menuBox(100,205);
	menuBox(325,205);
	writeSmall(330,375,"GPS",16, SLATE_GRAY, MEDIUM_SPRING_GREEN);
	menuBox(550,205);
	symbolGPS(400,280,50);

	/*
	write(x_offset, y_offset, "Are you Safe?", 16, GRAY, LIGHT_CYAN);
	write(x_offset, y_offset*2, "Press the circle if you are!", 16, GRAY, LIGHT_CYAN);

	drawcircle(x_centre, y_centre+50, 100, LIME);

	int i;
	for (i = 30 ; i >= 0 ; i-- ){


		write(x_offset, y_offset*2, "Press the circle if you are!", 16, GRAY, LIGHT_CYAN);
		waitFor(1);
	}
	*/


	return 0;
}
