
CPEN391project.elf:     file format elf32-littlenios2
CPEN391project.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001bc

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x00012dbc memsz 0x00012dbc flags r-x
    LOAD off    0x00013ddc vaddr 0x08012ddc paddr 0x0801491c align 2**12
         filesz 0x00001b40 memsz 0x00001b40 flags rw-
    LOAD off    0x0001645c vaddr 0x0801645c paddr 0x0801645c align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00012840  080001bc  080001bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003e0  080129fc  080129fc  000139fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b40  08012ddc  0801491c  00013ddc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  0801645c  0801645c  0001645c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  080165b8  080165b8  0001591c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001591c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000d68  00000000  00000000  00015940  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000266e8  00000000  00000000  000166a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000097a1  00000000  00000000  0003cd90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c0ed  00000000  00000000  00046531  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000024b8  00000000  00000000  00052620  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003a17  00000000  00000000  00054ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001af8a  00000000  00000000  000584ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  0007347c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000014c8  00000000  00000000  000734a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00077f21  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00077f24  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00077f30  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00077f31  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  00077f32  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  00077f3d  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  00077f48  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  00077f53  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000022  00000000  00000000  00077f5e  2**0
                  CONTENTS, READONLY
 26 .jdi          00004b4c  00000000  00000000  00077f80  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0006f74b  00000000  00000000  0007cacc  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
080001bc l    d  .text	00000000 .text
080129fc l    d  .rodata	00000000 .rodata
08012ddc l    d  .rwdata	00000000 .rwdata
0801645c l    d  .bss	00000000 .bss
080165b8 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../CPEN391project_bsp//obj/HAL/src/crt0.o
080001f4 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
08000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 RS232.c
00000000 l    df *ABS*	00000000 WifiModule.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
08012aca l     O .rodata	00000010 zeroes.4166
08012ada l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
08012aea l     O .rodata	00000010 zeroes.4181
08012afa l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
08004af0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
08006670 l     F .text	00000008 __fp_lock
08006678 l     F .text	00000008 __fp_unlock
0800668c l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
08012e04 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
08013248 l     O .rwdata	00000020 lc_ctype_charset
08013228 l     O .rwdata	00000020 lc_message_charset
08013268 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
08012b2c l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
08012c50 l     O .rodata	00000010 zeroes.4110
08012c60 l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 vfprintf.c
0800a17c l     F .text	000000fc __sprint_r.part.0
08012c80 l     O .rodata	00000010 blanks.4125
08012c70 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0800d638 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0800fd64 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0800fe84 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0800feb0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0800ffb0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
080100a4 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
08010188 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
08010364 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0801490c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
080105c0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
08010708 l     F .text	00000038 alt_dev_reg
08013850 l     O .rwdata	00001060 jtag_uart_0
080148b0 l     O .rwdata	0000002c character_lcd_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
08010a0c l     F .text	00000204 altera_avalon_jtag_uart_irq
08010c10 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
08011230 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
08011960 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
08011e9c l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
08011fd4 l     F .text	00000050 alt_get_errno
08012024 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
08008b2c g     F .text	00000074 _mprec_log10
08008c18 g     F .text	0000008c __any_on
0800bf70 g     F .text	00000054 _isatty_r
08012b38 g     O .rodata	00000028 __mprec_tinytens
080102ac g     F .text	00000078 alt_main
080164b8 g     O .bss	00000100 alt_irq
0800bfc4 g     F .text	0000005c _lseek_r
0801491c g       *ABS*	00000000 __flash_rwdata_start
080113a0 g     F .text	0000003c alt_up_character_lcd_send_cmd
0800e8cc g     F .text	00000084 .hidden __eqdf2
08000504 g     F .text	0000007c ProgramPalette
08000234 g     F .text	00000088 rs232_send_string
080165b8 g       *ABS*	00000000 __alt_heap_start
08000878 g     F .text	0000003c printf
0800c8e8 g     F .text	0000009c _wcrtomb_r
08008e44 g     F .text	0000005c __sseek
080069c0 g     F .text	00000010 __sinit
0800c778 g     F .text	00000154 __swbuf_r
08006f94 g     F .text	0000007c _setlocale_r
0800682c g     F .text	00000064 __sfmoreglue
08010344 g     F .text	00000020 __malloc_unlock
0800c020 g     F .text	0000015c memmove
080069a8 g     F .text	00000018 _cleanup
08007d18 g     F .text	000000a8 _Balloc
0800e950 g     F .text	000000e0 .hidden __gtdf2
00000000  w      *UND*	00000000 __errno
0801132c g     F .text	00000074 get_DDRAM_addr
08000000 g     F .entry	0000001c __reset
08000020 g       *ABS*	00000000 __flash_exceptions_start
0800ba74 g     F .text	00000058 _fstat_r
08016474 g     O .bss	00000004 errno
08008dc0 g     F .text	00000008 __seofread
08009114 g     F .text	00001068 ___svfiprintf_internal_r
0801647c g     O .bss	00000004 alt_argv
0801c8dc g       *ABS*	00000000 _gp
080136d0 g     O .rwdata	00000180 alt_fd_list
08011b0c g     F .text	00000090 alt_find_dev
08007abc g     F .text	00000138 memcpy
0801153c g     F .text	00000050 alt_up_character_lcd_write_fd
08006680 g     F .text	0000000c _cleanup_r
0800fb8c g     F .text	000000d0 .hidden __floatsidf
08011f5c g     F .text	00000078 alt_io_redirect
0800ea30 g     F .text	000000e0 .hidden __ltdf2
080129fc g       *ABS*	00000000 __DTOR_END__
08008ca4 g     F .text	00000074 __fpclassifyd
08008a88 g     F .text	000000a4 __ratio
0800b5ec g     F .text	00000024 __vfiprintf_internal
08010e0c g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
0800084c g     F .text	0000002c _printf_r
0800d754 g     F .text	00000008 .hidden __udivsi3
08010000 g     F .text	000000a4 isatty
08012b88 g     O .rodata	000000c8 __mprec_tens
08007010 g     F .text	0000000c __locale_charset
080125cc g     F .text	0000008c alt_icache_flush
08016470 g     O .bss	00000004 __malloc_top_pad
080148e4 g     O .rwdata	00000004 __mb_cur_max
08007040 g     F .text	0000000c _localeconv_r
0800bacc g     F .text	000004a4 __sfvwrite_r
08008118 g     F .text	0000003c __i2b
08008d18 g     F .text	00000054 _sbrk_r
0800c17c g     F .text	0000005c _read_r
08014904 g     O .rwdata	00000004 alt_max_fd
0800b784 g     F .text	00000100 _fclose_r
08006640 g     F .text	00000030 fflush
0801646c g     O .bss	00000004 __malloc_max_sbrked_mem
0800d764 g     F .text	0000089c .hidden __adddf3
08008830 g     F .text	0000011c __b2d
0800d0a8 g     F .text	00000590 .hidden __umoddi3
080101d8 g     F .text	000000d4 lseek
080148dc g     O .rwdata	00000004 _global_impure_ptr
0800c1d8 g     F .text	000005a0 _realloc_r
080165b8 g       *ABS*	00000000 __bss_end
08011dac g     F .text	000000f0 alt_iic_isr_register
080122e0 g     F .text	00000104 alt_tick
0800cae8 g     F .text	000005c0 .hidden __udivdi3
0800b898 g     F .text	00000184 _fputwc_r
08012b60 g     O .rodata	00000028 __mprec_bigtens
08007efc g     F .text	00000104 __s2b
0800fc5c g     F .text	000000a4 .hidden __floatunsidf
080085d8 g     F .text	00000060 __mcmp
080069e0 g     F .text	00000018 __fp_lock_all
08011d60 g     F .text	0000004c alt_ic_irq_enabled
0800030c g     F .text	00000048 rs232_get_char
08012248 g     F .text	00000098 alt_alarm_stop
08016484 g     O .bss	00000004 alt_irq_active
080000ec g     F .exceptions	000000d0 alt_irq_handler
080136a8 g     O .rwdata	00000028 alt_dev_null
080006c0 g     F .text	000000a0 Drawline
080117d0 g     F .text	00000034 alt_up_character_lcd_cursor_blink_on
08011944 g     F .text	0000001c alt_dcache_flush_all
08008000 g     F .text	00000068 __hi0bits
0800fb04 g     F .text	00000088 .hidden __fixdfsi
08000354 g     F .text	00000030 rs232_check_if_received_data
080001f8 g     F .text	0000003c rs232_init
0801491c g       *ABS*	00000000 __ram_rwdata_end
080148fc g     O .rwdata	00000008 alt_dev_list
08010610 g     F .text	000000f8 write
08012ddc g       *ABS*	00000000 __ram_rodata_end
0800ff00 g     F .text	000000b0 fstat
0800ea30 g     F .text	000000e0 .hidden __ledf2
08008350 g     F .text	00000140 __pow5mult
0800a290 g     F .text	0000135c ___vfiprintf_internal_r
08016464 g     O .bss	00000004 __nlocale_changed
0800d75c g     F .text	00000008 .hidden __umodsi3
080165b8 g       *ABS*	00000000 end
08010948 g     F .text	000000c4 altera_avalon_jtag_uart_init
080129fc g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
080112a4 g     F .text	00000088 alt_avalon_timer_sc_init
0800fd00 g     F .text	00000064 .hidden __clzsi2
08011018 g     F .text	00000218 altera_avalon_jtag_uart_write
08000620 g     F .text	000000a0 DrawVline
080069d0 g     F .text	00000004 __sfp_lock_acquire
080079d4 g     F .text	000000e8 memchr
08011450 g     F .text	00000078 alt_up_character_lcd_write
080029a0 g     F .text	00001ffc ___vfprintf_internal_r
080008b4 g     F .text	00000058 _sprintf_r
08006b34 g     F .text	000002f0 _free_r
0800701c g     F .text	00000010 __locale_mb_cur_max
08012ddc g     O .rwdata	00000028 WIFI_MESSAGE_DEPENDENT_IS_SAFE
08012834 g     F .text	00000194 __call_exitprocs
08016460 g     O .bss	00000004 __mlocale_changed
080148e8 g     O .rwdata	00000004 __malloc_sbrk_base
080001bc g     F .text	0000003c _start
08016488 g     O .bss	00000004 _alt_tick_rate
08008490 g     F .text	00000148 __lshift
0801648c g     O .bss	00000004 _alt_nticks
080103b4 g     F .text	000000fc read
08010774 g     F .text	00000070 alt_sys_init
08011688 g     F .text	00000088 alt_up_character_lcd_shift_display
08008f4c g     F .text	000001c8 __ssprint_r
08000580 g     F .text	000000a0 DrawHline
08012720 g     F .text	00000114 __register_exitproc
08008154 g     F .text	000001fc __multiply
08011710 g     F .text	0000008c alt_up_character_lcd_erase_pos
08010cb8 g     F .text	00000068 altera_avalon_jtag_uart_close
08012ddc g       *ABS*	00000000 __ram_rwdata_start
080129fc g       *ABS*	00000000 __ram_rodata_start
08016490 g     O .bss	00000028 __malloc_current_mallinfo
0800894c g     F .text	0000013c __d2b
080107e4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
08012518 g     F .text	000000b4 alt_get_fd
0800b66c g     F .text	00000054 _close_r
080126a4 g     F .text	0000007c memcmp
080108a4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
080165b8 g       *ABS*	00000000 __alt_stack_base
080108f4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
080049c0 g     F .text	00000130 __swsetup_r
0800e000 g     F .text	000008cc .hidden __divdf3
08006890 g     F .text	00000118 __sfp
08008ba0 g     F .text	00000078 __copybits
080132a0 g     O .rwdata	00000408 __malloc_av_
080069dc g     F .text	00000004 __sinit_lock_release
0800eb10 g     F .text	00000724 .hidden __muldf3
08008d6c g     F .text	00000054 __sread
08012404 g     F .text	00000114 alt_find_file
080119b0 g     F .text	000000a4 alt_dev_llist_insert
08010324 g     F .text	00000020 __malloc_lock
08010510 g     F .text	000000b0 sbrk
08000a10 g     F .text	00001f90 ___svfprintf_internal_r
08006418 g     F .text	00000228 _fflush_r
0800b6c0 g     F .text	000000c4 _calloc_r
0801645c g       *ABS*	00000000 __bss_start
08007bf4 g     F .text	00000124 memset
08000760 g     F .text	000000ec main
08016480 g     O .bss	00000004 alt_envp
08016468 g     O .bss	00000004 __malloc_max_total_mem
08010844 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0800c8cc g     F .text	0000001c __swbuf
08000474 g     F .text	00000090 ReadAPixel
08011600 g     F .text	00000088 alt_up_character_lcd_shift_cursor
08008ea0 g     F .text	00000008 __sclose
0c000000 g       *ABS*	00000000 __alt_heap_limit
0800b884 g     F .text	00000014 fclose
08004cf0 g     F .text	00001728 _dtoa_r
0800722c g     F .text	000007a8 _malloc_r
0800ca5c g     F .text	00000030 __ascii_wctomb
08014908 g     O .rwdata	00000004 alt_errno
08006e24 g     F .text	000000b8 _fwalk
0800d6a4 g     F .text	00000054 .hidden __divsi3
08011410 g     F .text	00000040 alt_up_character_lcd_open_dev
08006a10 g     F .text	00000124 _malloc_trim_r
080129fc g       *ABS*	00000000 __CTOR_END__
080113dc g     F .text	00000034 alt_up_character_lcd_init
08008ea8 g     F .text	000000a4 strcmp
080129fc g       *ABS*	00000000 __flash_rodata_start
080129fc g       *ABS*	00000000 __DTOR_LIST__
0800e8cc g     F .text	00000084 .hidden __nedf2
08010740 g     F .text	00000034 alt_irq_init
080104b0 g     F .text	00000060 alt_release_fd
080003b4 g     F .text	00000044 wifi_send_sms
0800090c g     F .text	0000006c sprintf
0801179c g     F .text	00000034 alt_up_character_lcd_cursor_off
08012c90 g     O .rodata	00000100 .hidden __clz_tab
0801645c g     O .bss	00000004 _PathLocale
08012658 g     F .text	00000014 atexit
0800b610 g     F .text	0000005c _write_r
0800704c g     F .text	0000001c setlocale
080148e0 g     O .rwdata	00000004 _impure_ptr
08016478 g     O .bss	00000004 alt_argc
080003f8 g     F .text	0000007c WriteAPixel
08011ab0 g     F .text	0000005c _do_dtors
08007038 g     F .text	00000008 __locale_cjk_lang
08000020 g       .exceptions	00000000 alt_irq_entry
080087d0 g     F .text	00000060 __ulp
080069f8 g     F .text	00000018 __fp_unlock_all
080148f4 g     O .rwdata	00000008 alt_fs_list
08000020 g       *ABS*	00000000 __ram_exceptions_start
08007068 g     F .text	0000000c localeconv
08011bcc g     F .text	00000050 alt_ic_isr_register
0801491c g       *ABS*	00000000 _edata
080165b8 g       *ABS*	00000000 _end
080001bc g       *ABS*	00000000 __ram_exceptions_end
08000384 g     F .text	00000030 wifi_init
08010d20 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
08011cbc g     F .text	000000a4 alt_ic_irq_disable
08008dc8 g     F .text	0000007c __swrite
080148ec g     O .rwdata	00000004 __malloc_trim_threshold
080123e4 g     F .text	00000020 altera_nios2_qsys_irq_init
0800702c g     F .text	0000000c __locale_msgcharset
0801266c g     F .text	00000038 exit
08006edc g     F .text	000000b8 _fwalk_reent
08008638 g     F .text	00000198 __mdiff
080002bc g     F .text	00000050 rs232_send_char
0800d6f8 g     F .text	0000005c .hidden __modsi3
0c000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
080069d4 g     F .text	00000004 __sfp_lock_release
08000000 g       *ABS*	00000000 __alt_mem_sdram
080114c8 g     F .text	00000074 alt_up_character_lcd_string
080129c8 g     F .text	00000034 _exit
08011804 g     F .text	00000140 alt_alarm_start
08007074 g     F .text	000001b8 __smakebuf_r
08000978 g     F .text	00000098 strlen
080120f0 g     F .text	00000158 open
0800e950 g     F .text	000000e0 .hidden __gedf2
080148f0 g     O .rwdata	00000004 __wctomb
0800a278 g     F .text	00000018 __sprint_r
08011b9c g     F .text	00000030 alt_icache_flush_all
0801158c g     F .text	00000074 alt_up_character_lcd_set_cursor_pos
08014910 g     O .rwdata	00000004 alt_priority_mask
08011c1c g     F .text	000000a0 alt_ic_irq_enable
0800499c g     F .text	00000024 __vfprintf_internal
0800ca8c g     F .text	0000005c _wctomb_r
0800f234 g     F .text	000008d0 .hidden __subdf3
08008068 g     F .text	000000b0 __lo0bits
08014914 g     O .rwdata	00000008 alt_alarm_list
08011a54 g     F .text	0000005c _do_ctors
0800c984 g     F .text	000000d8 wcrtomb
0800fdb4 g     F .text	000000d0 close
08010108 g     F .text	00000080 alt_load
0800ba1c g     F .text	00000058 fputwc
00000000  w      *UND*	00000000 free
080069d8 g     F .text	00000004 __sinit_lock_acquire
08007de8 g     F .text	00000114 __multadd
08007dc0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 8000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 8000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 8000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 800000c:	00bffd16 	blt	zero,r2,8000004 <__alt_data_end+0xfc000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000010:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000014:	08406f14 	ori	at,at,444
    jmp r1
 8000018:	0800683a 	jmp	at
 800001c:	00000000 	call	0 <__reset-0x8000000>

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000ec0 	call	80000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000306 	br	8000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 800008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)

08000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 8000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 8000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 800009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000e8:	ef80083a 	eret

080000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000ec:	defff904 	addi	sp,sp,-28
 80000f0:	dfc00615 	stw	ra,24(sp)
 80000f4:	df000515 	stw	fp,20(sp)
 80000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 80000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000100:	0005313a 	rdctl	r2,ipending
 8000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000114:	00800044 	movi	r2,1
 8000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800011c:	e0fffb17 	ldw	r3,-20(fp)
 8000120:	e0bffc17 	ldw	r2,-16(fp)
 8000124:	1884703a 	and	r2,r3,r2
 8000128:	10001426 	beq	r2,zero,800017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 800012c:	00820074 	movhi	r2,2049
 8000130:	10992e04 	addi	r2,r2,25784
 8000134:	e0fffd17 	ldw	r3,-12(fp)
 8000138:	180690fa 	slli	r3,r3,3
 800013c:	10c5883a 	add	r2,r2,r3
 8000140:	10c00017 	ldw	r3,0(r2)
 8000144:	00820074 	movhi	r2,2049
 8000148:	10992e04 	addi	r2,r2,25784
 800014c:	e13ffd17 	ldw	r4,-12(fp)
 8000150:	200890fa 	slli	r4,r4,3
 8000154:	1105883a 	add	r2,r2,r4
 8000158:	10800104 	addi	r2,r2,4
 800015c:	10800017 	ldw	r2,0(r2)
 8000160:	1009883a 	mov	r4,r2
 8000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 8000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 800016c:	0005313a 	rdctl	r2,ipending
 8000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000174:	e0bfff17 	ldw	r2,-4(fp)
 8000178:	00000706 	br	8000198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 800017c:	e0bffc17 	ldw	r2,-16(fp)
 8000180:	1085883a 	add	r2,r2,r2
 8000184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 8000188:	e0bffd17 	ldw	r2,-12(fp)
 800018c:	10800044 	addi	r2,r2,1
 8000190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 8000194:	003fe106 	br	800011c <__alt_data_end+0xfc00011c>

    active = alt_irq_pending ();
 8000198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 800019c:	e0bffb17 	ldw	r2,-20(fp)
 80001a0:	103fdb1e 	bne	r2,zero,8000110 <__alt_data_end+0xfc000110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001a4:	0001883a 	nop
}
 80001a8:	e037883a 	mov	sp,fp
 80001ac:	dfc00117 	ldw	ra,4(sp)
 80001b0:	df000017 	ldw	fp,0(sp)
 80001b4:	dec00204 	addi	sp,sp,8
 80001b8:	f800283a 	ret

Disassembly of section .text:

080001bc <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 80001bc:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 80001c0:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 80001c4:	06820074 	movhi	gp,2049
    ori gp, gp, %lo(_gp)
 80001c8:	d6b23714 	ori	gp,gp,51420
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 80001cc:	00820074 	movhi	r2,2049
    ori r2, r2, %lo(__bss_start)
 80001d0:	10991714 	ori	r2,r2,25692

    movhi r3, %hi(__bss_end)
 80001d4:	00c20074 	movhi	r3,2049
    ori r3, r3, %lo(__bss_end)
 80001d8:	18d96e14 	ori	r3,r3,26040

    beq r2, r3, 1f
 80001dc:	10c00326 	beq	r2,r3,80001ec <_start+0x30>

0:
    stw zero, (r2)
 80001e0:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 80001e4:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 80001e8:	10fffd36 	bltu	r2,r3,80001e0 <__alt_data_end+0xfc0001e0>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 80001ec:	80101080 	call	8010108 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 80001f0:	80102ac0 	call	80102ac <alt_main>

080001f4 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 80001f4:	003fff06 	br	80001f4 <__alt_data_end+0xfc0001f4>

080001f8 <rs232_init>:
#define RS232_Status (*(volatile unsigned char *)(0x84000220))
#define RS232_TxData (*(volatile unsigned char *)(0x84000222))
#define RS232_RxData (*(volatile unsigned char *)(0x84000222))
#define RS232_Baud (*(volatile unsigned char *)(0x84000224))

void rs232_init(void) {
 80001f8:	deffff04 	addi	sp,sp,-4
 80001fc:	df000015 	stw	fp,0(sp)
 8000200:	d839883a 	mov	fp,sp
	 * transmitter interrupt disabled
	 * => CR6=0, CR5=0;
	 *
	 */

	RS232_Control = 0x15;
 8000204:	00a10034 	movhi	r2,33792
 8000208:	10808804 	addi	r2,r2,544
 800020c:	00c00544 	movi	r3,21
 8000210:	10c00005 	stb	r3,0(r2)

	// Program baud rate generator to use 115k baud.
	RS232_Baud = 0x01;
 8000214:	00a10034 	movhi	r2,33792
 8000218:	10808904 	addi	r2,r2,548
 800021c:	00c00044 	movi	r3,1
 8000220:	10c00005 	stb	r3,0(r2)

}
 8000224:	e037883a 	mov	sp,fp
 8000228:	df000017 	ldw	fp,0(sp)
 800022c:	dec00104 	addi	sp,sp,4
 8000230:	f800283a 	ret

08000234 <rs232_send_string>:

/**
 * Send a string of data to the RS232 chip.
 */
void rs232_send_string(char command[]) {
 8000234:	defffb04 	addi	sp,sp,-20
 8000238:	dfc00415 	stw	ra,16(sp)
 800023c:	df000315 	stw	fp,12(sp)
 8000240:	dc000215 	stw	r16,8(sp)
 8000244:	df000304 	addi	fp,sp,12
 8000248:	e13ffe15 	stw	r4,-8(fp)
	int i;

	for (i = 0; i < strlen(command); i++) {
 800024c:	e03ffd15 	stw	zero,-12(fp)
 8000250:	00000c06 	br	8000284 <rs232_send_string+0x50>
		rs232_send_char(command[i]);
 8000254:	e0bffd17 	ldw	r2,-12(fp)
 8000258:	e0fffe17 	ldw	r3,-8(fp)
 800025c:	1885883a 	add	r2,r3,r2
 8000260:	10800003 	ldbu	r2,0(r2)
 8000264:	10803fcc 	andi	r2,r2,255
 8000268:	1080201c 	xori	r2,r2,128
 800026c:	10bfe004 	addi	r2,r2,-128
 8000270:	1009883a 	mov	r4,r2
 8000274:	80002bc0 	call	80002bc <rs232_send_char>
 * Send a string of data to the RS232 chip.
 */
void rs232_send_string(char command[]) {
	int i;

	for (i = 0; i < strlen(command); i++) {
 8000278:	e0bffd17 	ldw	r2,-12(fp)
 800027c:	10800044 	addi	r2,r2,1
 8000280:	e0bffd15 	stw	r2,-12(fp)
 8000284:	e43ffd17 	ldw	r16,-12(fp)
 8000288:	e13ffe17 	ldw	r4,-8(fp)
 800028c:	80009780 	call	8000978 <strlen>
 8000290:	80bff036 	bltu	r16,r2,8000254 <__alt_data_end+0xfc000254>
		rs232_send_char(command[i]);
	}

	// Send the termination flags, without them the RS232 chip won't know when
	// the command ends and when the next command starts.
	rs232_send_char('\r');
 8000294:	01000344 	movi	r4,13
 8000298:	80002bc0 	call	80002bc <rs232_send_char>
	rs232_send_char('\n');
 800029c:	01000284 	movi	r4,10
 80002a0:	80002bc0 	call	80002bc <rs232_send_char>
}
 80002a4:	e6ffff04 	addi	sp,fp,-4
 80002a8:	dfc00217 	ldw	ra,8(sp)
 80002ac:	df000117 	ldw	fp,4(sp)
 80002b0:	dc000017 	ldw	r16,0(sp)
 80002b4:	dec00304 	addi	sp,sp,12
 80002b8:	f800283a 	ret

080002bc <rs232_send_char>:

/**
 * Send a single character to the RS232 chip.
 */
int rs232_send_char(int char_data) {
 80002bc:	defffe04 	addi	sp,sp,-8
 80002c0:	df000115 	stw	fp,4(sp)
 80002c4:	df000104 	addi	fp,sp,4
 80002c8:	e13fff15 	stw	r4,-4(fp)
	// Poll Tx bit in 6850 status register and await for it to become '1'
	while (!(0x02 & RS232_Status)) {
 80002cc:	0001883a 	nop
 80002d0:	00a10034 	movhi	r2,33792
 80002d4:	10808804 	addi	r2,r2,544
 80002d8:	10800003 	ldbu	r2,0(r2)
 80002dc:	1080008c 	andi	r2,r2,2
 80002e0:	10803fcc 	andi	r2,r2,255
 80002e4:	103ffa26 	beq	r2,zero,80002d0 <__alt_data_end+0xfc0002d0>
	};

	// Write the character to the 6850 TxData register.
	RS232_TxData = char_data;
 80002e8:	00a10034 	movhi	r2,33792
 80002ec:	10808884 	addi	r2,r2,546
 80002f0:	e0ffff17 	ldw	r3,-4(fp)
 80002f4:	10c00005 	stb	r3,0(r2)

	return char_data;
 80002f8:	e0bfff17 	ldw	r2,-4(fp)
}
 80002fc:	e037883a 	mov	sp,fp
 8000300:	df000017 	ldw	fp,0(sp)
 8000304:	dec00104 	addi	sp,sp,4
 8000308:	f800283a 	ret

0800030c <rs232_get_char>:

/**
 * Receive a single char from the RS232 chip.
 */
int rs232_get_char(void) {
 800030c:	deffff04 	addi	sp,sp,-4
 8000310:	df000015 	stw	fp,0(sp)
 8000314:	d839883a 	mov	fp,sp
	// Poll RX bit in 6850 status register and await for it to become '1'
	while (!(0x01 & RS232_Status)) {
 8000318:	0001883a 	nop
 800031c:	00a10034 	movhi	r2,33792
 8000320:	10808804 	addi	r2,r2,544
 8000324:	10800003 	ldbu	r2,0(r2)
 8000328:	1080004c 	andi	r2,r2,1
 800032c:	10803fcc 	andi	r2,r2,255
 8000330:	103ffa26 	beq	r2,zero,800031c <__alt_data_end+0xfc00031c>
	};

	// Read the received character from 6850 RxData register.
	return (int) RS232_RxData;
 8000334:	00a10034 	movhi	r2,33792
 8000338:	10808884 	addi	r2,r2,546
 800033c:	10800003 	ldbu	r2,0(r2)
 8000340:	10803fcc 	andi	r2,r2,255
}
 8000344:	e037883a 	mov	sp,fp
 8000348:	df000017 	ldw	fp,0(sp)
 800034c:	dec00104 	addi	sp,sp,4
 8000350:	f800283a 	ret

08000354 <rs232_check_if_received_data>:

/**
 * Polls the 6850 to determine if any character has been received.
 * It doesn't wait for one, or read it, it simply tests to see if one is available to read
 */
int rs232_check_if_received_data(void) {
 8000354:	deffff04 	addi	sp,sp,-4
 8000358:	df000015 	stw	fp,0(sp)
 800035c:	d839883a 	mov	fp,sp
	// Test Rx bit in the STATUS register
	// if RX bit is set, return TRUE, otherwise return FALSE
	return 0x01 & RS232_Status;
 8000360:	00a10034 	movhi	r2,33792
 8000364:	10808804 	addi	r2,r2,544
 8000368:	10800003 	ldbu	r2,0(r2)
 800036c:	10803fcc 	andi	r2,r2,255
 8000370:	1080004c 	andi	r2,r2,1
}
 8000374:	e037883a 	mov	sp,fp
 8000378:	df000017 	ldw	fp,0(sp)
 800037c:	dec00104 	addi	sp,sp,4
 8000380:	f800283a 	ret

08000384 <wifi_init>:

/**
 * Initialize the Wifi module.
 * Requires initialization of the RS232 chip beforehand!
 */
void wifi_init() {
 8000384:	defffe04 	addi	sp,sp,-8
 8000388:	dfc00115 	stw	ra,4(sp)
 800038c:	df000015 	stw	fp,0(sp)
 8000390:	d839883a 	mov	fp,sp
	// Instruct RS232 chip to initializes the onboard .lua wifi script.
	rs232_send_string("dofile(\"send_text_message.lua\")");
 8000394:	01020074 	movhi	r4,2049
 8000398:	210a7f04 	addi	r4,r4,10748
 800039c:	80002340 	call	8000234 <rs232_send_string>
}
 80003a0:	e037883a 	mov	sp,fp
 80003a4:	dfc00117 	ldw	ra,4(sp)
 80003a8:	df000017 	ldw	fp,0(sp)
 80003ac:	dec00204 	addi	sp,sp,8
 80003b0:	f800283a 	ret

080003b4 <wifi_send_sms>:
/**
 * Send a SMS message to the Guardian.
 *
 * @param message - The message to send via SMS; make sure this is no longer than ~180 chars
 */
void wifi_send_sms(char message[]) {
 80003b4:	deffbd04 	addi	sp,sp,-268
 80003b8:	dfc04215 	stw	ra,264(sp)
 80003bc:	df004115 	stw	fp,260(sp)
 80003c0:	df004104 	addi	fp,sp,260
 80003c4:	e13fff15 	stw	r4,-4(fp)
	char lua_sms_command[256];

	sprintf(lua_sms_command,
 80003c8:	e13fbf04 	addi	r4,fp,-260
 80003cc:	01420074 	movhi	r5,2049
 80003d0:	294a8704 	addi	r5,r5,10780
 80003d4:	e1bfff17 	ldw	r6,-4(fp)
 80003d8:	800090c0 	call	800090c <sprintf>
			"send_sms(\"(778) 653-7744\",\"(604) 783-0303\",\"%s\")", message);

	rs232_send_string(lua_sms_command);
 80003dc:	e13fbf04 	addi	r4,fp,-260
 80003e0:	80002340 	call	8000234 <rs232_send_string>
}
 80003e4:	e037883a 	mov	sp,fp
 80003e8:	dfc00117 	ldw	ra,4(sp)
 80003ec:	df000017 	ldw	fp,0(sp)
 80003f0:	dec00204 	addi	sp,sp,8
 80003f4:	f800283a 	ret

080003f8 <WriteAPixel>:
/**********************************************************************
* This function writes a single pixel to the x,y coords specified in the specified colour
* Note colour is a palette number (0-255) not a 24 bit RGB value
**********************************************************************/
void WriteAPixel (int x, int y, int Colour)
{
 80003f8:	defffc04 	addi	sp,sp,-16
 80003fc:	df000315 	stw	fp,12(sp)
 8000400:	df000304 	addi	fp,sp,12
 8000404:	e13ffd15 	stw	r4,-12(fp)
 8000408:	e17ffe15 	stw	r5,-8(fp)
 800040c:	e1bfff15 	stw	r6,-4(fp)
	WAIT_FOR_GRAPHICS;			// is graphics ready for new command
 8000410:	0001883a 	nop
 8000414:	00a10034 	movhi	r2,33792
 8000418:	1080000b 	ldhu	r2,0(r2)
 800041c:	10bfffcc 	andi	r2,r2,65535
 8000420:	1080004c 	andi	r2,r2,1
 8000424:	103ffb26 	beq	r2,zero,8000414 <__alt_data_end+0xfc000414>

	GraphicsX1Reg = x;			// write coords to x1, y1
 8000428:	00a10034 	movhi	r2,33792
 800042c:	10800084 	addi	r2,r2,2
 8000430:	e0fffd17 	ldw	r3,-12(fp)
 8000434:	10c0000d 	sth	r3,0(r2)
	GraphicsY1Reg = y;
 8000438:	00a10034 	movhi	r2,33792
 800043c:	10800104 	addi	r2,r2,4
 8000440:	e0fffe17 	ldw	r3,-8(fp)
 8000444:	10c0000d 	sth	r3,0(r2)
	GraphicsColourReg = Colour;		// set pixel colour with a palette number
 8000448:	00a10034 	movhi	r2,33792
 800044c:	10800384 	addi	r2,r2,14
 8000450:	e0ffff17 	ldw	r3,-4(fp)
 8000454:	10c0000d 	sth	r3,0(r2)
	GraphicsCommandReg = PutAPixel;		// give graphics a "write pixel" command
 8000458:	00a10034 	movhi	r2,33792
 800045c:	00c00284 	movi	r3,10
 8000460:	10c0000d 	sth	r3,0(r2)
}
 8000464:	e037883a 	mov	sp,fp
 8000468:	df000017 	ldw	fp,0(sp)
 800046c:	dec00104 	addi	sp,sp,4
 8000470:	f800283a 	ret

08000474 <ReadAPixel>:
/*****************************************************************************************
* This function read a single pixel from x,y coords specified and returns its colour
* Note returned colour is a palette number (0-255) not a 24 bit RGB value
******************************************************************************************/
int ReadAPixel (int x, int y)
{
 8000474:	defffd04 	addi	sp,sp,-12
 8000478:	df000215 	stw	fp,8(sp)
 800047c:	df000204 	addi	fp,sp,8
 8000480:	e13ffe15 	stw	r4,-8(fp)
 8000484:	e17fff15 	stw	r5,-4(fp)
	WAIT_FOR_GRAPHICS;			// is graphics ready for new command
 8000488:	0001883a 	nop
 800048c:	00a10034 	movhi	r2,33792
 8000490:	1080000b 	ldhu	r2,0(r2)
 8000494:	10bfffcc 	andi	r2,r2,65535
 8000498:	1080004c 	andi	r2,r2,1
 800049c:	103ffb26 	beq	r2,zero,800048c <__alt_data_end+0xfc00048c>

	GraphicsX1Reg = x;			// write coords to x1, y1
 80004a0:	00a10034 	movhi	r2,33792
 80004a4:	10800084 	addi	r2,r2,2
 80004a8:	e0fffe17 	ldw	r3,-8(fp)
 80004ac:	10c0000d 	sth	r3,0(r2)
	GraphicsY1Reg = y;
 80004b0:	00a10034 	movhi	r2,33792
 80004b4:	10800104 	addi	r2,r2,4
 80004b8:	e0ffff17 	ldw	r3,-4(fp)
 80004bc:	10c0000d 	sth	r3,0(r2)
	GraphicsCommandReg = GetAPixel;		// give graphics a "get pixel" command
 80004c0:	00a10034 	movhi	r2,33792
 80004c4:	00c002c4 	movi	r3,11
 80004c8:	10c0000d 	sth	r3,0(r2)

	WAIT_FOR_GRAPHICS;			// is graphics done reading pixel
 80004cc:	0001883a 	nop
 80004d0:	00a10034 	movhi	r2,33792
 80004d4:	1080000b 	ldhu	r2,0(r2)
 80004d8:	10bfffcc 	andi	r2,r2,65535
 80004dc:	1080004c 	andi	r2,r2,1
 80004e0:	103ffb26 	beq	r2,zero,80004d0 <__alt_data_end+0xfc0004d0>
	return (int)(GraphicsColourReg) ;		// return the palette number (colour)
 80004e4:	00a10034 	movhi	r2,33792
 80004e8:	10800384 	addi	r2,r2,14
 80004ec:	1080000b 	ldhu	r2,0(r2)
 80004f0:	10bfffcc 	andi	r2,r2,65535
}
 80004f4:	e037883a 	mov	sp,fp
 80004f8:	df000017 	ldw	fp,0(sp)
 80004fc:	dec00104 	addi	sp,sp,4
 8000500:	f800283a 	ret

08000504 <ProgramPalette>:
** subroutine to program a hardware (graphics chip) palette number with an RGB value
** e.g. ProgramPalette(RED, 0x00FF0000) ;
****************************************************************************************************/

void ProgramPalette(int PaletteNumber, int RGB)
{
 8000504:	defffd04 	addi	sp,sp,-12
 8000508:	df000215 	stw	fp,8(sp)
 800050c:	df000204 	addi	fp,sp,8
 8000510:	e13ffe15 	stw	r4,-8(fp)
 8000514:	e17fff15 	stw	r5,-4(fp)
    WAIT_FOR_GRAPHICS;
 8000518:	0001883a 	nop
 800051c:	00a10034 	movhi	r2,33792
 8000520:	1080000b 	ldhu	r2,0(r2)
 8000524:	10bfffcc 	andi	r2,r2,65535
 8000528:	1080004c 	andi	r2,r2,1
 800052c:	103ffb26 	beq	r2,zero,800051c <__alt_data_end+0xfc00051c>
    GraphicsColourReg = PaletteNumber;
 8000530:	00a10034 	movhi	r2,33792
 8000534:	10800384 	addi	r2,r2,14
 8000538:	e0fffe17 	ldw	r3,-8(fp)
 800053c:	10c0000d 	sth	r3,0(r2)
    GraphicsX1Reg = RGB >> 16   ;          // program red value in ls.8 bit of X1 reg
 8000540:	00a10034 	movhi	r2,33792
 8000544:	10800084 	addi	r2,r2,2
 8000548:	e0ffff17 	ldw	r3,-4(fp)
 800054c:	1807d43a 	srai	r3,r3,16
 8000550:	10c0000d 	sth	r3,0(r2)
    GraphicsY1Reg = RGB ;                	 // program green and blue into 16 bit of Y1 reg
 8000554:	00a10034 	movhi	r2,33792
 8000558:	10800104 	addi	r2,r2,4
 800055c:	e0ffff17 	ldw	r3,-4(fp)
 8000560:	10c0000d 	sth	r3,0(r2)
    GraphicsCommandReg = ProgramPaletteColour;	// issue command
 8000564:	00a10034 	movhi	r2,33792
 8000568:	00c00404 	movi	r3,16
 800056c:	10c0000d 	sth	r3,0(r2)
}
 8000570:	e037883a 	mov	sp,fp
 8000574:	df000017 	ldw	fp,0(sp)
 8000578:	dec00104 	addi	sp,sp,4
 800057c:	f800283a 	ret

08000580 <DrawHline>:

void DrawHline(int x1, int y1, int x2, int y2, int color)
{
 8000580:	defffb04 	addi	sp,sp,-20
 8000584:	df000415 	stw	fp,16(sp)
 8000588:	df000404 	addi	fp,sp,16
 800058c:	e13ffc15 	stw	r4,-16(fp)
 8000590:	e17ffd15 	stw	r5,-12(fp)
 8000594:	e1bffe15 	stw	r6,-8(fp)
 8000598:	e1ffff15 	stw	r7,-4(fp)
    WAIT_FOR_GRAPHICS;
 800059c:	0001883a 	nop
 80005a0:	00a10034 	movhi	r2,33792
 80005a4:	1080000b 	ldhu	r2,0(r2)
 80005a8:	10bfffcc 	andi	r2,r2,65535
 80005ac:	1080004c 	andi	r2,r2,1
 80005b0:	103ffb26 	beq	r2,zero,80005a0 <__alt_data_end+0xfc0005a0>

	GraphicsX1Reg = x1;			// write coords to x1, y1
 80005b4:	00a10034 	movhi	r2,33792
 80005b8:	10800084 	addi	r2,r2,2
 80005bc:	e0fffc17 	ldw	r3,-16(fp)
 80005c0:	10c0000d 	sth	r3,0(r2)
	GraphicsY1Reg = y1;
 80005c4:	00a10034 	movhi	r2,33792
 80005c8:	10800104 	addi	r2,r2,4
 80005cc:	e0fffd17 	ldw	r3,-12(fp)
 80005d0:	10c0000d 	sth	r3,0(r2)

	GraphicsX2Reg = x2;			// write coords to x1, y1
 80005d4:	00a10034 	movhi	r2,33792
 80005d8:	10800184 	addi	r2,r2,6
 80005dc:	e0fffe17 	ldw	r3,-8(fp)
 80005e0:	10c0000d 	sth	r3,0(r2)
	GraphicsY2Reg = y2;
 80005e4:	00a10034 	movhi	r2,33792
 80005e8:	10800204 	addi	r2,r2,8
 80005ec:	e0ffff17 	ldw	r3,-4(fp)
 80005f0:	10c0000d 	sth	r3,0(r2)

	GraphicsColourReg = color;		// set pixel colour with a palette number
 80005f4:	00a10034 	movhi	r2,33792
 80005f8:	10800384 	addi	r2,r2,14
 80005fc:	e0c00117 	ldw	r3,4(fp)
 8000600:	10c0000d 	sth	r3,0(r2)
	GraphicsCommandReg = DrawHLine;		// give graphics a "write pixel" command
 8000604:	00a10034 	movhi	r2,33792
 8000608:	00c00044 	movi	r3,1
 800060c:	10c0000d 	sth	r3,0(r2)
}
 8000610:	e037883a 	mov	sp,fp
 8000614:	df000017 	ldw	fp,0(sp)
 8000618:	dec00104 	addi	sp,sp,4
 800061c:	f800283a 	ret

08000620 <DrawVline>:

void DrawVline(int x1, int y1, int x2, int y2, int color)
{
 8000620:	defffb04 	addi	sp,sp,-20
 8000624:	df000415 	stw	fp,16(sp)
 8000628:	df000404 	addi	fp,sp,16
 800062c:	e13ffc15 	stw	r4,-16(fp)
 8000630:	e17ffd15 	stw	r5,-12(fp)
 8000634:	e1bffe15 	stw	r6,-8(fp)
 8000638:	e1ffff15 	stw	r7,-4(fp)
    WAIT_FOR_GRAPHICS;
 800063c:	0001883a 	nop
 8000640:	00a10034 	movhi	r2,33792
 8000644:	1080000b 	ldhu	r2,0(r2)
 8000648:	10bfffcc 	andi	r2,r2,65535
 800064c:	1080004c 	andi	r2,r2,1
 8000650:	103ffb26 	beq	r2,zero,8000640 <__alt_data_end+0xfc000640>

	GraphicsX1Reg = x1;			// write coords to x1, y1
 8000654:	00a10034 	movhi	r2,33792
 8000658:	10800084 	addi	r2,r2,2
 800065c:	e0fffc17 	ldw	r3,-16(fp)
 8000660:	10c0000d 	sth	r3,0(r2)
	GraphicsY1Reg = y1;
 8000664:	00a10034 	movhi	r2,33792
 8000668:	10800104 	addi	r2,r2,4
 800066c:	e0fffd17 	ldw	r3,-12(fp)
 8000670:	10c0000d 	sth	r3,0(r2)

	GraphicsX2Reg = x2;			// write coords to x1, y1
 8000674:	00a10034 	movhi	r2,33792
 8000678:	10800184 	addi	r2,r2,6
 800067c:	e0fffe17 	ldw	r3,-8(fp)
 8000680:	10c0000d 	sth	r3,0(r2)
	GraphicsY2Reg = y2;
 8000684:	00a10034 	movhi	r2,33792
 8000688:	10800204 	addi	r2,r2,8
 800068c:	e0ffff17 	ldw	r3,-4(fp)
 8000690:	10c0000d 	sth	r3,0(r2)

	GraphicsColourReg = color;		// set pixel colour with a palette number
 8000694:	00a10034 	movhi	r2,33792
 8000698:	10800384 	addi	r2,r2,14
 800069c:	e0c00117 	ldw	r3,4(fp)
 80006a0:	10c0000d 	sth	r3,0(r2)
	GraphicsCommandReg = DrawVLine;		// give graphics a "write pixel" command
 80006a4:	00a10034 	movhi	r2,33792
 80006a8:	00c00084 	movi	r3,2
 80006ac:	10c0000d 	sth	r3,0(r2)
}
 80006b0:	e037883a 	mov	sp,fp
 80006b4:	df000017 	ldw	fp,0(sp)
 80006b8:	dec00104 	addi	sp,sp,4
 80006bc:	f800283a 	ret

080006c0 <Drawline>:

void Drawline(int x1, int y1, int x2, int y2, int color)
{
 80006c0:	defffb04 	addi	sp,sp,-20
 80006c4:	df000415 	stw	fp,16(sp)
 80006c8:	df000404 	addi	fp,sp,16
 80006cc:	e13ffc15 	stw	r4,-16(fp)
 80006d0:	e17ffd15 	stw	r5,-12(fp)
 80006d4:	e1bffe15 	stw	r6,-8(fp)
 80006d8:	e1ffff15 	stw	r7,-4(fp)
    WAIT_FOR_GRAPHICS;
 80006dc:	0001883a 	nop
 80006e0:	00a10034 	movhi	r2,33792
 80006e4:	1080000b 	ldhu	r2,0(r2)
 80006e8:	10bfffcc 	andi	r2,r2,65535
 80006ec:	1080004c 	andi	r2,r2,1
 80006f0:	103ffb26 	beq	r2,zero,80006e0 <__alt_data_end+0xfc0006e0>

	GraphicsX1Reg = x1;			// write coords to x1, y1
 80006f4:	00a10034 	movhi	r2,33792
 80006f8:	10800084 	addi	r2,r2,2
 80006fc:	e0fffc17 	ldw	r3,-16(fp)
 8000700:	10c0000d 	sth	r3,0(r2)
	GraphicsY1Reg = y1;
 8000704:	00a10034 	movhi	r2,33792
 8000708:	10800104 	addi	r2,r2,4
 800070c:	e0fffd17 	ldw	r3,-12(fp)
 8000710:	10c0000d 	sth	r3,0(r2)

	GraphicsX2Reg = x2;			// write coords to x1, y1
 8000714:	00a10034 	movhi	r2,33792
 8000718:	10800184 	addi	r2,r2,6
 800071c:	e0fffe17 	ldw	r3,-8(fp)
 8000720:	10c0000d 	sth	r3,0(r2)
	GraphicsY2Reg = y2;
 8000724:	00a10034 	movhi	r2,33792
 8000728:	10800204 	addi	r2,r2,8
 800072c:	e0ffff17 	ldw	r3,-4(fp)
 8000730:	10c0000d 	sth	r3,0(r2)

	GraphicsColourReg = color;		// set pixel colour with a palette number
 8000734:	00a10034 	movhi	r2,33792
 8000738:	10800384 	addi	r2,r2,14
 800073c:	e0c00117 	ldw	r3,4(fp)
 8000740:	10c0000d 	sth	r3,0(r2)
	GraphicsCommandReg = DrawLine;		// give graphics a "write pixel" command
 8000744:	00a10034 	movhi	r2,33792
 8000748:	00c000c4 	movi	r3,3
 800074c:	10c0000d 	sth	r3,0(r2)
}
 8000750:	e037883a 	mov	sp,fp
 8000754:	df000017 	ldw	fp,0(sp)
 8000758:	dec00104 	addi	sp,sp,4
 800075c:	f800283a 	ret

08000760 <main>:

int main()
{
 8000760:	defffd04 	addi	sp,sp,-12
 8000764:	dfc00215 	stw	ra,8(sp)
 8000768:	df000115 	stw	fp,4(sp)
 800076c:	df000104 	addi	fp,sp,4
//	printf("Hello from Nios II!\n");
	rs232_init();
 8000770:	80001f80 	call	80001f8 <rs232_init>
	wifi_init();
 8000774:	80003840 	call	8000384 <wifi_init>
//
//	// read the pixels back and make sure we read 2 (RED) to prove it's working
//	for(i = 0; i < 800; i ++)
//		printf("Colour value (i.e. pallette number) = %d at [%d, 100]\n", ReadAPixel(i, 100),i);

	DrawHline(20,200,220,200, RED);
 8000778:	00800084 	movi	r2,2
 800077c:	d8800015 	stw	r2,0(sp)
 8000780:	01000504 	movi	r4,20
 8000784:	01403204 	movi	r5,200
 8000788:	01803704 	movi	r6,220
 800078c:	01c03204 	movi	r7,200
 8000790:	80005800 	call	8000580 <DrawHline>
	DrawHline(20,220,220,220, GREEN);
 8000794:	00800304 	movi	r2,12
 8000798:	d8800015 	stw	r2,0(sp)
 800079c:	01000504 	movi	r4,20
 80007a0:	01403704 	movi	r5,220
 80007a4:	01803704 	movi	r6,220
 80007a8:	01c03704 	movi	r7,220
 80007ac:	80005800 	call	8000580 <DrawHline>
	DrawVline(20,200,20,400, GREEN);
 80007b0:	00800304 	movi	r2,12
 80007b4:	d8800015 	stw	r2,0(sp)
 80007b8:	01000504 	movi	r4,20
 80007bc:	01403204 	movi	r5,200
 80007c0:	01800504 	movi	r6,20
 80007c4:	01c06404 	movi	r7,400
 80007c8:	80006200 	call	8000620 <DrawVline>
	Drawline(20,20,220,40, GREEN);
 80007cc:	00800304 	movi	r2,12
 80007d0:	d8800015 	stw	r2,0(sp)
 80007d4:	01000504 	movi	r4,20
 80007d8:	01400504 	movi	r5,20
 80007dc:	01803704 	movi	r6,220
 80007e0:	01c00a04 	movi	r7,40
 80007e4:	80006c00 	call	80006c0 <Drawline>
	printf("Colour value (i.e. pallette number) = %d at [%d, 100]\n", ReadAPixel(100, 20),20);
 80007e8:	01001904 	movi	r4,100
 80007ec:	01400504 	movi	r5,20
 80007f0:	80004740 	call	8000474 <ReadAPixel>
 80007f4:	01020074 	movhi	r4,2049
 80007f8:	210a9404 	addi	r4,r4,10832
 80007fc:	100b883a 	mov	r5,r2
 8000800:	01800504 	movi	r6,20
 8000804:	80008780 	call	8000878 <printf>
	printf("Colour value (i.e. pallette number) = %d at [%d, 100]\n", ReadAPixel(20, 20),20);
 8000808:	01000504 	movi	r4,20
 800080c:	01400504 	movi	r5,20
 8000810:	80004740 	call	8000474 <ReadAPixel>
 8000814:	01020074 	movhi	r4,2049
 8000818:	210a9404 	addi	r4,r4,10832
 800081c:	100b883a 	mov	r5,r2
 8000820:	01800504 	movi	r6,20
 8000824:	80008780 	call	8000878 <printf>

	//sending sms message to phone
	wifi_send_sms(WIFI_MESSAGE_DEPENDENT_IS_SAFE);
 8000828:	01020074 	movhi	r4,2049
 800082c:	210b7704 	addi	r4,r4,11740
 8000830:	80003b40 	call	80003b4 <wifi_send_sms>

	return 0;
 8000834:	0005883a 	mov	r2,zero
}
 8000838:	e037883a 	mov	sp,fp
 800083c:	dfc00117 	ldw	ra,4(sp)
 8000840:	df000017 	ldw	fp,0(sp)
 8000844:	dec00204 	addi	sp,sp,8
 8000848:	f800283a 	ret

0800084c <_printf_r>:
 800084c:	defffd04 	addi	sp,sp,-12
 8000850:	dfc00015 	stw	ra,0(sp)
 8000854:	d9800115 	stw	r6,4(sp)
 8000858:	d9c00215 	stw	r7,8(sp)
 800085c:	280d883a 	mov	r6,r5
 8000860:	21400217 	ldw	r5,8(r4)
 8000864:	d9c00104 	addi	r7,sp,4
 8000868:	80029a00 	call	80029a0 <___vfprintf_internal_r>
 800086c:	dfc00017 	ldw	ra,0(sp)
 8000870:	dec00304 	addi	sp,sp,12
 8000874:	f800283a 	ret

08000878 <printf>:
 8000878:	defffc04 	addi	sp,sp,-16
 800087c:	dfc00015 	stw	ra,0(sp)
 8000880:	d9400115 	stw	r5,4(sp)
 8000884:	d9800215 	stw	r6,8(sp)
 8000888:	d9c00315 	stw	r7,12(sp)
 800088c:	00820074 	movhi	r2,2049
 8000890:	10923804 	addi	r2,r2,18656
 8000894:	10800017 	ldw	r2,0(r2)
 8000898:	200b883a 	mov	r5,r4
 800089c:	d9800104 	addi	r6,sp,4
 80008a0:	11000217 	ldw	r4,8(r2)
 80008a4:	800499c0 	call	800499c <__vfprintf_internal>
 80008a8:	dfc00017 	ldw	ra,0(sp)
 80008ac:	dec00404 	addi	sp,sp,16
 80008b0:	f800283a 	ret

080008b4 <_sprintf_r>:
 80008b4:	deffe404 	addi	sp,sp,-112
 80008b8:	2807883a 	mov	r3,r5
 80008bc:	dfc01a15 	stw	ra,104(sp)
 80008c0:	d9c01b15 	stw	r7,108(sp)
 80008c4:	00a00034 	movhi	r2,32768
 80008c8:	10bfffc4 	addi	r2,r2,-1
 80008cc:	02008204 	movi	r8,520
 80008d0:	d8800215 	stw	r2,8(sp)
 80008d4:	d8800515 	stw	r2,20(sp)
 80008d8:	d80b883a 	mov	r5,sp
 80008dc:	d9c01b04 	addi	r7,sp,108
 80008e0:	00bfffc4 	movi	r2,-1
 80008e4:	d8c00015 	stw	r3,0(sp)
 80008e8:	d8c00415 	stw	r3,16(sp)
 80008ec:	da00030d 	sth	r8,12(sp)
 80008f0:	d880038d 	sth	r2,14(sp)
 80008f4:	8000a100 	call	8000a10 <___svfprintf_internal_r>
 80008f8:	d8c00017 	ldw	r3,0(sp)
 80008fc:	18000005 	stb	zero,0(r3)
 8000900:	dfc01a17 	ldw	ra,104(sp)
 8000904:	dec01c04 	addi	sp,sp,112
 8000908:	f800283a 	ret

0800090c <sprintf>:
 800090c:	deffe304 	addi	sp,sp,-116
 8000910:	2007883a 	mov	r3,r4
 8000914:	dfc01a15 	stw	ra,104(sp)
 8000918:	d9801b15 	stw	r6,108(sp)
 800091c:	d9c01c15 	stw	r7,112(sp)
 8000920:	01020074 	movhi	r4,2049
 8000924:	21123804 	addi	r4,r4,18656
 8000928:	21000017 	ldw	r4,0(r4)
 800092c:	00a00034 	movhi	r2,32768
 8000930:	10bfffc4 	addi	r2,r2,-1
 8000934:	280d883a 	mov	r6,r5
 8000938:	02008204 	movi	r8,520
 800093c:	d8800215 	stw	r2,8(sp)
 8000940:	d8800515 	stw	r2,20(sp)
 8000944:	d80b883a 	mov	r5,sp
 8000948:	d9c01b04 	addi	r7,sp,108
 800094c:	00bfffc4 	movi	r2,-1
 8000950:	d8c00015 	stw	r3,0(sp)
 8000954:	d8c00415 	stw	r3,16(sp)
 8000958:	da00030d 	sth	r8,12(sp)
 800095c:	d880038d 	sth	r2,14(sp)
 8000960:	8000a100 	call	8000a10 <___svfprintf_internal_r>
 8000964:	d8c00017 	ldw	r3,0(sp)
 8000968:	18000005 	stb	zero,0(r3)
 800096c:	dfc01a17 	ldw	ra,104(sp)
 8000970:	dec01d04 	addi	sp,sp,116
 8000974:	f800283a 	ret

08000978 <strlen>:
 8000978:	208000cc 	andi	r2,r4,3
 800097c:	10002026 	beq	r2,zero,8000a00 <strlen+0x88>
 8000980:	20800007 	ldb	r2,0(r4)
 8000984:	10002026 	beq	r2,zero,8000a08 <strlen+0x90>
 8000988:	2005883a 	mov	r2,r4
 800098c:	00000206 	br	8000998 <strlen+0x20>
 8000990:	10c00007 	ldb	r3,0(r2)
 8000994:	18001826 	beq	r3,zero,80009f8 <strlen+0x80>
 8000998:	10800044 	addi	r2,r2,1
 800099c:	10c000cc 	andi	r3,r2,3
 80009a0:	183ffb1e 	bne	r3,zero,8000990 <__alt_data_end+0xfc000990>
 80009a4:	10c00017 	ldw	r3,0(r2)
 80009a8:	01ffbff4 	movhi	r7,65279
 80009ac:	39ffbfc4 	addi	r7,r7,-257
 80009b0:	00ca303a 	nor	r5,zero,r3
 80009b4:	01a02074 	movhi	r6,32897
 80009b8:	19c7883a 	add	r3,r3,r7
 80009bc:	31a02004 	addi	r6,r6,-32640
 80009c0:	1946703a 	and	r3,r3,r5
 80009c4:	1986703a 	and	r3,r3,r6
 80009c8:	1800091e 	bne	r3,zero,80009f0 <strlen+0x78>
 80009cc:	10800104 	addi	r2,r2,4
 80009d0:	10c00017 	ldw	r3,0(r2)
 80009d4:	19cb883a 	add	r5,r3,r7
 80009d8:	00c6303a 	nor	r3,zero,r3
 80009dc:	28c6703a 	and	r3,r5,r3
 80009e0:	1986703a 	and	r3,r3,r6
 80009e4:	183ff926 	beq	r3,zero,80009cc <__alt_data_end+0xfc0009cc>
 80009e8:	00000106 	br	80009f0 <strlen+0x78>
 80009ec:	10800044 	addi	r2,r2,1
 80009f0:	10c00007 	ldb	r3,0(r2)
 80009f4:	183ffd1e 	bne	r3,zero,80009ec <__alt_data_end+0xfc0009ec>
 80009f8:	1105c83a 	sub	r2,r2,r4
 80009fc:	f800283a 	ret
 8000a00:	2005883a 	mov	r2,r4
 8000a04:	003fe706 	br	80009a4 <__alt_data_end+0xfc0009a4>
 8000a08:	0005883a 	mov	r2,zero
 8000a0c:	f800283a 	ret

08000a10 <___svfprintf_internal_r>:
 8000a10:	deffb504 	addi	sp,sp,-300
 8000a14:	dfc04a15 	stw	ra,296(sp)
 8000a18:	ddc04815 	stw	r23,288(sp)
 8000a1c:	d9002f15 	stw	r4,188(sp)
 8000a20:	282f883a 	mov	r23,r5
 8000a24:	d9802915 	stw	r6,164(sp)
 8000a28:	d9c02d15 	stw	r7,180(sp)
 8000a2c:	df004915 	stw	fp,292(sp)
 8000a30:	dd804715 	stw	r22,284(sp)
 8000a34:	dd404615 	stw	r21,280(sp)
 8000a38:	dd004515 	stw	r20,276(sp)
 8000a3c:	dcc04415 	stw	r19,272(sp)
 8000a40:	dc804315 	stw	r18,268(sp)
 8000a44:	dc404215 	stw	r17,264(sp)
 8000a48:	dc004115 	stw	r16,260(sp)
 8000a4c:	80070400 	call	8007040 <_localeconv_r>
 8000a50:	10800017 	ldw	r2,0(r2)
 8000a54:	1009883a 	mov	r4,r2
 8000a58:	d8803515 	stw	r2,212(sp)
 8000a5c:	80009780 	call	8000978 <strlen>
 8000a60:	d8803915 	stw	r2,228(sp)
 8000a64:	b880030b 	ldhu	r2,12(r23)
 8000a68:	1080200c 	andi	r2,r2,128
 8000a6c:	10000226 	beq	r2,zero,8000a78 <___svfprintf_internal_r+0x68>
 8000a70:	b8800417 	ldw	r2,16(r23)
 8000a74:	10065d26 	beq	r2,zero,80023ec <___svfprintf_internal_r+0x19dc>
 8000a78:	db001dc4 	addi	r12,sp,119
 8000a7c:	dd801e04 	addi	r22,sp,120
 8000a80:	d8800404 	addi	r2,sp,16
 8000a84:	05020074 	movhi	r20,2049
 8000a88:	b317c83a 	sub	r11,r22,r12
 8000a8c:	a50ab284 	addi	r20,r20,10954
 8000a90:	db002815 	stw	r12,160(sp)
 8000a94:	d8801e15 	stw	r2,120(sp)
 8000a98:	d8002015 	stw	zero,128(sp)
 8000a9c:	d8001f15 	stw	zero,124(sp)
 8000aa0:	d8003315 	stw	zero,204(sp)
 8000aa4:	d8003715 	stw	zero,220(sp)
 8000aa8:	d8003815 	stw	zero,224(sp)
 8000aac:	d8003b15 	stw	zero,236(sp)
 8000ab0:	d8003a15 	stw	zero,232(sp)
 8000ab4:	d8003015 	stw	zero,192(sp)
 8000ab8:	1011883a 	mov	r8,r2
 8000abc:	dac03d15 	stw	r11,244(sp)
 8000ac0:	db002917 	ldw	r12,164(sp)
 8000ac4:	60800007 	ldb	r2,0(r12)
 8000ac8:	1000ab26 	beq	r2,zero,8000d78 <___svfprintf_internal_r+0x368>
 8000acc:	00c00944 	movi	r3,37
 8000ad0:	10c0a926 	beq	r2,r3,8000d78 <___svfprintf_internal_r+0x368>
 8000ad4:	6021883a 	mov	r16,r12
 8000ad8:	00000106 	br	8000ae0 <___svfprintf_internal_r+0xd0>
 8000adc:	10c08426 	beq	r2,r3,8000cf0 <___svfprintf_internal_r+0x2e0>
 8000ae0:	84000044 	addi	r16,r16,1
 8000ae4:	80800007 	ldb	r2,0(r16)
 8000ae8:	103ffc1e 	bne	r2,zero,8000adc <__alt_data_end+0xfc000adc>
 8000aec:	dac02917 	ldw	r11,164(sp)
 8000af0:	82e3c83a 	sub	r17,r16,r11
 8000af4:	88000f26 	beq	r17,zero,8000b34 <___svfprintf_internal_r+0x124>
 8000af8:	d8c02017 	ldw	r3,128(sp)
 8000afc:	d8801f17 	ldw	r2,124(sp)
 8000b00:	dac02917 	ldw	r11,164(sp)
 8000b04:	1c47883a 	add	r3,r3,r17
 8000b08:	10800044 	addi	r2,r2,1
 8000b0c:	d8c02015 	stw	r3,128(sp)
 8000b10:	42c00015 	stw	r11,0(r8)
 8000b14:	44400115 	stw	r17,4(r8)
 8000b18:	d8801f15 	stw	r2,124(sp)
 8000b1c:	00c001c4 	movi	r3,7
 8000b20:	18807616 	blt	r3,r2,8000cfc <___svfprintf_internal_r+0x2ec>
 8000b24:	42000204 	addi	r8,r8,8
 8000b28:	db003017 	ldw	r12,192(sp)
 8000b2c:	6459883a 	add	r12,r12,r17
 8000b30:	db003015 	stw	r12,192(sp)
 8000b34:	80800007 	ldb	r2,0(r16)
 8000b38:	10007726 	beq	r2,zero,8000d18 <___svfprintf_internal_r+0x308>
 8000b3c:	80800044 	addi	r2,r16,1
 8000b40:	84000047 	ldb	r16,1(r16)
 8000b44:	d8002785 	stb	zero,158(sp)
 8000b48:	000d883a 	mov	r6,zero
 8000b4c:	027fffc4 	movi	r9,-1
 8000b50:	d8002e15 	stw	zero,184(sp)
 8000b54:	0023883a 	mov	r17,zero
 8000b58:	01001604 	movi	r4,88
 8000b5c:	01400244 	movi	r5,9
 8000b60:	02800a84 	movi	r10,42
 8000b64:	01c01b04 	movi	r7,108
 8000b68:	10c00044 	addi	r3,r2,1
 8000b6c:	80bff804 	addi	r2,r16,-32
 8000b70:	2082e436 	bltu	r4,r2,8001704 <___svfprintf_internal_r+0xcf4>
 8000b74:	100490ba 	slli	r2,r2,2
 8000b78:	02c20034 	movhi	r11,2048
 8000b7c:	5ac2e304 	addi	r11,r11,2956
 8000b80:	12c5883a 	add	r2,r2,r11
 8000b84:	10800017 	ldw	r2,0(r2)
 8000b88:	1000683a 	jmp	r2
 8000b8c:	080014bc 	xorhi	zero,at,82
 8000b90:	08001704 	addi	zero,at,92
 8000b94:	08001704 	addi	zero,at,92
 8000b98:	0800163c 	xorhi	zero,at,88
 8000b9c:	08001704 	addi	zero,at,92
 8000ba0:	08001704 	addi	zero,at,92
 8000ba4:	08001704 	addi	zero,at,92
 8000ba8:	08001704 	addi	zero,at,92
 8000bac:	08001704 	addi	zero,at,92
 8000bb0:	08001704 	addi	zero,at,92
 8000bb4:	08001600 	call	800160 <__reset-0x77ffea0>
 8000bb8:	0800162c 	andhi	zero,at,88
 8000bbc:	08001704 	addi	zero,at,92
 8000bc0:	08000d80 	call	8000d8 <__reset-0x77fff28>
 8000bc4:	08000d90 	cmplti	zero,at,54
 8000bc8:	08001704 	addi	zero,at,92
 8000bcc:	08000dd0 	cmplti	zero,at,55
 8000bd0:	08000de0 	cmpeqi	zero,at,55
 8000bd4:	08000de0 	cmpeqi	zero,at,55
 8000bd8:	08000de0 	cmpeqi	zero,at,55
 8000bdc:	08000de0 	cmpeqi	zero,at,55
 8000be0:	08000de0 	cmpeqi	zero,at,55
 8000be4:	08000de0 	cmpeqi	zero,at,55
 8000be8:	08000de0 	cmpeqi	zero,at,55
 8000bec:	08000de0 	cmpeqi	zero,at,55
 8000bf0:	08000de0 	cmpeqi	zero,at,55
 8000bf4:	08001704 	addi	zero,at,92
 8000bf8:	08001704 	addi	zero,at,92
 8000bfc:	08001704 	addi	zero,at,92
 8000c00:	08001704 	addi	zero,at,92
 8000c04:	08001704 	addi	zero,at,92
 8000c08:	08001704 	addi	zero,at,92
 8000c0c:	08001704 	addi	zero,at,92
 8000c10:	08001704 	addi	zero,at,92
 8000c14:	08001704 	addi	zero,at,92
 8000c18:	08001704 	addi	zero,at,92
 8000c1c:	08000e14 	ori	zero,at,56
 8000c20:	08001300 	call	800130 <__reset-0x77ffed0>
 8000c24:	08001704 	addi	zero,at,92
 8000c28:	08001300 	call	800130 <__reset-0x77ffed0>
 8000c2c:	08001704 	addi	zero,at,92
 8000c30:	08001704 	addi	zero,at,92
 8000c34:	08001704 	addi	zero,at,92
 8000c38:	08001704 	addi	zero,at,92
 8000c3c:	080013ec 	andhi	zero,at,79
 8000c40:	08001704 	addi	zero,at,92
 8000c44:	08001704 	addi	zero,at,92
 8000c48:	08001294 	ori	zero,at,74
 8000c4c:	08001704 	addi	zero,at,92
 8000c50:	08001704 	addi	zero,at,92
 8000c54:	08001704 	addi	zero,at,92
 8000c58:	08001704 	addi	zero,at,92
 8000c5c:	08001704 	addi	zero,at,92
 8000c60:	080012d0 	cmplti	zero,at,75
 8000c64:	08001704 	addi	zero,at,92
 8000c68:	08001704 	addi	zero,at,92
 8000c6c:	080014dc 	xori	zero,at,83
 8000c70:	08001704 	addi	zero,at,92
 8000c74:	08001704 	addi	zero,at,92
 8000c78:	08001704 	addi	zero,at,92
 8000c7c:	08001704 	addi	zero,at,92
 8000c80:	08001704 	addi	zero,at,92
 8000c84:	08001704 	addi	zero,at,92
 8000c88:	08001704 	addi	zero,at,92
 8000c8c:	08001704 	addi	zero,at,92
 8000c90:	08001704 	addi	zero,at,92
 8000c94:	08001704 	addi	zero,at,92
 8000c98:	080015c0 	call	80015c <__reset-0x77ffea4>
 8000c9c:	080013fc 	xorhi	zero,at,79
 8000ca0:	08001300 	call	800130 <__reset-0x77ffed0>
 8000ca4:	08001300 	call	800130 <__reset-0x77ffed0>
 8000ca8:	08001300 	call	800130 <__reset-0x77ffed0>
 8000cac:	08001464 	muli	zero,at,81
 8000cb0:	080013fc 	xorhi	zero,at,79
 8000cb4:	08001704 	addi	zero,at,92
 8000cb8:	08001704 	addi	zero,at,92
 8000cbc:	08001474 	orhi	zero,at,81
 8000cc0:	08001704 	addi	zero,at,92
 8000cc4:	08001488 	cmpgei	zero,at,82
 8000cc8:	080016c8 	cmpgei	zero,at,91
 8000ccc:	080013a4 	muli	zero,at,78
 8000cd0:	080015b0 	cmpltui	zero,at,86
 8000cd4:	08001704 	addi	zero,at,92
 8000cd8:	08001538 	rdprs	zero,at,84
 8000cdc:	08001704 	addi	zero,at,92
 8000ce0:	0800168c 	andi	zero,at,90
 8000ce4:	08001704 	addi	zero,at,92
 8000ce8:	08001704 	addi	zero,at,92
 8000cec:	0800164c 	andi	zero,at,89
 8000cf0:	db002917 	ldw	r12,164(sp)
 8000cf4:	8323c83a 	sub	r17,r16,r12
 8000cf8:	003f7e06 	br	8000af4 <__alt_data_end+0xfc000af4>
 8000cfc:	d9002f17 	ldw	r4,188(sp)
 8000d00:	b80b883a 	mov	r5,r23
 8000d04:	b00d883a 	mov	r6,r22
 8000d08:	8008f4c0 	call	8008f4c <__ssprint_r>
 8000d0c:	1000081e 	bne	r2,zero,8000d30 <___svfprintf_internal_r+0x320>
 8000d10:	da000404 	addi	r8,sp,16
 8000d14:	003f8406 	br	8000b28 <__alt_data_end+0xfc000b28>
 8000d18:	d8802017 	ldw	r2,128(sp)
 8000d1c:	10000426 	beq	r2,zero,8000d30 <___svfprintf_internal_r+0x320>
 8000d20:	d9002f17 	ldw	r4,188(sp)
 8000d24:	b80b883a 	mov	r5,r23
 8000d28:	d9801e04 	addi	r6,sp,120
 8000d2c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8000d30:	b880030b 	ldhu	r2,12(r23)
 8000d34:	1080100c 	andi	r2,r2,64
 8000d38:	10000d1e 	bne	r2,zero,8000d70 <___svfprintf_internal_r+0x360>
 8000d3c:	d8803017 	ldw	r2,192(sp)
 8000d40:	dfc04a17 	ldw	ra,296(sp)
 8000d44:	df004917 	ldw	fp,292(sp)
 8000d48:	ddc04817 	ldw	r23,288(sp)
 8000d4c:	dd804717 	ldw	r22,284(sp)
 8000d50:	dd404617 	ldw	r21,280(sp)
 8000d54:	dd004517 	ldw	r20,276(sp)
 8000d58:	dcc04417 	ldw	r19,272(sp)
 8000d5c:	dc804317 	ldw	r18,268(sp)
 8000d60:	dc404217 	ldw	r17,264(sp)
 8000d64:	dc004117 	ldw	r16,260(sp)
 8000d68:	dec04b04 	addi	sp,sp,300
 8000d6c:	f800283a 	ret
 8000d70:	00bfffc4 	movi	r2,-1
 8000d74:	003ff206 	br	8000d40 <__alt_data_end+0xfc000d40>
 8000d78:	dc002917 	ldw	r16,164(sp)
 8000d7c:	003f6d06 	br	8000b34 <__alt_data_end+0xfc000b34>
 8000d80:	1805883a 	mov	r2,r3
 8000d84:	8c400114 	ori	r17,r17,4
 8000d88:	1c000007 	ldb	r16,0(r3)
 8000d8c:	003f7606 	br	8000b68 <__alt_data_end+0xfc000b68>
 8000d90:	1c000007 	ldb	r16,0(r3)
 8000d94:	18800044 	addi	r2,r3,1
 8000d98:	8286e726 	beq	r16,r10,8002938 <___svfprintf_internal_r+0x1f28>
 8000d9c:	82fff404 	addi	r11,r16,-48
 8000da0:	1007883a 	mov	r3,r2
 8000da4:	0013883a 	mov	r9,zero
 8000da8:	2aff7036 	bltu	r5,r11,8000b6c <__alt_data_end+0xfc000b6c>
 8000dac:	1c000007 	ldb	r16,0(r3)
 8000db0:	4a4002a4 	muli	r9,r9,10
 8000db4:	18c00044 	addi	r3,r3,1
 8000db8:	5a53883a 	add	r9,r11,r9
 8000dbc:	82fff404 	addi	r11,r16,-48
 8000dc0:	2afffa2e 	bgeu	r5,r11,8000dac <__alt_data_end+0xfc000dac>
 8000dc4:	483f690e 	bge	r9,zero,8000b6c <__alt_data_end+0xfc000b6c>
 8000dc8:	027fffc4 	movi	r9,-1
 8000dcc:	003f6706 	br	8000b6c <__alt_data_end+0xfc000b6c>
 8000dd0:	8c402014 	ori	r17,r17,128
 8000dd4:	1805883a 	mov	r2,r3
 8000dd8:	1c000007 	ldb	r16,0(r3)
 8000ddc:	003f6206 	br	8000b68 <__alt_data_end+0xfc000b68>
 8000de0:	1805883a 	mov	r2,r3
 8000de4:	d8002e15 	stw	zero,184(sp)
 8000de8:	82fff404 	addi	r11,r16,-48
 8000dec:	0019883a 	mov	r12,zero
 8000df0:	14000007 	ldb	r16,0(r2)
 8000df4:	630002a4 	muli	r12,r12,10
 8000df8:	18c00044 	addi	r3,r3,1
 8000dfc:	1805883a 	mov	r2,r3
 8000e00:	62d9883a 	add	r12,r12,r11
 8000e04:	82fff404 	addi	r11,r16,-48
 8000e08:	2afff92e 	bgeu	r5,r11,8000df0 <__alt_data_end+0xfc000df0>
 8000e0c:	db002e15 	stw	r12,184(sp)
 8000e10:	003f5606 	br	8000b6c <__alt_data_end+0xfc000b6c>
 8000e14:	8c400414 	ori	r17,r17,16
 8000e18:	d8c02915 	stw	r3,164(sp)
 8000e1c:	d9802785 	stb	r6,158(sp)
 8000e20:	8880080c 	andi	r2,r17,32
 8000e24:	d8c02d17 	ldw	r3,180(sp)
 8000e28:	10017926 	beq	r2,zero,8001410 <___svfprintf_internal_r+0xa00>
 8000e2c:	db002d17 	ldw	r12,180(sp)
 8000e30:	18800117 	ldw	r2,4(r3)
 8000e34:	1cc00017 	ldw	r19,0(r3)
 8000e38:	63000204 	addi	r12,r12,8
 8000e3c:	db002d15 	stw	r12,180(sp)
 8000e40:	1039883a 	mov	fp,r2
 8000e44:	10017d16 	blt	r2,zero,800143c <___svfprintf_internal_r+0xa2c>
 8000e48:	dd402783 	ldbu	r21,158(sp)
 8000e4c:	da403215 	stw	r9,200(sp)
 8000e50:	00800044 	movi	r2,1
 8000e54:	9f06b03a 	or	r3,r19,fp
 8000e58:	48000216 	blt	r9,zero,8000e64 <___svfprintf_internal_r+0x454>
 8000e5c:	013fdfc4 	movi	r4,-129
 8000e60:	8922703a 	and	r17,r17,r4
 8000e64:	1802371e 	bne	r3,zero,8001744 <___svfprintf_internal_r+0xd34>
 8000e68:	48034526 	beq	r9,zero,8001b80 <___svfprintf_internal_r+0x1170>
 8000e6c:	10803fcc 	andi	r2,r2,255
 8000e70:	00c00044 	movi	r3,1
 8000e74:	10c25826 	beq	r2,r3,80017d8 <___svfprintf_internal_r+0xdc8>
 8000e78:	00c00084 	movi	r3,2
 8000e7c:	10c2db26 	beq	r2,r3,80019ec <___svfprintf_internal_r+0xfdc>
 8000e80:	b007883a 	mov	r3,r22
 8000e84:	9808d0fa 	srli	r4,r19,3
 8000e88:	e00a977a 	slli	r5,fp,29
 8000e8c:	e038d0fa 	srli	fp,fp,3
 8000e90:	9cc001cc 	andi	r19,r19,7
 8000e94:	98800c04 	addi	r2,r19,48
 8000e98:	18ffffc4 	addi	r3,r3,-1
 8000e9c:	2926b03a 	or	r19,r5,r4
 8000ea0:	18800005 	stb	r2,0(r3)
 8000ea4:	9f08b03a 	or	r4,r19,fp
 8000ea8:	203ff61e 	bne	r4,zero,8000e84 <__alt_data_end+0xfc000e84>
 8000eac:	8900004c 	andi	r4,r17,1
 8000eb0:	d8c03115 	stw	r3,196(sp)
 8000eb4:	2002db26 	beq	r4,zero,8001a24 <___svfprintf_internal_r+0x1014>
 8000eb8:	10803fcc 	andi	r2,r2,255
 8000ebc:	1080201c 	xori	r2,r2,128
 8000ec0:	10bfe004 	addi	r2,r2,-128
 8000ec4:	01000c04 	movi	r4,48
 8000ec8:	11056626 	beq	r2,r4,8002464 <___svfprintf_internal_r+0x1a54>
 8000ecc:	dac03117 	ldw	r11,196(sp)
 8000ed0:	193fffc5 	stb	r4,-1(r3)
 8000ed4:	5affffc4 	addi	r11,r11,-1
 8000ed8:	dac03115 	stw	r11,196(sp)
 8000edc:	b2e5c83a 	sub	r18,r22,r11
 8000ee0:	9005883a 	mov	r2,r18
 8000ee4:	9240010e 	bge	r18,r9,8000eec <___svfprintf_internal_r+0x4dc>
 8000ee8:	4805883a 	mov	r2,r9
 8000eec:	d8802a15 	stw	r2,168(sp)
 8000ef0:	d8003415 	stw	zero,208(sp)
 8000ef4:	a8803fcc 	andi	r2,r21,255
 8000ef8:	1080201c 	xori	r2,r2,128
 8000efc:	10bfe004 	addi	r2,r2,-128
 8000f00:	10000326 	beq	r2,zero,8000f10 <___svfprintf_internal_r+0x500>
 8000f04:	d8c02a17 	ldw	r3,168(sp)
 8000f08:	18c00044 	addi	r3,r3,1
 8000f0c:	d8c02a15 	stw	r3,168(sp)
 8000f10:	8ac0008c 	andi	r11,r17,2
 8000f14:	dac02b15 	stw	r11,172(sp)
 8000f18:	58000326 	beq	r11,zero,8000f28 <___svfprintf_internal_r+0x518>
 8000f1c:	db002a17 	ldw	r12,168(sp)
 8000f20:	63000084 	addi	r12,r12,2
 8000f24:	db002a15 	stw	r12,168(sp)
 8000f28:	88c0210c 	andi	r3,r17,132
 8000f2c:	d8c02c15 	stw	r3,176(sp)
 8000f30:	1802021e 	bne	r3,zero,800173c <___svfprintf_internal_r+0xd2c>
 8000f34:	dac02e17 	ldw	r11,184(sp)
 8000f38:	db002a17 	ldw	r12,168(sp)
 8000f3c:	5b39c83a 	sub	fp,r11,r12
 8000f40:	0701fe0e 	bge	zero,fp,800173c <___svfprintf_internal_r+0xd2c>
 8000f44:	02400404 	movi	r9,16
 8000f48:	d8c02017 	ldw	r3,128(sp)
 8000f4c:	d8801f17 	ldw	r2,124(sp)
 8000f50:	4f057d0e 	bge	r9,fp,8002548 <___svfprintf_internal_r+0x1b38>
 8000f54:	01420074 	movhi	r5,2049
 8000f58:	e009883a 	mov	r4,fp
 8000f5c:	294ab684 	addi	r5,r5,10970
 8000f60:	dc003c15 	stw	r16,240(sp)
 8000f64:	9039883a 	mov	fp,r18
 8000f68:	d9403615 	stw	r5,216(sp)
 8000f6c:	8825883a 	mov	r18,r17
 8000f70:	482b883a 	mov	r21,r9
 8000f74:	04c001c4 	movi	r19,7
 8000f78:	dc002f17 	ldw	r16,188(sp)
 8000f7c:	2023883a 	mov	r17,r4
 8000f80:	00000306 	br	8000f90 <___svfprintf_internal_r+0x580>
 8000f84:	8c7ffc04 	addi	r17,r17,-16
 8000f88:	42000204 	addi	r8,r8,8
 8000f8c:	ac40130e 	bge	r21,r17,8000fdc <___svfprintf_internal_r+0x5cc>
 8000f90:	02c20074 	movhi	r11,2049
 8000f94:	18c00404 	addi	r3,r3,16
 8000f98:	10800044 	addi	r2,r2,1
 8000f9c:	5acab684 	addi	r11,r11,10970
 8000fa0:	42c00015 	stw	r11,0(r8)
 8000fa4:	45400115 	stw	r21,4(r8)
 8000fa8:	d8c02015 	stw	r3,128(sp)
 8000fac:	d8801f15 	stw	r2,124(sp)
 8000fb0:	98bff40e 	bge	r19,r2,8000f84 <__alt_data_end+0xfc000f84>
 8000fb4:	8009883a 	mov	r4,r16
 8000fb8:	b80b883a 	mov	r5,r23
 8000fbc:	b00d883a 	mov	r6,r22
 8000fc0:	8008f4c0 	call	8008f4c <__ssprint_r>
 8000fc4:	103f5a1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8000fc8:	8c7ffc04 	addi	r17,r17,-16
 8000fcc:	d8c02017 	ldw	r3,128(sp)
 8000fd0:	d8801f17 	ldw	r2,124(sp)
 8000fd4:	da000404 	addi	r8,sp,16
 8000fd8:	ac7fed16 	blt	r21,r17,8000f90 <__alt_data_end+0xfc000f90>
 8000fdc:	dc003c17 	ldw	r16,240(sp)
 8000fe0:	8809883a 	mov	r4,r17
 8000fe4:	9023883a 	mov	r17,r18
 8000fe8:	e025883a 	mov	r18,fp
 8000fec:	2039883a 	mov	fp,r4
 8000ff0:	db003617 	ldw	r12,216(sp)
 8000ff4:	e0c7883a 	add	r3,fp,r3
 8000ff8:	10800044 	addi	r2,r2,1
 8000ffc:	43000015 	stw	r12,0(r8)
 8001000:	47000115 	stw	fp,4(r8)
 8001004:	d8c02015 	stw	r3,128(sp)
 8001008:	d8801f15 	stw	r2,124(sp)
 800100c:	010001c4 	movi	r4,7
 8001010:	20833516 	blt	r4,r2,8001ce8 <___svfprintf_internal_r+0x12d8>
 8001014:	d8802787 	ldb	r2,158(sp)
 8001018:	42000204 	addi	r8,r8,8
 800101c:	10000c26 	beq	r2,zero,8001050 <___svfprintf_internal_r+0x640>
 8001020:	d8801f17 	ldw	r2,124(sp)
 8001024:	d9002784 	addi	r4,sp,158
 8001028:	18c00044 	addi	r3,r3,1
 800102c:	10800044 	addi	r2,r2,1
 8001030:	41000015 	stw	r4,0(r8)
 8001034:	01000044 	movi	r4,1
 8001038:	41000115 	stw	r4,4(r8)
 800103c:	d8c02015 	stw	r3,128(sp)
 8001040:	d8801f15 	stw	r2,124(sp)
 8001044:	010001c4 	movi	r4,7
 8001048:	2082df16 	blt	r4,r2,8001bc8 <___svfprintf_internal_r+0x11b8>
 800104c:	42000204 	addi	r8,r8,8
 8001050:	dac02b17 	ldw	r11,172(sp)
 8001054:	58000c26 	beq	r11,zero,8001088 <___svfprintf_internal_r+0x678>
 8001058:	d8801f17 	ldw	r2,124(sp)
 800105c:	d9002704 	addi	r4,sp,156
 8001060:	18c00084 	addi	r3,r3,2
 8001064:	10800044 	addi	r2,r2,1
 8001068:	41000015 	stw	r4,0(r8)
 800106c:	01000084 	movi	r4,2
 8001070:	41000115 	stw	r4,4(r8)
 8001074:	d8c02015 	stw	r3,128(sp)
 8001078:	d8801f15 	stw	r2,124(sp)
 800107c:	010001c4 	movi	r4,7
 8001080:	2082d916 	blt	r4,r2,8001be8 <___svfprintf_internal_r+0x11d8>
 8001084:	42000204 	addi	r8,r8,8
 8001088:	db002c17 	ldw	r12,176(sp)
 800108c:	00802004 	movi	r2,128
 8001090:	60822026 	beq	r12,r2,8001914 <___svfprintf_internal_r+0xf04>
 8001094:	db003217 	ldw	r12,200(sp)
 8001098:	64abc83a 	sub	r21,r12,r18
 800109c:	0540310e 	bge	zero,r21,8001164 <___svfprintf_internal_r+0x754>
 80010a0:	07000404 	movi	fp,16
 80010a4:	d8801f17 	ldw	r2,124(sp)
 80010a8:	e544180e 	bge	fp,r21,800210c <___svfprintf_internal_r+0x16fc>
 80010ac:	01420074 	movhi	r5,2049
 80010b0:	a809883a 	mov	r4,r21
 80010b4:	294ab284 	addi	r5,r5,10954
 80010b8:	dc002c15 	stw	r16,176(sp)
 80010bc:	902b883a 	mov	r21,r18
 80010c0:	d9402b15 	stw	r5,172(sp)
 80010c4:	8825883a 	mov	r18,r17
 80010c8:	04c001c4 	movi	r19,7
 80010cc:	dc002f17 	ldw	r16,188(sp)
 80010d0:	2023883a 	mov	r17,r4
 80010d4:	00000306 	br	80010e4 <___svfprintf_internal_r+0x6d4>
 80010d8:	8c7ffc04 	addi	r17,r17,-16
 80010dc:	42000204 	addi	r8,r8,8
 80010e0:	e440110e 	bge	fp,r17,8001128 <___svfprintf_internal_r+0x718>
 80010e4:	18c00404 	addi	r3,r3,16
 80010e8:	10800044 	addi	r2,r2,1
 80010ec:	45000015 	stw	r20,0(r8)
 80010f0:	47000115 	stw	fp,4(r8)
 80010f4:	d8c02015 	stw	r3,128(sp)
 80010f8:	d8801f15 	stw	r2,124(sp)
 80010fc:	98bff60e 	bge	r19,r2,80010d8 <__alt_data_end+0xfc0010d8>
 8001100:	8009883a 	mov	r4,r16
 8001104:	b80b883a 	mov	r5,r23
 8001108:	b00d883a 	mov	r6,r22
 800110c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001110:	103f071e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001114:	8c7ffc04 	addi	r17,r17,-16
 8001118:	d8c02017 	ldw	r3,128(sp)
 800111c:	d8801f17 	ldw	r2,124(sp)
 8001120:	da000404 	addi	r8,sp,16
 8001124:	e47fef16 	blt	fp,r17,80010e4 <__alt_data_end+0xfc0010e4>
 8001128:	dc002c17 	ldw	r16,176(sp)
 800112c:	8809883a 	mov	r4,r17
 8001130:	9023883a 	mov	r17,r18
 8001134:	a825883a 	mov	r18,r21
 8001138:	202b883a 	mov	r21,r4
 800113c:	dac02b17 	ldw	r11,172(sp)
 8001140:	1d47883a 	add	r3,r3,r21
 8001144:	10800044 	addi	r2,r2,1
 8001148:	42c00015 	stw	r11,0(r8)
 800114c:	45400115 	stw	r21,4(r8)
 8001150:	d8c02015 	stw	r3,128(sp)
 8001154:	d8801f15 	stw	r2,124(sp)
 8001158:	010001c4 	movi	r4,7
 800115c:	20829216 	blt	r4,r2,8001ba8 <___svfprintf_internal_r+0x1198>
 8001160:	42000204 	addi	r8,r8,8
 8001164:	8880400c 	andi	r2,r17,256
 8001168:	1001a11e 	bne	r2,zero,80017f0 <___svfprintf_internal_r+0xde0>
 800116c:	d8801f17 	ldw	r2,124(sp)
 8001170:	db003117 	ldw	r12,196(sp)
 8001174:	1c87883a 	add	r3,r3,r18
 8001178:	10800044 	addi	r2,r2,1
 800117c:	43000015 	stw	r12,0(r8)
 8001180:	44800115 	stw	r18,4(r8)
 8001184:	d8c02015 	stw	r3,128(sp)
 8001188:	d8801f15 	stw	r2,124(sp)
 800118c:	010001c4 	movi	r4,7
 8001190:	20826d16 	blt	r4,r2,8001b48 <___svfprintf_internal_r+0x1138>
 8001194:	42000204 	addi	r8,r8,8
 8001198:	8c40010c 	andi	r17,r17,4
 800119c:	88003226 	beq	r17,zero,8001268 <___svfprintf_internal_r+0x858>
 80011a0:	db002e17 	ldw	r12,184(sp)
 80011a4:	dac02a17 	ldw	r11,168(sp)
 80011a8:	62e1c83a 	sub	r16,r12,r11
 80011ac:	04002e0e 	bge	zero,r16,8001268 <___svfprintf_internal_r+0x858>
 80011b0:	04400404 	movi	r17,16
 80011b4:	d8801f17 	ldw	r2,124(sp)
 80011b8:	8c05240e 	bge	r17,r16,800264c <___svfprintf_internal_r+0x1c3c>
 80011bc:	01020074 	movhi	r4,2049
 80011c0:	210ab684 	addi	r4,r4,10970
 80011c4:	d9003615 	stw	r4,216(sp)
 80011c8:	048001c4 	movi	r18,7
 80011cc:	dcc02f17 	ldw	r19,188(sp)
 80011d0:	00000306 	br	80011e0 <___svfprintf_internal_r+0x7d0>
 80011d4:	843ffc04 	addi	r16,r16,-16
 80011d8:	42000204 	addi	r8,r8,8
 80011dc:	8c00130e 	bge	r17,r16,800122c <___svfprintf_internal_r+0x81c>
 80011e0:	01420074 	movhi	r5,2049
 80011e4:	18c00404 	addi	r3,r3,16
 80011e8:	10800044 	addi	r2,r2,1
 80011ec:	294ab684 	addi	r5,r5,10970
 80011f0:	41400015 	stw	r5,0(r8)
 80011f4:	44400115 	stw	r17,4(r8)
 80011f8:	d8c02015 	stw	r3,128(sp)
 80011fc:	d8801f15 	stw	r2,124(sp)
 8001200:	90bff40e 	bge	r18,r2,80011d4 <__alt_data_end+0xfc0011d4>
 8001204:	9809883a 	mov	r4,r19
 8001208:	b80b883a 	mov	r5,r23
 800120c:	b00d883a 	mov	r6,r22
 8001210:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001214:	103ec61e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001218:	843ffc04 	addi	r16,r16,-16
 800121c:	d8c02017 	ldw	r3,128(sp)
 8001220:	d8801f17 	ldw	r2,124(sp)
 8001224:	da000404 	addi	r8,sp,16
 8001228:	8c3fed16 	blt	r17,r16,80011e0 <__alt_data_end+0xfc0011e0>
 800122c:	dac03617 	ldw	r11,216(sp)
 8001230:	1c07883a 	add	r3,r3,r16
 8001234:	10800044 	addi	r2,r2,1
 8001238:	42c00015 	stw	r11,0(r8)
 800123c:	44000115 	stw	r16,4(r8)
 8001240:	d8c02015 	stw	r3,128(sp)
 8001244:	d8801f15 	stw	r2,124(sp)
 8001248:	010001c4 	movi	r4,7
 800124c:	2080060e 	bge	r4,r2,8001268 <___svfprintf_internal_r+0x858>
 8001250:	d9002f17 	ldw	r4,188(sp)
 8001254:	b80b883a 	mov	r5,r23
 8001258:	b00d883a 	mov	r6,r22
 800125c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001260:	103eb31e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001264:	d8c02017 	ldw	r3,128(sp)
 8001268:	d8802a17 	ldw	r2,168(sp)
 800126c:	db002e17 	ldw	r12,184(sp)
 8001270:	1300010e 	bge	r2,r12,8001278 <___svfprintf_internal_r+0x868>
 8001274:	6005883a 	mov	r2,r12
 8001278:	dac03017 	ldw	r11,192(sp)
 800127c:	5897883a 	add	r11,r11,r2
 8001280:	dac03015 	stw	r11,192(sp)
 8001284:	1802381e 	bne	r3,zero,8001b68 <___svfprintf_internal_r+0x1158>
 8001288:	d8001f15 	stw	zero,124(sp)
 800128c:	da000404 	addi	r8,sp,16
 8001290:	003e0b06 	br	8000ac0 <__alt_data_end+0xfc000ac0>
 8001294:	8c400414 	ori	r17,r17,16
 8001298:	d8c02915 	stw	r3,164(sp)
 800129c:	8880080c 	andi	r2,r17,32
 80012a0:	10010c26 	beq	r2,zero,80016d4 <___svfprintf_internal_r+0xcc4>
 80012a4:	db002d17 	ldw	r12,180(sp)
 80012a8:	0005883a 	mov	r2,zero
 80012ac:	64c00017 	ldw	r19,0(r12)
 80012b0:	67000117 	ldw	fp,4(r12)
 80012b4:	63000204 	addi	r12,r12,8
 80012b8:	db002d15 	stw	r12,180(sp)
 80012bc:	9f06b03a 	or	r3,r19,fp
 80012c0:	d8002785 	stb	zero,158(sp)
 80012c4:	da403215 	stw	r9,200(sp)
 80012c8:	002b883a 	mov	r21,zero
 80012cc:	003ee206 	br	8000e58 <__alt_data_end+0xfc000e58>
 80012d0:	8c400414 	ori	r17,r17,16
 80012d4:	d8c02915 	stw	r3,164(sp)
 80012d8:	8880080c 	andi	r2,r17,32
 80012dc:	1000ee26 	beq	r2,zero,8001698 <___svfprintf_internal_r+0xc88>
 80012e0:	dac02d17 	ldw	r11,180(sp)
 80012e4:	00800044 	movi	r2,1
 80012e8:	5cc00017 	ldw	r19,0(r11)
 80012ec:	5f000117 	ldw	fp,4(r11)
 80012f0:	5ac00204 	addi	r11,r11,8
 80012f4:	dac02d15 	stw	r11,180(sp)
 80012f8:	9f06b03a 	or	r3,r19,fp
 80012fc:	003ff006 	br	80012c0 <__alt_data_end+0xfc0012c0>
 8001300:	db002d17 	ldw	r12,180(sp)
 8001304:	dac02d17 	ldw	r11,180(sp)
 8001308:	d8c02915 	stw	r3,164(sp)
 800130c:	63000017 	ldw	r12,0(r12)
 8001310:	5ac00117 	ldw	r11,4(r11)
 8001314:	d9802785 	stb	r6,158(sp)
 8001318:	6009883a 	mov	r4,r12
 800131c:	580b883a 	mov	r5,r11
 8001320:	db003715 	stw	r12,220(sp)
 8001324:	da004015 	stw	r8,256(sp)
 8001328:	da403f15 	stw	r9,252(sp)
 800132c:	dac03815 	stw	r11,224(sp)
 8001330:	8008ca40 	call	8008ca4 <__fpclassifyd>
 8001334:	db002d17 	ldw	r12,180(sp)
 8001338:	04800044 	movi	r18,1
 800133c:	da004017 	ldw	r8,256(sp)
 8001340:	64c00204 	addi	r19,r12,8
 8001344:	da403f17 	ldw	r9,252(sp)
 8001348:	d9003717 	ldw	r4,220(sp)
 800134c:	d9403817 	ldw	r5,224(sp)
 8001350:	14832c1e 	bne	r2,r18,8002004 <___svfprintf_internal_r+0x15f4>
 8001354:	000d883a 	mov	r6,zero
 8001358:	000f883a 	mov	r7,zero
 800135c:	800ea300 	call	800ea30 <__ledf2>
 8001360:	da004017 	ldw	r8,256(sp)
 8001364:	1004c416 	blt	r2,zero,8002678 <___svfprintf_internal_r+0x1c68>
 8001368:	dd402783 	ldbu	r21,158(sp)
 800136c:	008011c4 	movi	r2,71
 8001370:	14041a0e 	bge	r2,r16,80023dc <___svfprintf_internal_r+0x19cc>
 8001374:	00c20074 	movhi	r3,2049
 8001378:	18caa304 	addi	r3,r3,10892
 800137c:	d8c03115 	stw	r3,196(sp)
 8001380:	02c000c4 	movi	r11,3
 8001384:	00bfdfc4 	movi	r2,-129
 8001388:	dac02a15 	stw	r11,168(sp)
 800138c:	88a2703a 	and	r17,r17,r2
 8001390:	dcc02d15 	stw	r19,180(sp)
 8001394:	5825883a 	mov	r18,r11
 8001398:	d8003215 	stw	zero,200(sp)
 800139c:	d8003415 	stw	zero,208(sp)
 80013a0:	003ed406 	br	8000ef4 <__alt_data_end+0xfc000ef4>
 80013a4:	db002d17 	ldw	r12,180(sp)
 80013a8:	00800c04 	movi	r2,48
 80013ac:	d8802705 	stb	r2,156(sp)
 80013b0:	64c00017 	ldw	r19,0(r12)
 80013b4:	00801e04 	movi	r2,120
 80013b8:	d8802745 	stb	r2,157(sp)
 80013bc:	00820074 	movhi	r2,2049
 80013c0:	108aab04 	addi	r2,r2,10924
 80013c4:	63000104 	addi	r12,r12,4
 80013c8:	d8c02915 	stw	r3,164(sp)
 80013cc:	d8803b15 	stw	r2,236(sp)
 80013d0:	0039883a 	mov	fp,zero
 80013d4:	8c400094 	ori	r17,r17,2
 80013d8:	db002d15 	stw	r12,180(sp)
 80013dc:	00800084 	movi	r2,2
 80013e0:	04001e04 	movi	r16,120
 80013e4:	9807883a 	mov	r3,r19
 80013e8:	003fb506 	br	80012c0 <__alt_data_end+0xfc0012c0>
 80013ec:	8c400214 	ori	r17,r17,8
 80013f0:	1805883a 	mov	r2,r3
 80013f4:	1c000007 	ldb	r16,0(r3)
 80013f8:	003ddb06 	br	8000b68 <__alt_data_end+0xfc000b68>
 80013fc:	d8c02915 	stw	r3,164(sp)
 8001400:	d9802785 	stb	r6,158(sp)
 8001404:	8880080c 	andi	r2,r17,32
 8001408:	d8c02d17 	ldw	r3,180(sp)
 800140c:	103e871e 	bne	r2,zero,8000e2c <__alt_data_end+0xfc000e2c>
 8001410:	8880040c 	andi	r2,r17,16
 8001414:	10027a1e 	bne	r2,zero,8001e00 <___svfprintf_internal_r+0x13f0>
 8001418:	8880100c 	andi	r2,r17,64
 800141c:	10027826 	beq	r2,zero,8001e00 <___svfprintf_internal_r+0x13f0>
 8001420:	1cc0000f 	ldh	r19,0(r3)
 8001424:	db002d17 	ldw	r12,180(sp)
 8001428:	9839d7fa 	srai	fp,r19,31
 800142c:	63000104 	addi	r12,r12,4
 8001430:	db002d15 	stw	r12,180(sp)
 8001434:	e005883a 	mov	r2,fp
 8001438:	103e830e 	bge	r2,zero,8000e48 <__alt_data_end+0xfc000e48>
 800143c:	04e7c83a 	sub	r19,zero,r19
 8001440:	9804c03a 	cmpne	r2,r19,zero
 8001444:	0739c83a 	sub	fp,zero,fp
 8001448:	e0b9c83a 	sub	fp,fp,r2
 800144c:	05400b44 	movi	r21,45
 8001450:	dd402785 	stb	r21,158(sp)
 8001454:	da403215 	stw	r9,200(sp)
 8001458:	00800044 	movi	r2,1
 800145c:	9f06b03a 	or	r3,r19,fp
 8001460:	003e7d06 	br	8000e58 <__alt_data_end+0xfc000e58>
 8001464:	8c401014 	ori	r17,r17,64
 8001468:	1805883a 	mov	r2,r3
 800146c:	1c000007 	ldb	r16,0(r3)
 8001470:	003dbd06 	br	8000b68 <__alt_data_end+0xfc000b68>
 8001474:	1c000007 	ldb	r16,0(r3)
 8001478:	81c37126 	beq	r16,r7,8002240 <___svfprintf_internal_r+0x1830>
 800147c:	8c400414 	ori	r17,r17,16
 8001480:	1805883a 	mov	r2,r3
 8001484:	003db806 	br	8000b68 <__alt_data_end+0xfc000b68>
 8001488:	d8c02915 	stw	r3,164(sp)
 800148c:	d9802785 	stb	r6,158(sp)
 8001490:	8880080c 	andi	r2,r17,32
 8001494:	1002f026 	beq	r2,zero,8002058 <___svfprintf_internal_r+0x1648>
 8001498:	db002d17 	ldw	r12,180(sp)
 800149c:	dac03017 	ldw	r11,192(sp)
 80014a0:	60800017 	ldw	r2,0(r12)
 80014a4:	5807d7fa 	srai	r3,r11,31
 80014a8:	63000104 	addi	r12,r12,4
 80014ac:	db002d15 	stw	r12,180(sp)
 80014b0:	12c00015 	stw	r11,0(r2)
 80014b4:	10c00115 	stw	r3,4(r2)
 80014b8:	003d8106 	br	8000ac0 <__alt_data_end+0xfc000ac0>
 80014bc:	30803fcc 	andi	r2,r6,255
 80014c0:	1080201c 	xori	r2,r2,128
 80014c4:	10bfe004 	addi	r2,r2,-128
 80014c8:	1002fd1e 	bne	r2,zero,80020c0 <___svfprintf_internal_r+0x16b0>
 80014cc:	1805883a 	mov	r2,r3
 80014d0:	01800804 	movi	r6,32
 80014d4:	1c000007 	ldb	r16,0(r3)
 80014d8:	003da306 	br	8000b68 <__alt_data_end+0xfc000b68>
 80014dc:	03020074 	movhi	r12,2049
 80014e0:	630aa604 	addi	r12,r12,10904
 80014e4:	d8c02915 	stw	r3,164(sp)
 80014e8:	d9802785 	stb	r6,158(sp)
 80014ec:	db003b15 	stw	r12,236(sp)
 80014f0:	88c0080c 	andi	r3,r17,32
 80014f4:	d8802d17 	ldw	r2,180(sp)
 80014f8:	18005c26 	beq	r3,zero,800166c <___svfprintf_internal_r+0xc5c>
 80014fc:	dac02d17 	ldw	r11,180(sp)
 8001500:	14c00017 	ldw	r19,0(r2)
 8001504:	17000117 	ldw	fp,4(r2)
 8001508:	5ac00204 	addi	r11,r11,8
 800150c:	dac02d15 	stw	r11,180(sp)
 8001510:	8880004c 	andi	r2,r17,1
 8001514:	10022f26 	beq	r2,zero,8001dd4 <___svfprintf_internal_r+0x13c4>
 8001518:	9f06b03a 	or	r3,r19,fp
 800151c:	1802eb26 	beq	r3,zero,80020cc <___svfprintf_internal_r+0x16bc>
 8001520:	00800c04 	movi	r2,48
 8001524:	d8802705 	stb	r2,156(sp)
 8001528:	dc002745 	stb	r16,157(sp)
 800152c:	8c400094 	ori	r17,r17,2
 8001530:	00800084 	movi	r2,2
 8001534:	003f6206 	br	80012c0 <__alt_data_end+0xfc0012c0>
 8001538:	dac02d17 	ldw	r11,180(sp)
 800153c:	db002d17 	ldw	r12,180(sp)
 8001540:	d8c02915 	stw	r3,164(sp)
 8001544:	5ac00017 	ldw	r11,0(r11)
 8001548:	d8002785 	stb	zero,158(sp)
 800154c:	64c00104 	addi	r19,r12,4
 8001550:	dac03115 	stw	r11,196(sp)
 8001554:	58042e26 	beq	r11,zero,8002610 <___svfprintf_internal_r+0x1c00>
 8001558:	d9003117 	ldw	r4,196(sp)
 800155c:	4803c416 	blt	r9,zero,8002470 <___svfprintf_internal_r+0x1a60>
 8001560:	480d883a 	mov	r6,r9
 8001564:	000b883a 	mov	r5,zero
 8001568:	da004015 	stw	r8,256(sp)
 800156c:	da403f15 	stw	r9,252(sp)
 8001570:	80079d40 	call	80079d4 <memchr>
 8001574:	da004017 	ldw	r8,256(sp)
 8001578:	da403f17 	ldw	r9,252(sp)
 800157c:	10048a26 	beq	r2,zero,80027a8 <___svfprintf_internal_r+0x1d98>
 8001580:	d8c03117 	ldw	r3,196(sp)
 8001584:	10e5c83a 	sub	r18,r2,r3
 8001588:	4c80010e 	bge	r9,r18,8001590 <___svfprintf_internal_r+0xb80>
 800158c:	4825883a 	mov	r18,r9
 8001590:	9005883a 	mov	r2,r18
 8001594:	9003bb16 	blt	r18,zero,8002484 <___svfprintf_internal_r+0x1a74>
 8001598:	dd402783 	ldbu	r21,158(sp)
 800159c:	d8802a15 	stw	r2,168(sp)
 80015a0:	dcc02d15 	stw	r19,180(sp)
 80015a4:	d8003215 	stw	zero,200(sp)
 80015a8:	d8003415 	stw	zero,208(sp)
 80015ac:	003e5106 	br	8000ef4 <__alt_data_end+0xfc000ef4>
 80015b0:	8c400814 	ori	r17,r17,32
 80015b4:	1805883a 	mov	r2,r3
 80015b8:	1c000007 	ldb	r16,0(r3)
 80015bc:	003d6a06 	br	8000b68 <__alt_data_end+0xfc000b68>
 80015c0:	db002d17 	ldw	r12,180(sp)
 80015c4:	d8c02915 	stw	r3,164(sp)
 80015c8:	dac01404 	addi	r11,sp,80
 80015cc:	60800017 	ldw	r2,0(r12)
 80015d0:	00c00044 	movi	r3,1
 80015d4:	63000104 	addi	r12,r12,4
 80015d8:	d8801405 	stb	r2,80(sp)
 80015dc:	d8c02a15 	stw	r3,168(sp)
 80015e0:	d8002785 	stb	zero,158(sp)
 80015e4:	db002d15 	stw	r12,180(sp)
 80015e8:	1825883a 	mov	r18,r3
 80015ec:	d8003215 	stw	zero,200(sp)
 80015f0:	d8003415 	stw	zero,208(sp)
 80015f4:	dac03115 	stw	r11,196(sp)
 80015f8:	0005883a 	mov	r2,zero
 80015fc:	003e4406 	br	8000f10 <__alt_data_end+0xfc000f10>
 8001600:	dac02d17 	ldw	r11,180(sp)
 8001604:	db002d17 	ldw	r12,180(sp)
 8001608:	5ac00017 	ldw	r11,0(r11)
 800160c:	dac02e15 	stw	r11,184(sp)
 8001610:	62c00104 	addi	r11,r12,4
 8001614:	db002e17 	ldw	r12,184(sp)
 8001618:	60030316 	blt	r12,zero,8002228 <___svfprintf_internal_r+0x1818>
 800161c:	dac02d15 	stw	r11,180(sp)
 8001620:	1805883a 	mov	r2,r3
 8001624:	1c000007 	ldb	r16,0(r3)
 8001628:	003d4f06 	br	8000b68 <__alt_data_end+0xfc000b68>
 800162c:	1805883a 	mov	r2,r3
 8001630:	01800ac4 	movi	r6,43
 8001634:	1c000007 	ldb	r16,0(r3)
 8001638:	003d4b06 	br	8000b68 <__alt_data_end+0xfc000b68>
 800163c:	8c400054 	ori	r17,r17,1
 8001640:	1805883a 	mov	r2,r3
 8001644:	1c000007 	ldb	r16,0(r3)
 8001648:	003d4706 	br	8000b68 <__alt_data_end+0xfc000b68>
 800164c:	00820074 	movhi	r2,2049
 8001650:	108aab04 	addi	r2,r2,10924
 8001654:	d8c02915 	stw	r3,164(sp)
 8001658:	d8803b15 	stw	r2,236(sp)
 800165c:	d9802785 	stb	r6,158(sp)
 8001660:	88c0080c 	andi	r3,r17,32
 8001664:	d8802d17 	ldw	r2,180(sp)
 8001668:	183fa41e 	bne	r3,zero,80014fc <__alt_data_end+0xfc0014fc>
 800166c:	88c0040c 	andi	r3,r17,16
 8001670:	18028b26 	beq	r3,zero,80020a0 <___svfprintf_internal_r+0x1690>
 8001674:	db002d17 	ldw	r12,180(sp)
 8001678:	14c00017 	ldw	r19,0(r2)
 800167c:	0039883a 	mov	fp,zero
 8001680:	63000104 	addi	r12,r12,4
 8001684:	db002d15 	stw	r12,180(sp)
 8001688:	003fa106 	br	8001510 <__alt_data_end+0xfc001510>
 800168c:	d8c02915 	stw	r3,164(sp)
 8001690:	8880080c 	andi	r2,r17,32
 8001694:	103f121e 	bne	r2,zero,80012e0 <__alt_data_end+0xfc0012e0>
 8001698:	8880040c 	andi	r2,r17,16
 800169c:	1001df1e 	bne	r2,zero,8001e1c <___svfprintf_internal_r+0x140c>
 80016a0:	8880100c 	andi	r2,r17,64
 80016a4:	1001dd26 	beq	r2,zero,8001e1c <___svfprintf_internal_r+0x140c>
 80016a8:	dac02d17 	ldw	r11,180(sp)
 80016ac:	0039883a 	mov	fp,zero
 80016b0:	00800044 	movi	r2,1
 80016b4:	5cc0000b 	ldhu	r19,0(r11)
 80016b8:	5ac00104 	addi	r11,r11,4
 80016bc:	dac02d15 	stw	r11,180(sp)
 80016c0:	9807883a 	mov	r3,r19
 80016c4:	003efe06 	br	80012c0 <__alt_data_end+0xfc0012c0>
 80016c8:	d8c02915 	stw	r3,164(sp)
 80016cc:	8880080c 	andi	r2,r17,32
 80016d0:	103ef41e 	bne	r2,zero,80012a4 <__alt_data_end+0xfc0012a4>
 80016d4:	8880040c 	andi	r2,r17,16
 80016d8:	1001c11e 	bne	r2,zero,8001de0 <___svfprintf_internal_r+0x13d0>
 80016dc:	8880100c 	andi	r2,r17,64
 80016e0:	1001bf26 	beq	r2,zero,8001de0 <___svfprintf_internal_r+0x13d0>
 80016e4:	db002d17 	ldw	r12,180(sp)
 80016e8:	0039883a 	mov	fp,zero
 80016ec:	0005883a 	mov	r2,zero
 80016f0:	64c0000b 	ldhu	r19,0(r12)
 80016f4:	63000104 	addi	r12,r12,4
 80016f8:	db002d15 	stw	r12,180(sp)
 80016fc:	9807883a 	mov	r3,r19
 8001700:	003eef06 	br	80012c0 <__alt_data_end+0xfc0012c0>
 8001704:	d8c02915 	stw	r3,164(sp)
 8001708:	d9802785 	stb	r6,158(sp)
 800170c:	803d8226 	beq	r16,zero,8000d18 <__alt_data_end+0xfc000d18>
 8001710:	02c00044 	movi	r11,1
 8001714:	db001404 	addi	r12,sp,80
 8001718:	dac02a15 	stw	r11,168(sp)
 800171c:	dc001405 	stb	r16,80(sp)
 8001720:	d8002785 	stb	zero,158(sp)
 8001724:	5825883a 	mov	r18,r11
 8001728:	d8003215 	stw	zero,200(sp)
 800172c:	d8003415 	stw	zero,208(sp)
 8001730:	db003115 	stw	r12,196(sp)
 8001734:	0005883a 	mov	r2,zero
 8001738:	003df506 	br	8000f10 <__alt_data_end+0xfc000f10>
 800173c:	d8c02017 	ldw	r3,128(sp)
 8001740:	003e3606 	br	800101c <__alt_data_end+0xfc00101c>
 8001744:	10803fcc 	andi	r2,r2,255
 8001748:	00c00044 	movi	r3,1
 800174c:	10fdca1e 	bne	r2,r3,8000e78 <__alt_data_end+0xfc000e78>
 8001750:	e000021e 	bne	fp,zero,800175c <___svfprintf_internal_r+0xd4c>
 8001754:	00800244 	movi	r2,9
 8001758:	14c01f2e 	bgeu	r2,r19,80017d8 <___svfprintf_internal_r+0xdc8>
 800175c:	dc002a15 	stw	r16,168(sp)
 8001760:	dc402b15 	stw	r17,172(sp)
 8001764:	9821883a 	mov	r16,r19
 8001768:	e023883a 	mov	r17,fp
 800176c:	b025883a 	mov	r18,r22
 8001770:	4027883a 	mov	r19,r8
 8001774:	4839883a 	mov	fp,r9
 8001778:	8009883a 	mov	r4,r16
 800177c:	880b883a 	mov	r5,r17
 8001780:	01800284 	movi	r6,10
 8001784:	000f883a 	mov	r7,zero
 8001788:	800d0a80 	call	800d0a8 <__umoddi3>
 800178c:	10800c04 	addi	r2,r2,48
 8001790:	94bfffc4 	addi	r18,r18,-1
 8001794:	8009883a 	mov	r4,r16
 8001798:	880b883a 	mov	r5,r17
 800179c:	01800284 	movi	r6,10
 80017a0:	000f883a 	mov	r7,zero
 80017a4:	90800005 	stb	r2,0(r18)
 80017a8:	800cae80 	call	800cae8 <__udivdi3>
 80017ac:	1021883a 	mov	r16,r2
 80017b0:	10c4b03a 	or	r2,r2,r3
 80017b4:	1823883a 	mov	r17,r3
 80017b8:	103fef1e 	bne	r2,zero,8001778 <__alt_data_end+0xfc001778>
 80017bc:	dc803115 	stw	r18,196(sp)
 80017c0:	dc002a17 	ldw	r16,168(sp)
 80017c4:	9811883a 	mov	r8,r19
 80017c8:	dc402b17 	ldw	r17,172(sp)
 80017cc:	e013883a 	mov	r9,fp
 80017d0:	b4a5c83a 	sub	r18,r22,r18
 80017d4:	003dc206 	br	8000ee0 <__alt_data_end+0xfc000ee0>
 80017d8:	9cc00c04 	addi	r19,r19,48
 80017dc:	db001dc4 	addi	r12,sp,119
 80017e0:	dcc01dc5 	stb	r19,119(sp)
 80017e4:	dc803d17 	ldw	r18,244(sp)
 80017e8:	db003115 	stw	r12,196(sp)
 80017ec:	003dbc06 	br	8000ee0 <__alt_data_end+0xfc000ee0>
 80017f0:	00801944 	movi	r2,101
 80017f4:	14008d0e 	bge	r2,r16,8001a2c <___svfprintf_internal_r+0x101c>
 80017f8:	d9003717 	ldw	r4,220(sp)
 80017fc:	d9403817 	ldw	r5,224(sp)
 8001800:	000d883a 	mov	r6,zero
 8001804:	000f883a 	mov	r7,zero
 8001808:	d8c03e15 	stw	r3,248(sp)
 800180c:	da004015 	stw	r8,256(sp)
 8001810:	800e8cc0 	call	800e8cc <__eqdf2>
 8001814:	d8c03e17 	ldw	r3,248(sp)
 8001818:	da004017 	ldw	r8,256(sp)
 800181c:	1000fd1e 	bne	r2,zero,8001c14 <___svfprintf_internal_r+0x1204>
 8001820:	d8801f17 	ldw	r2,124(sp)
 8001824:	01020074 	movhi	r4,2049
 8001828:	210ab204 	addi	r4,r4,10952
 800182c:	18c00044 	addi	r3,r3,1
 8001830:	10800044 	addi	r2,r2,1
 8001834:	41000015 	stw	r4,0(r8)
 8001838:	01000044 	movi	r4,1
 800183c:	41000115 	stw	r4,4(r8)
 8001840:	d8c02015 	stw	r3,128(sp)
 8001844:	d8801f15 	stw	r2,124(sp)
 8001848:	010001c4 	movi	r4,7
 800184c:	20823316 	blt	r4,r2,800211c <___svfprintf_internal_r+0x170c>
 8001850:	42000204 	addi	r8,r8,8
 8001854:	d8802617 	ldw	r2,152(sp)
 8001858:	dac03317 	ldw	r11,204(sp)
 800185c:	12c00216 	blt	r2,r11,8001868 <___svfprintf_internal_r+0xe58>
 8001860:	8880004c 	andi	r2,r17,1
 8001864:	103e4c26 	beq	r2,zero,8001198 <__alt_data_end+0xfc001198>
 8001868:	db003917 	ldw	r12,228(sp)
 800186c:	d8801f17 	ldw	r2,124(sp)
 8001870:	dac03517 	ldw	r11,212(sp)
 8001874:	1b07883a 	add	r3,r3,r12
 8001878:	10800044 	addi	r2,r2,1
 800187c:	42c00015 	stw	r11,0(r8)
 8001880:	43000115 	stw	r12,4(r8)
 8001884:	d8c02015 	stw	r3,128(sp)
 8001888:	d8801f15 	stw	r2,124(sp)
 800188c:	010001c4 	movi	r4,7
 8001890:	20826f16 	blt	r4,r2,8002250 <___svfprintf_internal_r+0x1840>
 8001894:	42000204 	addi	r8,r8,8
 8001898:	db003317 	ldw	r12,204(sp)
 800189c:	643fffc4 	addi	r16,r12,-1
 80018a0:	043e3d0e 	bge	zero,r16,8001198 <__alt_data_end+0xfc001198>
 80018a4:	04800404 	movi	r18,16
 80018a8:	d8801f17 	ldw	r2,124(sp)
 80018ac:	94009a0e 	bge	r18,r16,8001b18 <___svfprintf_internal_r+0x1108>
 80018b0:	01420074 	movhi	r5,2049
 80018b4:	294ab284 	addi	r5,r5,10954
 80018b8:	d9402b15 	stw	r5,172(sp)
 80018bc:	054001c4 	movi	r21,7
 80018c0:	dcc02f17 	ldw	r19,188(sp)
 80018c4:	00000306 	br	80018d4 <___svfprintf_internal_r+0xec4>
 80018c8:	42000204 	addi	r8,r8,8
 80018cc:	843ffc04 	addi	r16,r16,-16
 80018d0:	9400940e 	bge	r18,r16,8001b24 <___svfprintf_internal_r+0x1114>
 80018d4:	18c00404 	addi	r3,r3,16
 80018d8:	10800044 	addi	r2,r2,1
 80018dc:	45000015 	stw	r20,0(r8)
 80018e0:	44800115 	stw	r18,4(r8)
 80018e4:	d8c02015 	stw	r3,128(sp)
 80018e8:	d8801f15 	stw	r2,124(sp)
 80018ec:	a8bff60e 	bge	r21,r2,80018c8 <__alt_data_end+0xfc0018c8>
 80018f0:	9809883a 	mov	r4,r19
 80018f4:	b80b883a 	mov	r5,r23
 80018f8:	b00d883a 	mov	r6,r22
 80018fc:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001900:	103d0b1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001904:	d8c02017 	ldw	r3,128(sp)
 8001908:	d8801f17 	ldw	r2,124(sp)
 800190c:	da000404 	addi	r8,sp,16
 8001910:	003fee06 	br	80018cc <__alt_data_end+0xfc0018cc>
 8001914:	dac02e17 	ldw	r11,184(sp)
 8001918:	db002a17 	ldw	r12,168(sp)
 800191c:	5b2bc83a 	sub	r21,r11,r12
 8001920:	057ddc0e 	bge	zero,r21,8001094 <__alt_data_end+0xfc001094>
 8001924:	07000404 	movi	fp,16
 8001928:	d8801f17 	ldw	r2,124(sp)
 800192c:	e5435d0e 	bge	fp,r21,80026a4 <___svfprintf_internal_r+0x1c94>
 8001930:	01420074 	movhi	r5,2049
 8001934:	a809883a 	mov	r4,r21
 8001938:	294ab284 	addi	r5,r5,10954
 800193c:	dc002c15 	stw	r16,176(sp)
 8001940:	902b883a 	mov	r21,r18
 8001944:	d9402b15 	stw	r5,172(sp)
 8001948:	8825883a 	mov	r18,r17
 800194c:	04c001c4 	movi	r19,7
 8001950:	dc002f17 	ldw	r16,188(sp)
 8001954:	2023883a 	mov	r17,r4
 8001958:	00000306 	br	8001968 <___svfprintf_internal_r+0xf58>
 800195c:	8c7ffc04 	addi	r17,r17,-16
 8001960:	42000204 	addi	r8,r8,8
 8001964:	e440110e 	bge	fp,r17,80019ac <___svfprintf_internal_r+0xf9c>
 8001968:	18c00404 	addi	r3,r3,16
 800196c:	10800044 	addi	r2,r2,1
 8001970:	45000015 	stw	r20,0(r8)
 8001974:	47000115 	stw	fp,4(r8)
 8001978:	d8c02015 	stw	r3,128(sp)
 800197c:	d8801f15 	stw	r2,124(sp)
 8001980:	98bff60e 	bge	r19,r2,800195c <__alt_data_end+0xfc00195c>
 8001984:	8009883a 	mov	r4,r16
 8001988:	b80b883a 	mov	r5,r23
 800198c:	b00d883a 	mov	r6,r22
 8001990:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001994:	103ce61e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001998:	8c7ffc04 	addi	r17,r17,-16
 800199c:	d8c02017 	ldw	r3,128(sp)
 80019a0:	d8801f17 	ldw	r2,124(sp)
 80019a4:	da000404 	addi	r8,sp,16
 80019a8:	e47fef16 	blt	fp,r17,8001968 <__alt_data_end+0xfc001968>
 80019ac:	dc002c17 	ldw	r16,176(sp)
 80019b0:	8809883a 	mov	r4,r17
 80019b4:	9023883a 	mov	r17,r18
 80019b8:	a825883a 	mov	r18,r21
 80019bc:	202b883a 	mov	r21,r4
 80019c0:	dac02b17 	ldw	r11,172(sp)
 80019c4:	1d47883a 	add	r3,r3,r21
 80019c8:	10800044 	addi	r2,r2,1
 80019cc:	42c00015 	stw	r11,0(r8)
 80019d0:	45400115 	stw	r21,4(r8)
 80019d4:	d8c02015 	stw	r3,128(sp)
 80019d8:	d8801f15 	stw	r2,124(sp)
 80019dc:	010001c4 	movi	r4,7
 80019e0:	20818016 	blt	r4,r2,8001fe4 <___svfprintf_internal_r+0x15d4>
 80019e4:	42000204 	addi	r8,r8,8
 80019e8:	003daa06 	br	8001094 <__alt_data_end+0xfc001094>
 80019ec:	d9403b17 	ldw	r5,236(sp)
 80019f0:	b007883a 	mov	r3,r22
 80019f4:	988003cc 	andi	r2,r19,15
 80019f8:	e008973a 	slli	r4,fp,28
 80019fc:	2885883a 	add	r2,r5,r2
 8001a00:	9826d13a 	srli	r19,r19,4
 8001a04:	10800003 	ldbu	r2,0(r2)
 8001a08:	e038d13a 	srli	fp,fp,4
 8001a0c:	18ffffc4 	addi	r3,r3,-1
 8001a10:	24e6b03a 	or	r19,r4,r19
 8001a14:	18800005 	stb	r2,0(r3)
 8001a18:	9f04b03a 	or	r2,r19,fp
 8001a1c:	103ff51e 	bne	r2,zero,80019f4 <__alt_data_end+0xfc0019f4>
 8001a20:	d8c03115 	stw	r3,196(sp)
 8001a24:	b0e5c83a 	sub	r18,r22,r3
 8001a28:	003d2d06 	br	8000ee0 <__alt_data_end+0xfc000ee0>
 8001a2c:	db003317 	ldw	r12,204(sp)
 8001a30:	00800044 	movi	r2,1
 8001a34:	18c00044 	addi	r3,r3,1
 8001a38:	13014b0e 	bge	r2,r12,8001f68 <___svfprintf_internal_r+0x1558>
 8001a3c:	dc001f17 	ldw	r16,124(sp)
 8001a40:	dac03117 	ldw	r11,196(sp)
 8001a44:	00800044 	movi	r2,1
 8001a48:	84000044 	addi	r16,r16,1
 8001a4c:	40800115 	stw	r2,4(r8)
 8001a50:	42c00015 	stw	r11,0(r8)
 8001a54:	d8c02015 	stw	r3,128(sp)
 8001a58:	dc001f15 	stw	r16,124(sp)
 8001a5c:	008001c4 	movi	r2,7
 8001a60:	14014e16 	blt	r2,r16,8001f9c <___svfprintf_internal_r+0x158c>
 8001a64:	42000204 	addi	r8,r8,8
 8001a68:	db003917 	ldw	r12,228(sp)
 8001a6c:	dac03517 	ldw	r11,212(sp)
 8001a70:	84000044 	addi	r16,r16,1
 8001a74:	1b07883a 	add	r3,r3,r12
 8001a78:	42c00015 	stw	r11,0(r8)
 8001a7c:	43000115 	stw	r12,4(r8)
 8001a80:	d8c02015 	stw	r3,128(sp)
 8001a84:	dc001f15 	stw	r16,124(sp)
 8001a88:	008001c4 	movi	r2,7
 8001a8c:	14014c16 	blt	r2,r16,8001fc0 <___svfprintf_internal_r+0x15b0>
 8001a90:	44800204 	addi	r18,r8,8
 8001a94:	d9003717 	ldw	r4,220(sp)
 8001a98:	d9403817 	ldw	r5,224(sp)
 8001a9c:	000d883a 	mov	r6,zero
 8001aa0:	000f883a 	mov	r7,zero
 8001aa4:	d8c03e15 	stw	r3,248(sp)
 8001aa8:	800e8cc0 	call	800e8cc <__eqdf2>
 8001aac:	d8c03e17 	ldw	r3,248(sp)
 8001ab0:	db003317 	ldw	r12,204(sp)
 8001ab4:	10009526 	beq	r2,zero,8001d0c <___svfprintf_internal_r+0x12fc>
 8001ab8:	dac03117 	ldw	r11,196(sp)
 8001abc:	60bfffc4 	addi	r2,r12,-1
 8001ac0:	1887883a 	add	r3,r3,r2
 8001ac4:	59000044 	addi	r4,r11,1
 8001ac8:	84000044 	addi	r16,r16,1
 8001acc:	90800115 	stw	r2,4(r18)
 8001ad0:	91000015 	stw	r4,0(r18)
 8001ad4:	d8c02015 	stw	r3,128(sp)
 8001ad8:	dc001f15 	stw	r16,124(sp)
 8001adc:	008001c4 	movi	r2,7
 8001ae0:	1400b316 	blt	r2,r16,8001db0 <___svfprintf_internal_r+0x13a0>
 8001ae4:	94800204 	addi	r18,r18,8
 8001ae8:	dac03a17 	ldw	r11,232(sp)
 8001aec:	dd4022c4 	addi	r21,sp,139
 8001af0:	84000044 	addi	r16,r16,1
 8001af4:	58c7883a 	add	r3,r11,r3
 8001af8:	95400015 	stw	r21,0(r18)
 8001afc:	92c00115 	stw	r11,4(r18)
 8001b00:	d8c02015 	stw	r3,128(sp)
 8001b04:	dc001f15 	stw	r16,124(sp)
 8001b08:	008001c4 	movi	r2,7
 8001b0c:	14000e16 	blt	r2,r16,8001b48 <___svfprintf_internal_r+0x1138>
 8001b10:	92000204 	addi	r8,r18,8
 8001b14:	003da006 	br	8001198 <__alt_data_end+0xfc001198>
 8001b18:	01020074 	movhi	r4,2049
 8001b1c:	210ab284 	addi	r4,r4,10954
 8001b20:	d9002b15 	stw	r4,172(sp)
 8001b24:	dac02b17 	ldw	r11,172(sp)
 8001b28:	1c07883a 	add	r3,r3,r16
 8001b2c:	44000115 	stw	r16,4(r8)
 8001b30:	42c00015 	stw	r11,0(r8)
 8001b34:	10800044 	addi	r2,r2,1
 8001b38:	d8c02015 	stw	r3,128(sp)
 8001b3c:	d8801f15 	stw	r2,124(sp)
 8001b40:	010001c4 	movi	r4,7
 8001b44:	20bd930e 	bge	r4,r2,8001194 <__alt_data_end+0xfc001194>
 8001b48:	d9002f17 	ldw	r4,188(sp)
 8001b4c:	b80b883a 	mov	r5,r23
 8001b50:	b00d883a 	mov	r6,r22
 8001b54:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001b58:	103c751e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001b5c:	d8c02017 	ldw	r3,128(sp)
 8001b60:	da000404 	addi	r8,sp,16
 8001b64:	003d8c06 	br	8001198 <__alt_data_end+0xfc001198>
 8001b68:	d9002f17 	ldw	r4,188(sp)
 8001b6c:	b80b883a 	mov	r5,r23
 8001b70:	b00d883a 	mov	r6,r22
 8001b74:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001b78:	103dc326 	beq	r2,zero,8001288 <__alt_data_end+0xfc001288>
 8001b7c:	003c6c06 	br	8000d30 <__alt_data_end+0xfc000d30>
 8001b80:	10803fcc 	andi	r2,r2,255
 8001b84:	1000201e 	bne	r2,zero,8001c08 <___svfprintf_internal_r+0x11f8>
 8001b88:	8880004c 	andi	r2,r17,1
 8001b8c:	10001e26 	beq	r2,zero,8001c08 <___svfprintf_internal_r+0x11f8>
 8001b90:	00800c04 	movi	r2,48
 8001b94:	d8c01dc4 	addi	r3,sp,119
 8001b98:	d8801dc5 	stb	r2,119(sp)
 8001b9c:	dc803d17 	ldw	r18,244(sp)
 8001ba0:	d8c03115 	stw	r3,196(sp)
 8001ba4:	003cce06 	br	8000ee0 <__alt_data_end+0xfc000ee0>
 8001ba8:	d9002f17 	ldw	r4,188(sp)
 8001bac:	b80b883a 	mov	r5,r23
 8001bb0:	b00d883a 	mov	r6,r22
 8001bb4:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001bb8:	103c5d1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001bbc:	d8c02017 	ldw	r3,128(sp)
 8001bc0:	da000404 	addi	r8,sp,16
 8001bc4:	003d6706 	br	8001164 <__alt_data_end+0xfc001164>
 8001bc8:	d9002f17 	ldw	r4,188(sp)
 8001bcc:	b80b883a 	mov	r5,r23
 8001bd0:	b00d883a 	mov	r6,r22
 8001bd4:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001bd8:	103c551e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001bdc:	d8c02017 	ldw	r3,128(sp)
 8001be0:	da000404 	addi	r8,sp,16
 8001be4:	003d1a06 	br	8001050 <__alt_data_end+0xfc001050>
 8001be8:	d9002f17 	ldw	r4,188(sp)
 8001bec:	b80b883a 	mov	r5,r23
 8001bf0:	b00d883a 	mov	r6,r22
 8001bf4:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001bf8:	103c4d1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001bfc:	d8c02017 	ldw	r3,128(sp)
 8001c00:	da000404 	addi	r8,sp,16
 8001c04:	003d2006 	br	8001088 <__alt_data_end+0xfc001088>
 8001c08:	0025883a 	mov	r18,zero
 8001c0c:	dd803115 	stw	r22,196(sp)
 8001c10:	003cb306 	br	8000ee0 <__alt_data_end+0xfc000ee0>
 8001c14:	dc002617 	ldw	r16,152(sp)
 8001c18:	0401480e 	bge	zero,r16,800213c <___svfprintf_internal_r+0x172c>
 8001c1c:	db003117 	ldw	r12,196(sp)
 8001c20:	dac03317 	ldw	r11,204(sp)
 8001c24:	62e1883a 	add	r16,r12,r11
 8001c28:	db003417 	ldw	r12,208(sp)
 8001c2c:	5825883a 	mov	r18,r11
 8001c30:	62c0010e 	bge	r12,r11,8001c38 <___svfprintf_internal_r+0x1228>
 8001c34:	6025883a 	mov	r18,r12
 8001c38:	04800b0e 	bge	zero,r18,8001c68 <___svfprintf_internal_r+0x1258>
 8001c3c:	d8801f17 	ldw	r2,124(sp)
 8001c40:	dac03117 	ldw	r11,196(sp)
 8001c44:	1c87883a 	add	r3,r3,r18
 8001c48:	10800044 	addi	r2,r2,1
 8001c4c:	42c00015 	stw	r11,0(r8)
 8001c50:	44800115 	stw	r18,4(r8)
 8001c54:	d8c02015 	stw	r3,128(sp)
 8001c58:	d8801f15 	stw	r2,124(sp)
 8001c5c:	010001c4 	movi	r4,7
 8001c60:	20823f16 	blt	r4,r2,8002560 <___svfprintf_internal_r+0x1b50>
 8001c64:	42000204 	addi	r8,r8,8
 8001c68:	90023b16 	blt	r18,zero,8002558 <___svfprintf_internal_r+0x1b48>
 8001c6c:	db003417 	ldw	r12,208(sp)
 8001c70:	64a5c83a 	sub	r18,r12,r18
 8001c74:	0480780e 	bge	zero,r18,8001e58 <___svfprintf_internal_r+0x1448>
 8001c78:	05400404 	movi	r21,16
 8001c7c:	d8801f17 	ldw	r2,124(sp)
 8001c80:	ac81140e 	bge	r21,r18,80020d4 <___svfprintf_internal_r+0x16c4>
 8001c84:	01420074 	movhi	r5,2049
 8001c88:	294ab284 	addi	r5,r5,10954
 8001c8c:	d9402b15 	stw	r5,172(sp)
 8001c90:	070001c4 	movi	fp,7
 8001c94:	dcc02f17 	ldw	r19,188(sp)
 8001c98:	00000306 	br	8001ca8 <___svfprintf_internal_r+0x1298>
 8001c9c:	42000204 	addi	r8,r8,8
 8001ca0:	94bffc04 	addi	r18,r18,-16
 8001ca4:	ac810e0e 	bge	r21,r18,80020e0 <___svfprintf_internal_r+0x16d0>
 8001ca8:	18c00404 	addi	r3,r3,16
 8001cac:	10800044 	addi	r2,r2,1
 8001cb0:	45000015 	stw	r20,0(r8)
 8001cb4:	45400115 	stw	r21,4(r8)
 8001cb8:	d8c02015 	stw	r3,128(sp)
 8001cbc:	d8801f15 	stw	r2,124(sp)
 8001cc0:	e0bff60e 	bge	fp,r2,8001c9c <__alt_data_end+0xfc001c9c>
 8001cc4:	9809883a 	mov	r4,r19
 8001cc8:	b80b883a 	mov	r5,r23
 8001ccc:	b00d883a 	mov	r6,r22
 8001cd0:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001cd4:	103c161e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001cd8:	d8c02017 	ldw	r3,128(sp)
 8001cdc:	d8801f17 	ldw	r2,124(sp)
 8001ce0:	da000404 	addi	r8,sp,16
 8001ce4:	003fee06 	br	8001ca0 <__alt_data_end+0xfc001ca0>
 8001ce8:	d9002f17 	ldw	r4,188(sp)
 8001cec:	b80b883a 	mov	r5,r23
 8001cf0:	b00d883a 	mov	r6,r22
 8001cf4:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001cf8:	103c0d1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001cfc:	d8c02017 	ldw	r3,128(sp)
 8001d00:	d8802787 	ldb	r2,158(sp)
 8001d04:	da000404 	addi	r8,sp,16
 8001d08:	003cc406 	br	800101c <__alt_data_end+0xfc00101c>
 8001d0c:	657fffc4 	addi	r21,r12,-1
 8001d10:	057f750e 	bge	zero,r21,8001ae8 <__alt_data_end+0xfc001ae8>
 8001d14:	07000404 	movi	fp,16
 8001d18:	e542ef0e 	bge	fp,r21,80028d8 <___svfprintf_internal_r+0x1ec8>
 8001d1c:	01020074 	movhi	r4,2049
 8001d20:	210ab284 	addi	r4,r4,10954
 8001d24:	d9002b15 	stw	r4,172(sp)
 8001d28:	01c001c4 	movi	r7,7
 8001d2c:	dcc02f17 	ldw	r19,188(sp)
 8001d30:	00000306 	br	8001d40 <___svfprintf_internal_r+0x1330>
 8001d34:	ad7ffc04 	addi	r21,r21,-16
 8001d38:	94800204 	addi	r18,r18,8
 8001d3c:	e540130e 	bge	fp,r21,8001d8c <___svfprintf_internal_r+0x137c>
 8001d40:	18c00404 	addi	r3,r3,16
 8001d44:	84000044 	addi	r16,r16,1
 8001d48:	95000015 	stw	r20,0(r18)
 8001d4c:	97000115 	stw	fp,4(r18)
 8001d50:	d8c02015 	stw	r3,128(sp)
 8001d54:	dc001f15 	stw	r16,124(sp)
 8001d58:	3c3ff60e 	bge	r7,r16,8001d34 <__alt_data_end+0xfc001d34>
 8001d5c:	9809883a 	mov	r4,r19
 8001d60:	b80b883a 	mov	r5,r23
 8001d64:	b00d883a 	mov	r6,r22
 8001d68:	d9c03e15 	stw	r7,248(sp)
 8001d6c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001d70:	d9c03e17 	ldw	r7,248(sp)
 8001d74:	103bee1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001d78:	ad7ffc04 	addi	r21,r21,-16
 8001d7c:	d8c02017 	ldw	r3,128(sp)
 8001d80:	dc001f17 	ldw	r16,124(sp)
 8001d84:	dc800404 	addi	r18,sp,16
 8001d88:	e57fed16 	blt	fp,r21,8001d40 <__alt_data_end+0xfc001d40>
 8001d8c:	dac02b17 	ldw	r11,172(sp)
 8001d90:	1d47883a 	add	r3,r3,r21
 8001d94:	84000044 	addi	r16,r16,1
 8001d98:	92c00015 	stw	r11,0(r18)
 8001d9c:	95400115 	stw	r21,4(r18)
 8001da0:	d8c02015 	stw	r3,128(sp)
 8001da4:	dc001f15 	stw	r16,124(sp)
 8001da8:	008001c4 	movi	r2,7
 8001dac:	143f4d0e 	bge	r2,r16,8001ae4 <__alt_data_end+0xfc001ae4>
 8001db0:	d9002f17 	ldw	r4,188(sp)
 8001db4:	b80b883a 	mov	r5,r23
 8001db8:	b00d883a 	mov	r6,r22
 8001dbc:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001dc0:	103bdb1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001dc4:	d8c02017 	ldw	r3,128(sp)
 8001dc8:	dc001f17 	ldw	r16,124(sp)
 8001dcc:	dc800404 	addi	r18,sp,16
 8001dd0:	003f4506 	br	8001ae8 <__alt_data_end+0xfc001ae8>
 8001dd4:	00800084 	movi	r2,2
 8001dd8:	9f06b03a 	or	r3,r19,fp
 8001ddc:	003d3806 	br	80012c0 <__alt_data_end+0xfc0012c0>
 8001de0:	dac02d17 	ldw	r11,180(sp)
 8001de4:	0039883a 	mov	fp,zero
 8001de8:	0005883a 	mov	r2,zero
 8001dec:	5cc00017 	ldw	r19,0(r11)
 8001df0:	5ac00104 	addi	r11,r11,4
 8001df4:	dac02d15 	stw	r11,180(sp)
 8001df8:	9807883a 	mov	r3,r19
 8001dfc:	003d3006 	br	80012c0 <__alt_data_end+0xfc0012c0>
 8001e00:	1cc00017 	ldw	r19,0(r3)
 8001e04:	dac02d17 	ldw	r11,180(sp)
 8001e08:	9839d7fa 	srai	fp,r19,31
 8001e0c:	5ac00104 	addi	r11,r11,4
 8001e10:	dac02d15 	stw	r11,180(sp)
 8001e14:	e005883a 	mov	r2,fp
 8001e18:	003c0a06 	br	8000e44 <__alt_data_end+0xfc000e44>
 8001e1c:	db002d17 	ldw	r12,180(sp)
 8001e20:	0039883a 	mov	fp,zero
 8001e24:	00800044 	movi	r2,1
 8001e28:	64c00017 	ldw	r19,0(r12)
 8001e2c:	63000104 	addi	r12,r12,4
 8001e30:	db002d15 	stw	r12,180(sp)
 8001e34:	9807883a 	mov	r3,r19
 8001e38:	003d2106 	br	80012c0 <__alt_data_end+0xfc0012c0>
 8001e3c:	d9002f17 	ldw	r4,188(sp)
 8001e40:	b80b883a 	mov	r5,r23
 8001e44:	b00d883a 	mov	r6,r22
 8001e48:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001e4c:	103bb81e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001e50:	d8c02017 	ldw	r3,128(sp)
 8001e54:	da000404 	addi	r8,sp,16
 8001e58:	db003117 	ldw	r12,196(sp)
 8001e5c:	dac03417 	ldw	r11,208(sp)
 8001e60:	d8802617 	ldw	r2,152(sp)
 8001e64:	62e5883a 	add	r18,r12,r11
 8001e68:	db003317 	ldw	r12,204(sp)
 8001e6c:	13000216 	blt	r2,r12,8001e78 <___svfprintf_internal_r+0x1468>
 8001e70:	8900004c 	andi	r4,r17,1
 8001e74:	20000c26 	beq	r4,zero,8001ea8 <___svfprintf_internal_r+0x1498>
 8001e78:	dac03917 	ldw	r11,228(sp)
 8001e7c:	d9001f17 	ldw	r4,124(sp)
 8001e80:	db003517 	ldw	r12,212(sp)
 8001e84:	1ac7883a 	add	r3,r3,r11
 8001e88:	21000044 	addi	r4,r4,1
 8001e8c:	43000015 	stw	r12,0(r8)
 8001e90:	42c00115 	stw	r11,4(r8)
 8001e94:	d8c02015 	stw	r3,128(sp)
 8001e98:	d9001f15 	stw	r4,124(sp)
 8001e9c:	014001c4 	movi	r5,7
 8001ea0:	2901b716 	blt	r5,r4,8002580 <___svfprintf_internal_r+0x1b70>
 8001ea4:	42000204 	addi	r8,r8,8
 8001ea8:	dac03317 	ldw	r11,204(sp)
 8001eac:	8489c83a 	sub	r4,r16,r18
 8001eb0:	5885c83a 	sub	r2,r11,r2
 8001eb4:	1021883a 	mov	r16,r2
 8001eb8:	2080010e 	bge	r4,r2,8001ec0 <___svfprintf_internal_r+0x14b0>
 8001ebc:	2021883a 	mov	r16,r4
 8001ec0:	04000a0e 	bge	zero,r16,8001eec <___svfprintf_internal_r+0x14dc>
 8001ec4:	d9001f17 	ldw	r4,124(sp)
 8001ec8:	1c07883a 	add	r3,r3,r16
 8001ecc:	44800015 	stw	r18,0(r8)
 8001ed0:	21000044 	addi	r4,r4,1
 8001ed4:	44000115 	stw	r16,4(r8)
 8001ed8:	d8c02015 	stw	r3,128(sp)
 8001edc:	d9001f15 	stw	r4,124(sp)
 8001ee0:	014001c4 	movi	r5,7
 8001ee4:	2901bf16 	blt	r5,r4,80025e4 <___svfprintf_internal_r+0x1bd4>
 8001ee8:	42000204 	addi	r8,r8,8
 8001eec:	8001bb16 	blt	r16,zero,80025dc <___svfprintf_internal_r+0x1bcc>
 8001ef0:	1421c83a 	sub	r16,r2,r16
 8001ef4:	043ca80e 	bge	zero,r16,8001198 <__alt_data_end+0xfc001198>
 8001ef8:	04800404 	movi	r18,16
 8001efc:	d8801f17 	ldw	r2,124(sp)
 8001f00:	943f050e 	bge	r18,r16,8001b18 <__alt_data_end+0xfc001b18>
 8001f04:	01420074 	movhi	r5,2049
 8001f08:	294ab284 	addi	r5,r5,10954
 8001f0c:	d9402b15 	stw	r5,172(sp)
 8001f10:	054001c4 	movi	r21,7
 8001f14:	dcc02f17 	ldw	r19,188(sp)
 8001f18:	00000306 	br	8001f28 <___svfprintf_internal_r+0x1518>
 8001f1c:	42000204 	addi	r8,r8,8
 8001f20:	843ffc04 	addi	r16,r16,-16
 8001f24:	943eff0e 	bge	r18,r16,8001b24 <__alt_data_end+0xfc001b24>
 8001f28:	18c00404 	addi	r3,r3,16
 8001f2c:	10800044 	addi	r2,r2,1
 8001f30:	45000015 	stw	r20,0(r8)
 8001f34:	44800115 	stw	r18,4(r8)
 8001f38:	d8c02015 	stw	r3,128(sp)
 8001f3c:	d8801f15 	stw	r2,124(sp)
 8001f40:	a8bff60e 	bge	r21,r2,8001f1c <__alt_data_end+0xfc001f1c>
 8001f44:	9809883a 	mov	r4,r19
 8001f48:	b80b883a 	mov	r5,r23
 8001f4c:	b00d883a 	mov	r6,r22
 8001f50:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001f54:	103b761e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001f58:	d8c02017 	ldw	r3,128(sp)
 8001f5c:	d8801f17 	ldw	r2,124(sp)
 8001f60:	da000404 	addi	r8,sp,16
 8001f64:	003fee06 	br	8001f20 <__alt_data_end+0xfc001f20>
 8001f68:	8888703a 	and	r4,r17,r2
 8001f6c:	203eb31e 	bne	r4,zero,8001a3c <__alt_data_end+0xfc001a3c>
 8001f70:	dc001f17 	ldw	r16,124(sp)
 8001f74:	db003117 	ldw	r12,196(sp)
 8001f78:	40800115 	stw	r2,4(r8)
 8001f7c:	84000044 	addi	r16,r16,1
 8001f80:	43000015 	stw	r12,0(r8)
 8001f84:	d8c02015 	stw	r3,128(sp)
 8001f88:	dc001f15 	stw	r16,124(sp)
 8001f8c:	008001c4 	movi	r2,7
 8001f90:	143f8716 	blt	r2,r16,8001db0 <__alt_data_end+0xfc001db0>
 8001f94:	44800204 	addi	r18,r8,8
 8001f98:	003ed306 	br	8001ae8 <__alt_data_end+0xfc001ae8>
 8001f9c:	d9002f17 	ldw	r4,188(sp)
 8001fa0:	b80b883a 	mov	r5,r23
 8001fa4:	b00d883a 	mov	r6,r22
 8001fa8:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001fac:	103b601e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001fb0:	d8c02017 	ldw	r3,128(sp)
 8001fb4:	dc001f17 	ldw	r16,124(sp)
 8001fb8:	da000404 	addi	r8,sp,16
 8001fbc:	003eaa06 	br	8001a68 <__alt_data_end+0xfc001a68>
 8001fc0:	d9002f17 	ldw	r4,188(sp)
 8001fc4:	b80b883a 	mov	r5,r23
 8001fc8:	b00d883a 	mov	r6,r22
 8001fcc:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001fd0:	103b571e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001fd4:	d8c02017 	ldw	r3,128(sp)
 8001fd8:	dc001f17 	ldw	r16,124(sp)
 8001fdc:	dc800404 	addi	r18,sp,16
 8001fe0:	003eac06 	br	8001a94 <__alt_data_end+0xfc001a94>
 8001fe4:	d9002f17 	ldw	r4,188(sp)
 8001fe8:	b80b883a 	mov	r5,r23
 8001fec:	b00d883a 	mov	r6,r22
 8001ff0:	8008f4c0 	call	8008f4c <__ssprint_r>
 8001ff4:	103b4e1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8001ff8:	d8c02017 	ldw	r3,128(sp)
 8001ffc:	da000404 	addi	r8,sp,16
 8002000:	003c2406 	br	8001094 <__alt_data_end+0xfc001094>
 8002004:	da004015 	stw	r8,256(sp)
 8002008:	da403f15 	stw	r9,252(sp)
 800200c:	8008ca40 	call	8008ca4 <__fpclassifyd>
 8002010:	da004017 	ldw	r8,256(sp)
 8002014:	da403f17 	ldw	r9,252(sp)
 8002018:	1000951e 	bne	r2,zero,8002270 <___svfprintf_internal_r+0x1860>
 800201c:	008011c4 	movi	r2,71
 8002020:	1400fb16 	blt	r2,r16,8002410 <___svfprintf_internal_r+0x1a00>
 8002024:	03020074 	movhi	r12,2049
 8002028:	630aa404 	addi	r12,r12,10896
 800202c:	db003115 	stw	r12,196(sp)
 8002030:	00c000c4 	movi	r3,3
 8002034:	00bfdfc4 	movi	r2,-129
 8002038:	d8c02a15 	stw	r3,168(sp)
 800203c:	88a2703a 	and	r17,r17,r2
 8002040:	dd402783 	ldbu	r21,158(sp)
 8002044:	dcc02d15 	stw	r19,180(sp)
 8002048:	1825883a 	mov	r18,r3
 800204c:	d8003215 	stw	zero,200(sp)
 8002050:	d8003415 	stw	zero,208(sp)
 8002054:	003ba706 	br	8000ef4 <__alt_data_end+0xfc000ef4>
 8002058:	8880040c 	andi	r2,r17,16
 800205c:	1000091e 	bne	r2,zero,8002084 <___svfprintf_internal_r+0x1674>
 8002060:	8c40100c 	andi	r17,r17,64
 8002064:	88000726 	beq	r17,zero,8002084 <___svfprintf_internal_r+0x1674>
 8002068:	db002d17 	ldw	r12,180(sp)
 800206c:	dac03017 	ldw	r11,192(sp)
 8002070:	60800017 	ldw	r2,0(r12)
 8002074:	63000104 	addi	r12,r12,4
 8002078:	db002d15 	stw	r12,180(sp)
 800207c:	12c0000d 	sth	r11,0(r2)
 8002080:	003a8f06 	br	8000ac0 <__alt_data_end+0xfc000ac0>
 8002084:	db002d17 	ldw	r12,180(sp)
 8002088:	dac03017 	ldw	r11,192(sp)
 800208c:	60800017 	ldw	r2,0(r12)
 8002090:	63000104 	addi	r12,r12,4
 8002094:	db002d15 	stw	r12,180(sp)
 8002098:	12c00015 	stw	r11,0(r2)
 800209c:	003a8806 	br	8000ac0 <__alt_data_end+0xfc000ac0>
 80020a0:	88c0100c 	andi	r3,r17,64
 80020a4:	1800e926 	beq	r3,zero,800244c <___svfprintf_internal_r+0x1a3c>
 80020a8:	dac02d17 	ldw	r11,180(sp)
 80020ac:	14c0000b 	ldhu	r19,0(r2)
 80020b0:	0039883a 	mov	fp,zero
 80020b4:	5ac00104 	addi	r11,r11,4
 80020b8:	dac02d15 	stw	r11,180(sp)
 80020bc:	003d1406 	br	8001510 <__alt_data_end+0xfc001510>
 80020c0:	1c000007 	ldb	r16,0(r3)
 80020c4:	1805883a 	mov	r2,r3
 80020c8:	003aa706 	br	8000b68 <__alt_data_end+0xfc000b68>
 80020cc:	00800084 	movi	r2,2
 80020d0:	003c7b06 	br	80012c0 <__alt_data_end+0xfc0012c0>
 80020d4:	01020074 	movhi	r4,2049
 80020d8:	210ab284 	addi	r4,r4,10954
 80020dc:	d9002b15 	stw	r4,172(sp)
 80020e0:	dac02b17 	ldw	r11,172(sp)
 80020e4:	1c87883a 	add	r3,r3,r18
 80020e8:	10800044 	addi	r2,r2,1
 80020ec:	42c00015 	stw	r11,0(r8)
 80020f0:	44800115 	stw	r18,4(r8)
 80020f4:	d8c02015 	stw	r3,128(sp)
 80020f8:	d8801f15 	stw	r2,124(sp)
 80020fc:	010001c4 	movi	r4,7
 8002100:	20bf4e16 	blt	r4,r2,8001e3c <__alt_data_end+0xfc001e3c>
 8002104:	42000204 	addi	r8,r8,8
 8002108:	003f5306 	br	8001e58 <__alt_data_end+0xfc001e58>
 800210c:	01020074 	movhi	r4,2049
 8002110:	210ab284 	addi	r4,r4,10954
 8002114:	d9002b15 	stw	r4,172(sp)
 8002118:	003c0806 	br	800113c <__alt_data_end+0xfc00113c>
 800211c:	d9002f17 	ldw	r4,188(sp)
 8002120:	b80b883a 	mov	r5,r23
 8002124:	b00d883a 	mov	r6,r22
 8002128:	8008f4c0 	call	8008f4c <__ssprint_r>
 800212c:	103b001e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8002130:	d8c02017 	ldw	r3,128(sp)
 8002134:	da000404 	addi	r8,sp,16
 8002138:	003dc606 	br	8001854 <__alt_data_end+0xfc001854>
 800213c:	d8801f17 	ldw	r2,124(sp)
 8002140:	03020074 	movhi	r12,2049
 8002144:	01000044 	movi	r4,1
 8002148:	18c00044 	addi	r3,r3,1
 800214c:	10800044 	addi	r2,r2,1
 8002150:	630ab204 	addi	r12,r12,10952
 8002154:	41000115 	stw	r4,4(r8)
 8002158:	43000015 	stw	r12,0(r8)
 800215c:	d8c02015 	stw	r3,128(sp)
 8002160:	d8801f15 	stw	r2,124(sp)
 8002164:	010001c4 	movi	r4,7
 8002168:	2080ad16 	blt	r4,r2,8002420 <___svfprintf_internal_r+0x1a10>
 800216c:	42000204 	addi	r8,r8,8
 8002170:	8000041e 	bne	r16,zero,8002184 <___svfprintf_internal_r+0x1774>
 8002174:	dac03317 	ldw	r11,204(sp)
 8002178:	5800021e 	bne	r11,zero,8002184 <___svfprintf_internal_r+0x1774>
 800217c:	8880004c 	andi	r2,r17,1
 8002180:	103c0526 	beq	r2,zero,8001198 <__alt_data_end+0xfc001198>
 8002184:	db003917 	ldw	r12,228(sp)
 8002188:	d8801f17 	ldw	r2,124(sp)
 800218c:	dac03517 	ldw	r11,212(sp)
 8002190:	1b07883a 	add	r3,r3,r12
 8002194:	10800044 	addi	r2,r2,1
 8002198:	42c00015 	stw	r11,0(r8)
 800219c:	43000115 	stw	r12,4(r8)
 80021a0:	d8c02015 	stw	r3,128(sp)
 80021a4:	d8801f15 	stw	r2,124(sp)
 80021a8:	010001c4 	movi	r4,7
 80021ac:	20818816 	blt	r4,r2,80027d0 <___svfprintf_internal_r+0x1dc0>
 80021b0:	42000204 	addi	r8,r8,8
 80021b4:	0421c83a 	sub	r16,zero,r16
 80021b8:	0400bc0e 	bge	zero,r16,80024ac <___svfprintf_internal_r+0x1a9c>
 80021bc:	04800404 	movi	r18,16
 80021c0:	9400f80e 	bge	r18,r16,80025a4 <___svfprintf_internal_r+0x1b94>
 80021c4:	01020074 	movhi	r4,2049
 80021c8:	210ab284 	addi	r4,r4,10954
 80021cc:	d9002b15 	stw	r4,172(sp)
 80021d0:	054001c4 	movi	r21,7
 80021d4:	dcc02f17 	ldw	r19,188(sp)
 80021d8:	00000306 	br	80021e8 <___svfprintf_internal_r+0x17d8>
 80021dc:	42000204 	addi	r8,r8,8
 80021e0:	843ffc04 	addi	r16,r16,-16
 80021e4:	9400f20e 	bge	r18,r16,80025b0 <___svfprintf_internal_r+0x1ba0>
 80021e8:	18c00404 	addi	r3,r3,16
 80021ec:	10800044 	addi	r2,r2,1
 80021f0:	45000015 	stw	r20,0(r8)
 80021f4:	44800115 	stw	r18,4(r8)
 80021f8:	d8c02015 	stw	r3,128(sp)
 80021fc:	d8801f15 	stw	r2,124(sp)
 8002200:	a8bff60e 	bge	r21,r2,80021dc <__alt_data_end+0xfc0021dc>
 8002204:	9809883a 	mov	r4,r19
 8002208:	b80b883a 	mov	r5,r23
 800220c:	b00d883a 	mov	r6,r22
 8002210:	8008f4c0 	call	8008f4c <__ssprint_r>
 8002214:	103ac61e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8002218:	d8c02017 	ldw	r3,128(sp)
 800221c:	d8801f17 	ldw	r2,124(sp)
 8002220:	da000404 	addi	r8,sp,16
 8002224:	003fee06 	br	80021e0 <__alt_data_end+0xfc0021e0>
 8002228:	db002e17 	ldw	r12,184(sp)
 800222c:	1805883a 	mov	r2,r3
 8002230:	dac02d15 	stw	r11,180(sp)
 8002234:	0319c83a 	sub	r12,zero,r12
 8002238:	db002e15 	stw	r12,184(sp)
 800223c:	003ad106 	br	8000d84 <__alt_data_end+0xfc000d84>
 8002240:	18800044 	addi	r2,r3,1
 8002244:	8c400814 	ori	r17,r17,32
 8002248:	1c000047 	ldb	r16,1(r3)
 800224c:	003a4606 	br	8000b68 <__alt_data_end+0xfc000b68>
 8002250:	d9002f17 	ldw	r4,188(sp)
 8002254:	b80b883a 	mov	r5,r23
 8002258:	b00d883a 	mov	r6,r22
 800225c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8002260:	103ab31e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8002264:	d8c02017 	ldw	r3,128(sp)
 8002268:	da000404 	addi	r8,sp,16
 800226c:	003d8a06 	br	8001898 <__alt_data_end+0xfc001898>
 8002270:	057ff7c4 	movi	r21,-33
 8002274:	00bfffc4 	movi	r2,-1
 8002278:	856a703a 	and	r21,r16,r21
 800227c:	48807126 	beq	r9,r2,8002444 <___svfprintf_internal_r+0x1a34>
 8002280:	008011c4 	movi	r2,71
 8002284:	a8814f26 	beq	r21,r2,80027c4 <___svfprintf_internal_r+0x1db4>
 8002288:	db003817 	ldw	r12,224(sp)
 800228c:	8ac04014 	ori	r11,r17,256
 8002290:	dac02d15 	stw	r11,180(sp)
 8002294:	60015816 	blt	r12,zero,80027f8 <___svfprintf_internal_r+0x1de8>
 8002298:	dc803817 	ldw	r18,224(sp)
 800229c:	d8002a05 	stb	zero,168(sp)
 80022a0:	00801984 	movi	r2,102
 80022a4:	80808c26 	beq	r16,r2,80024d8 <___svfprintf_internal_r+0x1ac8>
 80022a8:	00801184 	movi	r2,70
 80022ac:	80808a26 	beq	r16,r2,80024d8 <___svfprintf_internal_r+0x1ac8>
 80022b0:	00801144 	movi	r2,69
 80022b4:	a8815426 	beq	r21,r2,8002808 <___svfprintf_internal_r+0x1df8>
 80022b8:	4839883a 	mov	fp,r9
 80022bc:	d8802604 	addi	r2,sp,152
 80022c0:	d8800115 	stw	r2,4(sp)
 80022c4:	d9002f17 	ldw	r4,188(sp)
 80022c8:	d8802504 	addi	r2,sp,148
 80022cc:	d9403717 	ldw	r5,220(sp)
 80022d0:	d8800215 	stw	r2,8(sp)
 80022d4:	d8802104 	addi	r2,sp,132
 80022d8:	df000015 	stw	fp,0(sp)
 80022dc:	d8800315 	stw	r2,12(sp)
 80022e0:	900d883a 	mov	r6,r18
 80022e4:	01c00084 	movi	r7,2
 80022e8:	da004015 	stw	r8,256(sp)
 80022ec:	da403f15 	stw	r9,252(sp)
 80022f0:	8004cf00 	call	8004cf0 <_dtoa_r>
 80022f4:	d8803115 	stw	r2,196(sp)
 80022f8:	008019c4 	movi	r2,103
 80022fc:	da004017 	ldw	r8,256(sp)
 8002300:	da403f17 	ldw	r9,252(sp)
 8002304:	80800226 	beq	r16,r2,8002310 <___svfprintf_internal_r+0x1900>
 8002308:	008011c4 	movi	r2,71
 800230c:	8080841e 	bne	r16,r2,8002520 <___svfprintf_internal_r+0x1b10>
 8002310:	8880004c 	andi	r2,r17,1
 8002314:	10015126 	beq	r2,zero,800285c <___svfprintf_internal_r+0x1e4c>
 8002318:	db003117 	ldw	r12,196(sp)
 800231c:	6715883a 	add	r10,r12,fp
 8002320:	d9003717 	ldw	r4,220(sp)
 8002324:	900b883a 	mov	r5,r18
 8002328:	000d883a 	mov	r6,zero
 800232c:	000f883a 	mov	r7,zero
 8002330:	da004015 	stw	r8,256(sp)
 8002334:	da403f15 	stw	r9,252(sp)
 8002338:	da803e15 	stw	r10,248(sp)
 800233c:	800e8cc0 	call	800e8cc <__eqdf2>
 8002340:	da004017 	ldw	r8,256(sp)
 8002344:	da403f17 	ldw	r9,252(sp)
 8002348:	da803e17 	ldw	r10,248(sp)
 800234c:	1000d926 	beq	r2,zero,80026b4 <___svfprintf_internal_r+0x1ca4>
 8002350:	d8802117 	ldw	r2,132(sp)
 8002354:	1280062e 	bgeu	r2,r10,8002370 <___svfprintf_internal_r+0x1960>
 8002358:	01000c04 	movi	r4,48
 800235c:	10c00044 	addi	r3,r2,1
 8002360:	d8c02115 	stw	r3,132(sp)
 8002364:	11000005 	stb	r4,0(r2)
 8002368:	d8802117 	ldw	r2,132(sp)
 800236c:	12bffb36 	bltu	r2,r10,800235c <__alt_data_end+0xfc00235c>
 8002370:	db003117 	ldw	r12,196(sp)
 8002374:	1305c83a 	sub	r2,r2,r12
 8002378:	d8803315 	stw	r2,204(sp)
 800237c:	008011c4 	movi	r2,71
 8002380:	a880b626 	beq	r21,r2,800265c <___svfprintf_internal_r+0x1c4c>
 8002384:	00801944 	movi	r2,101
 8002388:	14017e0e 	bge	r2,r16,8002984 <___svfprintf_internal_r+0x1f74>
 800238c:	00801984 	movi	r2,102
 8002390:	80812826 	beq	r16,r2,8002834 <___svfprintf_internal_r+0x1e24>
 8002394:	db002617 	ldw	r12,152(sp)
 8002398:	db003415 	stw	r12,208(sp)
 800239c:	db003417 	ldw	r12,208(sp)
 80023a0:	dac03317 	ldw	r11,204(sp)
 80023a4:	62c11a16 	blt	r12,r11,8002810 <___svfprintf_internal_r+0x1e00>
 80023a8:	8c40004c 	andi	r17,r17,1
 80023ac:	88013d1e 	bne	r17,zero,80028a4 <___svfprintf_internal_r+0x1e94>
 80023b0:	6005883a 	mov	r2,r12
 80023b4:	60012716 	blt	r12,zero,8002854 <___svfprintf_internal_r+0x1e44>
 80023b8:	dc803417 	ldw	r18,208(sp)
 80023bc:	df002a07 	ldb	fp,168(sp)
 80023c0:	e000b01e 	bne	fp,zero,8002684 <___svfprintf_internal_r+0x1c74>
 80023c4:	dc402d17 	ldw	r17,180(sp)
 80023c8:	dd402783 	ldbu	r21,158(sp)
 80023cc:	d8802a15 	stw	r2,168(sp)
 80023d0:	dcc02d15 	stw	r19,180(sp)
 80023d4:	d8003215 	stw	zero,200(sp)
 80023d8:	003ac606 	br	8000ef4 <__alt_data_end+0xfc000ef4>
 80023dc:	00820074 	movhi	r2,2049
 80023e0:	108aa204 	addi	r2,r2,10888
 80023e4:	d8803115 	stw	r2,196(sp)
 80023e8:	003be506 	br	8001380 <__alt_data_end+0xfc001380>
 80023ec:	d9002f17 	ldw	r4,188(sp)
 80023f0:	04001004 	movi	r16,64
 80023f4:	800b883a 	mov	r5,r16
 80023f8:	800722c0 	call	800722c <_malloc_r>
 80023fc:	b8800015 	stw	r2,0(r23)
 8002400:	b8800415 	stw	r2,16(r23)
 8002404:	10016126 	beq	r2,zero,800298c <___svfprintf_internal_r+0x1f7c>
 8002408:	bc000515 	stw	r16,20(r23)
 800240c:	00399a06 	br	8000a78 <__alt_data_end+0xfc000a78>
 8002410:	00820074 	movhi	r2,2049
 8002414:	108aa504 	addi	r2,r2,10900
 8002418:	d8803115 	stw	r2,196(sp)
 800241c:	003f0406 	br	8002030 <__alt_data_end+0xfc002030>
 8002420:	d9002f17 	ldw	r4,188(sp)
 8002424:	b80b883a 	mov	r5,r23
 8002428:	b00d883a 	mov	r6,r22
 800242c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8002430:	103a3f1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8002434:	dc002617 	ldw	r16,152(sp)
 8002438:	d8c02017 	ldw	r3,128(sp)
 800243c:	da000404 	addi	r8,sp,16
 8002440:	003f4b06 	br	8002170 <__alt_data_end+0xfc002170>
 8002444:	02400184 	movi	r9,6
 8002448:	003f8f06 	br	8002288 <__alt_data_end+0xfc002288>
 800244c:	db002d17 	ldw	r12,180(sp)
 8002450:	14c00017 	ldw	r19,0(r2)
 8002454:	0039883a 	mov	fp,zero
 8002458:	63000104 	addi	r12,r12,4
 800245c:	db002d15 	stw	r12,180(sp)
 8002460:	003c2b06 	br	8001510 <__alt_data_end+0xfc001510>
 8002464:	d8c03117 	ldw	r3,196(sp)
 8002468:	b0e5c83a 	sub	r18,r22,r3
 800246c:	003a9c06 	br	8000ee0 <__alt_data_end+0xfc000ee0>
 8002470:	da004015 	stw	r8,256(sp)
 8002474:	80009780 	call	8000978 <strlen>
 8002478:	1025883a 	mov	r18,r2
 800247c:	da004017 	ldw	r8,256(sp)
 8002480:	903c450e 	bge	r18,zero,8001598 <__alt_data_end+0xfc001598>
 8002484:	0005883a 	mov	r2,zero
 8002488:	003c4306 	br	8001598 <__alt_data_end+0xfc001598>
 800248c:	d9002f17 	ldw	r4,188(sp)
 8002490:	b80b883a 	mov	r5,r23
 8002494:	b00d883a 	mov	r6,r22
 8002498:	8008f4c0 	call	8008f4c <__ssprint_r>
 800249c:	103a241e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 80024a0:	d8c02017 	ldw	r3,128(sp)
 80024a4:	d8801f17 	ldw	r2,124(sp)
 80024a8:	da000404 	addi	r8,sp,16
 80024ac:	db003317 	ldw	r12,204(sp)
 80024b0:	dac03117 	ldw	r11,196(sp)
 80024b4:	10800044 	addi	r2,r2,1
 80024b8:	60c7883a 	add	r3,r12,r3
 80024bc:	42c00015 	stw	r11,0(r8)
 80024c0:	43000115 	stw	r12,4(r8)
 80024c4:	d8c02015 	stw	r3,128(sp)
 80024c8:	d8801f15 	stw	r2,124(sp)
 80024cc:	010001c4 	movi	r4,7
 80024d0:	20bb300e 	bge	r4,r2,8001194 <__alt_data_end+0xfc001194>
 80024d4:	003d9c06 	br	8001b48 <__alt_data_end+0xfc001b48>
 80024d8:	d8802604 	addi	r2,sp,152
 80024dc:	d8800115 	stw	r2,4(sp)
 80024e0:	d9002f17 	ldw	r4,188(sp)
 80024e4:	d8802504 	addi	r2,sp,148
 80024e8:	d9403717 	ldw	r5,220(sp)
 80024ec:	d8800215 	stw	r2,8(sp)
 80024f0:	d8802104 	addi	r2,sp,132
 80024f4:	da400015 	stw	r9,0(sp)
 80024f8:	d8800315 	stw	r2,12(sp)
 80024fc:	900d883a 	mov	r6,r18
 8002500:	01c000c4 	movi	r7,3
 8002504:	da004015 	stw	r8,256(sp)
 8002508:	da403f15 	stw	r9,252(sp)
 800250c:	8004cf00 	call	8004cf0 <_dtoa_r>
 8002510:	da403f17 	ldw	r9,252(sp)
 8002514:	da004017 	ldw	r8,256(sp)
 8002518:	d8803115 	stw	r2,196(sp)
 800251c:	4839883a 	mov	fp,r9
 8002520:	dac03117 	ldw	r11,196(sp)
 8002524:	00801184 	movi	r2,70
 8002528:	5f15883a 	add	r10,r11,fp
 800252c:	a8bf7c1e 	bne	r21,r2,8002320 <__alt_data_end+0xfc002320>
 8002530:	59000007 	ldb	r4,0(r11)
 8002534:	00800c04 	movi	r2,48
 8002538:	2080ca26 	beq	r4,r2,8002864 <___svfprintf_internal_r+0x1e54>
 800253c:	d8c02617 	ldw	r3,152(sp)
 8002540:	50d5883a 	add	r10,r10,r3
 8002544:	003f7606 	br	8002320 <__alt_data_end+0xfc002320>
 8002548:	01020074 	movhi	r4,2049
 800254c:	210ab684 	addi	r4,r4,10970
 8002550:	d9003615 	stw	r4,216(sp)
 8002554:	003aa606 	br	8000ff0 <__alt_data_end+0xfc000ff0>
 8002558:	0025883a 	mov	r18,zero
 800255c:	003dc306 	br	8001c6c <__alt_data_end+0xfc001c6c>
 8002560:	d9002f17 	ldw	r4,188(sp)
 8002564:	b80b883a 	mov	r5,r23
 8002568:	b00d883a 	mov	r6,r22
 800256c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8002570:	1039ef1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8002574:	d8c02017 	ldw	r3,128(sp)
 8002578:	da000404 	addi	r8,sp,16
 800257c:	003dba06 	br	8001c68 <__alt_data_end+0xfc001c68>
 8002580:	d9002f17 	ldw	r4,188(sp)
 8002584:	b80b883a 	mov	r5,r23
 8002588:	b00d883a 	mov	r6,r22
 800258c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8002590:	1039e71e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 8002594:	d8802617 	ldw	r2,152(sp)
 8002598:	d8c02017 	ldw	r3,128(sp)
 800259c:	da000404 	addi	r8,sp,16
 80025a0:	003e4106 	br	8001ea8 <__alt_data_end+0xfc001ea8>
 80025a4:	03020074 	movhi	r12,2049
 80025a8:	630ab284 	addi	r12,r12,10954
 80025ac:	db002b15 	stw	r12,172(sp)
 80025b0:	dac02b17 	ldw	r11,172(sp)
 80025b4:	1c07883a 	add	r3,r3,r16
 80025b8:	10800044 	addi	r2,r2,1
 80025bc:	42c00015 	stw	r11,0(r8)
 80025c0:	44000115 	stw	r16,4(r8)
 80025c4:	d8c02015 	stw	r3,128(sp)
 80025c8:	d8801f15 	stw	r2,124(sp)
 80025cc:	010001c4 	movi	r4,7
 80025d0:	20bfae16 	blt	r4,r2,800248c <__alt_data_end+0xfc00248c>
 80025d4:	42000204 	addi	r8,r8,8
 80025d8:	003fb406 	br	80024ac <__alt_data_end+0xfc0024ac>
 80025dc:	0021883a 	mov	r16,zero
 80025e0:	003e4306 	br	8001ef0 <__alt_data_end+0xfc001ef0>
 80025e4:	d9002f17 	ldw	r4,188(sp)
 80025e8:	b80b883a 	mov	r5,r23
 80025ec:	b00d883a 	mov	r6,r22
 80025f0:	8008f4c0 	call	8008f4c <__ssprint_r>
 80025f4:	1039ce1e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 80025f8:	d8802617 	ldw	r2,152(sp)
 80025fc:	db003317 	ldw	r12,204(sp)
 8002600:	d8c02017 	ldw	r3,128(sp)
 8002604:	da000404 	addi	r8,sp,16
 8002608:	6085c83a 	sub	r2,r12,r2
 800260c:	003e3706 	br	8001eec <__alt_data_end+0xfc001eec>
 8002610:	00800184 	movi	r2,6
 8002614:	1240012e 	bgeu	r2,r9,800261c <___svfprintf_internal_r+0x1c0c>
 8002618:	1013883a 	mov	r9,r2
 800261c:	4825883a 	mov	r18,r9
 8002620:	4805883a 	mov	r2,r9
 8002624:	4800a416 	blt	r9,zero,80028b8 <___svfprintf_internal_r+0x1ea8>
 8002628:	d8802a15 	stw	r2,168(sp)
 800262c:	00820074 	movhi	r2,2049
 8002630:	108ab004 	addi	r2,r2,10944
 8002634:	d8803115 	stw	r2,196(sp)
 8002638:	dcc02d15 	stw	r19,180(sp)
 800263c:	d8003215 	stw	zero,200(sp)
 8002640:	d8003415 	stw	zero,208(sp)
 8002644:	0005883a 	mov	r2,zero
 8002648:	003a3106 	br	8000f10 <__alt_data_end+0xfc000f10>
 800264c:	03020074 	movhi	r12,2049
 8002650:	630ab684 	addi	r12,r12,10970
 8002654:	db003615 	stw	r12,216(sp)
 8002658:	003af406 	br	800122c <__alt_data_end+0xfc00122c>
 800265c:	d8c02617 	ldw	r3,152(sp)
 8002660:	00bfff44 	movi	r2,-3
 8002664:	18801516 	blt	r3,r2,80026bc <___svfprintf_internal_r+0x1cac>
 8002668:	48c01416 	blt	r9,r3,80026bc <___svfprintf_internal_r+0x1cac>
 800266c:	d8c03415 	stw	r3,208(sp)
 8002670:	040019c4 	movi	r16,103
 8002674:	003f4906 	br	800239c <__alt_data_end+0xfc00239c>
 8002678:	05400b44 	movi	r21,45
 800267c:	dd402785 	stb	r21,158(sp)
 8002680:	003b3a06 	br	800136c <__alt_data_end+0xfc00136c>
 8002684:	00c00b44 	movi	r3,45
 8002688:	d8802a15 	stw	r2,168(sp)
 800268c:	dc402d17 	ldw	r17,180(sp)
 8002690:	d8c02785 	stb	r3,158(sp)
 8002694:	dcc02d15 	stw	r19,180(sp)
 8002698:	d8003215 	stw	zero,200(sp)
 800269c:	00800b44 	movi	r2,45
 80026a0:	003a1806 	br	8000f04 <__alt_data_end+0xfc000f04>
 80026a4:	01020074 	movhi	r4,2049
 80026a8:	210ab284 	addi	r4,r4,10954
 80026ac:	d9002b15 	stw	r4,172(sp)
 80026b0:	003cc306 	br	80019c0 <__alt_data_end+0xfc0019c0>
 80026b4:	5005883a 	mov	r2,r10
 80026b8:	003f2d06 	br	8002370 <__alt_data_end+0xfc002370>
 80026bc:	843fff84 	addi	r16,r16,-2
 80026c0:	1f3fffc4 	addi	fp,r3,-1
 80026c4:	df002615 	stw	fp,152(sp)
 80026c8:	dc0022c5 	stb	r16,139(sp)
 80026cc:	e000a216 	blt	fp,zero,8002958 <___svfprintf_internal_r+0x1f48>
 80026d0:	00800ac4 	movi	r2,43
 80026d4:	d8802305 	stb	r2,140(sp)
 80026d8:	00800244 	movi	r2,9
 80026dc:	1700820e 	bge	r2,fp,80028e8 <___svfprintf_internal_r+0x1ed8>
 80026e0:	dd4022c4 	addi	r21,sp,139
 80026e4:	dc002b15 	stw	r16,172(sp)
 80026e8:	8825883a 	mov	r18,r17
 80026ec:	a821883a 	mov	r16,r21
 80026f0:	4023883a 	mov	r17,r8
 80026f4:	e009883a 	mov	r4,fp
 80026f8:	01400284 	movi	r5,10
 80026fc:	800d6f80 	call	800d6f8 <__modsi3>
 8002700:	10800c04 	addi	r2,r2,48
 8002704:	843fffc4 	addi	r16,r16,-1
 8002708:	e009883a 	mov	r4,fp
 800270c:	01400284 	movi	r5,10
 8002710:	80800005 	stb	r2,0(r16)
 8002714:	800d6a40 	call	800d6a4 <__divsi3>
 8002718:	1039883a 	mov	fp,r2
 800271c:	00800244 	movi	r2,9
 8002720:	173ff416 	blt	r2,fp,80026f4 <__alt_data_end+0xfc0026f4>
 8002724:	8811883a 	mov	r8,r17
 8002728:	e0800c04 	addi	r2,fp,48
 800272c:	9023883a 	mov	r17,r18
 8002730:	8025883a 	mov	r18,r16
 8002734:	913fffc4 	addi	r4,r18,-1
 8002738:	90bfffc5 	stb	r2,-1(r18)
 800273c:	dc002b17 	ldw	r16,172(sp)
 8002740:	25408e2e 	bgeu	r4,r21,800297c <___svfprintf_internal_r+0x1f6c>
 8002744:	d9402384 	addi	r5,sp,142
 8002748:	2c8bc83a 	sub	r5,r5,r18
 800274c:	d8c02344 	addi	r3,sp,141
 8002750:	a94b883a 	add	r5,r21,r5
 8002754:	00000106 	br	800275c <___svfprintf_internal_r+0x1d4c>
 8002758:	20800003 	ldbu	r2,0(r4)
 800275c:	18800005 	stb	r2,0(r3)
 8002760:	18c00044 	addi	r3,r3,1
 8002764:	21000044 	addi	r4,r4,1
 8002768:	197ffb1e 	bne	r3,r5,8002758 <__alt_data_end+0xfc002758>
 800276c:	d8802304 	addi	r2,sp,140
 8002770:	1485c83a 	sub	r2,r2,r18
 8002774:	d8c02344 	addi	r3,sp,141
 8002778:	1885883a 	add	r2,r3,r2
 800277c:	dac03317 	ldw	r11,204(sp)
 8002780:	156bc83a 	sub	r21,r2,r21
 8002784:	dd403a15 	stw	r21,232(sp)
 8002788:	00800044 	movi	r2,1
 800278c:	5d65883a 	add	r18,r11,r21
 8002790:	12c0770e 	bge	r2,r11,8002970 <___svfprintf_internal_r+0x1f60>
 8002794:	94800044 	addi	r18,r18,1
 8002798:	9005883a 	mov	r2,r18
 800279c:	90007216 	blt	r18,zero,8002968 <___svfprintf_internal_r+0x1f58>
 80027a0:	d8003415 	stw	zero,208(sp)
 80027a4:	003f0506 	br	80023bc <__alt_data_end+0xfc0023bc>
 80027a8:	da402a15 	stw	r9,168(sp)
 80027ac:	dd402783 	ldbu	r21,158(sp)
 80027b0:	4825883a 	mov	r18,r9
 80027b4:	dcc02d15 	stw	r19,180(sp)
 80027b8:	d8003215 	stw	zero,200(sp)
 80027bc:	d8003415 	stw	zero,208(sp)
 80027c0:	0039cc06 	br	8000ef4 <__alt_data_end+0xfc000ef4>
 80027c4:	483eb01e 	bne	r9,zero,8002288 <__alt_data_end+0xfc002288>
 80027c8:	9013883a 	mov	r9,r18
 80027cc:	003eae06 	br	8002288 <__alt_data_end+0xfc002288>
 80027d0:	d9002f17 	ldw	r4,188(sp)
 80027d4:	b80b883a 	mov	r5,r23
 80027d8:	b00d883a 	mov	r6,r22
 80027dc:	8008f4c0 	call	8008f4c <__ssprint_r>
 80027e0:	1039531e 	bne	r2,zero,8000d30 <__alt_data_end+0xfc000d30>
 80027e4:	dc002617 	ldw	r16,152(sp)
 80027e8:	d8c02017 	ldw	r3,128(sp)
 80027ec:	d8801f17 	ldw	r2,124(sp)
 80027f0:	da000404 	addi	r8,sp,16
 80027f4:	003e6f06 	br	80021b4 <__alt_data_end+0xfc0021b4>
 80027f8:	00c00b44 	movi	r3,45
 80027fc:	64a0003c 	xorhi	r18,r12,32768
 8002800:	d8c02a05 	stb	r3,168(sp)
 8002804:	003ea606 	br	80022a0 <__alt_data_end+0xfc0022a0>
 8002808:	4f000044 	addi	fp,r9,1
 800280c:	003eab06 	br	80022bc <__alt_data_end+0xfc0022bc>
 8002810:	d8c03417 	ldw	r3,208(sp)
 8002814:	00c0410e 	bge	zero,r3,800291c <___svfprintf_internal_r+0x1f0c>
 8002818:	04800044 	movi	r18,1
 800281c:	dac03317 	ldw	r11,204(sp)
 8002820:	92e5883a 	add	r18,r18,r11
 8002824:	9005883a 	mov	r2,r18
 8002828:	903ee40e 	bge	r18,zero,80023bc <__alt_data_end+0xfc0023bc>
 800282c:	0005883a 	mov	r2,zero
 8002830:	003ee206 	br	80023bc <__alt_data_end+0xfc0023bc>
 8002834:	d8c02617 	ldw	r3,152(sp)
 8002838:	d8c03415 	stw	r3,208(sp)
 800283c:	00c0310e 	bge	zero,r3,8002904 <___svfprintf_internal_r+0x1ef4>
 8002840:	48001f1e 	bne	r9,zero,80028c0 <___svfprintf_internal_r+0x1eb0>
 8002844:	8c40004c 	andi	r17,r17,1
 8002848:	88001d1e 	bne	r17,zero,80028c0 <___svfprintf_internal_r+0x1eb0>
 800284c:	1805883a 	mov	r2,r3
 8002850:	183ed90e 	bge	r3,zero,80023b8 <__alt_data_end+0xfc0023b8>
 8002854:	0005883a 	mov	r2,zero
 8002858:	003ed706 	br	80023b8 <__alt_data_end+0xfc0023b8>
 800285c:	d8802117 	ldw	r2,132(sp)
 8002860:	003ec306 	br	8002370 <__alt_data_end+0xfc002370>
 8002864:	d9003717 	ldw	r4,220(sp)
 8002868:	900b883a 	mov	r5,r18
 800286c:	000d883a 	mov	r6,zero
 8002870:	000f883a 	mov	r7,zero
 8002874:	da004015 	stw	r8,256(sp)
 8002878:	da403f15 	stw	r9,252(sp)
 800287c:	da803e15 	stw	r10,248(sp)
 8002880:	800e8cc0 	call	800e8cc <__eqdf2>
 8002884:	da004017 	ldw	r8,256(sp)
 8002888:	da403f17 	ldw	r9,252(sp)
 800288c:	da803e17 	ldw	r10,248(sp)
 8002890:	103f2a26 	beq	r2,zero,800253c <__alt_data_end+0xfc00253c>
 8002894:	00800044 	movi	r2,1
 8002898:	1707c83a 	sub	r3,r2,fp
 800289c:	d8c02615 	stw	r3,152(sp)
 80028a0:	003f2706 	br	8002540 <__alt_data_end+0xfc002540>
 80028a4:	db003417 	ldw	r12,208(sp)
 80028a8:	64800044 	addi	r18,r12,1
 80028ac:	9005883a 	mov	r2,r18
 80028b0:	903ec20e 	bge	r18,zero,80023bc <__alt_data_end+0xfc0023bc>
 80028b4:	003fdd06 	br	800282c <__alt_data_end+0xfc00282c>
 80028b8:	0005883a 	mov	r2,zero
 80028bc:	003f5a06 	br	8002628 <__alt_data_end+0xfc002628>
 80028c0:	dac03417 	ldw	r11,208(sp)
 80028c4:	4a400044 	addi	r9,r9,1
 80028c8:	5a65883a 	add	r18,r11,r9
 80028cc:	9005883a 	mov	r2,r18
 80028d0:	903eba0e 	bge	r18,zero,80023bc <__alt_data_end+0xfc0023bc>
 80028d4:	003fd506 	br	800282c <__alt_data_end+0xfc00282c>
 80028d8:	00820074 	movhi	r2,2049
 80028dc:	108ab284 	addi	r2,r2,10954
 80028e0:	d8802b15 	stw	r2,172(sp)
 80028e4:	003d2906 	br	8001d8c <__alt_data_end+0xfc001d8c>
 80028e8:	00800c04 	movi	r2,48
 80028ec:	e0c00c04 	addi	r3,fp,48
 80028f0:	d8802345 	stb	r2,141(sp)
 80028f4:	d8c02385 	stb	r3,142(sp)
 80028f8:	d88023c4 	addi	r2,sp,143
 80028fc:	dd4022c4 	addi	r21,sp,139
 8002900:	003f9e06 	br	800277c <__alt_data_end+0xfc00277c>
 8002904:	4800081e 	bne	r9,zero,8002928 <___svfprintf_internal_r+0x1f18>
 8002908:	8c40004c 	andi	r17,r17,1
 800290c:	8800061e 	bne	r17,zero,8002928 <___svfprintf_internal_r+0x1f18>
 8002910:	00800044 	movi	r2,1
 8002914:	1025883a 	mov	r18,r2
 8002918:	003ea806 	br	80023bc <__alt_data_end+0xfc0023bc>
 800291c:	04800084 	movi	r18,2
 8002920:	90e5c83a 	sub	r18,r18,r3
 8002924:	003fbd06 	br	800281c <__alt_data_end+0xfc00281c>
 8002928:	4c800084 	addi	r18,r9,2
 800292c:	9005883a 	mov	r2,r18
 8002930:	903ea20e 	bge	r18,zero,80023bc <__alt_data_end+0xfc0023bc>
 8002934:	003fbd06 	br	800282c <__alt_data_end+0xfc00282c>
 8002938:	dac02d17 	ldw	r11,180(sp)
 800293c:	5a400017 	ldw	r9,0(r11)
 8002940:	5ac00104 	addi	r11,r11,4
 8002944:	dac02d15 	stw	r11,180(sp)
 8002948:	483e3f0e 	bge	r9,zero,8002248 <__alt_data_end+0xfc002248>
 800294c:	027fffc4 	movi	r9,-1
 8002950:	1c000047 	ldb	r16,1(r3)
 8002954:	00388406 	br	8000b68 <__alt_data_end+0xfc000b68>
 8002958:	00800b44 	movi	r2,45
 800295c:	0739c83a 	sub	fp,zero,fp
 8002960:	d8802305 	stb	r2,140(sp)
 8002964:	003f5c06 	br	80026d8 <__alt_data_end+0xfc0026d8>
 8002968:	0005883a 	mov	r2,zero
 800296c:	003f8c06 	br	80027a0 <__alt_data_end+0xfc0027a0>
 8002970:	88a2703a 	and	r17,r17,r2
 8002974:	883f8826 	beq	r17,zero,8002798 <__alt_data_end+0xfc002798>
 8002978:	003f8606 	br	8002794 <__alt_data_end+0xfc002794>
 800297c:	d8802344 	addi	r2,sp,141
 8002980:	003f7e06 	br	800277c <__alt_data_end+0xfc00277c>
 8002984:	d8c02617 	ldw	r3,152(sp)
 8002988:	003f4d06 	br	80026c0 <__alt_data_end+0xfc0026c0>
 800298c:	dac02f17 	ldw	r11,188(sp)
 8002990:	00800304 	movi	r2,12
 8002994:	58800015 	stw	r2,0(r11)
 8002998:	00bfffc4 	movi	r2,-1
 800299c:	0038e806 	br	8000d40 <__alt_data_end+0xfc000d40>

080029a0 <___vfprintf_internal_r>:
 80029a0:	defeb604 	addi	sp,sp,-1320
 80029a4:	dfc14915 	stw	ra,1316(sp)
 80029a8:	ddc14715 	stw	r23,1308(sp)
 80029ac:	dd814615 	stw	r22,1304(sp)
 80029b0:	282f883a 	mov	r23,r5
 80029b4:	202d883a 	mov	r22,r4
 80029b8:	d9812a15 	stw	r6,1192(sp)
 80029bc:	d9c12d15 	stw	r7,1204(sp)
 80029c0:	df014815 	stw	fp,1312(sp)
 80029c4:	dd414515 	stw	r21,1300(sp)
 80029c8:	dd014415 	stw	r20,1296(sp)
 80029cc:	dcc14315 	stw	r19,1292(sp)
 80029d0:	dc814215 	stw	r18,1288(sp)
 80029d4:	dc414115 	stw	r17,1284(sp)
 80029d8:	dc014015 	stw	r16,1280(sp)
 80029dc:	80070400 	call	8007040 <_localeconv_r>
 80029e0:	10800017 	ldw	r2,0(r2)
 80029e4:	1009883a 	mov	r4,r2
 80029e8:	d8813515 	stw	r2,1236(sp)
 80029ec:	80009780 	call	8000978 <strlen>
 80029f0:	d8813815 	stw	r2,1248(sp)
 80029f4:	b0000226 	beq	r22,zero,8002a00 <___vfprintf_internal_r+0x60>
 80029f8:	b0800e17 	ldw	r2,56(r22)
 80029fc:	10010426 	beq	r2,zero,8002e10 <___vfprintf_internal_r+0x470>
 8002a00:	b8c0030b 	ldhu	r3,12(r23)
 8002a04:	1908000c 	andi	r4,r3,8192
 8002a08:	1805883a 	mov	r2,r3
 8002a0c:	2000071e 	bne	r4,zero,8002a2c <___vfprintf_internal_r+0x8c>
 8002a10:	b9001917 	ldw	r4,100(r23)
 8002a14:	18880014 	ori	r2,r3,8192
 8002a18:	00f7ffc4 	movi	r3,-8193
 8002a1c:	20c8703a 	and	r4,r4,r3
 8002a20:	b880030d 	sth	r2,12(r23)
 8002a24:	1007883a 	mov	r3,r2
 8002a28:	b9001915 	stw	r4,100(r23)
 8002a2c:	1100020c 	andi	r4,r2,8
 8002a30:	2000a726 	beq	r4,zero,8002cd0 <___vfprintf_internal_r+0x330>
 8002a34:	b9000417 	ldw	r4,16(r23)
 8002a38:	2000a526 	beq	r4,zero,8002cd0 <___vfprintf_internal_r+0x330>
 8002a3c:	1080068c 	andi	r2,r2,26
 8002a40:	01000284 	movi	r4,10
 8002a44:	1100ab26 	beq	r2,r4,8002cf4 <___vfprintf_internal_r+0x354>
 8002a48:	dac10e04 	addi	r11,sp,1080
 8002a4c:	db010dc4 	addi	r12,sp,1079
 8002a50:	d8800404 	addi	r2,sp,16
 8002a54:	05020074 	movhi	r20,2049
 8002a58:	dac12815 	stw	r11,1184(sp)
 8002a5c:	5b17c83a 	sub	r11,r11,r12
 8002a60:	a50aba84 	addi	r20,r20,10986
 8002a64:	db012915 	stw	r12,1188(sp)
 8002a68:	d8811e15 	stw	r2,1144(sp)
 8002a6c:	d8012015 	stw	zero,1152(sp)
 8002a70:	d8011f15 	stw	zero,1148(sp)
 8002a74:	d8013315 	stw	zero,1228(sp)
 8002a78:	d8013715 	stw	zero,1244(sp)
 8002a7c:	d8013915 	stw	zero,1252(sp)
 8002a80:	d8013b15 	stw	zero,1260(sp)
 8002a84:	d8013a15 	stw	zero,1256(sp)
 8002a88:	d8012f15 	stw	zero,1212(sp)
 8002a8c:	1011883a 	mov	r8,r2
 8002a90:	dac13c15 	stw	r11,1264(sp)
 8002a94:	db012a17 	ldw	r12,1192(sp)
 8002a98:	60800007 	ldb	r2,0(r12)
 8002a9c:	1000df26 	beq	r2,zero,8002e1c <___vfprintf_internal_r+0x47c>
 8002aa0:	00c00944 	movi	r3,37
 8002aa4:	10c0dd26 	beq	r2,r3,8002e1c <___vfprintf_internal_r+0x47c>
 8002aa8:	6021883a 	mov	r16,r12
 8002aac:	00000106 	br	8002ab4 <___vfprintf_internal_r+0x114>
 8002ab0:	10c08426 	beq	r2,r3,8002cc4 <___vfprintf_internal_r+0x324>
 8002ab4:	84000044 	addi	r16,r16,1
 8002ab8:	80800007 	ldb	r2,0(r16)
 8002abc:	103ffc1e 	bne	r2,zero,8002ab0 <__alt_data_end+0xfc002ab0>
 8002ac0:	dac12a17 	ldw	r11,1192(sp)
 8002ac4:	82e3c83a 	sub	r17,r16,r11
 8002ac8:	88000f26 	beq	r17,zero,8002b08 <___vfprintf_internal_r+0x168>
 8002acc:	d8c12017 	ldw	r3,1152(sp)
 8002ad0:	d8811f17 	ldw	r2,1148(sp)
 8002ad4:	dac12a17 	ldw	r11,1192(sp)
 8002ad8:	1c47883a 	add	r3,r3,r17
 8002adc:	10800044 	addi	r2,r2,1
 8002ae0:	d8c12015 	stw	r3,1152(sp)
 8002ae4:	42c00015 	stw	r11,0(r8)
 8002ae8:	44400115 	stw	r17,4(r8)
 8002aec:	d8811f15 	stw	r2,1148(sp)
 8002af0:	00c001c4 	movi	r3,7
 8002af4:	1880b416 	blt	r3,r2,8002dc8 <___vfprintf_internal_r+0x428>
 8002af8:	42000204 	addi	r8,r8,8
 8002afc:	db012f17 	ldw	r12,1212(sp)
 8002b00:	6459883a 	add	r12,r12,r17
 8002b04:	db012f15 	stw	r12,1212(sp)
 8002b08:	80800007 	ldb	r2,0(r16)
 8002b0c:	1000b526 	beq	r2,zero,8002de4 <___vfprintf_internal_r+0x444>
 8002b10:	80800044 	addi	r2,r16,1
 8002b14:	84000047 	ldb	r16,1(r16)
 8002b18:	d8012785 	stb	zero,1182(sp)
 8002b1c:	000d883a 	mov	r6,zero
 8002b20:	027fffc4 	movi	r9,-1
 8002b24:	d8012e15 	stw	zero,1208(sp)
 8002b28:	0023883a 	mov	r17,zero
 8002b2c:	01001604 	movi	r4,88
 8002b30:	01400244 	movi	r5,9
 8002b34:	02800a84 	movi	r10,42
 8002b38:	01c01b04 	movi	r7,108
 8002b3c:	10c00044 	addi	r3,r2,1
 8002b40:	80bff804 	addi	r2,r16,-32
 8002b44:	2082f236 	bltu	r4,r2,8003710 <___vfprintf_internal_r+0xd70>
 8002b48:	100490ba 	slli	r2,r2,2
 8002b4c:	02c20034 	movhi	r11,2048
 8002b50:	5acad804 	addi	r11,r11,11104
 8002b54:	12c5883a 	add	r2,r2,r11
 8002b58:	10800017 	ldw	r2,0(r2)
 8002b5c:	1000683a 	jmp	r2
 8002b60:	08003558 	cmpnei	zero,at,213
 8002b64:	08003710 	cmplti	zero,at,220
 8002b68:	08003710 	cmplti	zero,at,220
 8002b6c:	08003578 	rdprs	zero,at,213
 8002b70:	08003710 	cmplti	zero,at,220
 8002b74:	08003710 	cmplti	zero,at,220
 8002b78:	08003710 	cmplti	zero,at,220
 8002b7c:	08003710 	cmplti	zero,at,220
 8002b80:	08003710 	cmplti	zero,at,220
 8002b84:	08003710 	cmplti	zero,at,220
 8002b88:	080036d4 	ori	zero,at,219
 8002b8c:	08003700 	call	800370 <__reset-0x77ffc90>
 8002b90:	08003710 	cmplti	zero,at,220
 8002b94:	08002e24 	muli	zero,at,184
 8002b98:	08002e34 	orhi	zero,at,184
 8002b9c:	08003710 	cmplti	zero,at,220
 8002ba0:	08002e74 	orhi	zero,at,185
 8002ba4:	08003368 	cmpgeui	zero,at,205
 8002ba8:	08003368 	cmpgeui	zero,at,205
 8002bac:	08003368 	cmpgeui	zero,at,205
 8002bb0:	08003368 	cmpgeui	zero,at,205
 8002bb4:	08003368 	cmpgeui	zero,at,205
 8002bb8:	08003368 	cmpgeui	zero,at,205
 8002bbc:	08003368 	cmpgeui	zero,at,205
 8002bc0:	08003368 	cmpgeui	zero,at,205
 8002bc4:	08003368 	cmpgeui	zero,at,205
 8002bc8:	08003710 	cmplti	zero,at,220
 8002bcc:	08003710 	cmplti	zero,at,220
 8002bd0:	08003710 	cmplti	zero,at,220
 8002bd4:	08003710 	cmplti	zero,at,220
 8002bd8:	08003710 	cmplti	zero,at,220
 8002bdc:	08003710 	cmplti	zero,at,220
 8002be0:	08003710 	cmplti	zero,at,220
 8002be4:	08003710 	cmplti	zero,at,220
 8002be8:	08003710 	cmplti	zero,at,220
 8002bec:	08003710 	cmplti	zero,at,220
 8002bf0:	0800339c 	xori	zero,at,206
 8002bf4:	08002e84 	addi	zero,at,186
 8002bf8:	08003710 	cmplti	zero,at,220
 8002bfc:	08002e84 	addi	zero,at,186
 8002c00:	08003710 	cmplti	zero,at,220
 8002c04:	08003710 	cmplti	zero,at,220
 8002c08:	08003710 	cmplti	zero,at,220
 8002c0c:	08003710 	cmplti	zero,at,220
 8002c10:	08002f28 	cmpgeui	zero,at,188
 8002c14:	08003710 	cmplti	zero,at,220
 8002c18:	08003710 	cmplti	zero,at,220
 8002c1c:	08002f38 	rdprs	zero,at,188
 8002c20:	08003710 	cmplti	zero,at,220
 8002c24:	08003710 	cmplti	zero,at,220
 8002c28:	08003710 	cmplti	zero,at,220
 8002c2c:	08003710 	cmplti	zero,at,220
 8002c30:	08003710 	cmplti	zero,at,220
 8002c34:	08003334 	orhi	zero,at,204
 8002c38:	08003710 	cmplti	zero,at,220
 8002c3c:	08003710 	cmplti	zero,at,220
 8002c40:	080033e4 	muli	zero,at,207
 8002c44:	08003710 	cmplti	zero,at,220
 8002c48:	08003710 	cmplti	zero,at,220
 8002c4c:	08003710 	cmplti	zero,at,220
 8002c50:	08003710 	cmplti	zero,at,220
 8002c54:	08003710 	cmplti	zero,at,220
 8002c58:	08003710 	cmplti	zero,at,220
 8002c5c:	08003710 	cmplti	zero,at,220
 8002c60:	08003710 	cmplti	zero,at,220
 8002c64:	08003710 	cmplti	zero,at,220
 8002c68:	08003710 	cmplti	zero,at,220
 8002c6c:	080035d8 	cmpnei	zero,at,215
 8002c70:	08003588 	cmpgei	zero,at,214
 8002c74:	08002e84 	addi	zero,at,186
 8002c78:	08002e84 	addi	zero,at,186
 8002c7c:	08002e84 	addi	zero,at,186
 8002c80:	080035c8 	cmpgei	zero,at,215
 8002c84:	08003588 	cmpgei	zero,at,214
 8002c88:	08003710 	cmplti	zero,at,220
 8002c8c:	08003710 	cmplti	zero,at,220
 8002c90:	080034d0 	cmplti	zero,at,211
 8002c94:	08003710 	cmplti	zero,at,220
 8002c98:	080034e4 	muli	zero,at,211
 8002c9c:	08003518 	cmpnei	zero,at,212
 8002ca0:	08003618 	cmpnei	zero,at,216
 8002ca4:	08003440 	call	800344 <__reset-0x77ffcbc>
 8002ca8:	08003710 	cmplti	zero,at,220
 8002cac:	08003660 	cmpeqi	zero,at,217
 8002cb0:	08003710 	cmplti	zero,at,220
 8002cb4:	08003450 	cmplti	zero,at,209
 8002cb8:	08003710 	cmplti	zero,at,220
 8002cbc:	08003710 	cmplti	zero,at,220
 8002cc0:	08003490 	cmplti	zero,at,210
 8002cc4:	db012a17 	ldw	r12,1192(sp)
 8002cc8:	8323c83a 	sub	r17,r16,r12
 8002ccc:	003f7e06 	br	8002ac8 <__alt_data_end+0xfc002ac8>
 8002cd0:	b009883a 	mov	r4,r22
 8002cd4:	b80b883a 	mov	r5,r23
 8002cd8:	80049c00 	call	80049c0 <__swsetup_r>
 8002cdc:	10002d1e 	bne	r2,zero,8002d94 <___vfprintf_internal_r+0x3f4>
 8002ce0:	b8c0030b 	ldhu	r3,12(r23)
 8002ce4:	01000284 	movi	r4,10
 8002ce8:	1805883a 	mov	r2,r3
 8002cec:	1080068c 	andi	r2,r2,26
 8002cf0:	113f551e 	bne	r2,r4,8002a48 <__alt_data_end+0xfc002a48>
 8002cf4:	b880038b 	ldhu	r2,14(r23)
 8002cf8:	113fffcc 	andi	r4,r2,65535
 8002cfc:	2120001c 	xori	r4,r4,32768
 8002d00:	21200004 	addi	r4,r4,-32768
 8002d04:	203f5016 	blt	r4,zero,8002a48 <__alt_data_end+0xfc002a48>
 8002d08:	bac01917 	ldw	r11,100(r23)
 8002d0c:	ba800717 	ldw	r10,28(r23)
 8002d10:	ba400917 	ldw	r9,36(r23)
 8002d14:	d9812a17 	ldw	r6,1192(sp)
 8002d18:	d9c12d17 	ldw	r7,1204(sp)
 8002d1c:	02010004 	movi	r8,1024
 8002d20:	18ffff4c 	andi	r3,r3,65533
 8002d24:	d881078d 	sth	r2,1054(sp)
 8002d28:	b009883a 	mov	r4,r22
 8002d2c:	d8800404 	addi	r2,sp,16
 8002d30:	d9410404 	addi	r5,sp,1040
 8002d34:	d8c1070d 	sth	r3,1052(sp)
 8002d38:	dac11d15 	stw	r11,1140(sp)
 8002d3c:	da810b15 	stw	r10,1068(sp)
 8002d40:	da410d15 	stw	r9,1076(sp)
 8002d44:	d8810415 	stw	r2,1040(sp)
 8002d48:	d8810815 	stw	r2,1056(sp)
 8002d4c:	da010615 	stw	r8,1048(sp)
 8002d50:	da010915 	stw	r8,1060(sp)
 8002d54:	d8010a15 	stw	zero,1064(sp)
 8002d58:	80029a00 	call	80029a0 <___vfprintf_internal_r>
 8002d5c:	1021883a 	mov	r16,r2
 8002d60:	10000416 	blt	r2,zero,8002d74 <___vfprintf_internal_r+0x3d4>
 8002d64:	b009883a 	mov	r4,r22
 8002d68:	d9410404 	addi	r5,sp,1040
 8002d6c:	80064180 	call	8006418 <_fflush_r>
 8002d70:	1006ee1e 	bne	r2,zero,800492c <___vfprintf_internal_r+0x1f8c>
 8002d74:	d881070b 	ldhu	r2,1052(sp)
 8002d78:	1080100c 	andi	r2,r2,64
 8002d7c:	10000326 	beq	r2,zero,8002d8c <___vfprintf_internal_r+0x3ec>
 8002d80:	b880030b 	ldhu	r2,12(r23)
 8002d84:	10801014 	ori	r2,r2,64
 8002d88:	b880030d 	sth	r2,12(r23)
 8002d8c:	8005883a 	mov	r2,r16
 8002d90:	00000106 	br	8002d98 <___vfprintf_internal_r+0x3f8>
 8002d94:	00bfffc4 	movi	r2,-1
 8002d98:	dfc14917 	ldw	ra,1316(sp)
 8002d9c:	df014817 	ldw	fp,1312(sp)
 8002da0:	ddc14717 	ldw	r23,1308(sp)
 8002da4:	dd814617 	ldw	r22,1304(sp)
 8002da8:	dd414517 	ldw	r21,1300(sp)
 8002dac:	dd014417 	ldw	r20,1296(sp)
 8002db0:	dcc14317 	ldw	r19,1292(sp)
 8002db4:	dc814217 	ldw	r18,1288(sp)
 8002db8:	dc414117 	ldw	r17,1284(sp)
 8002dbc:	dc014017 	ldw	r16,1280(sp)
 8002dc0:	dec14a04 	addi	sp,sp,1320
 8002dc4:	f800283a 	ret
 8002dc8:	b009883a 	mov	r4,r22
 8002dcc:	b80b883a 	mov	r5,r23
 8002dd0:	d9811e04 	addi	r6,sp,1144
 8002dd4:	800a2780 	call	800a278 <__sprint_r>
 8002dd8:	1000081e 	bne	r2,zero,8002dfc <___vfprintf_internal_r+0x45c>
 8002ddc:	da000404 	addi	r8,sp,16
 8002de0:	003f4606 	br	8002afc <__alt_data_end+0xfc002afc>
 8002de4:	d8812017 	ldw	r2,1152(sp)
 8002de8:	10000426 	beq	r2,zero,8002dfc <___vfprintf_internal_r+0x45c>
 8002dec:	b009883a 	mov	r4,r22
 8002df0:	b80b883a 	mov	r5,r23
 8002df4:	d9811e04 	addi	r6,sp,1144
 8002df8:	800a2780 	call	800a278 <__sprint_r>
 8002dfc:	b880030b 	ldhu	r2,12(r23)
 8002e00:	1080100c 	andi	r2,r2,64
 8002e04:	103fe31e 	bne	r2,zero,8002d94 <__alt_data_end+0xfc002d94>
 8002e08:	d8812f17 	ldw	r2,1212(sp)
 8002e0c:	003fe206 	br	8002d98 <__alt_data_end+0xfc002d98>
 8002e10:	b009883a 	mov	r4,r22
 8002e14:	80069c00 	call	80069c0 <__sinit>
 8002e18:	003ef906 	br	8002a00 <__alt_data_end+0xfc002a00>
 8002e1c:	dc012a17 	ldw	r16,1192(sp)
 8002e20:	003f3906 	br	8002b08 <__alt_data_end+0xfc002b08>
 8002e24:	1805883a 	mov	r2,r3
 8002e28:	8c400114 	ori	r17,r17,4
 8002e2c:	1c000007 	ldb	r16,0(r3)
 8002e30:	003f4206 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8002e34:	1c000007 	ldb	r16,0(r3)
 8002e38:	18800044 	addi	r2,r3,1
 8002e3c:	8286b326 	beq	r16,r10,800490c <___vfprintf_internal_r+0x1f6c>
 8002e40:	82fff404 	addi	r11,r16,-48
 8002e44:	1007883a 	mov	r3,r2
 8002e48:	0013883a 	mov	r9,zero
 8002e4c:	2aff3c36 	bltu	r5,r11,8002b40 <__alt_data_end+0xfc002b40>
 8002e50:	1c000007 	ldb	r16,0(r3)
 8002e54:	4a4002a4 	muli	r9,r9,10
 8002e58:	18c00044 	addi	r3,r3,1
 8002e5c:	5a53883a 	add	r9,r11,r9
 8002e60:	82fff404 	addi	r11,r16,-48
 8002e64:	2afffa2e 	bgeu	r5,r11,8002e50 <__alt_data_end+0xfc002e50>
 8002e68:	483f350e 	bge	r9,zero,8002b40 <__alt_data_end+0xfc002b40>
 8002e6c:	027fffc4 	movi	r9,-1
 8002e70:	003f3306 	br	8002b40 <__alt_data_end+0xfc002b40>
 8002e74:	8c402014 	ori	r17,r17,128
 8002e78:	1805883a 	mov	r2,r3
 8002e7c:	1c000007 	ldb	r16,0(r3)
 8002e80:	003f2e06 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8002e84:	db012d17 	ldw	r12,1204(sp)
 8002e88:	dac12d17 	ldw	r11,1204(sp)
 8002e8c:	d8c12a15 	stw	r3,1192(sp)
 8002e90:	63000017 	ldw	r12,0(r12)
 8002e94:	5ac00117 	ldw	r11,4(r11)
 8002e98:	d9812785 	stb	r6,1182(sp)
 8002e9c:	6009883a 	mov	r4,r12
 8002ea0:	580b883a 	mov	r5,r11
 8002ea4:	db013715 	stw	r12,1244(sp)
 8002ea8:	da013f15 	stw	r8,1276(sp)
 8002eac:	da413e15 	stw	r9,1272(sp)
 8002eb0:	dac13915 	stw	r11,1252(sp)
 8002eb4:	8008ca40 	call	8008ca4 <__fpclassifyd>
 8002eb8:	db012d17 	ldw	r12,1204(sp)
 8002ebc:	04800044 	movi	r18,1
 8002ec0:	da013f17 	ldw	r8,1276(sp)
 8002ec4:	64c00204 	addi	r19,r12,8
 8002ec8:	da413e17 	ldw	r9,1272(sp)
 8002ecc:	d9013717 	ldw	r4,1244(sp)
 8002ed0:	d9413917 	ldw	r5,1252(sp)
 8002ed4:	1484581e 	bne	r2,r18,8004038 <___vfprintf_internal_r+0x1698>
 8002ed8:	000d883a 	mov	r6,zero
 8002edc:	000f883a 	mov	r7,zero
 8002ee0:	800ea300 	call	800ea30 <__ledf2>
 8002ee4:	da013f17 	ldw	r8,1276(sp)
 8002ee8:	1005ef16 	blt	r2,zero,80046a8 <___vfprintf_internal_r+0x1d08>
 8002eec:	dd412783 	ldbu	r21,1182(sp)
 8002ef0:	008011c4 	movi	r2,71
 8002ef4:	14053b0e 	bge	r2,r16,80043e4 <___vfprintf_internal_r+0x1a44>
 8002ef8:	00c20074 	movhi	r3,2049
 8002efc:	18caa304 	addi	r3,r3,10892
 8002f00:	d8c13115 	stw	r3,1220(sp)
 8002f04:	02c000c4 	movi	r11,3
 8002f08:	00bfdfc4 	movi	r2,-129
 8002f0c:	dac12b15 	stw	r11,1196(sp)
 8002f10:	88a2703a 	and	r17,r17,r2
 8002f14:	dcc12d15 	stw	r19,1204(sp)
 8002f18:	5825883a 	mov	r18,r11
 8002f1c:	d8013215 	stw	zero,1224(sp)
 8002f20:	d8013415 	stw	zero,1232(sp)
 8002f24:	00003206 	br	8002ff0 <___vfprintf_internal_r+0x650>
 8002f28:	8c400214 	ori	r17,r17,8
 8002f2c:	1805883a 	mov	r2,r3
 8002f30:	1c000007 	ldb	r16,0(r3)
 8002f34:	003f0106 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8002f38:	8c400414 	ori	r17,r17,16
 8002f3c:	d8c12a15 	stw	r3,1192(sp)
 8002f40:	88c0080c 	andi	r3,r17,32
 8002f44:	d8812d17 	ldw	r2,1204(sp)
 8002f48:	18017726 	beq	r3,zero,8003528 <___vfprintf_internal_r+0xb88>
 8002f4c:	db012d17 	ldw	r12,1204(sp)
 8002f50:	14c00017 	ldw	r19,0(r2)
 8002f54:	17000117 	ldw	fp,4(r2)
 8002f58:	63000204 	addi	r12,r12,8
 8002f5c:	db012d15 	stw	r12,1204(sp)
 8002f60:	0005883a 	mov	r2,zero
 8002f64:	9f06b03a 	or	r3,r19,fp
 8002f68:	d8012785 	stb	zero,1182(sp)
 8002f6c:	da413215 	stw	r9,1224(sp)
 8002f70:	002b883a 	mov	r21,zero
 8002f74:	48000216 	blt	r9,zero,8002f80 <___vfprintf_internal_r+0x5e0>
 8002f78:	013fdfc4 	movi	r4,-129
 8002f7c:	8922703a 	and	r17,r17,r4
 8002f80:	1801ed1e 	bne	r3,zero,8003738 <___vfprintf_internal_r+0xd98>
 8002f84:	4802e026 	beq	r9,zero,8003b08 <___vfprintf_internal_r+0x1168>
 8002f88:	10803fcc 	andi	r2,r2,255
 8002f8c:	00c00044 	movi	r3,1
 8002f90:	10c20f26 	beq	r2,r3,80037d0 <___vfprintf_internal_r+0xe30>
 8002f94:	00c00084 	movi	r3,2
 8002f98:	10c2fd26 	beq	r2,r3,8003b90 <___vfprintf_internal_r+0x11f0>
 8002f9c:	d8c10e04 	addi	r3,sp,1080
 8002fa0:	9808d0fa 	srli	r4,r19,3
 8002fa4:	e00a977a 	slli	r5,fp,29
 8002fa8:	e038d0fa 	srli	fp,fp,3
 8002fac:	9cc001cc 	andi	r19,r19,7
 8002fb0:	98800c04 	addi	r2,r19,48
 8002fb4:	18ffffc4 	addi	r3,r3,-1
 8002fb8:	2926b03a 	or	r19,r5,r4
 8002fbc:	18800005 	stb	r2,0(r3)
 8002fc0:	9f08b03a 	or	r4,r19,fp
 8002fc4:	203ff61e 	bne	r4,zero,8002fa0 <__alt_data_end+0xfc002fa0>
 8002fc8:	8900004c 	andi	r4,r17,1
 8002fcc:	d8c13115 	stw	r3,1220(sp)
 8002fd0:	2003791e 	bne	r4,zero,8003db8 <___vfprintf_internal_r+0x1418>
 8002fd4:	dac12817 	ldw	r11,1184(sp)
 8002fd8:	58e5c83a 	sub	r18,r11,r3
 8002fdc:	9005883a 	mov	r2,r18
 8002fe0:	9240010e 	bge	r18,r9,8002fe8 <___vfprintf_internal_r+0x648>
 8002fe4:	4805883a 	mov	r2,r9
 8002fe8:	d8812b15 	stw	r2,1196(sp)
 8002fec:	d8013415 	stw	zero,1232(sp)
 8002ff0:	a8803fcc 	andi	r2,r21,255
 8002ff4:	1080201c 	xori	r2,r2,128
 8002ff8:	10bfe004 	addi	r2,r2,-128
 8002ffc:	10000326 	beq	r2,zero,800300c <___vfprintf_internal_r+0x66c>
 8003000:	db012b17 	ldw	r12,1196(sp)
 8003004:	63000044 	addi	r12,r12,1
 8003008:	db012b15 	stw	r12,1196(sp)
 800300c:	88c0008c 	andi	r3,r17,2
 8003010:	d8c12c15 	stw	r3,1200(sp)
 8003014:	18000326 	beq	r3,zero,8003024 <___vfprintf_internal_r+0x684>
 8003018:	dac12b17 	ldw	r11,1196(sp)
 800301c:	5ac00084 	addi	r11,r11,2
 8003020:	dac12b15 	stw	r11,1196(sp)
 8003024:	8b00210c 	andi	r12,r17,132
 8003028:	db013015 	stw	r12,1216(sp)
 800302c:	6001c01e 	bne	r12,zero,8003730 <___vfprintf_internal_r+0xd90>
 8003030:	dac12e17 	ldw	r11,1208(sp)
 8003034:	db012b17 	ldw	r12,1196(sp)
 8003038:	5b39c83a 	sub	fp,r11,r12
 800303c:	0701bc0e 	bge	zero,fp,8003730 <___vfprintf_internal_r+0xd90>
 8003040:	02400404 	movi	r9,16
 8003044:	d8c12017 	ldw	r3,1152(sp)
 8003048:	d8811f17 	ldw	r2,1148(sp)
 800304c:	4f05220e 	bge	r9,fp,80044d8 <___vfprintf_internal_r+0x1b38>
 8003050:	01420074 	movhi	r5,2049
 8003054:	294abe84 	addi	r5,r5,11002
 8003058:	d9413615 	stw	r5,1240(sp)
 800305c:	482b883a 	mov	r21,r9
 8003060:	04c001c4 	movi	r19,7
 8003064:	00000306 	br	8003074 <___vfprintf_internal_r+0x6d4>
 8003068:	e73ffc04 	addi	fp,fp,-16
 800306c:	42000204 	addi	r8,r8,8
 8003070:	af00130e 	bge	r21,fp,80030c0 <___vfprintf_internal_r+0x720>
 8003074:	02c20074 	movhi	r11,2049
 8003078:	18c00404 	addi	r3,r3,16
 800307c:	10800044 	addi	r2,r2,1
 8003080:	5acabe84 	addi	r11,r11,11002
 8003084:	42c00015 	stw	r11,0(r8)
 8003088:	45400115 	stw	r21,4(r8)
 800308c:	d8c12015 	stw	r3,1152(sp)
 8003090:	d8811f15 	stw	r2,1148(sp)
 8003094:	98bff40e 	bge	r19,r2,8003068 <__alt_data_end+0xfc003068>
 8003098:	b009883a 	mov	r4,r22
 800309c:	b80b883a 	mov	r5,r23
 80030a0:	d9811e04 	addi	r6,sp,1144
 80030a4:	800a2780 	call	800a278 <__sprint_r>
 80030a8:	103f541e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 80030ac:	e73ffc04 	addi	fp,fp,-16
 80030b0:	d8c12017 	ldw	r3,1152(sp)
 80030b4:	d8811f17 	ldw	r2,1148(sp)
 80030b8:	da000404 	addi	r8,sp,16
 80030bc:	af3fed16 	blt	r21,fp,8003074 <__alt_data_end+0xfc003074>
 80030c0:	db013617 	ldw	r12,1240(sp)
 80030c4:	e0c7883a 	add	r3,fp,r3
 80030c8:	10800044 	addi	r2,r2,1
 80030cc:	43000015 	stw	r12,0(r8)
 80030d0:	47000115 	stw	fp,4(r8)
 80030d4:	d8c12015 	stw	r3,1152(sp)
 80030d8:	d8811f15 	stw	r2,1148(sp)
 80030dc:	010001c4 	movi	r4,7
 80030e0:	2082f416 	blt	r4,r2,8003cb4 <___vfprintf_internal_r+0x1314>
 80030e4:	d8812787 	ldb	r2,1182(sp)
 80030e8:	42000204 	addi	r8,r8,8
 80030ec:	10000c26 	beq	r2,zero,8003120 <___vfprintf_internal_r+0x780>
 80030f0:	d8811f17 	ldw	r2,1148(sp)
 80030f4:	d9012784 	addi	r4,sp,1182
 80030f8:	18c00044 	addi	r3,r3,1
 80030fc:	10800044 	addi	r2,r2,1
 8003100:	41000015 	stw	r4,0(r8)
 8003104:	01000044 	movi	r4,1
 8003108:	41000115 	stw	r4,4(r8)
 800310c:	d8c12015 	stw	r3,1152(sp)
 8003110:	d8811f15 	stw	r2,1148(sp)
 8003114:	010001c4 	movi	r4,7
 8003118:	20828d16 	blt	r4,r2,8003b50 <___vfprintf_internal_r+0x11b0>
 800311c:	42000204 	addi	r8,r8,8
 8003120:	dac12c17 	ldw	r11,1200(sp)
 8003124:	58000c26 	beq	r11,zero,8003158 <___vfprintf_internal_r+0x7b8>
 8003128:	d8811f17 	ldw	r2,1148(sp)
 800312c:	d9012704 	addi	r4,sp,1180
 8003130:	18c00084 	addi	r3,r3,2
 8003134:	10800044 	addi	r2,r2,1
 8003138:	41000015 	stw	r4,0(r8)
 800313c:	01000084 	movi	r4,2
 8003140:	41000115 	stw	r4,4(r8)
 8003144:	d8c12015 	stw	r3,1152(sp)
 8003148:	d8811f15 	stw	r2,1148(sp)
 800314c:	010001c4 	movi	r4,7
 8003150:	20828716 	blt	r4,r2,8003b70 <___vfprintf_internal_r+0x11d0>
 8003154:	42000204 	addi	r8,r8,8
 8003158:	db013017 	ldw	r12,1216(sp)
 800315c:	00802004 	movi	r2,128
 8003160:	6081e926 	beq	r12,r2,8003908 <___vfprintf_internal_r+0xf68>
 8003164:	db013217 	ldw	r12,1224(sp)
 8003168:	64abc83a 	sub	r21,r12,r18
 800316c:	0540260e 	bge	zero,r21,8003208 <___vfprintf_internal_r+0x868>
 8003170:	07000404 	movi	fp,16
 8003174:	d8811f17 	ldw	r2,1148(sp)
 8003178:	e5443d0e 	bge	fp,r21,8004270 <___vfprintf_internal_r+0x18d0>
 800317c:	01420074 	movhi	r5,2049
 8003180:	294aba84 	addi	r5,r5,10986
 8003184:	d9412c15 	stw	r5,1200(sp)
 8003188:	04c001c4 	movi	r19,7
 800318c:	00000306 	br	800319c <___vfprintf_internal_r+0x7fc>
 8003190:	ad7ffc04 	addi	r21,r21,-16
 8003194:	42000204 	addi	r8,r8,8
 8003198:	e540110e 	bge	fp,r21,80031e0 <___vfprintf_internal_r+0x840>
 800319c:	18c00404 	addi	r3,r3,16
 80031a0:	10800044 	addi	r2,r2,1
 80031a4:	45000015 	stw	r20,0(r8)
 80031a8:	47000115 	stw	fp,4(r8)
 80031ac:	d8c12015 	stw	r3,1152(sp)
 80031b0:	d8811f15 	stw	r2,1148(sp)
 80031b4:	98bff60e 	bge	r19,r2,8003190 <__alt_data_end+0xfc003190>
 80031b8:	b009883a 	mov	r4,r22
 80031bc:	b80b883a 	mov	r5,r23
 80031c0:	d9811e04 	addi	r6,sp,1144
 80031c4:	800a2780 	call	800a278 <__sprint_r>
 80031c8:	103f0c1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 80031cc:	ad7ffc04 	addi	r21,r21,-16
 80031d0:	d8c12017 	ldw	r3,1152(sp)
 80031d4:	d8811f17 	ldw	r2,1148(sp)
 80031d8:	da000404 	addi	r8,sp,16
 80031dc:	e57fef16 	blt	fp,r21,800319c <__alt_data_end+0xfc00319c>
 80031e0:	dac12c17 	ldw	r11,1200(sp)
 80031e4:	1d47883a 	add	r3,r3,r21
 80031e8:	10800044 	addi	r2,r2,1
 80031ec:	42c00015 	stw	r11,0(r8)
 80031f0:	45400115 	stw	r21,4(r8)
 80031f4:	d8c12015 	stw	r3,1152(sp)
 80031f8:	d8811f15 	stw	r2,1148(sp)
 80031fc:	010001c4 	movi	r4,7
 8003200:	20824b16 	blt	r4,r2,8003b30 <___vfprintf_internal_r+0x1190>
 8003204:	42000204 	addi	r8,r8,8
 8003208:	8880400c 	andi	r2,r17,256
 800320c:	1001761e 	bne	r2,zero,80037e8 <___vfprintf_internal_r+0xe48>
 8003210:	d8811f17 	ldw	r2,1148(sp)
 8003214:	db013117 	ldw	r12,1220(sp)
 8003218:	1c87883a 	add	r3,r3,r18
 800321c:	10800044 	addi	r2,r2,1
 8003220:	43000015 	stw	r12,0(r8)
 8003224:	44800115 	stw	r18,4(r8)
 8003228:	d8c12015 	stw	r3,1152(sp)
 800322c:	d8811f15 	stw	r2,1148(sp)
 8003230:	010001c4 	movi	r4,7
 8003234:	20822616 	blt	r4,r2,8003ad0 <___vfprintf_internal_r+0x1130>
 8003238:	42000204 	addi	r8,r8,8
 800323c:	8c40010c 	andi	r17,r17,4
 8003240:	88003126 	beq	r17,zero,8003308 <___vfprintf_internal_r+0x968>
 8003244:	db012e17 	ldw	r12,1208(sp)
 8003248:	dac12b17 	ldw	r11,1196(sp)
 800324c:	62e1c83a 	sub	r16,r12,r11
 8003250:	04002d0e 	bge	zero,r16,8003308 <___vfprintf_internal_r+0x968>
 8003254:	04400404 	movi	r17,16
 8003258:	d8811f17 	ldw	r2,1148(sp)
 800325c:	8c04df0e 	bge	r17,r16,80045dc <___vfprintf_internal_r+0x1c3c>
 8003260:	01020074 	movhi	r4,2049
 8003264:	210abe84 	addi	r4,r4,11002
 8003268:	d9013615 	stw	r4,1240(sp)
 800326c:	048001c4 	movi	r18,7
 8003270:	00000306 	br	8003280 <___vfprintf_internal_r+0x8e0>
 8003274:	843ffc04 	addi	r16,r16,-16
 8003278:	42000204 	addi	r8,r8,8
 800327c:	8c00130e 	bge	r17,r16,80032cc <___vfprintf_internal_r+0x92c>
 8003280:	01420074 	movhi	r5,2049
 8003284:	18c00404 	addi	r3,r3,16
 8003288:	10800044 	addi	r2,r2,1
 800328c:	294abe84 	addi	r5,r5,11002
 8003290:	41400015 	stw	r5,0(r8)
 8003294:	44400115 	stw	r17,4(r8)
 8003298:	d8c12015 	stw	r3,1152(sp)
 800329c:	d8811f15 	stw	r2,1148(sp)
 80032a0:	90bff40e 	bge	r18,r2,8003274 <__alt_data_end+0xfc003274>
 80032a4:	b009883a 	mov	r4,r22
 80032a8:	b80b883a 	mov	r5,r23
 80032ac:	d9811e04 	addi	r6,sp,1144
 80032b0:	800a2780 	call	800a278 <__sprint_r>
 80032b4:	103ed11e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 80032b8:	843ffc04 	addi	r16,r16,-16
 80032bc:	d8c12017 	ldw	r3,1152(sp)
 80032c0:	d8811f17 	ldw	r2,1148(sp)
 80032c4:	da000404 	addi	r8,sp,16
 80032c8:	8c3fed16 	blt	r17,r16,8003280 <__alt_data_end+0xfc003280>
 80032cc:	dac13617 	ldw	r11,1240(sp)
 80032d0:	1c07883a 	add	r3,r3,r16
 80032d4:	10800044 	addi	r2,r2,1
 80032d8:	42c00015 	stw	r11,0(r8)
 80032dc:	44000115 	stw	r16,4(r8)
 80032e0:	d8c12015 	stw	r3,1152(sp)
 80032e4:	d8811f15 	stw	r2,1148(sp)
 80032e8:	010001c4 	movi	r4,7
 80032ec:	2080060e 	bge	r4,r2,8003308 <___vfprintf_internal_r+0x968>
 80032f0:	b009883a 	mov	r4,r22
 80032f4:	b80b883a 	mov	r5,r23
 80032f8:	d9811e04 	addi	r6,sp,1144
 80032fc:	800a2780 	call	800a278 <__sprint_r>
 8003300:	103ebe1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003304:	d8c12017 	ldw	r3,1152(sp)
 8003308:	d8812b17 	ldw	r2,1196(sp)
 800330c:	db012e17 	ldw	r12,1208(sp)
 8003310:	1300010e 	bge	r2,r12,8003318 <___vfprintf_internal_r+0x978>
 8003314:	6005883a 	mov	r2,r12
 8003318:	dac12f17 	ldw	r11,1212(sp)
 800331c:	5897883a 	add	r11,r11,r2
 8003320:	dac12f15 	stw	r11,1212(sp)
 8003324:	1801f21e 	bne	r3,zero,8003af0 <___vfprintf_internal_r+0x1150>
 8003328:	d8011f15 	stw	zero,1148(sp)
 800332c:	da000404 	addi	r8,sp,16
 8003330:	003dd806 	br	8002a94 <__alt_data_end+0xfc002a94>
 8003334:	8c400414 	ori	r17,r17,16
 8003338:	d8c12a15 	stw	r3,1192(sp)
 800333c:	88c0080c 	andi	r3,r17,32
 8003340:	d8812d17 	ldw	r2,1204(sp)
 8003344:	18004626 	beq	r3,zero,8003460 <___vfprintf_internal_r+0xac0>
 8003348:	dac12d17 	ldw	r11,1204(sp)
 800334c:	14c00017 	ldw	r19,0(r2)
 8003350:	17000117 	ldw	fp,4(r2)
 8003354:	5ac00204 	addi	r11,r11,8
 8003358:	dac12d15 	stw	r11,1204(sp)
 800335c:	00800044 	movi	r2,1
 8003360:	9f06b03a 	or	r3,r19,fp
 8003364:	003f0006 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003368:	1805883a 	mov	r2,r3
 800336c:	d8012e15 	stw	zero,1208(sp)
 8003370:	82fff404 	addi	r11,r16,-48
 8003374:	0019883a 	mov	r12,zero
 8003378:	14000007 	ldb	r16,0(r2)
 800337c:	630002a4 	muli	r12,r12,10
 8003380:	18c00044 	addi	r3,r3,1
 8003384:	1805883a 	mov	r2,r3
 8003388:	62d9883a 	add	r12,r12,r11
 800338c:	82fff404 	addi	r11,r16,-48
 8003390:	2afff92e 	bgeu	r5,r11,8003378 <__alt_data_end+0xfc003378>
 8003394:	db012e15 	stw	r12,1208(sp)
 8003398:	003de906 	br	8002b40 <__alt_data_end+0xfc002b40>
 800339c:	8c400414 	ori	r17,r17,16
 80033a0:	d8c12a15 	stw	r3,1192(sp)
 80033a4:	d9812785 	stb	r6,1182(sp)
 80033a8:	8880080c 	andi	r2,r17,32
 80033ac:	d8c12d17 	ldw	r3,1204(sp)
 80033b0:	10007a26 	beq	r2,zero,800359c <___vfprintf_internal_r+0xbfc>
 80033b4:	db012d17 	ldw	r12,1204(sp)
 80033b8:	18800117 	ldw	r2,4(r3)
 80033bc:	1cc00017 	ldw	r19,0(r3)
 80033c0:	63000204 	addi	r12,r12,8
 80033c4:	db012d15 	stw	r12,1204(sp)
 80033c8:	1039883a 	mov	fp,r2
 80033cc:	10031016 	blt	r2,zero,8004010 <___vfprintf_internal_r+0x1670>
 80033d0:	dd412783 	ldbu	r21,1182(sp)
 80033d4:	da413215 	stw	r9,1224(sp)
 80033d8:	00800044 	movi	r2,1
 80033dc:	9f06b03a 	or	r3,r19,fp
 80033e0:	003ee406 	br	8002f74 <__alt_data_end+0xfc002f74>
 80033e4:	03020074 	movhi	r12,2049
 80033e8:	630aa604 	addi	r12,r12,10904
 80033ec:	d8c12a15 	stw	r3,1192(sp)
 80033f0:	d9812785 	stb	r6,1182(sp)
 80033f4:	db013b15 	stw	r12,1260(sp)
 80033f8:	88c0080c 	andi	r3,r17,32
 80033fc:	d8812d17 	ldw	r2,1204(sp)
 8003400:	18002b26 	beq	r3,zero,80034b0 <___vfprintf_internal_r+0xb10>
 8003404:	dac12d17 	ldw	r11,1204(sp)
 8003408:	14c00017 	ldw	r19,0(r2)
 800340c:	17000117 	ldw	fp,4(r2)
 8003410:	5ac00204 	addi	r11,r11,8
 8003414:	dac12d15 	stw	r11,1204(sp)
 8003418:	8880004c 	andi	r2,r17,1
 800341c:	10025b26 	beq	r2,zero,8003d8c <___vfprintf_internal_r+0x13ec>
 8003420:	9f06b03a 	or	r3,r19,fp
 8003424:	18037026 	beq	r3,zero,80041e8 <___vfprintf_internal_r+0x1848>
 8003428:	00800c04 	movi	r2,48
 800342c:	d8812705 	stb	r2,1180(sp)
 8003430:	dc012745 	stb	r16,1181(sp)
 8003434:	8c400094 	ori	r17,r17,2
 8003438:	00800084 	movi	r2,2
 800343c:	003eca06 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003440:	8c400814 	ori	r17,r17,32
 8003444:	1805883a 	mov	r2,r3
 8003448:	1c000007 	ldb	r16,0(r3)
 800344c:	003dbb06 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8003450:	d8c12a15 	stw	r3,1192(sp)
 8003454:	88c0080c 	andi	r3,r17,32
 8003458:	d8812d17 	ldw	r2,1204(sp)
 800345c:	183fba1e 	bne	r3,zero,8003348 <__alt_data_end+0xfc003348>
 8003460:	88c0040c 	andi	r3,r17,16
 8003464:	18024c1e 	bne	r3,zero,8003d98 <___vfprintf_internal_r+0x13f8>
 8003468:	88c0100c 	andi	r3,r17,64
 800346c:	18024a26 	beq	r3,zero,8003d98 <___vfprintf_internal_r+0x13f8>
 8003470:	dac12d17 	ldw	r11,1204(sp)
 8003474:	14c0000b 	ldhu	r19,0(r2)
 8003478:	0039883a 	mov	fp,zero
 800347c:	5ac00104 	addi	r11,r11,4
 8003480:	dac12d15 	stw	r11,1204(sp)
 8003484:	00800044 	movi	r2,1
 8003488:	9807883a 	mov	r3,r19
 800348c:	003eb606 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003490:	00820074 	movhi	r2,2049
 8003494:	108aab04 	addi	r2,r2,10924
 8003498:	d8c12a15 	stw	r3,1192(sp)
 800349c:	d8813b15 	stw	r2,1260(sp)
 80034a0:	d9812785 	stb	r6,1182(sp)
 80034a4:	88c0080c 	andi	r3,r17,32
 80034a8:	d8812d17 	ldw	r2,1204(sp)
 80034ac:	183fd51e 	bne	r3,zero,8003404 <__alt_data_end+0xfc003404>
 80034b0:	88c0040c 	andi	r3,r17,16
 80034b4:	18034126 	beq	r3,zero,80041bc <___vfprintf_internal_r+0x181c>
 80034b8:	db012d17 	ldw	r12,1204(sp)
 80034bc:	14c00017 	ldw	r19,0(r2)
 80034c0:	0039883a 	mov	fp,zero
 80034c4:	63000104 	addi	r12,r12,4
 80034c8:	db012d15 	stw	r12,1204(sp)
 80034cc:	003fd206 	br	8003418 <__alt_data_end+0xfc003418>
 80034d0:	1c000007 	ldb	r16,0(r3)
 80034d4:	81c3d626 	beq	r16,r7,8004430 <___vfprintf_internal_r+0x1a90>
 80034d8:	8c400414 	ori	r17,r17,16
 80034dc:	1805883a 	mov	r2,r3
 80034e0:	003d9606 	br	8002b3c <__alt_data_end+0xfc002b3c>
 80034e4:	d8c12a15 	stw	r3,1192(sp)
 80034e8:	d9812785 	stb	r6,1182(sp)
 80034ec:	8880080c 	andi	r2,r17,32
 80034f0:	10033f26 	beq	r2,zero,80041f0 <___vfprintf_internal_r+0x1850>
 80034f4:	db012d17 	ldw	r12,1204(sp)
 80034f8:	dac12f17 	ldw	r11,1212(sp)
 80034fc:	60800017 	ldw	r2,0(r12)
 8003500:	5807d7fa 	srai	r3,r11,31
 8003504:	63000104 	addi	r12,r12,4
 8003508:	db012d15 	stw	r12,1204(sp)
 800350c:	12c00015 	stw	r11,0(r2)
 8003510:	10c00115 	stw	r3,4(r2)
 8003514:	003d5f06 	br	8002a94 <__alt_data_end+0xfc002a94>
 8003518:	d8c12a15 	stw	r3,1192(sp)
 800351c:	88c0080c 	andi	r3,r17,32
 8003520:	d8812d17 	ldw	r2,1204(sp)
 8003524:	183e891e 	bne	r3,zero,8002f4c <__alt_data_end+0xfc002f4c>
 8003528:	88c0040c 	andi	r3,r17,16
 800352c:	1801ea1e 	bne	r3,zero,8003cd8 <___vfprintf_internal_r+0x1338>
 8003530:	88c0100c 	andi	r3,r17,64
 8003534:	1801e826 	beq	r3,zero,8003cd8 <___vfprintf_internal_r+0x1338>
 8003538:	db012d17 	ldw	r12,1204(sp)
 800353c:	14c0000b 	ldhu	r19,0(r2)
 8003540:	0039883a 	mov	fp,zero
 8003544:	63000104 	addi	r12,r12,4
 8003548:	db012d15 	stw	r12,1204(sp)
 800354c:	0005883a 	mov	r2,zero
 8003550:	9807883a 	mov	r3,r19
 8003554:	003e8406 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003558:	30803fcc 	andi	r2,r6,255
 800355c:	1080201c 	xori	r2,r2,128
 8003560:	10bfe004 	addi	r2,r2,-128
 8003564:	10031d1e 	bne	r2,zero,80041dc <___vfprintf_internal_r+0x183c>
 8003568:	1805883a 	mov	r2,r3
 800356c:	01800804 	movi	r6,32
 8003570:	1c000007 	ldb	r16,0(r3)
 8003574:	003d7106 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8003578:	8c400054 	ori	r17,r17,1
 800357c:	1805883a 	mov	r2,r3
 8003580:	1c000007 	ldb	r16,0(r3)
 8003584:	003d6d06 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8003588:	d8c12a15 	stw	r3,1192(sp)
 800358c:	d9812785 	stb	r6,1182(sp)
 8003590:	8880080c 	andi	r2,r17,32
 8003594:	d8c12d17 	ldw	r3,1204(sp)
 8003598:	103f861e 	bne	r2,zero,80033b4 <__alt_data_end+0xfc0033b4>
 800359c:	8880040c 	andi	r2,r17,16
 80035a0:	1001f31e 	bne	r2,zero,8003d70 <___vfprintf_internal_r+0x13d0>
 80035a4:	8880100c 	andi	r2,r17,64
 80035a8:	1001f126 	beq	r2,zero,8003d70 <___vfprintf_internal_r+0x13d0>
 80035ac:	1cc0000f 	ldh	r19,0(r3)
 80035b0:	db012d17 	ldw	r12,1204(sp)
 80035b4:	9839d7fa 	srai	fp,r19,31
 80035b8:	63000104 	addi	r12,r12,4
 80035bc:	db012d15 	stw	r12,1204(sp)
 80035c0:	e005883a 	mov	r2,fp
 80035c4:	003f8106 	br	80033cc <__alt_data_end+0xfc0033cc>
 80035c8:	8c401014 	ori	r17,r17,64
 80035cc:	1805883a 	mov	r2,r3
 80035d0:	1c000007 	ldb	r16,0(r3)
 80035d4:	003d5906 	br	8002b3c <__alt_data_end+0xfc002b3c>
 80035d8:	db012d17 	ldw	r12,1204(sp)
 80035dc:	d8c12a15 	stw	r3,1192(sp)
 80035e0:	00c00044 	movi	r3,1
 80035e4:	60800017 	ldw	r2,0(r12)
 80035e8:	63000104 	addi	r12,r12,4
 80035ec:	d8c12b15 	stw	r3,1196(sp)
 80035f0:	d8012785 	stb	zero,1182(sp)
 80035f4:	d8810405 	stb	r2,1040(sp)
 80035f8:	db012d15 	stw	r12,1204(sp)
 80035fc:	dac10404 	addi	r11,sp,1040
 8003600:	1825883a 	mov	r18,r3
 8003604:	d8013215 	stw	zero,1224(sp)
 8003608:	d8013415 	stw	zero,1232(sp)
 800360c:	dac13115 	stw	r11,1220(sp)
 8003610:	0005883a 	mov	r2,zero
 8003614:	003e7d06 	br	800300c <__alt_data_end+0xfc00300c>
 8003618:	db012d17 	ldw	r12,1204(sp)
 800361c:	00800c04 	movi	r2,48
 8003620:	d8812705 	stb	r2,1180(sp)
 8003624:	64c00017 	ldw	r19,0(r12)
 8003628:	00801e04 	movi	r2,120
 800362c:	d8812745 	stb	r2,1181(sp)
 8003630:	00820074 	movhi	r2,2049
 8003634:	108aab04 	addi	r2,r2,10924
 8003638:	63000104 	addi	r12,r12,4
 800363c:	d8c12a15 	stw	r3,1192(sp)
 8003640:	d8813b15 	stw	r2,1260(sp)
 8003644:	0039883a 	mov	fp,zero
 8003648:	8c400094 	ori	r17,r17,2
 800364c:	db012d15 	stw	r12,1204(sp)
 8003650:	00800084 	movi	r2,2
 8003654:	04001e04 	movi	r16,120
 8003658:	9807883a 	mov	r3,r19
 800365c:	003e4206 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003660:	dac12d17 	ldw	r11,1204(sp)
 8003664:	db012d17 	ldw	r12,1204(sp)
 8003668:	d8c12a15 	stw	r3,1192(sp)
 800366c:	5ac00017 	ldw	r11,0(r11)
 8003670:	d8012785 	stb	zero,1182(sp)
 8003674:	64c00104 	addi	r19,r12,4
 8003678:	dac13115 	stw	r11,1220(sp)
 800367c:	5803e826 	beq	r11,zero,8004620 <___vfprintf_internal_r+0x1c80>
 8003680:	d9013117 	ldw	r4,1220(sp)
 8003684:	48037a16 	blt	r9,zero,8004470 <___vfprintf_internal_r+0x1ad0>
 8003688:	480d883a 	mov	r6,r9
 800368c:	000b883a 	mov	r5,zero
 8003690:	da013f15 	stw	r8,1276(sp)
 8003694:	da413e15 	stw	r9,1272(sp)
 8003698:	80079d40 	call	80079d4 <memchr>
 800369c:	da013f17 	ldw	r8,1276(sp)
 80036a0:	da413e17 	ldw	r9,1272(sp)
 80036a4:	10044426 	beq	r2,zero,80047b8 <___vfprintf_internal_r+0x1e18>
 80036a8:	d8c13117 	ldw	r3,1220(sp)
 80036ac:	10e5c83a 	sub	r18,r2,r3
 80036b0:	4c834416 	blt	r9,r18,80043c4 <___vfprintf_internal_r+0x1a24>
 80036b4:	9005883a 	mov	r2,r18
 80036b8:	90037216 	blt	r18,zero,8004484 <___vfprintf_internal_r+0x1ae4>
 80036bc:	dd412783 	ldbu	r21,1182(sp)
 80036c0:	d8812b15 	stw	r2,1196(sp)
 80036c4:	dcc12d15 	stw	r19,1204(sp)
 80036c8:	d8013215 	stw	zero,1224(sp)
 80036cc:	d8013415 	stw	zero,1232(sp)
 80036d0:	003e4706 	br	8002ff0 <__alt_data_end+0xfc002ff0>
 80036d4:	dac12d17 	ldw	r11,1204(sp)
 80036d8:	db012d17 	ldw	r12,1204(sp)
 80036dc:	5ac00017 	ldw	r11,0(r11)
 80036e0:	dac12e15 	stw	r11,1208(sp)
 80036e4:	62c00104 	addi	r11,r12,4
 80036e8:	db012e17 	ldw	r12,1208(sp)
 80036ec:	60034a16 	blt	r12,zero,8004418 <___vfprintf_internal_r+0x1a78>
 80036f0:	dac12d15 	stw	r11,1204(sp)
 80036f4:	1805883a 	mov	r2,r3
 80036f8:	1c000007 	ldb	r16,0(r3)
 80036fc:	003d0f06 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8003700:	1805883a 	mov	r2,r3
 8003704:	01800ac4 	movi	r6,43
 8003708:	1c000007 	ldb	r16,0(r3)
 800370c:	003d0b06 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8003710:	d8c12a15 	stw	r3,1192(sp)
 8003714:	d9812785 	stb	r6,1182(sp)
 8003718:	803db226 	beq	r16,zero,8002de4 <__alt_data_end+0xfc002de4>
 800371c:	00c00044 	movi	r3,1
 8003720:	d8c12b15 	stw	r3,1196(sp)
 8003724:	dc010405 	stb	r16,1040(sp)
 8003728:	d8012785 	stb	zero,1182(sp)
 800372c:	003fb306 	br	80035fc <__alt_data_end+0xfc0035fc>
 8003730:	d8c12017 	ldw	r3,1152(sp)
 8003734:	003e6d06 	br	80030ec <__alt_data_end+0xfc0030ec>
 8003738:	10803fcc 	andi	r2,r2,255
 800373c:	00c00044 	movi	r3,1
 8003740:	10fe141e 	bne	r2,r3,8002f94 <__alt_data_end+0xfc002f94>
 8003744:	e000021e 	bne	fp,zero,8003750 <___vfprintf_internal_r+0xdb0>
 8003748:	00800244 	movi	r2,9
 800374c:	14c0202e 	bgeu	r2,r19,80037d0 <___vfprintf_internal_r+0xe30>
 8003750:	dc012b15 	stw	r16,1196(sp)
 8003754:	dc412c15 	stw	r17,1200(sp)
 8003758:	9821883a 	mov	r16,r19
 800375c:	e023883a 	mov	r17,fp
 8003760:	dc810e04 	addi	r18,sp,1080
 8003764:	4027883a 	mov	r19,r8
 8003768:	4839883a 	mov	fp,r9
 800376c:	8009883a 	mov	r4,r16
 8003770:	880b883a 	mov	r5,r17
 8003774:	01800284 	movi	r6,10
 8003778:	000f883a 	mov	r7,zero
 800377c:	800d0a80 	call	800d0a8 <__umoddi3>
 8003780:	10800c04 	addi	r2,r2,48
 8003784:	94bfffc4 	addi	r18,r18,-1
 8003788:	8009883a 	mov	r4,r16
 800378c:	880b883a 	mov	r5,r17
 8003790:	01800284 	movi	r6,10
 8003794:	000f883a 	mov	r7,zero
 8003798:	90800005 	stb	r2,0(r18)
 800379c:	800cae80 	call	800cae8 <__udivdi3>
 80037a0:	1021883a 	mov	r16,r2
 80037a4:	10c4b03a 	or	r2,r2,r3
 80037a8:	1823883a 	mov	r17,r3
 80037ac:	103fef1e 	bne	r2,zero,800376c <__alt_data_end+0xfc00376c>
 80037b0:	dac12817 	ldw	r11,1184(sp)
 80037b4:	dc813115 	stw	r18,1220(sp)
 80037b8:	dc012b17 	ldw	r16,1196(sp)
 80037bc:	9811883a 	mov	r8,r19
 80037c0:	dc412c17 	ldw	r17,1200(sp)
 80037c4:	e013883a 	mov	r9,fp
 80037c8:	5ca5c83a 	sub	r18,r11,r18
 80037cc:	003e0306 	br	8002fdc <__alt_data_end+0xfc002fdc>
 80037d0:	9cc00c04 	addi	r19,r19,48
 80037d4:	d8c10dc4 	addi	r3,sp,1079
 80037d8:	dcc10dc5 	stb	r19,1079(sp)
 80037dc:	dc813c17 	ldw	r18,1264(sp)
 80037e0:	d8c13115 	stw	r3,1220(sp)
 80037e4:	003dfd06 	br	8002fdc <__alt_data_end+0xfc002fdc>
 80037e8:	00801944 	movi	r2,101
 80037ec:	1400710e 	bge	r2,r16,80039b4 <___vfprintf_internal_r+0x1014>
 80037f0:	d9013717 	ldw	r4,1244(sp)
 80037f4:	d9413917 	ldw	r5,1252(sp)
 80037f8:	000d883a 	mov	r6,zero
 80037fc:	000f883a 	mov	r7,zero
 8003800:	d8c13d15 	stw	r3,1268(sp)
 8003804:	da013f15 	stw	r8,1276(sp)
 8003808:	800e8cc0 	call	800e8cc <__eqdf2>
 800380c:	d8c13d17 	ldw	r3,1268(sp)
 8003810:	da013f17 	ldw	r8,1276(sp)
 8003814:	1000ef1e 	bne	r2,zero,8003bd4 <___vfprintf_internal_r+0x1234>
 8003818:	d8811f17 	ldw	r2,1148(sp)
 800381c:	01020074 	movhi	r4,2049
 8003820:	210ab204 	addi	r4,r4,10952
 8003824:	18c00044 	addi	r3,r3,1
 8003828:	10800044 	addi	r2,r2,1
 800382c:	41000015 	stw	r4,0(r8)
 8003830:	01000044 	movi	r4,1
 8003834:	41000115 	stw	r4,4(r8)
 8003838:	d8c12015 	stw	r3,1152(sp)
 800383c:	d8811f15 	stw	r2,1148(sp)
 8003840:	010001c4 	movi	r4,7
 8003844:	20828e16 	blt	r4,r2,8004280 <___vfprintf_internal_r+0x18e0>
 8003848:	42000204 	addi	r8,r8,8
 800384c:	d8812617 	ldw	r2,1176(sp)
 8003850:	dac13317 	ldw	r11,1228(sp)
 8003854:	12c00216 	blt	r2,r11,8003860 <___vfprintf_internal_r+0xec0>
 8003858:	8880004c 	andi	r2,r17,1
 800385c:	103e7726 	beq	r2,zero,800323c <__alt_data_end+0xfc00323c>
 8003860:	db013817 	ldw	r12,1248(sp)
 8003864:	d8811f17 	ldw	r2,1148(sp)
 8003868:	dac13517 	ldw	r11,1236(sp)
 800386c:	1b07883a 	add	r3,r3,r12
 8003870:	10800044 	addi	r2,r2,1
 8003874:	42c00015 	stw	r11,0(r8)
 8003878:	43000115 	stw	r12,4(r8)
 800387c:	d8c12015 	stw	r3,1152(sp)
 8003880:	d8811f15 	stw	r2,1148(sp)
 8003884:	010001c4 	movi	r4,7
 8003888:	2082ed16 	blt	r4,r2,8004440 <___vfprintf_internal_r+0x1aa0>
 800388c:	42000204 	addi	r8,r8,8
 8003890:	db013317 	ldw	r12,1228(sp)
 8003894:	643fffc4 	addi	r16,r12,-1
 8003898:	043e680e 	bge	zero,r16,800323c <__alt_data_end+0xfc00323c>
 800389c:	04800404 	movi	r18,16
 80038a0:	d8811f17 	ldw	r2,1148(sp)
 80038a4:	94007e0e 	bge	r18,r16,8003aa0 <___vfprintf_internal_r+0x1100>
 80038a8:	01420074 	movhi	r5,2049
 80038ac:	294aba84 	addi	r5,r5,10986
 80038b0:	d9412c15 	stw	r5,1200(sp)
 80038b4:	054001c4 	movi	r21,7
 80038b8:	00000306 	br	80038c8 <___vfprintf_internal_r+0xf28>
 80038bc:	42000204 	addi	r8,r8,8
 80038c0:	843ffc04 	addi	r16,r16,-16
 80038c4:	9400790e 	bge	r18,r16,8003aac <___vfprintf_internal_r+0x110c>
 80038c8:	18c00404 	addi	r3,r3,16
 80038cc:	10800044 	addi	r2,r2,1
 80038d0:	45000015 	stw	r20,0(r8)
 80038d4:	44800115 	stw	r18,4(r8)
 80038d8:	d8c12015 	stw	r3,1152(sp)
 80038dc:	d8811f15 	stw	r2,1148(sp)
 80038e0:	a8bff60e 	bge	r21,r2,80038bc <__alt_data_end+0xfc0038bc>
 80038e4:	b009883a 	mov	r4,r22
 80038e8:	b80b883a 	mov	r5,r23
 80038ec:	d9811e04 	addi	r6,sp,1144
 80038f0:	800a2780 	call	800a278 <__sprint_r>
 80038f4:	103d411e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 80038f8:	d8c12017 	ldw	r3,1152(sp)
 80038fc:	d8811f17 	ldw	r2,1148(sp)
 8003900:	da000404 	addi	r8,sp,16
 8003904:	003fee06 	br	80038c0 <__alt_data_end+0xfc0038c0>
 8003908:	dac12e17 	ldw	r11,1208(sp)
 800390c:	db012b17 	ldw	r12,1196(sp)
 8003910:	5b2bc83a 	sub	r21,r11,r12
 8003914:	057e130e 	bge	zero,r21,8003164 <__alt_data_end+0xfc003164>
 8003918:	07000404 	movi	fp,16
 800391c:	d8811f17 	ldw	r2,1148(sp)
 8003920:	e543640e 	bge	fp,r21,80046b4 <___vfprintf_internal_r+0x1d14>
 8003924:	01420074 	movhi	r5,2049
 8003928:	294aba84 	addi	r5,r5,10986
 800392c:	d9412c15 	stw	r5,1200(sp)
 8003930:	04c001c4 	movi	r19,7
 8003934:	00000306 	br	8003944 <___vfprintf_internal_r+0xfa4>
 8003938:	ad7ffc04 	addi	r21,r21,-16
 800393c:	42000204 	addi	r8,r8,8
 8003940:	e540110e 	bge	fp,r21,8003988 <___vfprintf_internal_r+0xfe8>
 8003944:	18c00404 	addi	r3,r3,16
 8003948:	10800044 	addi	r2,r2,1
 800394c:	45000015 	stw	r20,0(r8)
 8003950:	47000115 	stw	fp,4(r8)
 8003954:	d8c12015 	stw	r3,1152(sp)
 8003958:	d8811f15 	stw	r2,1148(sp)
 800395c:	98bff60e 	bge	r19,r2,8003938 <__alt_data_end+0xfc003938>
 8003960:	b009883a 	mov	r4,r22
 8003964:	b80b883a 	mov	r5,r23
 8003968:	d9811e04 	addi	r6,sp,1144
 800396c:	800a2780 	call	800a278 <__sprint_r>
 8003970:	103d221e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003974:	ad7ffc04 	addi	r21,r21,-16
 8003978:	d8c12017 	ldw	r3,1152(sp)
 800397c:	d8811f17 	ldw	r2,1148(sp)
 8003980:	da000404 	addi	r8,sp,16
 8003984:	e57fef16 	blt	fp,r21,8003944 <__alt_data_end+0xfc003944>
 8003988:	dac12c17 	ldw	r11,1200(sp)
 800398c:	1d47883a 	add	r3,r3,r21
 8003990:	10800044 	addi	r2,r2,1
 8003994:	42c00015 	stw	r11,0(r8)
 8003998:	45400115 	stw	r21,4(r8)
 800399c:	d8c12015 	stw	r3,1152(sp)
 80039a0:	d8811f15 	stw	r2,1148(sp)
 80039a4:	010001c4 	movi	r4,7
 80039a8:	20819116 	blt	r4,r2,8003ff0 <___vfprintf_internal_r+0x1650>
 80039ac:	42000204 	addi	r8,r8,8
 80039b0:	003dec06 	br	8003164 <__alt_data_end+0xfc003164>
 80039b4:	db013317 	ldw	r12,1228(sp)
 80039b8:	00800044 	movi	r2,1
 80039bc:	18c00044 	addi	r3,r3,1
 80039c0:	1301530e 	bge	r2,r12,8003f10 <___vfprintf_internal_r+0x1570>
 80039c4:	dc011f17 	ldw	r16,1148(sp)
 80039c8:	dac13117 	ldw	r11,1220(sp)
 80039cc:	00800044 	movi	r2,1
 80039d0:	84000044 	addi	r16,r16,1
 80039d4:	40800115 	stw	r2,4(r8)
 80039d8:	42c00015 	stw	r11,0(r8)
 80039dc:	d8c12015 	stw	r3,1152(sp)
 80039e0:	dc011f15 	stw	r16,1148(sp)
 80039e4:	008001c4 	movi	r2,7
 80039e8:	14016b16 	blt	r2,r16,8003f98 <___vfprintf_internal_r+0x15f8>
 80039ec:	42000204 	addi	r8,r8,8
 80039f0:	db013817 	ldw	r12,1248(sp)
 80039f4:	dac13517 	ldw	r11,1236(sp)
 80039f8:	84000044 	addi	r16,r16,1
 80039fc:	1b07883a 	add	r3,r3,r12
 8003a00:	42c00015 	stw	r11,0(r8)
 8003a04:	43000115 	stw	r12,4(r8)
 8003a08:	d8c12015 	stw	r3,1152(sp)
 8003a0c:	dc011f15 	stw	r16,1148(sp)
 8003a10:	008001c4 	movi	r2,7
 8003a14:	14016916 	blt	r2,r16,8003fbc <___vfprintf_internal_r+0x161c>
 8003a18:	44800204 	addi	r18,r8,8
 8003a1c:	d9013717 	ldw	r4,1244(sp)
 8003a20:	d9413917 	ldw	r5,1252(sp)
 8003a24:	000d883a 	mov	r6,zero
 8003a28:	000f883a 	mov	r7,zero
 8003a2c:	d8c13d15 	stw	r3,1268(sp)
 8003a30:	800e8cc0 	call	800e8cc <__eqdf2>
 8003a34:	d8c13d17 	ldw	r3,1268(sp)
 8003a38:	db013317 	ldw	r12,1228(sp)
 8003a3c:	1000ae26 	beq	r2,zero,8003cf8 <___vfprintf_internal_r+0x1358>
 8003a40:	dac13117 	ldw	r11,1220(sp)
 8003a44:	60bfffc4 	addi	r2,r12,-1
 8003a48:	1887883a 	add	r3,r3,r2
 8003a4c:	59000044 	addi	r4,r11,1
 8003a50:	84000044 	addi	r16,r16,1
 8003a54:	90800115 	stw	r2,4(r18)
 8003a58:	91000015 	stw	r4,0(r18)
 8003a5c:	d8c12015 	stw	r3,1152(sp)
 8003a60:	dc011f15 	stw	r16,1148(sp)
 8003a64:	008001c4 	movi	r2,7
 8003a68:	14014216 	blt	r2,r16,8003f74 <___vfprintf_internal_r+0x15d4>
 8003a6c:	94800204 	addi	r18,r18,8
 8003a70:	dac13a17 	ldw	r11,1256(sp)
 8003a74:	dd4122c4 	addi	r21,sp,1163
 8003a78:	84000044 	addi	r16,r16,1
 8003a7c:	58c7883a 	add	r3,r11,r3
 8003a80:	95400015 	stw	r21,0(r18)
 8003a84:	92c00115 	stw	r11,4(r18)
 8003a88:	d8c12015 	stw	r3,1152(sp)
 8003a8c:	dc011f15 	stw	r16,1148(sp)
 8003a90:	008001c4 	movi	r2,7
 8003a94:	14000e16 	blt	r2,r16,8003ad0 <___vfprintf_internal_r+0x1130>
 8003a98:	92000204 	addi	r8,r18,8
 8003a9c:	003de706 	br	800323c <__alt_data_end+0xfc00323c>
 8003aa0:	01020074 	movhi	r4,2049
 8003aa4:	210aba84 	addi	r4,r4,10986
 8003aa8:	d9012c15 	stw	r4,1200(sp)
 8003aac:	dac12c17 	ldw	r11,1200(sp)
 8003ab0:	1c07883a 	add	r3,r3,r16
 8003ab4:	44000115 	stw	r16,4(r8)
 8003ab8:	42c00015 	stw	r11,0(r8)
 8003abc:	10800044 	addi	r2,r2,1
 8003ac0:	d8c12015 	stw	r3,1152(sp)
 8003ac4:	d8811f15 	stw	r2,1148(sp)
 8003ac8:	010001c4 	movi	r4,7
 8003acc:	20bdda0e 	bge	r4,r2,8003238 <__alt_data_end+0xfc003238>
 8003ad0:	b009883a 	mov	r4,r22
 8003ad4:	b80b883a 	mov	r5,r23
 8003ad8:	d9811e04 	addi	r6,sp,1144
 8003adc:	800a2780 	call	800a278 <__sprint_r>
 8003ae0:	103cc61e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003ae4:	d8c12017 	ldw	r3,1152(sp)
 8003ae8:	da000404 	addi	r8,sp,16
 8003aec:	003dd306 	br	800323c <__alt_data_end+0xfc00323c>
 8003af0:	b009883a 	mov	r4,r22
 8003af4:	b80b883a 	mov	r5,r23
 8003af8:	d9811e04 	addi	r6,sp,1144
 8003afc:	800a2780 	call	800a278 <__sprint_r>
 8003b00:	103e0926 	beq	r2,zero,8003328 <__alt_data_end+0xfc003328>
 8003b04:	003cbd06 	br	8002dfc <__alt_data_end+0xfc002dfc>
 8003b08:	10803fcc 	andi	r2,r2,255
 8003b0c:	1000651e 	bne	r2,zero,8003ca4 <___vfprintf_internal_r+0x1304>
 8003b10:	8880004c 	andi	r2,r17,1
 8003b14:	10013226 	beq	r2,zero,8003fe0 <___vfprintf_internal_r+0x1640>
 8003b18:	00800c04 	movi	r2,48
 8003b1c:	d8c10dc4 	addi	r3,sp,1079
 8003b20:	d8810dc5 	stb	r2,1079(sp)
 8003b24:	dc813c17 	ldw	r18,1264(sp)
 8003b28:	d8c13115 	stw	r3,1220(sp)
 8003b2c:	003d2b06 	br	8002fdc <__alt_data_end+0xfc002fdc>
 8003b30:	b009883a 	mov	r4,r22
 8003b34:	b80b883a 	mov	r5,r23
 8003b38:	d9811e04 	addi	r6,sp,1144
 8003b3c:	800a2780 	call	800a278 <__sprint_r>
 8003b40:	103cae1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003b44:	d8c12017 	ldw	r3,1152(sp)
 8003b48:	da000404 	addi	r8,sp,16
 8003b4c:	003dae06 	br	8003208 <__alt_data_end+0xfc003208>
 8003b50:	b009883a 	mov	r4,r22
 8003b54:	b80b883a 	mov	r5,r23
 8003b58:	d9811e04 	addi	r6,sp,1144
 8003b5c:	800a2780 	call	800a278 <__sprint_r>
 8003b60:	103ca61e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003b64:	d8c12017 	ldw	r3,1152(sp)
 8003b68:	da000404 	addi	r8,sp,16
 8003b6c:	003d6c06 	br	8003120 <__alt_data_end+0xfc003120>
 8003b70:	b009883a 	mov	r4,r22
 8003b74:	b80b883a 	mov	r5,r23
 8003b78:	d9811e04 	addi	r6,sp,1144
 8003b7c:	800a2780 	call	800a278 <__sprint_r>
 8003b80:	103c9e1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003b84:	d8c12017 	ldw	r3,1152(sp)
 8003b88:	da000404 	addi	r8,sp,16
 8003b8c:	003d7206 	br	8003158 <__alt_data_end+0xfc003158>
 8003b90:	d9413b17 	ldw	r5,1260(sp)
 8003b94:	d8c10e04 	addi	r3,sp,1080
 8003b98:	988003cc 	andi	r2,r19,15
 8003b9c:	e008973a 	slli	r4,fp,28
 8003ba0:	2885883a 	add	r2,r5,r2
 8003ba4:	9826d13a 	srli	r19,r19,4
 8003ba8:	10800003 	ldbu	r2,0(r2)
 8003bac:	e038d13a 	srli	fp,fp,4
 8003bb0:	18ffffc4 	addi	r3,r3,-1
 8003bb4:	24e6b03a 	or	r19,r4,r19
 8003bb8:	18800005 	stb	r2,0(r3)
 8003bbc:	9f04b03a 	or	r2,r19,fp
 8003bc0:	103ff51e 	bne	r2,zero,8003b98 <__alt_data_end+0xfc003b98>
 8003bc4:	db012817 	ldw	r12,1184(sp)
 8003bc8:	d8c13115 	stw	r3,1220(sp)
 8003bcc:	60e5c83a 	sub	r18,r12,r3
 8003bd0:	003d0206 	br	8002fdc <__alt_data_end+0xfc002fdc>
 8003bd4:	dc012617 	ldw	r16,1176(sp)
 8003bd8:	0401b10e 	bge	zero,r16,80042a0 <___vfprintf_internal_r+0x1900>
 8003bdc:	db013117 	ldw	r12,1220(sp)
 8003be0:	dac13317 	ldw	r11,1228(sp)
 8003be4:	62e1883a 	add	r16,r12,r11
 8003be8:	db013417 	ldw	r12,1232(sp)
 8003bec:	5825883a 	mov	r18,r11
 8003bf0:	62c0010e 	bge	r12,r11,8003bf8 <___vfprintf_internal_r+0x1258>
 8003bf4:	6025883a 	mov	r18,r12
 8003bf8:	04800b0e 	bge	zero,r18,8003c28 <___vfprintf_internal_r+0x1288>
 8003bfc:	d8811f17 	ldw	r2,1148(sp)
 8003c00:	dac13117 	ldw	r11,1220(sp)
 8003c04:	1c87883a 	add	r3,r3,r18
 8003c08:	10800044 	addi	r2,r2,1
 8003c0c:	42c00015 	stw	r11,0(r8)
 8003c10:	44800115 	stw	r18,4(r8)
 8003c14:	d8c12015 	stw	r3,1152(sp)
 8003c18:	d8811f15 	stw	r2,1148(sp)
 8003c1c:	010001c4 	movi	r4,7
 8003c20:	20824f16 	blt	r4,r2,8004560 <___vfprintf_internal_r+0x1bc0>
 8003c24:	42000204 	addi	r8,r8,8
 8003c28:	90024b16 	blt	r18,zero,8004558 <___vfprintf_internal_r+0x1bb8>
 8003c2c:	db013417 	ldw	r12,1232(sp)
 8003c30:	64a5c83a 	sub	r18,r12,r18
 8003c34:	0480730e 	bge	zero,r18,8003e04 <___vfprintf_internal_r+0x1464>
 8003c38:	05400404 	movi	r21,16
 8003c3c:	d8811f17 	ldw	r2,1148(sp)
 8003c40:	ac817d0e 	bge	r21,r18,8004238 <___vfprintf_internal_r+0x1898>
 8003c44:	01420074 	movhi	r5,2049
 8003c48:	294aba84 	addi	r5,r5,10986
 8003c4c:	d9412c15 	stw	r5,1200(sp)
 8003c50:	070001c4 	movi	fp,7
 8003c54:	00000306 	br	8003c64 <___vfprintf_internal_r+0x12c4>
 8003c58:	42000204 	addi	r8,r8,8
 8003c5c:	94bffc04 	addi	r18,r18,-16
 8003c60:	ac81780e 	bge	r21,r18,8004244 <___vfprintf_internal_r+0x18a4>
 8003c64:	18c00404 	addi	r3,r3,16
 8003c68:	10800044 	addi	r2,r2,1
 8003c6c:	45000015 	stw	r20,0(r8)
 8003c70:	45400115 	stw	r21,4(r8)
 8003c74:	d8c12015 	stw	r3,1152(sp)
 8003c78:	d8811f15 	stw	r2,1148(sp)
 8003c7c:	e0bff60e 	bge	fp,r2,8003c58 <__alt_data_end+0xfc003c58>
 8003c80:	b009883a 	mov	r4,r22
 8003c84:	b80b883a 	mov	r5,r23
 8003c88:	d9811e04 	addi	r6,sp,1144
 8003c8c:	800a2780 	call	800a278 <__sprint_r>
 8003c90:	103c5a1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003c94:	d8c12017 	ldw	r3,1152(sp)
 8003c98:	d8811f17 	ldw	r2,1148(sp)
 8003c9c:	da000404 	addi	r8,sp,16
 8003ca0:	003fee06 	br	8003c5c <__alt_data_end+0xfc003c5c>
 8003ca4:	dac10e04 	addi	r11,sp,1080
 8003ca8:	0025883a 	mov	r18,zero
 8003cac:	dac13115 	stw	r11,1220(sp)
 8003cb0:	003cca06 	br	8002fdc <__alt_data_end+0xfc002fdc>
 8003cb4:	b009883a 	mov	r4,r22
 8003cb8:	b80b883a 	mov	r5,r23
 8003cbc:	d9811e04 	addi	r6,sp,1144
 8003cc0:	800a2780 	call	800a278 <__sprint_r>
 8003cc4:	103c4d1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003cc8:	d8c12017 	ldw	r3,1152(sp)
 8003ccc:	d8812787 	ldb	r2,1182(sp)
 8003cd0:	da000404 	addi	r8,sp,16
 8003cd4:	003d0506 	br	80030ec <__alt_data_end+0xfc0030ec>
 8003cd8:	dac12d17 	ldw	r11,1204(sp)
 8003cdc:	14c00017 	ldw	r19,0(r2)
 8003ce0:	0039883a 	mov	fp,zero
 8003ce4:	5ac00104 	addi	r11,r11,4
 8003ce8:	dac12d15 	stw	r11,1204(sp)
 8003cec:	0005883a 	mov	r2,zero
 8003cf0:	9807883a 	mov	r3,r19
 8003cf4:	003c9c06 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003cf8:	657fffc4 	addi	r21,r12,-1
 8003cfc:	057f5c0e 	bge	zero,r21,8003a70 <__alt_data_end+0xfc003a70>
 8003d00:	07000404 	movi	fp,16
 8003d04:	e5408f0e 	bge	fp,r21,8003f44 <___vfprintf_internal_r+0x15a4>
 8003d08:	01020074 	movhi	r4,2049
 8003d0c:	210aba84 	addi	r4,r4,10986
 8003d10:	d9012c15 	stw	r4,1200(sp)
 8003d14:	01c001c4 	movi	r7,7
 8003d18:	00000306 	br	8003d28 <___vfprintf_internal_r+0x1388>
 8003d1c:	94800204 	addi	r18,r18,8
 8003d20:	ad7ffc04 	addi	r21,r21,-16
 8003d24:	e5408a0e 	bge	fp,r21,8003f50 <___vfprintf_internal_r+0x15b0>
 8003d28:	18c00404 	addi	r3,r3,16
 8003d2c:	84000044 	addi	r16,r16,1
 8003d30:	95000015 	stw	r20,0(r18)
 8003d34:	97000115 	stw	fp,4(r18)
 8003d38:	d8c12015 	stw	r3,1152(sp)
 8003d3c:	dc011f15 	stw	r16,1148(sp)
 8003d40:	3c3ff60e 	bge	r7,r16,8003d1c <__alt_data_end+0xfc003d1c>
 8003d44:	b009883a 	mov	r4,r22
 8003d48:	b80b883a 	mov	r5,r23
 8003d4c:	d9811e04 	addi	r6,sp,1144
 8003d50:	d9c13d15 	stw	r7,1268(sp)
 8003d54:	800a2780 	call	800a278 <__sprint_r>
 8003d58:	d9c13d17 	ldw	r7,1268(sp)
 8003d5c:	103c271e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003d60:	d8c12017 	ldw	r3,1152(sp)
 8003d64:	dc011f17 	ldw	r16,1148(sp)
 8003d68:	dc800404 	addi	r18,sp,16
 8003d6c:	003fec06 	br	8003d20 <__alt_data_end+0xfc003d20>
 8003d70:	1cc00017 	ldw	r19,0(r3)
 8003d74:	dac12d17 	ldw	r11,1204(sp)
 8003d78:	9839d7fa 	srai	fp,r19,31
 8003d7c:	5ac00104 	addi	r11,r11,4
 8003d80:	dac12d15 	stw	r11,1204(sp)
 8003d84:	e005883a 	mov	r2,fp
 8003d88:	003d9006 	br	80033cc <__alt_data_end+0xfc0033cc>
 8003d8c:	00800084 	movi	r2,2
 8003d90:	9f06b03a 	or	r3,r19,fp
 8003d94:	003c7406 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003d98:	db012d17 	ldw	r12,1204(sp)
 8003d9c:	14c00017 	ldw	r19,0(r2)
 8003da0:	0039883a 	mov	fp,zero
 8003da4:	63000104 	addi	r12,r12,4
 8003da8:	db012d15 	stw	r12,1204(sp)
 8003dac:	00800044 	movi	r2,1
 8003db0:	9807883a 	mov	r3,r19
 8003db4:	003c6c06 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003db8:	10803fcc 	andi	r2,r2,255
 8003dbc:	1080201c 	xori	r2,r2,128
 8003dc0:	10bfe004 	addi	r2,r2,-128
 8003dc4:	01000c04 	movi	r4,48
 8003dc8:	1101a526 	beq	r2,r4,8004460 <___vfprintf_internal_r+0x1ac0>
 8003dcc:	dac13117 	ldw	r11,1220(sp)
 8003dd0:	db012817 	ldw	r12,1184(sp)
 8003dd4:	193fffc5 	stb	r4,-1(r3)
 8003dd8:	5affffc4 	addi	r11,r11,-1
 8003ddc:	dac13115 	stw	r11,1220(sp)
 8003de0:	62e5c83a 	sub	r18,r12,r11
 8003de4:	003c7d06 	br	8002fdc <__alt_data_end+0xfc002fdc>
 8003de8:	b009883a 	mov	r4,r22
 8003dec:	b80b883a 	mov	r5,r23
 8003df0:	d9811e04 	addi	r6,sp,1144
 8003df4:	800a2780 	call	800a278 <__sprint_r>
 8003df8:	103c001e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003dfc:	d8c12017 	ldw	r3,1152(sp)
 8003e00:	da000404 	addi	r8,sp,16
 8003e04:	db013117 	ldw	r12,1220(sp)
 8003e08:	dac13417 	ldw	r11,1232(sp)
 8003e0c:	d8812617 	ldw	r2,1176(sp)
 8003e10:	62e5883a 	add	r18,r12,r11
 8003e14:	db013317 	ldw	r12,1228(sp)
 8003e18:	13000216 	blt	r2,r12,8003e24 <___vfprintf_internal_r+0x1484>
 8003e1c:	8900004c 	andi	r4,r17,1
 8003e20:	20000c26 	beq	r4,zero,8003e54 <___vfprintf_internal_r+0x14b4>
 8003e24:	dac13817 	ldw	r11,1248(sp)
 8003e28:	d9011f17 	ldw	r4,1148(sp)
 8003e2c:	db013517 	ldw	r12,1236(sp)
 8003e30:	1ac7883a 	add	r3,r3,r11
 8003e34:	21000044 	addi	r4,r4,1
 8003e38:	43000015 	stw	r12,0(r8)
 8003e3c:	42c00115 	stw	r11,4(r8)
 8003e40:	d8c12015 	stw	r3,1152(sp)
 8003e44:	d9011f15 	stw	r4,1148(sp)
 8003e48:	014001c4 	movi	r5,7
 8003e4c:	2901cc16 	blt	r5,r4,8004580 <___vfprintf_internal_r+0x1be0>
 8003e50:	42000204 	addi	r8,r8,8
 8003e54:	dac13317 	ldw	r11,1228(sp)
 8003e58:	8489c83a 	sub	r4,r16,r18
 8003e5c:	5885c83a 	sub	r2,r11,r2
 8003e60:	1021883a 	mov	r16,r2
 8003e64:	2080010e 	bge	r4,r2,8003e6c <___vfprintf_internal_r+0x14cc>
 8003e68:	2021883a 	mov	r16,r4
 8003e6c:	04000a0e 	bge	zero,r16,8003e98 <___vfprintf_internal_r+0x14f8>
 8003e70:	d9011f17 	ldw	r4,1148(sp)
 8003e74:	1c07883a 	add	r3,r3,r16
 8003e78:	44800015 	stw	r18,0(r8)
 8003e7c:	21000044 	addi	r4,r4,1
 8003e80:	44000115 	stw	r16,4(r8)
 8003e84:	d8c12015 	stw	r3,1152(sp)
 8003e88:	d9011f15 	stw	r4,1148(sp)
 8003e8c:	014001c4 	movi	r5,7
 8003e90:	2901d616 	blt	r5,r4,80045ec <___vfprintf_internal_r+0x1c4c>
 8003e94:	42000204 	addi	r8,r8,8
 8003e98:	8001df16 	blt	r16,zero,8004618 <___vfprintf_internal_r+0x1c78>
 8003e9c:	1421c83a 	sub	r16,r2,r16
 8003ea0:	043ce60e 	bge	zero,r16,800323c <__alt_data_end+0xfc00323c>
 8003ea4:	04800404 	movi	r18,16
 8003ea8:	d8811f17 	ldw	r2,1148(sp)
 8003eac:	943efc0e 	bge	r18,r16,8003aa0 <__alt_data_end+0xfc003aa0>
 8003eb0:	01420074 	movhi	r5,2049
 8003eb4:	294aba84 	addi	r5,r5,10986
 8003eb8:	d9412c15 	stw	r5,1200(sp)
 8003ebc:	054001c4 	movi	r21,7
 8003ec0:	00000306 	br	8003ed0 <___vfprintf_internal_r+0x1530>
 8003ec4:	42000204 	addi	r8,r8,8
 8003ec8:	843ffc04 	addi	r16,r16,-16
 8003ecc:	943ef70e 	bge	r18,r16,8003aac <__alt_data_end+0xfc003aac>
 8003ed0:	18c00404 	addi	r3,r3,16
 8003ed4:	10800044 	addi	r2,r2,1
 8003ed8:	45000015 	stw	r20,0(r8)
 8003edc:	44800115 	stw	r18,4(r8)
 8003ee0:	d8c12015 	stw	r3,1152(sp)
 8003ee4:	d8811f15 	stw	r2,1148(sp)
 8003ee8:	a8bff60e 	bge	r21,r2,8003ec4 <__alt_data_end+0xfc003ec4>
 8003eec:	b009883a 	mov	r4,r22
 8003ef0:	b80b883a 	mov	r5,r23
 8003ef4:	d9811e04 	addi	r6,sp,1144
 8003ef8:	800a2780 	call	800a278 <__sprint_r>
 8003efc:	103bbf1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003f00:	d8c12017 	ldw	r3,1152(sp)
 8003f04:	d8811f17 	ldw	r2,1148(sp)
 8003f08:	da000404 	addi	r8,sp,16
 8003f0c:	003fee06 	br	8003ec8 <__alt_data_end+0xfc003ec8>
 8003f10:	8888703a 	and	r4,r17,r2
 8003f14:	203eab1e 	bne	r4,zero,80039c4 <__alt_data_end+0xfc0039c4>
 8003f18:	dc011f17 	ldw	r16,1148(sp)
 8003f1c:	db013117 	ldw	r12,1220(sp)
 8003f20:	40800115 	stw	r2,4(r8)
 8003f24:	84000044 	addi	r16,r16,1
 8003f28:	43000015 	stw	r12,0(r8)
 8003f2c:	d8c12015 	stw	r3,1152(sp)
 8003f30:	dc011f15 	stw	r16,1148(sp)
 8003f34:	008001c4 	movi	r2,7
 8003f38:	14000e16 	blt	r2,r16,8003f74 <___vfprintf_internal_r+0x15d4>
 8003f3c:	44800204 	addi	r18,r8,8
 8003f40:	003ecb06 	br	8003a70 <__alt_data_end+0xfc003a70>
 8003f44:	00820074 	movhi	r2,2049
 8003f48:	108aba84 	addi	r2,r2,10986
 8003f4c:	d8812c15 	stw	r2,1200(sp)
 8003f50:	dac12c17 	ldw	r11,1200(sp)
 8003f54:	1d47883a 	add	r3,r3,r21
 8003f58:	84000044 	addi	r16,r16,1
 8003f5c:	92c00015 	stw	r11,0(r18)
 8003f60:	95400115 	stw	r21,4(r18)
 8003f64:	d8c12015 	stw	r3,1152(sp)
 8003f68:	dc011f15 	stw	r16,1148(sp)
 8003f6c:	008001c4 	movi	r2,7
 8003f70:	143ebe0e 	bge	r2,r16,8003a6c <__alt_data_end+0xfc003a6c>
 8003f74:	b009883a 	mov	r4,r22
 8003f78:	b80b883a 	mov	r5,r23
 8003f7c:	d9811e04 	addi	r6,sp,1144
 8003f80:	800a2780 	call	800a278 <__sprint_r>
 8003f84:	103b9d1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003f88:	d8c12017 	ldw	r3,1152(sp)
 8003f8c:	dc011f17 	ldw	r16,1148(sp)
 8003f90:	dc800404 	addi	r18,sp,16
 8003f94:	003eb606 	br	8003a70 <__alt_data_end+0xfc003a70>
 8003f98:	b009883a 	mov	r4,r22
 8003f9c:	b80b883a 	mov	r5,r23
 8003fa0:	d9811e04 	addi	r6,sp,1144
 8003fa4:	800a2780 	call	800a278 <__sprint_r>
 8003fa8:	103b941e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003fac:	d8c12017 	ldw	r3,1152(sp)
 8003fb0:	dc011f17 	ldw	r16,1148(sp)
 8003fb4:	da000404 	addi	r8,sp,16
 8003fb8:	003e8d06 	br	80039f0 <__alt_data_end+0xfc0039f0>
 8003fbc:	b009883a 	mov	r4,r22
 8003fc0:	b80b883a 	mov	r5,r23
 8003fc4:	d9811e04 	addi	r6,sp,1144
 8003fc8:	800a2780 	call	800a278 <__sprint_r>
 8003fcc:	103b8b1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8003fd0:	d8c12017 	ldw	r3,1152(sp)
 8003fd4:	dc011f17 	ldw	r16,1148(sp)
 8003fd8:	dc800404 	addi	r18,sp,16
 8003fdc:	003e8f06 	br	8003a1c <__alt_data_end+0xfc003a1c>
 8003fe0:	db010e04 	addi	r12,sp,1080
 8003fe4:	0025883a 	mov	r18,zero
 8003fe8:	db013115 	stw	r12,1220(sp)
 8003fec:	003bfb06 	br	8002fdc <__alt_data_end+0xfc002fdc>
 8003ff0:	b009883a 	mov	r4,r22
 8003ff4:	b80b883a 	mov	r5,r23
 8003ff8:	d9811e04 	addi	r6,sp,1144
 8003ffc:	800a2780 	call	800a278 <__sprint_r>
 8004000:	103b7e1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004004:	d8c12017 	ldw	r3,1152(sp)
 8004008:	da000404 	addi	r8,sp,16
 800400c:	003c5506 	br	8003164 <__alt_data_end+0xfc003164>
 8004010:	04e7c83a 	sub	r19,zero,r19
 8004014:	9804c03a 	cmpne	r2,r19,zero
 8004018:	0739c83a 	sub	fp,zero,fp
 800401c:	e0b9c83a 	sub	fp,fp,r2
 8004020:	05400b44 	movi	r21,45
 8004024:	dd412785 	stb	r21,1182(sp)
 8004028:	da413215 	stw	r9,1224(sp)
 800402c:	00800044 	movi	r2,1
 8004030:	9f06b03a 	or	r3,r19,fp
 8004034:	003bcf06 	br	8002f74 <__alt_data_end+0xfc002f74>
 8004038:	da013f15 	stw	r8,1276(sp)
 800403c:	da413e15 	stw	r9,1272(sp)
 8004040:	8008ca40 	call	8008ca4 <__fpclassifyd>
 8004044:	da013f17 	ldw	r8,1276(sp)
 8004048:	da413e17 	ldw	r9,1272(sp)
 800404c:	1000ce26 	beq	r2,zero,8004388 <___vfprintf_internal_r+0x19e8>
 8004050:	057ff7c4 	movi	r21,-33
 8004054:	00bfffc4 	movi	r2,-1
 8004058:	856a703a 	and	r21,r16,r21
 800405c:	4881f026 	beq	r9,r2,8004820 <___vfprintf_internal_r+0x1e80>
 8004060:	008011c4 	movi	r2,71
 8004064:	a881e526 	beq	r21,r2,80047fc <___vfprintf_internal_r+0x1e5c>
 8004068:	db013917 	ldw	r12,1252(sp)
 800406c:	8ac04014 	ori	r11,r17,256
 8004070:	dac12d15 	stw	r11,1204(sp)
 8004074:	6001e416 	blt	r12,zero,8004808 <___vfprintf_internal_r+0x1e68>
 8004078:	dc813917 	ldw	r18,1252(sp)
 800407c:	d8012b05 	stb	zero,1196(sp)
 8004080:	00801984 	movi	r2,102
 8004084:	80811826 	beq	r16,r2,80044e8 <___vfprintf_internal_r+0x1b48>
 8004088:	00801184 	movi	r2,70
 800408c:	80811626 	beq	r16,r2,80044e8 <___vfprintf_internal_r+0x1b48>
 8004090:	00801144 	movi	r2,69
 8004094:	a881e026 	beq	r21,r2,8004818 <___vfprintf_internal_r+0x1e78>
 8004098:	4839883a 	mov	fp,r9
 800409c:	d8812604 	addi	r2,sp,1176
 80040a0:	d8800115 	stw	r2,4(sp)
 80040a4:	d9413717 	ldw	r5,1244(sp)
 80040a8:	d8812504 	addi	r2,sp,1172
 80040ac:	d8800215 	stw	r2,8(sp)
 80040b0:	d8812104 	addi	r2,sp,1156
 80040b4:	df000015 	stw	fp,0(sp)
 80040b8:	d8800315 	stw	r2,12(sp)
 80040bc:	b009883a 	mov	r4,r22
 80040c0:	900d883a 	mov	r6,r18
 80040c4:	01c00084 	movi	r7,2
 80040c8:	da013f15 	stw	r8,1276(sp)
 80040cc:	da413e15 	stw	r9,1272(sp)
 80040d0:	8004cf00 	call	8004cf0 <_dtoa_r>
 80040d4:	d8813115 	stw	r2,1220(sp)
 80040d8:	008019c4 	movi	r2,103
 80040dc:	da013f17 	ldw	r8,1276(sp)
 80040e0:	da413e17 	ldw	r9,1272(sp)
 80040e4:	80800226 	beq	r16,r2,80040f0 <___vfprintf_internal_r+0x1750>
 80040e8:	008011c4 	movi	r2,71
 80040ec:	8081101e 	bne	r16,r2,8004530 <___vfprintf_internal_r+0x1b90>
 80040f0:	8880004c 	andi	r2,r17,1
 80040f4:	1001df26 	beq	r2,zero,8004874 <___vfprintf_internal_r+0x1ed4>
 80040f8:	db013117 	ldw	r12,1220(sp)
 80040fc:	6715883a 	add	r10,r12,fp
 8004100:	d9013717 	ldw	r4,1244(sp)
 8004104:	900b883a 	mov	r5,r18
 8004108:	000d883a 	mov	r6,zero
 800410c:	000f883a 	mov	r7,zero
 8004110:	da013f15 	stw	r8,1276(sp)
 8004114:	da413e15 	stw	r9,1272(sp)
 8004118:	da813d15 	stw	r10,1268(sp)
 800411c:	800e8cc0 	call	800e8cc <__eqdf2>
 8004120:	da013f17 	ldw	r8,1276(sp)
 8004124:	da413e17 	ldw	r9,1272(sp)
 8004128:	da813d17 	ldw	r10,1268(sp)
 800412c:	10016526 	beq	r2,zero,80046c4 <___vfprintf_internal_r+0x1d24>
 8004130:	d8812117 	ldw	r2,1156(sp)
 8004134:	1280062e 	bgeu	r2,r10,8004150 <___vfprintf_internal_r+0x17b0>
 8004138:	01000c04 	movi	r4,48
 800413c:	10c00044 	addi	r3,r2,1
 8004140:	d8c12115 	stw	r3,1156(sp)
 8004144:	11000005 	stb	r4,0(r2)
 8004148:	d8812117 	ldw	r2,1156(sp)
 800414c:	12bffb36 	bltu	r2,r10,800413c <__alt_data_end+0xfc00413c>
 8004150:	db013117 	ldw	r12,1220(sp)
 8004154:	1305c83a 	sub	r2,r2,r12
 8004158:	d8813315 	stw	r2,1228(sp)
 800415c:	008011c4 	movi	r2,71
 8004160:	a8814a26 	beq	r21,r2,800468c <___vfprintf_internal_r+0x1cec>
 8004164:	00801944 	movi	r2,101
 8004168:	14020a0e 	bge	r2,r16,8004994 <___vfprintf_internal_r+0x1ff4>
 800416c:	00801984 	movi	r2,102
 8004170:	8081b626 	beq	r16,r2,800484c <___vfprintf_internal_r+0x1eac>
 8004174:	db012617 	ldw	r12,1176(sp)
 8004178:	db013415 	stw	r12,1232(sp)
 800417c:	db013417 	ldw	r12,1232(sp)
 8004180:	dac13317 	ldw	r11,1228(sp)
 8004184:	62c1a816 	blt	r12,r11,8004828 <___vfprintf_internal_r+0x1e88>
 8004188:	8c40004c 	andi	r17,r17,1
 800418c:	8801ca1e 	bne	r17,zero,80048b8 <___vfprintf_internal_r+0x1f18>
 8004190:	6005883a 	mov	r2,r12
 8004194:	6001b516 	blt	r12,zero,800486c <___vfprintf_internal_r+0x1ecc>
 8004198:	dc813417 	ldw	r18,1232(sp)
 800419c:	df012b07 	ldb	fp,1196(sp)
 80041a0:	e001321e 	bne	fp,zero,800466c <___vfprintf_internal_r+0x1ccc>
 80041a4:	dc412d17 	ldw	r17,1204(sp)
 80041a8:	dd412783 	ldbu	r21,1182(sp)
 80041ac:	d8812b15 	stw	r2,1196(sp)
 80041b0:	dcc12d15 	stw	r19,1204(sp)
 80041b4:	d8013215 	stw	zero,1224(sp)
 80041b8:	003b8d06 	br	8002ff0 <__alt_data_end+0xfc002ff0>
 80041bc:	88c0100c 	andi	r3,r17,64
 80041c0:	18008226 	beq	r3,zero,80043cc <___vfprintf_internal_r+0x1a2c>
 80041c4:	dac12d17 	ldw	r11,1204(sp)
 80041c8:	14c0000b 	ldhu	r19,0(r2)
 80041cc:	0039883a 	mov	fp,zero
 80041d0:	5ac00104 	addi	r11,r11,4
 80041d4:	dac12d15 	stw	r11,1204(sp)
 80041d8:	003c8f06 	br	8003418 <__alt_data_end+0xfc003418>
 80041dc:	1c000007 	ldb	r16,0(r3)
 80041e0:	1805883a 	mov	r2,r3
 80041e4:	003a5506 	br	8002b3c <__alt_data_end+0xfc002b3c>
 80041e8:	00800084 	movi	r2,2
 80041ec:	003b5e06 	br	8002f68 <__alt_data_end+0xfc002f68>
 80041f0:	8880040c 	andi	r2,r17,16
 80041f4:	1000091e 	bne	r2,zero,800421c <___vfprintf_internal_r+0x187c>
 80041f8:	8c40100c 	andi	r17,r17,64
 80041fc:	88000726 	beq	r17,zero,800421c <___vfprintf_internal_r+0x187c>
 8004200:	db012d17 	ldw	r12,1204(sp)
 8004204:	dac12f17 	ldw	r11,1212(sp)
 8004208:	60800017 	ldw	r2,0(r12)
 800420c:	63000104 	addi	r12,r12,4
 8004210:	db012d15 	stw	r12,1204(sp)
 8004214:	12c0000d 	sth	r11,0(r2)
 8004218:	003a1e06 	br	8002a94 <__alt_data_end+0xfc002a94>
 800421c:	db012d17 	ldw	r12,1204(sp)
 8004220:	dac12f17 	ldw	r11,1212(sp)
 8004224:	60800017 	ldw	r2,0(r12)
 8004228:	63000104 	addi	r12,r12,4
 800422c:	db012d15 	stw	r12,1204(sp)
 8004230:	12c00015 	stw	r11,0(r2)
 8004234:	003a1706 	br	8002a94 <__alt_data_end+0xfc002a94>
 8004238:	01020074 	movhi	r4,2049
 800423c:	210aba84 	addi	r4,r4,10986
 8004240:	d9012c15 	stw	r4,1200(sp)
 8004244:	dac12c17 	ldw	r11,1200(sp)
 8004248:	1c87883a 	add	r3,r3,r18
 800424c:	10800044 	addi	r2,r2,1
 8004250:	42c00015 	stw	r11,0(r8)
 8004254:	44800115 	stw	r18,4(r8)
 8004258:	d8c12015 	stw	r3,1152(sp)
 800425c:	d8811f15 	stw	r2,1148(sp)
 8004260:	010001c4 	movi	r4,7
 8004264:	20bee016 	blt	r4,r2,8003de8 <__alt_data_end+0xfc003de8>
 8004268:	42000204 	addi	r8,r8,8
 800426c:	003ee506 	br	8003e04 <__alt_data_end+0xfc003e04>
 8004270:	01020074 	movhi	r4,2049
 8004274:	210aba84 	addi	r4,r4,10986
 8004278:	d9012c15 	stw	r4,1200(sp)
 800427c:	003bd806 	br	80031e0 <__alt_data_end+0xfc0031e0>
 8004280:	b009883a 	mov	r4,r22
 8004284:	b80b883a 	mov	r5,r23
 8004288:	d9811e04 	addi	r6,sp,1144
 800428c:	800a2780 	call	800a278 <__sprint_r>
 8004290:	103ada1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004294:	d8c12017 	ldw	r3,1152(sp)
 8004298:	da000404 	addi	r8,sp,16
 800429c:	003d6b06 	br	800384c <__alt_data_end+0xfc00384c>
 80042a0:	d8811f17 	ldw	r2,1148(sp)
 80042a4:	03020074 	movhi	r12,2049
 80042a8:	01000044 	movi	r4,1
 80042ac:	18c00044 	addi	r3,r3,1
 80042b0:	10800044 	addi	r2,r2,1
 80042b4:	630ab204 	addi	r12,r12,10952
 80042b8:	41000115 	stw	r4,4(r8)
 80042bc:	43000015 	stw	r12,0(r8)
 80042c0:	d8c12015 	stw	r3,1152(sp)
 80042c4:	d8811f15 	stw	r2,1148(sp)
 80042c8:	010001c4 	movi	r4,7
 80042cc:	20804916 	blt	r4,r2,80043f4 <___vfprintf_internal_r+0x1a54>
 80042d0:	42000204 	addi	r8,r8,8
 80042d4:	8000041e 	bne	r16,zero,80042e8 <___vfprintf_internal_r+0x1948>
 80042d8:	dac13317 	ldw	r11,1228(sp)
 80042dc:	5800021e 	bne	r11,zero,80042e8 <___vfprintf_internal_r+0x1948>
 80042e0:	8880004c 	andi	r2,r17,1
 80042e4:	103bd526 	beq	r2,zero,800323c <__alt_data_end+0xfc00323c>
 80042e8:	db013817 	ldw	r12,1248(sp)
 80042ec:	d8811f17 	ldw	r2,1148(sp)
 80042f0:	dac13517 	ldw	r11,1236(sp)
 80042f4:	1b07883a 	add	r3,r3,r12
 80042f8:	10800044 	addi	r2,r2,1
 80042fc:	42c00015 	stw	r11,0(r8)
 8004300:	43000115 	stw	r12,4(r8)
 8004304:	d8c12015 	stw	r3,1152(sp)
 8004308:	d8811f15 	stw	r2,1148(sp)
 800430c:	010001c4 	movi	r4,7
 8004310:	20813016 	blt	r4,r2,80047d4 <___vfprintf_internal_r+0x1e34>
 8004314:	42000204 	addi	r8,r8,8
 8004318:	0421c83a 	sub	r16,zero,r16
 800431c:	0400630e 	bge	zero,r16,80044ac <___vfprintf_internal_r+0x1b0c>
 8004320:	04800404 	movi	r18,16
 8004324:	94009f0e 	bge	r18,r16,80045a4 <___vfprintf_internal_r+0x1c04>
 8004328:	01020074 	movhi	r4,2049
 800432c:	210aba84 	addi	r4,r4,10986
 8004330:	d9012c15 	stw	r4,1200(sp)
 8004334:	054001c4 	movi	r21,7
 8004338:	00000306 	br	8004348 <___vfprintf_internal_r+0x19a8>
 800433c:	42000204 	addi	r8,r8,8
 8004340:	843ffc04 	addi	r16,r16,-16
 8004344:	94009a0e 	bge	r18,r16,80045b0 <___vfprintf_internal_r+0x1c10>
 8004348:	18c00404 	addi	r3,r3,16
 800434c:	10800044 	addi	r2,r2,1
 8004350:	45000015 	stw	r20,0(r8)
 8004354:	44800115 	stw	r18,4(r8)
 8004358:	d8c12015 	stw	r3,1152(sp)
 800435c:	d8811f15 	stw	r2,1148(sp)
 8004360:	a8bff60e 	bge	r21,r2,800433c <__alt_data_end+0xfc00433c>
 8004364:	b009883a 	mov	r4,r22
 8004368:	b80b883a 	mov	r5,r23
 800436c:	d9811e04 	addi	r6,sp,1144
 8004370:	800a2780 	call	800a278 <__sprint_r>
 8004374:	103aa11e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004378:	d8c12017 	ldw	r3,1152(sp)
 800437c:	d8811f17 	ldw	r2,1148(sp)
 8004380:	da000404 	addi	r8,sp,16
 8004384:	003fee06 	br	8004340 <__alt_data_end+0xfc004340>
 8004388:	008011c4 	movi	r2,71
 800438c:	1400b316 	blt	r2,r16,800465c <___vfprintf_internal_r+0x1cbc>
 8004390:	03020074 	movhi	r12,2049
 8004394:	630aa404 	addi	r12,r12,10896
 8004398:	db013115 	stw	r12,1220(sp)
 800439c:	00c000c4 	movi	r3,3
 80043a0:	00bfdfc4 	movi	r2,-129
 80043a4:	d8c12b15 	stw	r3,1196(sp)
 80043a8:	88a2703a 	and	r17,r17,r2
 80043ac:	dd412783 	ldbu	r21,1182(sp)
 80043b0:	dcc12d15 	stw	r19,1204(sp)
 80043b4:	1825883a 	mov	r18,r3
 80043b8:	d8013215 	stw	zero,1224(sp)
 80043bc:	d8013415 	stw	zero,1232(sp)
 80043c0:	003b0b06 	br	8002ff0 <__alt_data_end+0xfc002ff0>
 80043c4:	4825883a 	mov	r18,r9
 80043c8:	003cba06 	br	80036b4 <__alt_data_end+0xfc0036b4>
 80043cc:	db012d17 	ldw	r12,1204(sp)
 80043d0:	14c00017 	ldw	r19,0(r2)
 80043d4:	0039883a 	mov	fp,zero
 80043d8:	63000104 	addi	r12,r12,4
 80043dc:	db012d15 	stw	r12,1204(sp)
 80043e0:	003c0d06 	br	8003418 <__alt_data_end+0xfc003418>
 80043e4:	00820074 	movhi	r2,2049
 80043e8:	108aa204 	addi	r2,r2,10888
 80043ec:	d8813115 	stw	r2,1220(sp)
 80043f0:	003ac406 	br	8002f04 <__alt_data_end+0xfc002f04>
 80043f4:	b009883a 	mov	r4,r22
 80043f8:	b80b883a 	mov	r5,r23
 80043fc:	d9811e04 	addi	r6,sp,1144
 8004400:	800a2780 	call	800a278 <__sprint_r>
 8004404:	103a7d1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004408:	dc012617 	ldw	r16,1176(sp)
 800440c:	d8c12017 	ldw	r3,1152(sp)
 8004410:	da000404 	addi	r8,sp,16
 8004414:	003faf06 	br	80042d4 <__alt_data_end+0xfc0042d4>
 8004418:	db012e17 	ldw	r12,1208(sp)
 800441c:	1805883a 	mov	r2,r3
 8004420:	dac12d15 	stw	r11,1204(sp)
 8004424:	0319c83a 	sub	r12,zero,r12
 8004428:	db012e15 	stw	r12,1208(sp)
 800442c:	003a7e06 	br	8002e28 <__alt_data_end+0xfc002e28>
 8004430:	18800044 	addi	r2,r3,1
 8004434:	8c400814 	ori	r17,r17,32
 8004438:	1c000047 	ldb	r16,1(r3)
 800443c:	0039bf06 	br	8002b3c <__alt_data_end+0xfc002b3c>
 8004440:	b009883a 	mov	r4,r22
 8004444:	b80b883a 	mov	r5,r23
 8004448:	d9811e04 	addi	r6,sp,1144
 800444c:	800a2780 	call	800a278 <__sprint_r>
 8004450:	103a6a1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004454:	d8c12017 	ldw	r3,1152(sp)
 8004458:	da000404 	addi	r8,sp,16
 800445c:	003d0c06 	br	8003890 <__alt_data_end+0xfc003890>
 8004460:	db012817 	ldw	r12,1184(sp)
 8004464:	d8c13117 	ldw	r3,1220(sp)
 8004468:	60e5c83a 	sub	r18,r12,r3
 800446c:	003adb06 	br	8002fdc <__alt_data_end+0xfc002fdc>
 8004470:	da013f15 	stw	r8,1276(sp)
 8004474:	80009780 	call	8000978 <strlen>
 8004478:	1025883a 	mov	r18,r2
 800447c:	da013f17 	ldw	r8,1276(sp)
 8004480:	903c8e0e 	bge	r18,zero,80036bc <__alt_data_end+0xfc0036bc>
 8004484:	0005883a 	mov	r2,zero
 8004488:	003c8c06 	br	80036bc <__alt_data_end+0xfc0036bc>
 800448c:	b009883a 	mov	r4,r22
 8004490:	b80b883a 	mov	r5,r23
 8004494:	d9811e04 	addi	r6,sp,1144
 8004498:	800a2780 	call	800a278 <__sprint_r>
 800449c:	103a571e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 80044a0:	d8c12017 	ldw	r3,1152(sp)
 80044a4:	d8811f17 	ldw	r2,1148(sp)
 80044a8:	da000404 	addi	r8,sp,16
 80044ac:	db013317 	ldw	r12,1228(sp)
 80044b0:	dac13117 	ldw	r11,1220(sp)
 80044b4:	10800044 	addi	r2,r2,1
 80044b8:	60c7883a 	add	r3,r12,r3
 80044bc:	42c00015 	stw	r11,0(r8)
 80044c0:	43000115 	stw	r12,4(r8)
 80044c4:	d8c12015 	stw	r3,1152(sp)
 80044c8:	d8811f15 	stw	r2,1148(sp)
 80044cc:	010001c4 	movi	r4,7
 80044d0:	20bb590e 	bge	r4,r2,8003238 <__alt_data_end+0xfc003238>
 80044d4:	003d7e06 	br	8003ad0 <__alt_data_end+0xfc003ad0>
 80044d8:	01020074 	movhi	r4,2049
 80044dc:	210abe84 	addi	r4,r4,11002
 80044e0:	d9013615 	stw	r4,1240(sp)
 80044e4:	003af606 	br	80030c0 <__alt_data_end+0xfc0030c0>
 80044e8:	d8812604 	addi	r2,sp,1176
 80044ec:	d8800115 	stw	r2,4(sp)
 80044f0:	d9413717 	ldw	r5,1244(sp)
 80044f4:	d8812504 	addi	r2,sp,1172
 80044f8:	d8800215 	stw	r2,8(sp)
 80044fc:	d8812104 	addi	r2,sp,1156
 8004500:	da400015 	stw	r9,0(sp)
 8004504:	d8800315 	stw	r2,12(sp)
 8004508:	b009883a 	mov	r4,r22
 800450c:	900d883a 	mov	r6,r18
 8004510:	01c000c4 	movi	r7,3
 8004514:	da013f15 	stw	r8,1276(sp)
 8004518:	da413e15 	stw	r9,1272(sp)
 800451c:	8004cf00 	call	8004cf0 <_dtoa_r>
 8004520:	da413e17 	ldw	r9,1272(sp)
 8004524:	da013f17 	ldw	r8,1276(sp)
 8004528:	d8813115 	stw	r2,1220(sp)
 800452c:	4839883a 	mov	fp,r9
 8004530:	dac13117 	ldw	r11,1220(sp)
 8004534:	00801184 	movi	r2,70
 8004538:	5f15883a 	add	r10,r11,fp
 800453c:	a8bef01e 	bne	r21,r2,8004100 <__alt_data_end+0xfc004100>
 8004540:	59000007 	ldb	r4,0(r11)
 8004544:	00800c04 	movi	r2,48
 8004548:	2080e026 	beq	r4,r2,80048cc <___vfprintf_internal_r+0x1f2c>
 800454c:	d8c12617 	ldw	r3,1176(sp)
 8004550:	50d5883a 	add	r10,r10,r3
 8004554:	003eea06 	br	8004100 <__alt_data_end+0xfc004100>
 8004558:	0025883a 	mov	r18,zero
 800455c:	003db306 	br	8003c2c <__alt_data_end+0xfc003c2c>
 8004560:	b009883a 	mov	r4,r22
 8004564:	b80b883a 	mov	r5,r23
 8004568:	d9811e04 	addi	r6,sp,1144
 800456c:	800a2780 	call	800a278 <__sprint_r>
 8004570:	103a221e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004574:	d8c12017 	ldw	r3,1152(sp)
 8004578:	da000404 	addi	r8,sp,16
 800457c:	003daa06 	br	8003c28 <__alt_data_end+0xfc003c28>
 8004580:	b009883a 	mov	r4,r22
 8004584:	b80b883a 	mov	r5,r23
 8004588:	d9811e04 	addi	r6,sp,1144
 800458c:	800a2780 	call	800a278 <__sprint_r>
 8004590:	103a1a1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004594:	d8812617 	ldw	r2,1176(sp)
 8004598:	d8c12017 	ldw	r3,1152(sp)
 800459c:	da000404 	addi	r8,sp,16
 80045a0:	003e2c06 	br	8003e54 <__alt_data_end+0xfc003e54>
 80045a4:	03020074 	movhi	r12,2049
 80045a8:	630aba84 	addi	r12,r12,10986
 80045ac:	db012c15 	stw	r12,1200(sp)
 80045b0:	dac12c17 	ldw	r11,1200(sp)
 80045b4:	1c07883a 	add	r3,r3,r16
 80045b8:	10800044 	addi	r2,r2,1
 80045bc:	42c00015 	stw	r11,0(r8)
 80045c0:	44000115 	stw	r16,4(r8)
 80045c4:	d8c12015 	stw	r3,1152(sp)
 80045c8:	d8811f15 	stw	r2,1148(sp)
 80045cc:	010001c4 	movi	r4,7
 80045d0:	20bfae16 	blt	r4,r2,800448c <__alt_data_end+0xfc00448c>
 80045d4:	42000204 	addi	r8,r8,8
 80045d8:	003fb406 	br	80044ac <__alt_data_end+0xfc0044ac>
 80045dc:	03020074 	movhi	r12,2049
 80045e0:	630abe84 	addi	r12,r12,11002
 80045e4:	db013615 	stw	r12,1240(sp)
 80045e8:	003b3806 	br	80032cc <__alt_data_end+0xfc0032cc>
 80045ec:	b009883a 	mov	r4,r22
 80045f0:	b80b883a 	mov	r5,r23
 80045f4:	d9811e04 	addi	r6,sp,1144
 80045f8:	800a2780 	call	800a278 <__sprint_r>
 80045fc:	1039ff1e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 8004600:	d8812617 	ldw	r2,1176(sp)
 8004604:	db013317 	ldw	r12,1228(sp)
 8004608:	d8c12017 	ldw	r3,1152(sp)
 800460c:	da000404 	addi	r8,sp,16
 8004610:	6085c83a 	sub	r2,r12,r2
 8004614:	003e2006 	br	8003e98 <__alt_data_end+0xfc003e98>
 8004618:	0021883a 	mov	r16,zero
 800461c:	003e1f06 	br	8003e9c <__alt_data_end+0xfc003e9c>
 8004620:	00800184 	movi	r2,6
 8004624:	1240012e 	bgeu	r2,r9,800462c <___vfprintf_internal_r+0x1c8c>
 8004628:	1013883a 	mov	r9,r2
 800462c:	4825883a 	mov	r18,r9
 8004630:	4805883a 	mov	r2,r9
 8004634:	48009e16 	blt	r9,zero,80048b0 <___vfprintf_internal_r+0x1f10>
 8004638:	d8812b15 	stw	r2,1196(sp)
 800463c:	00820074 	movhi	r2,2049
 8004640:	108ab004 	addi	r2,r2,10944
 8004644:	d8813115 	stw	r2,1220(sp)
 8004648:	dcc12d15 	stw	r19,1204(sp)
 800464c:	d8013215 	stw	zero,1224(sp)
 8004650:	d8013415 	stw	zero,1232(sp)
 8004654:	0005883a 	mov	r2,zero
 8004658:	003a6c06 	br	800300c <__alt_data_end+0xfc00300c>
 800465c:	00820074 	movhi	r2,2049
 8004660:	108aa504 	addi	r2,r2,10900
 8004664:	d8813115 	stw	r2,1220(sp)
 8004668:	003f4c06 	br	800439c <__alt_data_end+0xfc00439c>
 800466c:	00c00b44 	movi	r3,45
 8004670:	d8812b15 	stw	r2,1196(sp)
 8004674:	dc412d17 	ldw	r17,1204(sp)
 8004678:	d8c12785 	stb	r3,1182(sp)
 800467c:	dcc12d15 	stw	r19,1204(sp)
 8004680:	d8013215 	stw	zero,1224(sp)
 8004684:	00800b44 	movi	r2,45
 8004688:	003a5d06 	br	8003000 <__alt_data_end+0xfc003000>
 800468c:	d8c12617 	ldw	r3,1176(sp)
 8004690:	00bfff44 	movi	r2,-3
 8004694:	18800d16 	blt	r3,r2,80046cc <___vfprintf_internal_r+0x1d2c>
 8004698:	48c00c16 	blt	r9,r3,80046cc <___vfprintf_internal_r+0x1d2c>
 800469c:	d8c13415 	stw	r3,1232(sp)
 80046a0:	040019c4 	movi	r16,103
 80046a4:	003eb506 	br	800417c <__alt_data_end+0xfc00417c>
 80046a8:	05400b44 	movi	r21,45
 80046ac:	dd412785 	stb	r21,1182(sp)
 80046b0:	003a0f06 	br	8002ef0 <__alt_data_end+0xfc002ef0>
 80046b4:	01020074 	movhi	r4,2049
 80046b8:	210aba84 	addi	r4,r4,10986
 80046bc:	d9012c15 	stw	r4,1200(sp)
 80046c0:	003cb106 	br	8003988 <__alt_data_end+0xfc003988>
 80046c4:	5005883a 	mov	r2,r10
 80046c8:	003ea106 	br	8004150 <__alt_data_end+0xfc004150>
 80046cc:	843fff84 	addi	r16,r16,-2
 80046d0:	1f3fffc4 	addi	fp,r3,-1
 80046d4:	df012615 	stw	fp,1176(sp)
 80046d8:	dc0122c5 	stb	r16,1163(sp)
 80046dc:	e0009516 	blt	fp,zero,8004934 <___vfprintf_internal_r+0x1f94>
 80046e0:	00800ac4 	movi	r2,43
 80046e4:	d8812305 	stb	r2,1164(sp)
 80046e8:	00800244 	movi	r2,9
 80046ec:	1700690e 	bge	r2,fp,8004894 <___vfprintf_internal_r+0x1ef4>
 80046f0:	dd4122c4 	addi	r21,sp,1163
 80046f4:	dc012c15 	stw	r16,1200(sp)
 80046f8:	8825883a 	mov	r18,r17
 80046fc:	a821883a 	mov	r16,r21
 8004700:	4023883a 	mov	r17,r8
 8004704:	e009883a 	mov	r4,fp
 8004708:	01400284 	movi	r5,10
 800470c:	800d6f80 	call	800d6f8 <__modsi3>
 8004710:	10800c04 	addi	r2,r2,48
 8004714:	843fffc4 	addi	r16,r16,-1
 8004718:	e009883a 	mov	r4,fp
 800471c:	01400284 	movi	r5,10
 8004720:	80800005 	stb	r2,0(r16)
 8004724:	800d6a40 	call	800d6a4 <__divsi3>
 8004728:	1039883a 	mov	fp,r2
 800472c:	00800244 	movi	r2,9
 8004730:	173ff416 	blt	r2,fp,8004704 <__alt_data_end+0xfc004704>
 8004734:	8811883a 	mov	r8,r17
 8004738:	e0800c04 	addi	r2,fp,48
 800473c:	9023883a 	mov	r17,r18
 8004740:	8025883a 	mov	r18,r16
 8004744:	913fffc4 	addi	r4,r18,-1
 8004748:	90bfffc5 	stb	r2,-1(r18)
 800474c:	dc012c17 	ldw	r16,1200(sp)
 8004750:	25408e2e 	bgeu	r4,r21,800498c <___vfprintf_internal_r+0x1fec>
 8004754:	d9412384 	addi	r5,sp,1166
 8004758:	2c8bc83a 	sub	r5,r5,r18
 800475c:	d8c12344 	addi	r3,sp,1165
 8004760:	a94b883a 	add	r5,r21,r5
 8004764:	00000106 	br	800476c <___vfprintf_internal_r+0x1dcc>
 8004768:	20800003 	ldbu	r2,0(r4)
 800476c:	18800005 	stb	r2,0(r3)
 8004770:	18c00044 	addi	r3,r3,1
 8004774:	21000044 	addi	r4,r4,1
 8004778:	197ffb1e 	bne	r3,r5,8004768 <__alt_data_end+0xfc004768>
 800477c:	d8812304 	addi	r2,sp,1164
 8004780:	1485c83a 	sub	r2,r2,r18
 8004784:	d8c12344 	addi	r3,sp,1165
 8004788:	1885883a 	add	r2,r3,r2
 800478c:	dac13317 	ldw	r11,1228(sp)
 8004790:	156bc83a 	sub	r21,r2,r21
 8004794:	dd413a15 	stw	r21,1256(sp)
 8004798:	00800044 	movi	r2,1
 800479c:	5d65883a 	add	r18,r11,r21
 80047a0:	12c0770e 	bge	r2,r11,8004980 <___vfprintf_internal_r+0x1fe0>
 80047a4:	94800044 	addi	r18,r18,1
 80047a8:	9005883a 	mov	r2,r18
 80047ac:	90007216 	blt	r18,zero,8004978 <___vfprintf_internal_r+0x1fd8>
 80047b0:	d8013415 	stw	zero,1232(sp)
 80047b4:	003e7906 	br	800419c <__alt_data_end+0xfc00419c>
 80047b8:	da412b15 	stw	r9,1196(sp)
 80047bc:	dd412783 	ldbu	r21,1182(sp)
 80047c0:	4825883a 	mov	r18,r9
 80047c4:	dcc12d15 	stw	r19,1204(sp)
 80047c8:	d8013215 	stw	zero,1224(sp)
 80047cc:	d8013415 	stw	zero,1232(sp)
 80047d0:	003a0706 	br	8002ff0 <__alt_data_end+0xfc002ff0>
 80047d4:	b009883a 	mov	r4,r22
 80047d8:	b80b883a 	mov	r5,r23
 80047dc:	d9811e04 	addi	r6,sp,1144
 80047e0:	800a2780 	call	800a278 <__sprint_r>
 80047e4:	1039851e 	bne	r2,zero,8002dfc <__alt_data_end+0xfc002dfc>
 80047e8:	dc012617 	ldw	r16,1176(sp)
 80047ec:	d8c12017 	ldw	r3,1152(sp)
 80047f0:	d8811f17 	ldw	r2,1148(sp)
 80047f4:	da000404 	addi	r8,sp,16
 80047f8:	003ec706 	br	8004318 <__alt_data_end+0xfc004318>
 80047fc:	483e1a1e 	bne	r9,zero,8004068 <__alt_data_end+0xfc004068>
 8004800:	9013883a 	mov	r9,r18
 8004804:	003e1806 	br	8004068 <__alt_data_end+0xfc004068>
 8004808:	00c00b44 	movi	r3,45
 800480c:	64a0003c 	xorhi	r18,r12,32768
 8004810:	d8c12b05 	stb	r3,1196(sp)
 8004814:	003e1a06 	br	8004080 <__alt_data_end+0xfc004080>
 8004818:	4f000044 	addi	fp,r9,1
 800481c:	003e1f06 	br	800409c <__alt_data_end+0xfc00409c>
 8004820:	02400184 	movi	r9,6
 8004824:	003e1006 	br	8004068 <__alt_data_end+0xfc004068>
 8004828:	d8c13417 	ldw	r3,1232(sp)
 800482c:	00c04b0e 	bge	zero,r3,800495c <___vfprintf_internal_r+0x1fbc>
 8004830:	04800044 	movi	r18,1
 8004834:	dac13317 	ldw	r11,1228(sp)
 8004838:	92e5883a 	add	r18,r18,r11
 800483c:	9005883a 	mov	r2,r18
 8004840:	903e560e 	bge	r18,zero,800419c <__alt_data_end+0xfc00419c>
 8004844:	0005883a 	mov	r2,zero
 8004848:	003e5406 	br	800419c <__alt_data_end+0xfc00419c>
 800484c:	d8c12617 	ldw	r3,1176(sp)
 8004850:	d8c13415 	stw	r3,1232(sp)
 8004854:	00c03b0e 	bge	zero,r3,8004944 <___vfprintf_internal_r+0x1fa4>
 8004858:	4800081e 	bne	r9,zero,800487c <___vfprintf_internal_r+0x1edc>
 800485c:	8c40004c 	andi	r17,r17,1
 8004860:	8800061e 	bne	r17,zero,800487c <___vfprintf_internal_r+0x1edc>
 8004864:	1805883a 	mov	r2,r3
 8004868:	183e4b0e 	bge	r3,zero,8004198 <__alt_data_end+0xfc004198>
 800486c:	0005883a 	mov	r2,zero
 8004870:	003e4906 	br	8004198 <__alt_data_end+0xfc004198>
 8004874:	d8812117 	ldw	r2,1156(sp)
 8004878:	003e3506 	br	8004150 <__alt_data_end+0xfc004150>
 800487c:	dac13417 	ldw	r11,1232(sp)
 8004880:	4a400044 	addi	r9,r9,1
 8004884:	5a65883a 	add	r18,r11,r9
 8004888:	9005883a 	mov	r2,r18
 800488c:	903e430e 	bge	r18,zero,800419c <__alt_data_end+0xfc00419c>
 8004890:	003fec06 	br	8004844 <__alt_data_end+0xfc004844>
 8004894:	00800c04 	movi	r2,48
 8004898:	e0c00c04 	addi	r3,fp,48
 800489c:	d8812345 	stb	r2,1165(sp)
 80048a0:	d8c12385 	stb	r3,1166(sp)
 80048a4:	d88123c4 	addi	r2,sp,1167
 80048a8:	dd4122c4 	addi	r21,sp,1163
 80048ac:	003fb706 	br	800478c <__alt_data_end+0xfc00478c>
 80048b0:	0005883a 	mov	r2,zero
 80048b4:	003f6006 	br	8004638 <__alt_data_end+0xfc004638>
 80048b8:	db013417 	ldw	r12,1232(sp)
 80048bc:	64800044 	addi	r18,r12,1
 80048c0:	9005883a 	mov	r2,r18
 80048c4:	903e350e 	bge	r18,zero,800419c <__alt_data_end+0xfc00419c>
 80048c8:	003fde06 	br	8004844 <__alt_data_end+0xfc004844>
 80048cc:	d9013717 	ldw	r4,1244(sp)
 80048d0:	900b883a 	mov	r5,r18
 80048d4:	000d883a 	mov	r6,zero
 80048d8:	000f883a 	mov	r7,zero
 80048dc:	da013f15 	stw	r8,1276(sp)
 80048e0:	da413e15 	stw	r9,1272(sp)
 80048e4:	da813d15 	stw	r10,1268(sp)
 80048e8:	800e8cc0 	call	800e8cc <__eqdf2>
 80048ec:	da013f17 	ldw	r8,1276(sp)
 80048f0:	da413e17 	ldw	r9,1272(sp)
 80048f4:	da813d17 	ldw	r10,1268(sp)
 80048f8:	103f1426 	beq	r2,zero,800454c <__alt_data_end+0xfc00454c>
 80048fc:	00800044 	movi	r2,1
 8004900:	1707c83a 	sub	r3,r2,fp
 8004904:	d8c12615 	stw	r3,1176(sp)
 8004908:	003f1106 	br	8004550 <__alt_data_end+0xfc004550>
 800490c:	dac12d17 	ldw	r11,1204(sp)
 8004910:	5a400017 	ldw	r9,0(r11)
 8004914:	5ac00104 	addi	r11,r11,4
 8004918:	dac12d15 	stw	r11,1204(sp)
 800491c:	483ec60e 	bge	r9,zero,8004438 <__alt_data_end+0xfc004438>
 8004920:	027fffc4 	movi	r9,-1
 8004924:	1c000047 	ldb	r16,1(r3)
 8004928:	00388406 	br	8002b3c <__alt_data_end+0xfc002b3c>
 800492c:	043fffc4 	movi	r16,-1
 8004930:	00391006 	br	8002d74 <__alt_data_end+0xfc002d74>
 8004934:	00800b44 	movi	r2,45
 8004938:	0739c83a 	sub	fp,zero,fp
 800493c:	d8812305 	stb	r2,1164(sp)
 8004940:	003f6906 	br	80046e8 <__alt_data_end+0xfc0046e8>
 8004944:	4800081e 	bne	r9,zero,8004968 <___vfprintf_internal_r+0x1fc8>
 8004948:	8c40004c 	andi	r17,r17,1
 800494c:	8800061e 	bne	r17,zero,8004968 <___vfprintf_internal_r+0x1fc8>
 8004950:	00800044 	movi	r2,1
 8004954:	1025883a 	mov	r18,r2
 8004958:	003e1006 	br	800419c <__alt_data_end+0xfc00419c>
 800495c:	04800084 	movi	r18,2
 8004960:	90e5c83a 	sub	r18,r18,r3
 8004964:	003fb306 	br	8004834 <__alt_data_end+0xfc004834>
 8004968:	4c800084 	addi	r18,r9,2
 800496c:	9005883a 	mov	r2,r18
 8004970:	903e0a0e 	bge	r18,zero,800419c <__alt_data_end+0xfc00419c>
 8004974:	003fb306 	br	8004844 <__alt_data_end+0xfc004844>
 8004978:	0005883a 	mov	r2,zero
 800497c:	003f8c06 	br	80047b0 <__alt_data_end+0xfc0047b0>
 8004980:	88a2703a 	and	r17,r17,r2
 8004984:	883f8826 	beq	r17,zero,80047a8 <__alt_data_end+0xfc0047a8>
 8004988:	003f8606 	br	80047a4 <__alt_data_end+0xfc0047a4>
 800498c:	d8812344 	addi	r2,sp,1165
 8004990:	003f7e06 	br	800478c <__alt_data_end+0xfc00478c>
 8004994:	d8c12617 	ldw	r3,1176(sp)
 8004998:	003f4d06 	br	80046d0 <__alt_data_end+0xfc0046d0>

0800499c <__vfprintf_internal>:
 800499c:	2007883a 	mov	r3,r4
 80049a0:	01020074 	movhi	r4,2049
 80049a4:	21123804 	addi	r4,r4,18656
 80049a8:	21000017 	ldw	r4,0(r4)
 80049ac:	2805883a 	mov	r2,r5
 80049b0:	300f883a 	mov	r7,r6
 80049b4:	180b883a 	mov	r5,r3
 80049b8:	100d883a 	mov	r6,r2
 80049bc:	80029a01 	jmpi	80029a0 <___vfprintf_internal_r>

080049c0 <__swsetup_r>:
 80049c0:	00820074 	movhi	r2,2049
 80049c4:	defffd04 	addi	sp,sp,-12
 80049c8:	10923804 	addi	r2,r2,18656
 80049cc:	dc400115 	stw	r17,4(sp)
 80049d0:	2023883a 	mov	r17,r4
 80049d4:	11000017 	ldw	r4,0(r2)
 80049d8:	dc000015 	stw	r16,0(sp)
 80049dc:	dfc00215 	stw	ra,8(sp)
 80049e0:	2821883a 	mov	r16,r5
 80049e4:	20000226 	beq	r4,zero,80049f0 <__swsetup_r+0x30>
 80049e8:	20c00e17 	ldw	r3,56(r4)
 80049ec:	18002e26 	beq	r3,zero,8004aa8 <__swsetup_r+0xe8>
 80049f0:	8080030b 	ldhu	r2,12(r16)
 80049f4:	10c0020c 	andi	r3,r2,8
 80049f8:	100d883a 	mov	r6,r2
 80049fc:	18000f26 	beq	r3,zero,8004a3c <__swsetup_r+0x7c>
 8004a00:	80c00417 	ldw	r3,16(r16)
 8004a04:	18001526 	beq	r3,zero,8004a5c <__swsetup_r+0x9c>
 8004a08:	1100004c 	andi	r4,r2,1
 8004a0c:	20001c1e 	bne	r4,zero,8004a80 <__swsetup_r+0xc0>
 8004a10:	1080008c 	andi	r2,r2,2
 8004a14:	1000261e 	bne	r2,zero,8004ab0 <__swsetup_r+0xf0>
 8004a18:	80800517 	ldw	r2,20(r16)
 8004a1c:	80800215 	stw	r2,8(r16)
 8004a20:	18001c26 	beq	r3,zero,8004a94 <__swsetup_r+0xd4>
 8004a24:	0005883a 	mov	r2,zero
 8004a28:	dfc00217 	ldw	ra,8(sp)
 8004a2c:	dc400117 	ldw	r17,4(sp)
 8004a30:	dc000017 	ldw	r16,0(sp)
 8004a34:	dec00304 	addi	sp,sp,12
 8004a38:	f800283a 	ret
 8004a3c:	3080040c 	andi	r2,r6,16
 8004a40:	10001726 	beq	r2,zero,8004aa0 <__swsetup_r+0xe0>
 8004a44:	3080010c 	andi	r2,r6,4
 8004a48:	10001b1e 	bne	r2,zero,8004ab8 <__swsetup_r+0xf8>
 8004a4c:	80c00417 	ldw	r3,16(r16)
 8004a50:	30800214 	ori	r2,r6,8
 8004a54:	8080030d 	sth	r2,12(r16)
 8004a58:	183feb1e 	bne	r3,zero,8004a08 <__alt_data_end+0xfc004a08>
 8004a5c:	1140a00c 	andi	r5,r2,640
 8004a60:	01008004 	movi	r4,512
 8004a64:	293fe826 	beq	r5,r4,8004a08 <__alt_data_end+0xfc004a08>
 8004a68:	8809883a 	mov	r4,r17
 8004a6c:	800b883a 	mov	r5,r16
 8004a70:	80070740 	call	8007074 <__smakebuf_r>
 8004a74:	8080030b 	ldhu	r2,12(r16)
 8004a78:	80c00417 	ldw	r3,16(r16)
 8004a7c:	003fe206 	br	8004a08 <__alt_data_end+0xfc004a08>
 8004a80:	80800517 	ldw	r2,20(r16)
 8004a84:	80000215 	stw	zero,8(r16)
 8004a88:	0085c83a 	sub	r2,zero,r2
 8004a8c:	80800615 	stw	r2,24(r16)
 8004a90:	183fe41e 	bne	r3,zero,8004a24 <__alt_data_end+0xfc004a24>
 8004a94:	8080030b 	ldhu	r2,12(r16)
 8004a98:	1080200c 	andi	r2,r2,128
 8004a9c:	103fe226 	beq	r2,zero,8004a28 <__alt_data_end+0xfc004a28>
 8004aa0:	00bfffc4 	movi	r2,-1
 8004aa4:	003fe006 	br	8004a28 <__alt_data_end+0xfc004a28>
 8004aa8:	80069c00 	call	80069c0 <__sinit>
 8004aac:	003fd006 	br	80049f0 <__alt_data_end+0xfc0049f0>
 8004ab0:	0005883a 	mov	r2,zero
 8004ab4:	003fd906 	br	8004a1c <__alt_data_end+0xfc004a1c>
 8004ab8:	81400c17 	ldw	r5,48(r16)
 8004abc:	28000626 	beq	r5,zero,8004ad8 <__swsetup_r+0x118>
 8004ac0:	80801004 	addi	r2,r16,64
 8004ac4:	28800326 	beq	r5,r2,8004ad4 <__swsetup_r+0x114>
 8004ac8:	8809883a 	mov	r4,r17
 8004acc:	8006b340 	call	8006b34 <_free_r>
 8004ad0:	8180030b 	ldhu	r6,12(r16)
 8004ad4:	80000c15 	stw	zero,48(r16)
 8004ad8:	80c00417 	ldw	r3,16(r16)
 8004adc:	00bff6c4 	movi	r2,-37
 8004ae0:	118c703a 	and	r6,r2,r6
 8004ae4:	80000115 	stw	zero,4(r16)
 8004ae8:	80c00015 	stw	r3,0(r16)
 8004aec:	003fd806 	br	8004a50 <__alt_data_end+0xfc004a50>

08004af0 <quorem>:
 8004af0:	defff704 	addi	sp,sp,-36
 8004af4:	dc800215 	stw	r18,8(sp)
 8004af8:	20800417 	ldw	r2,16(r4)
 8004afc:	2c800417 	ldw	r18,16(r5)
 8004b00:	dfc00815 	stw	ra,32(sp)
 8004b04:	ddc00715 	stw	r23,28(sp)
 8004b08:	dd800615 	stw	r22,24(sp)
 8004b0c:	dd400515 	stw	r21,20(sp)
 8004b10:	dd000415 	stw	r20,16(sp)
 8004b14:	dcc00315 	stw	r19,12(sp)
 8004b18:	dc400115 	stw	r17,4(sp)
 8004b1c:	dc000015 	stw	r16,0(sp)
 8004b20:	14807116 	blt	r2,r18,8004ce8 <quorem+0x1f8>
 8004b24:	94bfffc4 	addi	r18,r18,-1
 8004b28:	94ad883a 	add	r22,r18,r18
 8004b2c:	b5ad883a 	add	r22,r22,r22
 8004b30:	2c400504 	addi	r17,r5,20
 8004b34:	8da9883a 	add	r20,r17,r22
 8004b38:	25400504 	addi	r21,r4,20
 8004b3c:	282f883a 	mov	r23,r5
 8004b40:	adad883a 	add	r22,r21,r22
 8004b44:	a1400017 	ldw	r5,0(r20)
 8004b48:	2021883a 	mov	r16,r4
 8004b4c:	b1000017 	ldw	r4,0(r22)
 8004b50:	29400044 	addi	r5,r5,1
 8004b54:	800d7540 	call	800d754 <__udivsi3>
 8004b58:	1027883a 	mov	r19,r2
 8004b5c:	10002c26 	beq	r2,zero,8004c10 <quorem+0x120>
 8004b60:	a813883a 	mov	r9,r21
 8004b64:	8811883a 	mov	r8,r17
 8004b68:	0009883a 	mov	r4,zero
 8004b6c:	000d883a 	mov	r6,zero
 8004b70:	41c00017 	ldw	r7,0(r8)
 8004b74:	49400017 	ldw	r5,0(r9)
 8004b78:	42000104 	addi	r8,r8,4
 8004b7c:	38bfffcc 	andi	r2,r7,65535
 8004b80:	14c5383a 	mul	r2,r2,r19
 8004b84:	380ed43a 	srli	r7,r7,16
 8004b88:	28ffffcc 	andi	r3,r5,65535
 8004b8c:	2085883a 	add	r2,r4,r2
 8004b90:	1008d43a 	srli	r4,r2,16
 8004b94:	3ccf383a 	mul	r7,r7,r19
 8004b98:	198d883a 	add	r6,r3,r6
 8004b9c:	10ffffcc 	andi	r3,r2,65535
 8004ba0:	30c7c83a 	sub	r3,r6,r3
 8004ba4:	280ad43a 	srli	r5,r5,16
 8004ba8:	21c9883a 	add	r4,r4,r7
 8004bac:	180dd43a 	srai	r6,r3,16
 8004bb0:	20bfffcc 	andi	r2,r4,65535
 8004bb4:	288bc83a 	sub	r5,r5,r2
 8004bb8:	298b883a 	add	r5,r5,r6
 8004bbc:	280e943a 	slli	r7,r5,16
 8004bc0:	18ffffcc 	andi	r3,r3,65535
 8004bc4:	2008d43a 	srli	r4,r4,16
 8004bc8:	38ceb03a 	or	r7,r7,r3
 8004bcc:	49c00015 	stw	r7,0(r9)
 8004bd0:	280dd43a 	srai	r6,r5,16
 8004bd4:	4a400104 	addi	r9,r9,4
 8004bd8:	a23fe52e 	bgeu	r20,r8,8004b70 <__alt_data_end+0xfc004b70>
 8004bdc:	b0800017 	ldw	r2,0(r22)
 8004be0:	10000b1e 	bne	r2,zero,8004c10 <quorem+0x120>
 8004be4:	b0bfff04 	addi	r2,r22,-4
 8004be8:	a880082e 	bgeu	r21,r2,8004c0c <quorem+0x11c>
 8004bec:	b0ffff17 	ldw	r3,-4(r22)
 8004bf0:	18000326 	beq	r3,zero,8004c00 <quorem+0x110>
 8004bf4:	00000506 	br	8004c0c <quorem+0x11c>
 8004bf8:	10c00017 	ldw	r3,0(r2)
 8004bfc:	1800031e 	bne	r3,zero,8004c0c <quorem+0x11c>
 8004c00:	10bfff04 	addi	r2,r2,-4
 8004c04:	94bfffc4 	addi	r18,r18,-1
 8004c08:	a8bffb36 	bltu	r21,r2,8004bf8 <__alt_data_end+0xfc004bf8>
 8004c0c:	84800415 	stw	r18,16(r16)
 8004c10:	8009883a 	mov	r4,r16
 8004c14:	b80b883a 	mov	r5,r23
 8004c18:	80085d80 	call	80085d8 <__mcmp>
 8004c1c:	10002616 	blt	r2,zero,8004cb8 <quorem+0x1c8>
 8004c20:	9cc00044 	addi	r19,r19,1
 8004c24:	a80d883a 	mov	r6,r21
 8004c28:	000b883a 	mov	r5,zero
 8004c2c:	31000017 	ldw	r4,0(r6)
 8004c30:	88800017 	ldw	r2,0(r17)
 8004c34:	31800104 	addi	r6,r6,4
 8004c38:	20ffffcc 	andi	r3,r4,65535
 8004c3c:	194b883a 	add	r5,r3,r5
 8004c40:	10ffffcc 	andi	r3,r2,65535
 8004c44:	28c7c83a 	sub	r3,r5,r3
 8004c48:	1004d43a 	srli	r2,r2,16
 8004c4c:	2008d43a 	srli	r4,r4,16
 8004c50:	180bd43a 	srai	r5,r3,16
 8004c54:	18ffffcc 	andi	r3,r3,65535
 8004c58:	2089c83a 	sub	r4,r4,r2
 8004c5c:	2149883a 	add	r4,r4,r5
 8004c60:	2004943a 	slli	r2,r4,16
 8004c64:	8c400104 	addi	r17,r17,4
 8004c68:	200bd43a 	srai	r5,r4,16
 8004c6c:	10c6b03a 	or	r3,r2,r3
 8004c70:	30ffff15 	stw	r3,-4(r6)
 8004c74:	a47fed2e 	bgeu	r20,r17,8004c2c <__alt_data_end+0xfc004c2c>
 8004c78:	9485883a 	add	r2,r18,r18
 8004c7c:	1085883a 	add	r2,r2,r2
 8004c80:	a887883a 	add	r3,r21,r2
 8004c84:	18800017 	ldw	r2,0(r3)
 8004c88:	10000b1e 	bne	r2,zero,8004cb8 <quorem+0x1c8>
 8004c8c:	18bfff04 	addi	r2,r3,-4
 8004c90:	a880082e 	bgeu	r21,r2,8004cb4 <quorem+0x1c4>
 8004c94:	18ffff17 	ldw	r3,-4(r3)
 8004c98:	18000326 	beq	r3,zero,8004ca8 <quorem+0x1b8>
 8004c9c:	00000506 	br	8004cb4 <quorem+0x1c4>
 8004ca0:	10c00017 	ldw	r3,0(r2)
 8004ca4:	1800031e 	bne	r3,zero,8004cb4 <quorem+0x1c4>
 8004ca8:	10bfff04 	addi	r2,r2,-4
 8004cac:	94bfffc4 	addi	r18,r18,-1
 8004cb0:	a8bffb36 	bltu	r21,r2,8004ca0 <__alt_data_end+0xfc004ca0>
 8004cb4:	84800415 	stw	r18,16(r16)
 8004cb8:	9805883a 	mov	r2,r19
 8004cbc:	dfc00817 	ldw	ra,32(sp)
 8004cc0:	ddc00717 	ldw	r23,28(sp)
 8004cc4:	dd800617 	ldw	r22,24(sp)
 8004cc8:	dd400517 	ldw	r21,20(sp)
 8004ccc:	dd000417 	ldw	r20,16(sp)
 8004cd0:	dcc00317 	ldw	r19,12(sp)
 8004cd4:	dc800217 	ldw	r18,8(sp)
 8004cd8:	dc400117 	ldw	r17,4(sp)
 8004cdc:	dc000017 	ldw	r16,0(sp)
 8004ce0:	dec00904 	addi	sp,sp,36
 8004ce4:	f800283a 	ret
 8004ce8:	0005883a 	mov	r2,zero
 8004cec:	003ff306 	br	8004cbc <__alt_data_end+0xfc004cbc>

08004cf0 <_dtoa_r>:
 8004cf0:	20801017 	ldw	r2,64(r4)
 8004cf4:	deffde04 	addi	sp,sp,-136
 8004cf8:	dd401d15 	stw	r21,116(sp)
 8004cfc:	dcc01b15 	stw	r19,108(sp)
 8004d00:	dc801a15 	stw	r18,104(sp)
 8004d04:	dc401915 	stw	r17,100(sp)
 8004d08:	dc001815 	stw	r16,96(sp)
 8004d0c:	dfc02115 	stw	ra,132(sp)
 8004d10:	df002015 	stw	fp,128(sp)
 8004d14:	ddc01f15 	stw	r23,124(sp)
 8004d18:	dd801e15 	stw	r22,120(sp)
 8004d1c:	dd001c15 	stw	r20,112(sp)
 8004d20:	d9c00315 	stw	r7,12(sp)
 8004d24:	2021883a 	mov	r16,r4
 8004d28:	302b883a 	mov	r21,r6
 8004d2c:	2825883a 	mov	r18,r5
 8004d30:	dc402417 	ldw	r17,144(sp)
 8004d34:	3027883a 	mov	r19,r6
 8004d38:	10000826 	beq	r2,zero,8004d5c <_dtoa_r+0x6c>
 8004d3c:	21801117 	ldw	r6,68(r4)
 8004d40:	00c00044 	movi	r3,1
 8004d44:	100b883a 	mov	r5,r2
 8004d48:	1986983a 	sll	r3,r3,r6
 8004d4c:	11800115 	stw	r6,4(r2)
 8004d50:	10c00215 	stw	r3,8(r2)
 8004d54:	8007dc00 	call	8007dc0 <_Bfree>
 8004d58:	80001015 	stw	zero,64(r16)
 8004d5c:	a8002d16 	blt	r21,zero,8004e14 <_dtoa_r+0x124>
 8004d60:	88000015 	stw	zero,0(r17)
 8004d64:	a8dffc2c 	andhi	r3,r21,32752
 8004d68:	009ffc34 	movhi	r2,32752
 8004d6c:	18801b26 	beq	r3,r2,8004ddc <_dtoa_r+0xec>
 8004d70:	9009883a 	mov	r4,r18
 8004d74:	980b883a 	mov	r5,r19
 8004d78:	000d883a 	mov	r6,zero
 8004d7c:	000f883a 	mov	r7,zero
 8004d80:	800e8cc0 	call	800e8cc <__eqdf2>
 8004d84:	10002a1e 	bne	r2,zero,8004e30 <_dtoa_r+0x140>
 8004d88:	d8c02317 	ldw	r3,140(sp)
 8004d8c:	d9002517 	ldw	r4,148(sp)
 8004d90:	00800044 	movi	r2,1
 8004d94:	18800015 	stw	r2,0(r3)
 8004d98:	2001a226 	beq	r4,zero,8005424 <_dtoa_r+0x734>
 8004d9c:	00820074 	movhi	r2,2049
 8004da0:	108ab244 	addi	r2,r2,10953
 8004da4:	20800015 	stw	r2,0(r4)
 8004da8:	10bfffc4 	addi	r2,r2,-1
 8004dac:	dfc02117 	ldw	ra,132(sp)
 8004db0:	df002017 	ldw	fp,128(sp)
 8004db4:	ddc01f17 	ldw	r23,124(sp)
 8004db8:	dd801e17 	ldw	r22,120(sp)
 8004dbc:	dd401d17 	ldw	r21,116(sp)
 8004dc0:	dd001c17 	ldw	r20,112(sp)
 8004dc4:	dcc01b17 	ldw	r19,108(sp)
 8004dc8:	dc801a17 	ldw	r18,104(sp)
 8004dcc:	dc401917 	ldw	r17,100(sp)
 8004dd0:	dc001817 	ldw	r16,96(sp)
 8004dd4:	dec02204 	addi	sp,sp,136
 8004dd8:	f800283a 	ret
 8004ddc:	d8c02317 	ldw	r3,140(sp)
 8004de0:	0089c3c4 	movi	r2,9999
 8004de4:	18800015 	stw	r2,0(r3)
 8004de8:	90017c26 	beq	r18,zero,80053dc <_dtoa_r+0x6ec>
 8004dec:	00820074 	movhi	r2,2049
 8004df0:	108ac604 	addi	r2,r2,11032
 8004df4:	d9002517 	ldw	r4,148(sp)
 8004df8:	203fec26 	beq	r4,zero,8004dac <__alt_data_end+0xfc004dac>
 8004dfc:	10c000c7 	ldb	r3,3(r2)
 8004e00:	18017d1e 	bne	r3,zero,80053f8 <_dtoa_r+0x708>
 8004e04:	10c000c4 	addi	r3,r2,3
 8004e08:	d9802517 	ldw	r6,148(sp)
 8004e0c:	30c00015 	stw	r3,0(r6)
 8004e10:	003fe606 	br	8004dac <__alt_data_end+0xfc004dac>
 8004e14:	04e00034 	movhi	r19,32768
 8004e18:	9cffffc4 	addi	r19,r19,-1
 8004e1c:	00800044 	movi	r2,1
 8004e20:	ace6703a 	and	r19,r21,r19
 8004e24:	88800015 	stw	r2,0(r17)
 8004e28:	982b883a 	mov	r21,r19
 8004e2c:	003fcd06 	br	8004d64 <__alt_data_end+0xfc004d64>
 8004e30:	d8800204 	addi	r2,sp,8
 8004e34:	a822d53a 	srli	r17,r21,20
 8004e38:	d8800015 	stw	r2,0(sp)
 8004e3c:	8009883a 	mov	r4,r16
 8004e40:	900b883a 	mov	r5,r18
 8004e44:	980d883a 	mov	r6,r19
 8004e48:	d9c00104 	addi	r7,sp,4
 8004e4c:	800894c0 	call	800894c <__d2b>
 8004e50:	1039883a 	mov	fp,r2
 8004e54:	88016a1e 	bne	r17,zero,8005400 <_dtoa_r+0x710>
 8004e58:	dd000217 	ldw	r20,8(sp)
 8004e5c:	dc400117 	ldw	r17,4(sp)
 8004e60:	00befbc4 	movi	r2,-1041
 8004e64:	a463883a 	add	r17,r20,r17
 8004e68:	8882ea16 	blt	r17,r2,8005a14 <_dtoa_r+0xd24>
 8004e6c:	00bf0384 	movi	r2,-1010
 8004e70:	1445c83a 	sub	r2,r2,r17
 8004e74:	89010484 	addi	r4,r17,1042
 8004e78:	a8aa983a 	sll	r21,r21,r2
 8004e7c:	9108d83a 	srl	r4,r18,r4
 8004e80:	a908b03a 	or	r4,r21,r4
 8004e84:	800fc5c0 	call	800fc5c <__floatunsidf>
 8004e88:	017f8434 	movhi	r5,65040
 8004e8c:	01800044 	movi	r6,1
 8004e90:	1009883a 	mov	r4,r2
 8004e94:	194b883a 	add	r5,r3,r5
 8004e98:	8c7fffc4 	addi	r17,r17,-1
 8004e9c:	d9800f15 	stw	r6,60(sp)
 8004ea0:	000d883a 	mov	r6,zero
 8004ea4:	01cffe34 	movhi	r7,16376
 8004ea8:	800f2340 	call	800f234 <__subdf3>
 8004eac:	0198dbf4 	movhi	r6,25455
 8004eb0:	01cff4f4 	movhi	r7,16339
 8004eb4:	1009883a 	mov	r4,r2
 8004eb8:	180b883a 	mov	r5,r3
 8004ebc:	3190d844 	addi	r6,r6,17249
 8004ec0:	39e1e9c4 	addi	r7,r7,-30809
 8004ec4:	800eb100 	call	800eb10 <__muldf3>
 8004ec8:	01a2d874 	movhi	r6,35681
 8004ecc:	01cff1f4 	movhi	r7,16327
 8004ed0:	180b883a 	mov	r5,r3
 8004ed4:	31b22cc4 	addi	r6,r6,-14157
 8004ed8:	39e28a04 	addi	r7,r7,-30168
 8004edc:	1009883a 	mov	r4,r2
 8004ee0:	800d7640 	call	800d764 <__adddf3>
 8004ee4:	8809883a 	mov	r4,r17
 8004ee8:	102d883a 	mov	r22,r2
 8004eec:	182b883a 	mov	r21,r3
 8004ef0:	800fb8c0 	call	800fb8c <__floatsidf>
 8004ef4:	019427f4 	movhi	r6,20639
 8004ef8:	01cff4f4 	movhi	r7,16339
 8004efc:	1009883a 	mov	r4,r2
 8004f00:	180b883a 	mov	r5,r3
 8004f04:	319e7ec4 	addi	r6,r6,31227
 8004f08:	39d104c4 	addi	r7,r7,17427
 8004f0c:	800eb100 	call	800eb10 <__muldf3>
 8004f10:	b009883a 	mov	r4,r22
 8004f14:	a80b883a 	mov	r5,r21
 8004f18:	100d883a 	mov	r6,r2
 8004f1c:	180f883a 	mov	r7,r3
 8004f20:	800d7640 	call	800d764 <__adddf3>
 8004f24:	1009883a 	mov	r4,r2
 8004f28:	180b883a 	mov	r5,r3
 8004f2c:	102d883a 	mov	r22,r2
 8004f30:	182b883a 	mov	r21,r3
 8004f34:	800fb040 	call	800fb04 <__fixdfsi>
 8004f38:	b009883a 	mov	r4,r22
 8004f3c:	a80b883a 	mov	r5,r21
 8004f40:	000d883a 	mov	r6,zero
 8004f44:	000f883a 	mov	r7,zero
 8004f48:	d8800515 	stw	r2,20(sp)
 8004f4c:	800ea300 	call	800ea30 <__ledf2>
 8004f50:	10023116 	blt	r2,zero,8005818 <_dtoa_r+0xb28>
 8004f54:	d8c00517 	ldw	r3,20(sp)
 8004f58:	00800584 	movi	r2,22
 8004f5c:	10c21f36 	bltu	r2,r3,80057dc <_dtoa_r+0xaec>
 8004f60:	180490fa 	slli	r2,r3,3
 8004f64:	00c20074 	movhi	r3,2049
 8004f68:	18cae204 	addi	r3,r3,11144
 8004f6c:	1885883a 	add	r2,r3,r2
 8004f70:	11000017 	ldw	r4,0(r2)
 8004f74:	11400117 	ldw	r5,4(r2)
 8004f78:	900d883a 	mov	r6,r18
 8004f7c:	980f883a 	mov	r7,r19
 8004f80:	800e9500 	call	800e950 <__gedf2>
 8004f84:	0082a70e 	bge	zero,r2,8005a24 <_dtoa_r+0xd34>
 8004f88:	d9000517 	ldw	r4,20(sp)
 8004f8c:	d8000c15 	stw	zero,48(sp)
 8004f90:	213fffc4 	addi	r4,r4,-1
 8004f94:	d9000515 	stw	r4,20(sp)
 8004f98:	a463c83a 	sub	r17,r20,r17
 8004f9c:	8dbfffc4 	addi	r22,r17,-1
 8004fa0:	b0021916 	blt	r22,zero,8005808 <_dtoa_r+0xb18>
 8004fa4:	d8000815 	stw	zero,32(sp)
 8004fa8:	d8800517 	ldw	r2,20(sp)
 8004fac:	10020e16 	blt	r2,zero,80057e8 <_dtoa_r+0xaf8>
 8004fb0:	b0ad883a 	add	r22,r22,r2
 8004fb4:	d8800a15 	stw	r2,40(sp)
 8004fb8:	d8000915 	stw	zero,36(sp)
 8004fbc:	d8c00317 	ldw	r3,12(sp)
 8004fc0:	00800244 	movi	r2,9
 8004fc4:	10c11a36 	bltu	r2,r3,8005430 <_dtoa_r+0x740>
 8004fc8:	00800144 	movi	r2,5
 8004fcc:	10c4fc0e 	bge	r2,r3,80063c0 <_dtoa_r+0x16d0>
 8004fd0:	18ffff04 	addi	r3,r3,-4
 8004fd4:	d8c00315 	stw	r3,12(sp)
 8004fd8:	0029883a 	mov	r20,zero
 8004fdc:	d9800317 	ldw	r6,12(sp)
 8004fe0:	008000c4 	movi	r2,3
 8004fe4:	3083bd26 	beq	r6,r2,8005edc <_dtoa_r+0x11ec>
 8004fe8:	1183670e 	bge	r2,r6,8005d88 <_dtoa_r+0x1098>
 8004fec:	d8c00317 	ldw	r3,12(sp)
 8004ff0:	00800104 	movi	r2,4
 8004ff4:	1882e726 	beq	r3,r2,8005b94 <_dtoa_r+0xea4>
 8004ff8:	00800144 	movi	r2,5
 8004ffc:	1884f21e 	bne	r3,r2,80063c8 <_dtoa_r+0x16d8>
 8005000:	00800044 	movi	r2,1
 8005004:	d8800b15 	stw	r2,44(sp)
 8005008:	d8c02217 	ldw	r3,136(sp)
 800500c:	d9000517 	ldw	r4,20(sp)
 8005010:	1907883a 	add	r3,r3,r4
 8005014:	19800044 	addi	r6,r3,1
 8005018:	d8c00d15 	stw	r3,52(sp)
 800501c:	d9800615 	stw	r6,24(sp)
 8005020:	0183c30e 	bge	zero,r6,8005f30 <_dtoa_r+0x1240>
 8005024:	d9800617 	ldw	r6,24(sp)
 8005028:	3023883a 	mov	r17,r6
 800502c:	80001115 	stw	zero,68(r16)
 8005030:	008005c4 	movi	r2,23
 8005034:	1184f62e 	bgeu	r2,r6,8006410 <_dtoa_r+0x1720>
 8005038:	00c00044 	movi	r3,1
 800503c:	00800104 	movi	r2,4
 8005040:	1085883a 	add	r2,r2,r2
 8005044:	11000504 	addi	r4,r2,20
 8005048:	180b883a 	mov	r5,r3
 800504c:	18c00044 	addi	r3,r3,1
 8005050:	313ffb2e 	bgeu	r6,r4,8005040 <__alt_data_end+0xfc005040>
 8005054:	81401115 	stw	r5,68(r16)
 8005058:	8009883a 	mov	r4,r16
 800505c:	8007d180 	call	8007d18 <_Balloc>
 8005060:	d8800715 	stw	r2,28(sp)
 8005064:	80801015 	stw	r2,64(r16)
 8005068:	00800384 	movi	r2,14
 800506c:	1440fd36 	bltu	r2,r17,8005464 <_dtoa_r+0x774>
 8005070:	a000fc26 	beq	r20,zero,8005464 <_dtoa_r+0x774>
 8005074:	d8800517 	ldw	r2,20(sp)
 8005078:	0083b90e 	bge	zero,r2,8005f60 <_dtoa_r+0x1270>
 800507c:	d8c00517 	ldw	r3,20(sp)
 8005080:	108003cc 	andi	r2,r2,15
 8005084:	100490fa 	slli	r2,r2,3
 8005088:	182fd13a 	srai	r23,r3,4
 800508c:	00c20074 	movhi	r3,2049
 8005090:	18cae204 	addi	r3,r3,11144
 8005094:	1885883a 	add	r2,r3,r2
 8005098:	b8c0040c 	andi	r3,r23,16
 800509c:	12c00017 	ldw	r11,0(r2)
 80050a0:	12800117 	ldw	r10,4(r2)
 80050a4:	18039726 	beq	r3,zero,8005f04 <_dtoa_r+0x1214>
 80050a8:	00820074 	movhi	r2,2049
 80050ac:	108ad804 	addi	r2,r2,11104
 80050b0:	11800817 	ldw	r6,32(r2)
 80050b4:	11c00917 	ldw	r7,36(r2)
 80050b8:	9009883a 	mov	r4,r18
 80050bc:	980b883a 	mov	r5,r19
 80050c0:	da801615 	stw	r10,88(sp)
 80050c4:	dac01515 	stw	r11,84(sp)
 80050c8:	800e0000 	call	800e000 <__divdf3>
 80050cc:	da801617 	ldw	r10,88(sp)
 80050d0:	dac01517 	ldw	r11,84(sp)
 80050d4:	bdc003cc 	andi	r23,r23,15
 80050d8:	044000c4 	movi	r17,3
 80050dc:	d8800e15 	stw	r2,56(sp)
 80050e0:	182b883a 	mov	r21,r3
 80050e4:	b8001126 	beq	r23,zero,800512c <_dtoa_r+0x43c>
 80050e8:	05020074 	movhi	r20,2049
 80050ec:	a50ad804 	addi	r20,r20,11104
 80050f0:	5805883a 	mov	r2,r11
 80050f4:	5007883a 	mov	r3,r10
 80050f8:	b980004c 	andi	r6,r23,1
 80050fc:	1009883a 	mov	r4,r2
 8005100:	b82fd07a 	srai	r23,r23,1
 8005104:	180b883a 	mov	r5,r3
 8005108:	30000426 	beq	r6,zero,800511c <_dtoa_r+0x42c>
 800510c:	a1800017 	ldw	r6,0(r20)
 8005110:	a1c00117 	ldw	r7,4(r20)
 8005114:	8c400044 	addi	r17,r17,1
 8005118:	800eb100 	call	800eb10 <__muldf3>
 800511c:	a5000204 	addi	r20,r20,8
 8005120:	b83ff51e 	bne	r23,zero,80050f8 <__alt_data_end+0xfc0050f8>
 8005124:	1017883a 	mov	r11,r2
 8005128:	1815883a 	mov	r10,r3
 800512c:	d9000e17 	ldw	r4,56(sp)
 8005130:	a80b883a 	mov	r5,r21
 8005134:	580d883a 	mov	r6,r11
 8005138:	500f883a 	mov	r7,r10
 800513c:	800e0000 	call	800e000 <__divdf3>
 8005140:	1029883a 	mov	r20,r2
 8005144:	182b883a 	mov	r21,r3
 8005148:	d9800c17 	ldw	r6,48(sp)
 800514c:	30000626 	beq	r6,zero,8005168 <_dtoa_r+0x478>
 8005150:	a009883a 	mov	r4,r20
 8005154:	a80b883a 	mov	r5,r21
 8005158:	000d883a 	mov	r6,zero
 800515c:	01cffc34 	movhi	r7,16368
 8005160:	800ea300 	call	800ea30 <__ledf2>
 8005164:	10043216 	blt	r2,zero,8006230 <_dtoa_r+0x1540>
 8005168:	8809883a 	mov	r4,r17
 800516c:	800fb8c0 	call	800fb8c <__floatsidf>
 8005170:	1009883a 	mov	r4,r2
 8005174:	180b883a 	mov	r5,r3
 8005178:	a00d883a 	mov	r6,r20
 800517c:	a80f883a 	mov	r7,r21
 8005180:	800eb100 	call	800eb10 <__muldf3>
 8005184:	000d883a 	mov	r6,zero
 8005188:	1009883a 	mov	r4,r2
 800518c:	180b883a 	mov	r5,r3
 8005190:	01d00734 	movhi	r7,16412
 8005194:	800d7640 	call	800d764 <__adddf3>
 8005198:	1023883a 	mov	r17,r2
 800519c:	d9800617 	ldw	r6,24(sp)
 80051a0:	00bf3034 	movhi	r2,64704
 80051a4:	1885883a 	add	r2,r3,r2
 80051a8:	d8800e15 	stw	r2,56(sp)
 80051ac:	30032e26 	beq	r6,zero,8005e68 <_dtoa_r+0x1178>
 80051b0:	d8c00517 	ldw	r3,20(sp)
 80051b4:	da800617 	ldw	r10,24(sp)
 80051b8:	d8c01215 	stw	r3,72(sp)
 80051bc:	d9000b17 	ldw	r4,44(sp)
 80051c0:	2003b026 	beq	r4,zero,8006084 <_dtoa_r+0x1394>
 80051c4:	50bfffc4 	addi	r2,r10,-1
 80051c8:	100490fa 	slli	r2,r2,3
 80051cc:	00c20074 	movhi	r3,2049
 80051d0:	18cae204 	addi	r3,r3,11144
 80051d4:	1885883a 	add	r2,r3,r2
 80051d8:	11800017 	ldw	r6,0(r2)
 80051dc:	11c00117 	ldw	r7,4(r2)
 80051e0:	d8800717 	ldw	r2,28(sp)
 80051e4:	0009883a 	mov	r4,zero
 80051e8:	014ff834 	movhi	r5,16352
 80051ec:	da801615 	stw	r10,88(sp)
 80051f0:	15c00044 	addi	r23,r2,1
 80051f4:	800e0000 	call	800e000 <__divdf3>
 80051f8:	d9c00e17 	ldw	r7,56(sp)
 80051fc:	880d883a 	mov	r6,r17
 8005200:	1009883a 	mov	r4,r2
 8005204:	180b883a 	mov	r5,r3
 8005208:	800f2340 	call	800f234 <__subdf3>
 800520c:	a80b883a 	mov	r5,r21
 8005210:	a009883a 	mov	r4,r20
 8005214:	d8c01015 	stw	r3,64(sp)
 8005218:	d8800e15 	stw	r2,56(sp)
 800521c:	800fb040 	call	800fb04 <__fixdfsi>
 8005220:	1009883a 	mov	r4,r2
 8005224:	d8801715 	stw	r2,92(sp)
 8005228:	800fb8c0 	call	800fb8c <__floatsidf>
 800522c:	a009883a 	mov	r4,r20
 8005230:	a80b883a 	mov	r5,r21
 8005234:	100d883a 	mov	r6,r2
 8005238:	180f883a 	mov	r7,r3
 800523c:	800f2340 	call	800f234 <__subdf3>
 8005240:	da001717 	ldw	r8,92(sp)
 8005244:	1829883a 	mov	r20,r3
 8005248:	d8c00717 	ldw	r3,28(sp)
 800524c:	d9000e17 	ldw	r4,56(sp)
 8005250:	d9401017 	ldw	r5,64(sp)
 8005254:	42000c04 	addi	r8,r8,48
 8005258:	1023883a 	mov	r17,r2
 800525c:	1a000005 	stb	r8,0(r3)
 8005260:	880d883a 	mov	r6,r17
 8005264:	a00f883a 	mov	r7,r20
 8005268:	402b883a 	mov	r21,r8
 800526c:	800e9500 	call	800e950 <__gedf2>
 8005270:	00844516 	blt	zero,r2,8006388 <_dtoa_r+0x1698>
 8005274:	0009883a 	mov	r4,zero
 8005278:	014ffc34 	movhi	r5,16368
 800527c:	880d883a 	mov	r6,r17
 8005280:	a00f883a 	mov	r7,r20
 8005284:	800f2340 	call	800f234 <__subdf3>
 8005288:	d9000e17 	ldw	r4,56(sp)
 800528c:	d9401017 	ldw	r5,64(sp)
 8005290:	100d883a 	mov	r6,r2
 8005294:	180f883a 	mov	r7,r3
 8005298:	800e9500 	call	800e950 <__gedf2>
 800529c:	da801617 	ldw	r10,88(sp)
 80052a0:	00843616 	blt	zero,r2,800637c <_dtoa_r+0x168c>
 80052a4:	00800044 	movi	r2,1
 80052a8:	12806e0e 	bge	r2,r10,8005464 <_dtoa_r+0x774>
 80052ac:	d9000717 	ldw	r4,28(sp)
 80052b0:	dd801315 	stw	r22,76(sp)
 80052b4:	dc001115 	stw	r16,68(sp)
 80052b8:	2295883a 	add	r10,r4,r10
 80052bc:	dcc01415 	stw	r19,80(sp)
 80052c0:	502d883a 	mov	r22,r10
 80052c4:	dcc01017 	ldw	r19,64(sp)
 80052c8:	b821883a 	mov	r16,r23
 80052cc:	dc801015 	stw	r18,64(sp)
 80052d0:	dc800e17 	ldw	r18,56(sp)
 80052d4:	00000906 	br	80052fc <_dtoa_r+0x60c>
 80052d8:	800f2340 	call	800f234 <__subdf3>
 80052dc:	1009883a 	mov	r4,r2
 80052e0:	180b883a 	mov	r5,r3
 80052e4:	900d883a 	mov	r6,r18
 80052e8:	980f883a 	mov	r7,r19
 80052ec:	800ea300 	call	800ea30 <__ledf2>
 80052f0:	10040e16 	blt	r2,zero,800632c <_dtoa_r+0x163c>
 80052f4:	b821883a 	mov	r16,r23
 80052f8:	bd841026 	beq	r23,r22,800633c <_dtoa_r+0x164c>
 80052fc:	9009883a 	mov	r4,r18
 8005300:	980b883a 	mov	r5,r19
 8005304:	000d883a 	mov	r6,zero
 8005308:	01d00934 	movhi	r7,16420
 800530c:	800eb100 	call	800eb10 <__muldf3>
 8005310:	000d883a 	mov	r6,zero
 8005314:	01d00934 	movhi	r7,16420
 8005318:	8809883a 	mov	r4,r17
 800531c:	a00b883a 	mov	r5,r20
 8005320:	1025883a 	mov	r18,r2
 8005324:	1827883a 	mov	r19,r3
 8005328:	800eb100 	call	800eb10 <__muldf3>
 800532c:	180b883a 	mov	r5,r3
 8005330:	1009883a 	mov	r4,r2
 8005334:	1823883a 	mov	r17,r3
 8005338:	1029883a 	mov	r20,r2
 800533c:	800fb040 	call	800fb04 <__fixdfsi>
 8005340:	1009883a 	mov	r4,r2
 8005344:	102b883a 	mov	r21,r2
 8005348:	800fb8c0 	call	800fb8c <__floatsidf>
 800534c:	a009883a 	mov	r4,r20
 8005350:	880b883a 	mov	r5,r17
 8005354:	100d883a 	mov	r6,r2
 8005358:	180f883a 	mov	r7,r3
 800535c:	800f2340 	call	800f234 <__subdf3>
 8005360:	ad400c04 	addi	r21,r21,48
 8005364:	1009883a 	mov	r4,r2
 8005368:	180b883a 	mov	r5,r3
 800536c:	900d883a 	mov	r6,r18
 8005370:	980f883a 	mov	r7,r19
 8005374:	85400005 	stb	r21,0(r16)
 8005378:	1023883a 	mov	r17,r2
 800537c:	1829883a 	mov	r20,r3
 8005380:	800ea300 	call	800ea30 <__ledf2>
 8005384:	bdc00044 	addi	r23,r23,1
 8005388:	0009883a 	mov	r4,zero
 800538c:	014ffc34 	movhi	r5,16368
 8005390:	880d883a 	mov	r6,r17
 8005394:	a00f883a 	mov	r7,r20
 8005398:	103fcf0e 	bge	r2,zero,80052d8 <__alt_data_end+0xfc0052d8>
 800539c:	d9801217 	ldw	r6,72(sp)
 80053a0:	dc001117 	ldw	r16,68(sp)
 80053a4:	d9800515 	stw	r6,20(sp)
 80053a8:	8009883a 	mov	r4,r16
 80053ac:	e00b883a 	mov	r5,fp
 80053b0:	8007dc00 	call	8007dc0 <_Bfree>
 80053b4:	d8c00517 	ldw	r3,20(sp)
 80053b8:	d9002317 	ldw	r4,140(sp)
 80053bc:	d9802517 	ldw	r6,148(sp)
 80053c0:	b8000005 	stb	zero,0(r23)
 80053c4:	18800044 	addi	r2,r3,1
 80053c8:	20800015 	stw	r2,0(r4)
 80053cc:	30027226 	beq	r6,zero,8005d98 <_dtoa_r+0x10a8>
 80053d0:	35c00015 	stw	r23,0(r6)
 80053d4:	d8800717 	ldw	r2,28(sp)
 80053d8:	003e7406 	br	8004dac <__alt_data_end+0xfc004dac>
 80053dc:	00800434 	movhi	r2,16
 80053e0:	10bfffc4 	addi	r2,r2,-1
 80053e4:	a8aa703a 	and	r21,r21,r2
 80053e8:	a83e801e 	bne	r21,zero,8004dec <__alt_data_end+0xfc004dec>
 80053ec:	00820074 	movhi	r2,2049
 80053f0:	108ac304 	addi	r2,r2,11020
 80053f4:	003e7f06 	br	8004df4 <__alt_data_end+0xfc004df4>
 80053f8:	10c00204 	addi	r3,r2,8
 80053fc:	003e8206 	br	8004e08 <__alt_data_end+0xfc004e08>
 8005400:	01400434 	movhi	r5,16
 8005404:	297fffc4 	addi	r5,r5,-1
 8005408:	994a703a 	and	r5,r19,r5
 800540c:	9009883a 	mov	r4,r18
 8005410:	8c7f0044 	addi	r17,r17,-1023
 8005414:	294ffc34 	orhi	r5,r5,16368
 8005418:	dd000217 	ldw	r20,8(sp)
 800541c:	d8000f15 	stw	zero,60(sp)
 8005420:	003e9f06 	br	8004ea0 <__alt_data_end+0xfc004ea0>
 8005424:	00820074 	movhi	r2,2049
 8005428:	108ab204 	addi	r2,r2,10952
 800542c:	003e5f06 	br	8004dac <__alt_data_end+0xfc004dac>
 8005430:	80001115 	stw	zero,68(r16)
 8005434:	8009883a 	mov	r4,r16
 8005438:	000b883a 	mov	r5,zero
 800543c:	8007d180 	call	8007d18 <_Balloc>
 8005440:	01bfffc4 	movi	r6,-1
 8005444:	d8800715 	stw	r2,28(sp)
 8005448:	80801015 	stw	r2,64(r16)
 800544c:	00800044 	movi	r2,1
 8005450:	d9800615 	stw	r6,24(sp)
 8005454:	d8800b15 	stw	r2,44(sp)
 8005458:	d8002215 	stw	zero,136(sp)
 800545c:	d9800d15 	stw	r6,52(sp)
 8005460:	d8000315 	stw	zero,12(sp)
 8005464:	d8800117 	ldw	r2,4(sp)
 8005468:	10008e16 	blt	r2,zero,80056a4 <_dtoa_r+0x9b4>
 800546c:	d9000517 	ldw	r4,20(sp)
 8005470:	00c00384 	movi	r3,14
 8005474:	19008b16 	blt	r3,r4,80056a4 <_dtoa_r+0x9b4>
 8005478:	200490fa 	slli	r2,r4,3
 800547c:	00c20074 	movhi	r3,2049
 8005480:	d9802217 	ldw	r6,136(sp)
 8005484:	18cae204 	addi	r3,r3,11144
 8005488:	1885883a 	add	r2,r3,r2
 800548c:	14400017 	ldw	r17,0(r2)
 8005490:	15000117 	ldw	r20,4(r2)
 8005494:	3001c716 	blt	r6,zero,8005bb4 <_dtoa_r+0xec4>
 8005498:	880d883a 	mov	r6,r17
 800549c:	a00f883a 	mov	r7,r20
 80054a0:	9009883a 	mov	r4,r18
 80054a4:	980b883a 	mov	r5,r19
 80054a8:	800e0000 	call	800e000 <__divdf3>
 80054ac:	180b883a 	mov	r5,r3
 80054b0:	1009883a 	mov	r4,r2
 80054b4:	800fb040 	call	800fb04 <__fixdfsi>
 80054b8:	1009883a 	mov	r4,r2
 80054bc:	102d883a 	mov	r22,r2
 80054c0:	800fb8c0 	call	800fb8c <__floatsidf>
 80054c4:	1009883a 	mov	r4,r2
 80054c8:	180b883a 	mov	r5,r3
 80054cc:	880d883a 	mov	r6,r17
 80054d0:	a00f883a 	mov	r7,r20
 80054d4:	800eb100 	call	800eb10 <__muldf3>
 80054d8:	9009883a 	mov	r4,r18
 80054dc:	980b883a 	mov	r5,r19
 80054e0:	100d883a 	mov	r6,r2
 80054e4:	180f883a 	mov	r7,r3
 80054e8:	800f2340 	call	800f234 <__subdf3>
 80054ec:	d9000717 	ldw	r4,28(sp)
 80054f0:	d9800617 	ldw	r6,24(sp)
 80054f4:	180b883a 	mov	r5,r3
 80054f8:	b0c00c04 	addi	r3,r22,48
 80054fc:	20c00005 	stb	r3,0(r4)
 8005500:	25c00044 	addi	r23,r4,1
 8005504:	01000044 	movi	r4,1
 8005508:	1011883a 	mov	r8,r2
 800550c:	2807883a 	mov	r3,r5
 8005510:	31003d26 	beq	r6,r4,8005608 <_dtoa_r+0x918>
 8005514:	000d883a 	mov	r6,zero
 8005518:	01d00934 	movhi	r7,16420
 800551c:	1009883a 	mov	r4,r2
 8005520:	800eb100 	call	800eb10 <__muldf3>
 8005524:	1009883a 	mov	r4,r2
 8005528:	180b883a 	mov	r5,r3
 800552c:	000d883a 	mov	r6,zero
 8005530:	000f883a 	mov	r7,zero
 8005534:	1027883a 	mov	r19,r2
 8005538:	182b883a 	mov	r21,r3
 800553c:	800e8cc0 	call	800e8cc <__eqdf2>
 8005540:	103f9926 	beq	r2,zero,80053a8 <__alt_data_end+0xfc0053a8>
 8005544:	d8c00617 	ldw	r3,24(sp)
 8005548:	d9000717 	ldw	r4,28(sp)
 800554c:	b825883a 	mov	r18,r23
 8005550:	18bfffc4 	addi	r2,r3,-1
 8005554:	20ad883a 	add	r22,r4,r2
 8005558:	dc000315 	stw	r16,12(sp)
 800555c:	00000a06 	br	8005588 <_dtoa_r+0x898>
 8005560:	800eb100 	call	800eb10 <__muldf3>
 8005564:	1009883a 	mov	r4,r2
 8005568:	180b883a 	mov	r5,r3
 800556c:	000d883a 	mov	r6,zero
 8005570:	000f883a 	mov	r7,zero
 8005574:	1027883a 	mov	r19,r2
 8005578:	182b883a 	mov	r21,r3
 800557c:	b825883a 	mov	r18,r23
 8005580:	800e8cc0 	call	800e8cc <__eqdf2>
 8005584:	10022626 	beq	r2,zero,8005e20 <_dtoa_r+0x1130>
 8005588:	880d883a 	mov	r6,r17
 800558c:	a00f883a 	mov	r7,r20
 8005590:	9809883a 	mov	r4,r19
 8005594:	a80b883a 	mov	r5,r21
 8005598:	800e0000 	call	800e000 <__divdf3>
 800559c:	180b883a 	mov	r5,r3
 80055a0:	1009883a 	mov	r4,r2
 80055a4:	800fb040 	call	800fb04 <__fixdfsi>
 80055a8:	1009883a 	mov	r4,r2
 80055ac:	1021883a 	mov	r16,r2
 80055b0:	800fb8c0 	call	800fb8c <__floatsidf>
 80055b4:	1009883a 	mov	r4,r2
 80055b8:	180b883a 	mov	r5,r3
 80055bc:	880d883a 	mov	r6,r17
 80055c0:	a00f883a 	mov	r7,r20
 80055c4:	800eb100 	call	800eb10 <__muldf3>
 80055c8:	9809883a 	mov	r4,r19
 80055cc:	a80b883a 	mov	r5,r21
 80055d0:	100d883a 	mov	r6,r2
 80055d4:	180f883a 	mov	r7,r3
 80055d8:	800f2340 	call	800f234 <__subdf3>
 80055dc:	82000c04 	addi	r8,r16,48
 80055e0:	92000005 	stb	r8,0(r18)
 80055e4:	1009883a 	mov	r4,r2
 80055e8:	180b883a 	mov	r5,r3
 80055ec:	000d883a 	mov	r6,zero
 80055f0:	01d00934 	movhi	r7,16420
 80055f4:	1011883a 	mov	r8,r2
 80055f8:	bdc00044 	addi	r23,r23,1
 80055fc:	95bfd81e 	bne	r18,r22,8005560 <__alt_data_end+0xfc005560>
 8005600:	802d883a 	mov	r22,r16
 8005604:	dc000317 	ldw	r16,12(sp)
 8005608:	4009883a 	mov	r4,r8
 800560c:	180b883a 	mov	r5,r3
 8005610:	400d883a 	mov	r6,r8
 8005614:	180f883a 	mov	r7,r3
 8005618:	800d7640 	call	800d764 <__adddf3>
 800561c:	8809883a 	mov	r4,r17
 8005620:	a00b883a 	mov	r5,r20
 8005624:	100d883a 	mov	r6,r2
 8005628:	180f883a 	mov	r7,r3
 800562c:	1027883a 	mov	r19,r2
 8005630:	1825883a 	mov	r18,r3
 8005634:	800ea300 	call	800ea30 <__ledf2>
 8005638:	10000816 	blt	r2,zero,800565c <_dtoa_r+0x96c>
 800563c:	8809883a 	mov	r4,r17
 8005640:	a00b883a 	mov	r5,r20
 8005644:	980d883a 	mov	r6,r19
 8005648:	900f883a 	mov	r7,r18
 800564c:	800e8cc0 	call	800e8cc <__eqdf2>
 8005650:	103f551e 	bne	r2,zero,80053a8 <__alt_data_end+0xfc0053a8>
 8005654:	b580004c 	andi	r22,r22,1
 8005658:	b03f5326 	beq	r22,zero,80053a8 <__alt_data_end+0xfc0053a8>
 800565c:	bd7fffc3 	ldbu	r21,-1(r23)
 8005660:	b8bfffc4 	addi	r2,r23,-1
 8005664:	1007883a 	mov	r3,r2
 8005668:	01400e44 	movi	r5,57
 800566c:	d9800717 	ldw	r6,28(sp)
 8005670:	00000506 	br	8005688 <_dtoa_r+0x998>
 8005674:	18ffffc4 	addi	r3,r3,-1
 8005678:	30825e26 	beq	r6,r2,8005ff4 <_dtoa_r+0x1304>
 800567c:	1d400003 	ldbu	r21,0(r3)
 8005680:	102f883a 	mov	r23,r2
 8005684:	10bfffc4 	addi	r2,r2,-1
 8005688:	a9003fcc 	andi	r4,r21,255
 800568c:	2100201c 	xori	r4,r4,128
 8005690:	213fe004 	addi	r4,r4,-128
 8005694:	217ff726 	beq	r4,r5,8005674 <__alt_data_end+0xfc005674>
 8005698:	aa000044 	addi	r8,r21,1
 800569c:	12000005 	stb	r8,0(r2)
 80056a0:	003f4106 	br	80053a8 <__alt_data_end+0xfc0053a8>
 80056a4:	d8c00b17 	ldw	r3,44(sp)
 80056a8:	18006726 	beq	r3,zero,8005848 <_dtoa_r+0xb58>
 80056ac:	d9000317 	ldw	r4,12(sp)
 80056b0:	00c00044 	movi	r3,1
 80056b4:	19016a0e 	bge	r3,r4,8005c60 <_dtoa_r+0xf70>
 80056b8:	d8800617 	ldw	r2,24(sp)
 80056bc:	d8c00917 	ldw	r3,36(sp)
 80056c0:	157fffc4 	addi	r21,r2,-1
 80056c4:	1d420716 	blt	r3,r21,8005ee4 <_dtoa_r+0x11f4>
 80056c8:	1d6bc83a 	sub	r21,r3,r21
 80056cc:	d8800617 	ldw	r2,24(sp)
 80056d0:	1002c716 	blt	r2,zero,80061f0 <_dtoa_r+0x1500>
 80056d4:	dd000817 	ldw	r20,32(sp)
 80056d8:	d8800617 	ldw	r2,24(sp)
 80056dc:	d9800817 	ldw	r6,32(sp)
 80056e0:	8009883a 	mov	r4,r16
 80056e4:	01400044 	movi	r5,1
 80056e8:	308d883a 	add	r6,r6,r2
 80056ec:	d9800815 	stw	r6,32(sp)
 80056f0:	b0ad883a 	add	r22,r22,r2
 80056f4:	80081180 	call	8008118 <__i2b>
 80056f8:	1023883a 	mov	r17,r2
 80056fc:	a0000826 	beq	r20,zero,8005720 <_dtoa_r+0xa30>
 8005700:	0580070e 	bge	zero,r22,8005720 <_dtoa_r+0xa30>
 8005704:	b005883a 	mov	r2,r22
 8005708:	a5812016 	blt	r20,r22,8005b8c <_dtoa_r+0xe9c>
 800570c:	d8c00817 	ldw	r3,32(sp)
 8005710:	a0a9c83a 	sub	r20,r20,r2
 8005714:	b0adc83a 	sub	r22,r22,r2
 8005718:	1887c83a 	sub	r3,r3,r2
 800571c:	d8c00815 	stw	r3,32(sp)
 8005720:	d9000917 	ldw	r4,36(sp)
 8005724:	0100140e 	bge	zero,r4,8005778 <_dtoa_r+0xa88>
 8005728:	d9800b17 	ldw	r6,44(sp)
 800572c:	3001e526 	beq	r6,zero,8005ec4 <_dtoa_r+0x11d4>
 8005730:	05400e0e 	bge	zero,r21,800576c <_dtoa_r+0xa7c>
 8005734:	880b883a 	mov	r5,r17
 8005738:	8009883a 	mov	r4,r16
 800573c:	a80d883a 	mov	r6,r21
 8005740:	80083500 	call	8008350 <__pow5mult>
 8005744:	e00d883a 	mov	r6,fp
 8005748:	8009883a 	mov	r4,r16
 800574c:	100b883a 	mov	r5,r2
 8005750:	1023883a 	mov	r17,r2
 8005754:	80081540 	call	8008154 <__multiply>
 8005758:	102f883a 	mov	r23,r2
 800575c:	e00b883a 	mov	r5,fp
 8005760:	8009883a 	mov	r4,r16
 8005764:	8007dc00 	call	8007dc0 <_Bfree>
 8005768:	b839883a 	mov	fp,r23
 800576c:	d8800917 	ldw	r2,36(sp)
 8005770:	154dc83a 	sub	r6,r2,r21
 8005774:	3001281e 	bne	r6,zero,8005c18 <_dtoa_r+0xf28>
 8005778:	05c00044 	movi	r23,1
 800577c:	8009883a 	mov	r4,r16
 8005780:	b80b883a 	mov	r5,r23
 8005784:	80081180 	call	8008118 <__i2b>
 8005788:	d8c00a17 	ldw	r3,40(sp)
 800578c:	102b883a 	mov	r21,r2
 8005790:	00c0310e 	bge	zero,r3,8005858 <_dtoa_r+0xb68>
 8005794:	8009883a 	mov	r4,r16
 8005798:	100b883a 	mov	r5,r2
 800579c:	180d883a 	mov	r6,r3
 80057a0:	80083500 	call	8008350 <__pow5mult>
 80057a4:	d9000317 	ldw	r4,12(sp)
 80057a8:	102b883a 	mov	r21,r2
 80057ac:	b9011f0e 	bge	r23,r4,8005c2c <_dtoa_r+0xf3c>
 80057b0:	0027883a 	mov	r19,zero
 80057b4:	a8800417 	ldw	r2,16(r21)
 80057b8:	10800104 	addi	r2,r2,4
 80057bc:	1085883a 	add	r2,r2,r2
 80057c0:	1085883a 	add	r2,r2,r2
 80057c4:	a885883a 	add	r2,r21,r2
 80057c8:	11000017 	ldw	r4,0(r2)
 80057cc:	80080000 	call	8008000 <__hi0bits>
 80057d0:	00c00804 	movi	r3,32
 80057d4:	1885c83a 	sub	r2,r3,r2
 80057d8:	00002506 	br	8005870 <_dtoa_r+0xb80>
 80057dc:	01800044 	movi	r6,1
 80057e0:	d9800c15 	stw	r6,48(sp)
 80057e4:	003dec06 	br	8004f98 <__alt_data_end+0xfc004f98>
 80057e8:	d8c00817 	ldw	r3,32(sp)
 80057ec:	d9000517 	ldw	r4,20(sp)
 80057f0:	d8000a15 	stw	zero,40(sp)
 80057f4:	1907c83a 	sub	r3,r3,r4
 80057f8:	010dc83a 	sub	r6,zero,r4
 80057fc:	d8c00815 	stw	r3,32(sp)
 8005800:	d9800915 	stw	r6,36(sp)
 8005804:	003ded06 	br	8004fbc <__alt_data_end+0xfc004fbc>
 8005808:	05adc83a 	sub	r22,zero,r22
 800580c:	dd800815 	stw	r22,32(sp)
 8005810:	002d883a 	mov	r22,zero
 8005814:	003de406 	br	8004fa8 <__alt_data_end+0xfc004fa8>
 8005818:	d9000517 	ldw	r4,20(sp)
 800581c:	800fb8c0 	call	800fb8c <__floatsidf>
 8005820:	1009883a 	mov	r4,r2
 8005824:	180b883a 	mov	r5,r3
 8005828:	b00d883a 	mov	r6,r22
 800582c:	a80f883a 	mov	r7,r21
 8005830:	800e8cc0 	call	800e8cc <__eqdf2>
 8005834:	103dc726 	beq	r2,zero,8004f54 <__alt_data_end+0xfc004f54>
 8005838:	d8800517 	ldw	r2,20(sp)
 800583c:	10bfffc4 	addi	r2,r2,-1
 8005840:	d8800515 	stw	r2,20(sp)
 8005844:	003dc306 	br	8004f54 <__alt_data_end+0xfc004f54>
 8005848:	dd400917 	ldw	r21,36(sp)
 800584c:	dd000817 	ldw	r20,32(sp)
 8005850:	0023883a 	mov	r17,zero
 8005854:	003fa906 	br	80056fc <__alt_data_end+0xfc0056fc>
 8005858:	d9800317 	ldw	r6,12(sp)
 800585c:	b981670e 	bge	r23,r6,8005dfc <_dtoa_r+0x110c>
 8005860:	0027883a 	mov	r19,zero
 8005864:	d8c00a17 	ldw	r3,40(sp)
 8005868:	183fd21e 	bne	r3,zero,80057b4 <__alt_data_end+0xfc0057b4>
 800586c:	00800044 	movi	r2,1
 8005870:	1585883a 	add	r2,r2,r22
 8005874:	108007cc 	andi	r2,r2,31
 8005878:	10005f26 	beq	r2,zero,80059f8 <_dtoa_r+0xd08>
 800587c:	00c00804 	movi	r3,32
 8005880:	1887c83a 	sub	r3,r3,r2
 8005884:	01000104 	movi	r4,4
 8005888:	20c2dd0e 	bge	r4,r3,8006400 <_dtoa_r+0x1710>
 800588c:	d9000817 	ldw	r4,32(sp)
 8005890:	00c00704 	movi	r3,28
 8005894:	1885c83a 	sub	r2,r3,r2
 8005898:	2089883a 	add	r4,r4,r2
 800589c:	d9000815 	stw	r4,32(sp)
 80058a0:	a0a9883a 	add	r20,r20,r2
 80058a4:	b0ad883a 	add	r22,r22,r2
 80058a8:	d8800817 	ldw	r2,32(sp)
 80058ac:	0080050e 	bge	zero,r2,80058c4 <_dtoa_r+0xbd4>
 80058b0:	e00b883a 	mov	r5,fp
 80058b4:	8009883a 	mov	r4,r16
 80058b8:	100d883a 	mov	r6,r2
 80058bc:	80084900 	call	8008490 <__lshift>
 80058c0:	1039883a 	mov	fp,r2
 80058c4:	0580050e 	bge	zero,r22,80058dc <_dtoa_r+0xbec>
 80058c8:	a80b883a 	mov	r5,r21
 80058cc:	8009883a 	mov	r4,r16
 80058d0:	b00d883a 	mov	r6,r22
 80058d4:	80084900 	call	8008490 <__lshift>
 80058d8:	102b883a 	mov	r21,r2
 80058dc:	d8c00c17 	ldw	r3,48(sp)
 80058e0:	1801161e 	bne	r3,zero,8005d3c <_dtoa_r+0x104c>
 80058e4:	d8c00617 	ldw	r3,24(sp)
 80058e8:	00c12d0e 	bge	zero,r3,8005da0 <_dtoa_r+0x10b0>
 80058ec:	d8c00b17 	ldw	r3,44(sp)
 80058f0:	1800571e 	bne	r3,zero,8005a50 <_dtoa_r+0xd60>
 80058f4:	dc800717 	ldw	r18,28(sp)
 80058f8:	dcc00617 	ldw	r19,24(sp)
 80058fc:	9029883a 	mov	r20,r18
 8005900:	00000206 	br	800590c <_dtoa_r+0xc1c>
 8005904:	8007de80 	call	8007de8 <__multadd>
 8005908:	1039883a 	mov	fp,r2
 800590c:	e009883a 	mov	r4,fp
 8005910:	a80b883a 	mov	r5,r21
 8005914:	8004af00 	call	8004af0 <quorem>
 8005918:	10800c04 	addi	r2,r2,48
 800591c:	90800005 	stb	r2,0(r18)
 8005920:	94800044 	addi	r18,r18,1
 8005924:	9507c83a 	sub	r3,r18,r20
 8005928:	8009883a 	mov	r4,r16
 800592c:	e00b883a 	mov	r5,fp
 8005930:	01800284 	movi	r6,10
 8005934:	000f883a 	mov	r7,zero
 8005938:	1cfff216 	blt	r3,r19,8005904 <__alt_data_end+0xfc005904>
 800593c:	1011883a 	mov	r8,r2
 8005940:	d8800617 	ldw	r2,24(sp)
 8005944:	00822e0e 	bge	zero,r2,8006200 <_dtoa_r+0x1510>
 8005948:	d9000717 	ldw	r4,28(sp)
 800594c:	0025883a 	mov	r18,zero
 8005950:	20af883a 	add	r23,r4,r2
 8005954:	e00b883a 	mov	r5,fp
 8005958:	01800044 	movi	r6,1
 800595c:	8009883a 	mov	r4,r16
 8005960:	da001715 	stw	r8,92(sp)
 8005964:	80084900 	call	8008490 <__lshift>
 8005968:	1009883a 	mov	r4,r2
 800596c:	a80b883a 	mov	r5,r21
 8005970:	1039883a 	mov	fp,r2
 8005974:	80085d80 	call	80085d8 <__mcmp>
 8005978:	da001717 	ldw	r8,92(sp)
 800597c:	00816e0e 	bge	zero,r2,8005f38 <_dtoa_r+0x1248>
 8005980:	b93fffc3 	ldbu	r4,-1(r23)
 8005984:	b8bfffc4 	addi	r2,r23,-1
 8005988:	1007883a 	mov	r3,r2
 800598c:	01800e44 	movi	r6,57
 8005990:	d9c00717 	ldw	r7,28(sp)
 8005994:	00000506 	br	80059ac <_dtoa_r+0xcbc>
 8005998:	18ffffc4 	addi	r3,r3,-1
 800599c:	38811926 	beq	r7,r2,8005e04 <_dtoa_r+0x1114>
 80059a0:	19000003 	ldbu	r4,0(r3)
 80059a4:	102f883a 	mov	r23,r2
 80059a8:	10bfffc4 	addi	r2,r2,-1
 80059ac:	21403fcc 	andi	r5,r4,255
 80059b0:	2940201c 	xori	r5,r5,128
 80059b4:	297fe004 	addi	r5,r5,-128
 80059b8:	29bff726 	beq	r5,r6,8005998 <__alt_data_end+0xfc005998>
 80059bc:	21000044 	addi	r4,r4,1
 80059c0:	11000005 	stb	r4,0(r2)
 80059c4:	8009883a 	mov	r4,r16
 80059c8:	a80b883a 	mov	r5,r21
 80059cc:	8007dc00 	call	8007dc0 <_Bfree>
 80059d0:	883e7526 	beq	r17,zero,80053a8 <__alt_data_end+0xfc0053a8>
 80059d4:	90000426 	beq	r18,zero,80059e8 <_dtoa_r+0xcf8>
 80059d8:	94400326 	beq	r18,r17,80059e8 <_dtoa_r+0xcf8>
 80059dc:	8009883a 	mov	r4,r16
 80059e0:	900b883a 	mov	r5,r18
 80059e4:	8007dc00 	call	8007dc0 <_Bfree>
 80059e8:	8009883a 	mov	r4,r16
 80059ec:	880b883a 	mov	r5,r17
 80059f0:	8007dc00 	call	8007dc0 <_Bfree>
 80059f4:	003e6c06 	br	80053a8 <__alt_data_end+0xfc0053a8>
 80059f8:	00800704 	movi	r2,28
 80059fc:	d9800817 	ldw	r6,32(sp)
 8005a00:	a0a9883a 	add	r20,r20,r2
 8005a04:	b0ad883a 	add	r22,r22,r2
 8005a08:	308d883a 	add	r6,r6,r2
 8005a0c:	d9800815 	stw	r6,32(sp)
 8005a10:	003fa506 	br	80058a8 <__alt_data_end+0xfc0058a8>
 8005a14:	013efb84 	movi	r4,-1042
 8005a18:	246bc83a 	sub	r21,r4,r17
 8005a1c:	9548983a 	sll	r4,r18,r21
 8005a20:	003d1806 	br	8004e84 <__alt_data_end+0xfc004e84>
 8005a24:	d8000c15 	stw	zero,48(sp)
 8005a28:	003d5b06 	br	8004f98 <__alt_data_end+0xfc004f98>
 8005a2c:	880b883a 	mov	r5,r17
 8005a30:	8009883a 	mov	r4,r16
 8005a34:	01800284 	movi	r6,10
 8005a38:	000f883a 	mov	r7,zero
 8005a3c:	8007de80 	call	8007de8 <__multadd>
 8005a40:	1023883a 	mov	r17,r2
 8005a44:	d8800d17 	ldw	r2,52(sp)
 8005a48:	0082550e 	bge	zero,r2,80063a0 <_dtoa_r+0x16b0>
 8005a4c:	d8800615 	stw	r2,24(sp)
 8005a50:	0500050e 	bge	zero,r20,8005a68 <_dtoa_r+0xd78>
 8005a54:	880b883a 	mov	r5,r17
 8005a58:	8009883a 	mov	r4,r16
 8005a5c:	a00d883a 	mov	r6,r20
 8005a60:	80084900 	call	8008490 <__lshift>
 8005a64:	1023883a 	mov	r17,r2
 8005a68:	98016a1e 	bne	r19,zero,8006014 <_dtoa_r+0x1324>
 8005a6c:	8829883a 	mov	r20,r17
 8005a70:	d9000617 	ldw	r4,24(sp)
 8005a74:	dcc00717 	ldw	r19,28(sp)
 8005a78:	9480004c 	andi	r18,r18,1
 8005a7c:	20bfffc4 	addi	r2,r4,-1
 8005a80:	9885883a 	add	r2,r19,r2
 8005a84:	d8800415 	stw	r2,16(sp)
 8005a88:	dc800615 	stw	r18,24(sp)
 8005a8c:	e009883a 	mov	r4,fp
 8005a90:	a80b883a 	mov	r5,r21
 8005a94:	8004af00 	call	8004af0 <quorem>
 8005a98:	e009883a 	mov	r4,fp
 8005a9c:	880b883a 	mov	r5,r17
 8005aa0:	102f883a 	mov	r23,r2
 8005aa4:	80085d80 	call	80085d8 <__mcmp>
 8005aa8:	8009883a 	mov	r4,r16
 8005aac:	a80b883a 	mov	r5,r21
 8005ab0:	a00d883a 	mov	r6,r20
 8005ab4:	102d883a 	mov	r22,r2
 8005ab8:	80086380 	call	8008638 <__mdiff>
 8005abc:	1007883a 	mov	r3,r2
 8005ac0:	10800317 	ldw	r2,12(r2)
 8005ac4:	bc800c04 	addi	r18,r23,48
 8005ac8:	1000971e 	bne	r2,zero,8005d28 <_dtoa_r+0x1038>
 8005acc:	180b883a 	mov	r5,r3
 8005ad0:	e009883a 	mov	r4,fp
 8005ad4:	d8c01515 	stw	r3,84(sp)
 8005ad8:	80085d80 	call	80085d8 <__mcmp>
 8005adc:	d8c01517 	ldw	r3,84(sp)
 8005ae0:	8009883a 	mov	r4,r16
 8005ae4:	d8801515 	stw	r2,84(sp)
 8005ae8:	180b883a 	mov	r5,r3
 8005aec:	8007dc00 	call	8007dc0 <_Bfree>
 8005af0:	d8801517 	ldw	r2,84(sp)
 8005af4:	1000041e 	bne	r2,zero,8005b08 <_dtoa_r+0xe18>
 8005af8:	d9800317 	ldw	r6,12(sp)
 8005afc:	3000021e 	bne	r6,zero,8005b08 <_dtoa_r+0xe18>
 8005b00:	d8c00617 	ldw	r3,24(sp)
 8005b04:	18007626 	beq	r3,zero,8005ce0 <_dtoa_r+0xff0>
 8005b08:	b0005b16 	blt	r22,zero,8005c78 <_dtoa_r+0xf88>
 8005b0c:	b000041e 	bne	r22,zero,8005b20 <_dtoa_r+0xe30>
 8005b10:	d9000317 	ldw	r4,12(sp)
 8005b14:	2000021e 	bne	r4,zero,8005b20 <_dtoa_r+0xe30>
 8005b18:	d8c00617 	ldw	r3,24(sp)
 8005b1c:	18005626 	beq	r3,zero,8005c78 <_dtoa_r+0xf88>
 8005b20:	00814d16 	blt	zero,r2,8006058 <_dtoa_r+0x1368>
 8005b24:	d8c00417 	ldw	r3,16(sp)
 8005b28:	9d800044 	addi	r22,r19,1
 8005b2c:	9c800005 	stb	r18,0(r19)
 8005b30:	b02f883a 	mov	r23,r22
 8005b34:	98c14c26 	beq	r19,r3,8006068 <_dtoa_r+0x1378>
 8005b38:	e00b883a 	mov	r5,fp
 8005b3c:	8009883a 	mov	r4,r16
 8005b40:	01800284 	movi	r6,10
 8005b44:	000f883a 	mov	r7,zero
 8005b48:	8007de80 	call	8007de8 <__multadd>
 8005b4c:	1039883a 	mov	fp,r2
 8005b50:	8d006d26 	beq	r17,r20,8005d08 <_dtoa_r+0x1018>
 8005b54:	880b883a 	mov	r5,r17
 8005b58:	01800284 	movi	r6,10
 8005b5c:	000f883a 	mov	r7,zero
 8005b60:	8009883a 	mov	r4,r16
 8005b64:	8007de80 	call	8007de8 <__multadd>
 8005b68:	a00b883a 	mov	r5,r20
 8005b6c:	8009883a 	mov	r4,r16
 8005b70:	01800284 	movi	r6,10
 8005b74:	000f883a 	mov	r7,zero
 8005b78:	1023883a 	mov	r17,r2
 8005b7c:	8007de80 	call	8007de8 <__multadd>
 8005b80:	1029883a 	mov	r20,r2
 8005b84:	b027883a 	mov	r19,r22
 8005b88:	003fc006 	br	8005a8c <__alt_data_end+0xfc005a8c>
 8005b8c:	a005883a 	mov	r2,r20
 8005b90:	003ede06 	br	800570c <__alt_data_end+0xfc00570c>
 8005b94:	01000044 	movi	r4,1
 8005b98:	d9000b15 	stw	r4,44(sp)
 8005b9c:	d9802217 	ldw	r6,136(sp)
 8005ba0:	0180dc0e 	bge	zero,r6,8005f14 <_dtoa_r+0x1224>
 8005ba4:	3023883a 	mov	r17,r6
 8005ba8:	d9800d15 	stw	r6,52(sp)
 8005bac:	d9800615 	stw	r6,24(sp)
 8005bb0:	003d1e06 	br	800502c <__alt_data_end+0xfc00502c>
 8005bb4:	d8800617 	ldw	r2,24(sp)
 8005bb8:	00be3716 	blt	zero,r2,8005498 <__alt_data_end+0xfc005498>
 8005bbc:	1000be1e 	bne	r2,zero,8005eb8 <_dtoa_r+0x11c8>
 8005bc0:	8809883a 	mov	r4,r17
 8005bc4:	a00b883a 	mov	r5,r20
 8005bc8:	000d883a 	mov	r6,zero
 8005bcc:	01d00534 	movhi	r7,16404
 8005bd0:	800eb100 	call	800eb10 <__muldf3>
 8005bd4:	1009883a 	mov	r4,r2
 8005bd8:	180b883a 	mov	r5,r3
 8005bdc:	900d883a 	mov	r6,r18
 8005be0:	980f883a 	mov	r7,r19
 8005be4:	800e9500 	call	800e950 <__gedf2>
 8005be8:	002b883a 	mov	r21,zero
 8005bec:	0023883a 	mov	r17,zero
 8005bf0:	10007a16 	blt	r2,zero,8005ddc <_dtoa_r+0x10ec>
 8005bf4:	d9002217 	ldw	r4,136(sp)
 8005bf8:	ddc00717 	ldw	r23,28(sp)
 8005bfc:	0108303a 	nor	r4,zero,r4
 8005c00:	d9000515 	stw	r4,20(sp)
 8005c04:	8009883a 	mov	r4,r16
 8005c08:	a80b883a 	mov	r5,r21
 8005c0c:	8007dc00 	call	8007dc0 <_Bfree>
 8005c10:	883f751e 	bne	r17,zero,80059e8 <__alt_data_end+0xfc0059e8>
 8005c14:	003de406 	br	80053a8 <__alt_data_end+0xfc0053a8>
 8005c18:	e00b883a 	mov	r5,fp
 8005c1c:	8009883a 	mov	r4,r16
 8005c20:	80083500 	call	8008350 <__pow5mult>
 8005c24:	1039883a 	mov	fp,r2
 8005c28:	003ed306 	br	8005778 <__alt_data_end+0xfc005778>
 8005c2c:	903ee01e 	bne	r18,zero,80057b0 <__alt_data_end+0xfc0057b0>
 8005c30:	00800434 	movhi	r2,16
 8005c34:	10bfffc4 	addi	r2,r2,-1
 8005c38:	9884703a 	and	r2,r19,r2
 8005c3c:	103f081e 	bne	r2,zero,8005860 <__alt_data_end+0xfc005860>
 8005c40:	9cdffc2c 	andhi	r19,r19,32752
 8005c44:	983f0626 	beq	r19,zero,8005860 <__alt_data_end+0xfc005860>
 8005c48:	d8800817 	ldw	r2,32(sp)
 8005c4c:	b5800044 	addi	r22,r22,1
 8005c50:	04c00044 	movi	r19,1
 8005c54:	10800044 	addi	r2,r2,1
 8005c58:	d8800815 	stw	r2,32(sp)
 8005c5c:	003f0106 	br	8005864 <__alt_data_end+0xfc005864>
 8005c60:	d9800f17 	ldw	r6,60(sp)
 8005c64:	30016826 	beq	r6,zero,8006208 <_dtoa_r+0x1518>
 8005c68:	10810cc4 	addi	r2,r2,1075
 8005c6c:	dd400917 	ldw	r21,36(sp)
 8005c70:	dd000817 	ldw	r20,32(sp)
 8005c74:	003e9906 	br	80056dc <__alt_data_end+0xfc0056dc>
 8005c78:	9011883a 	mov	r8,r18
 8005c7c:	4007883a 	mov	r3,r8
 8005c80:	e02d883a 	mov	r22,fp
 8005c84:	0080100e 	bge	zero,r2,8005cc8 <_dtoa_r+0xfd8>
 8005c88:	01800044 	movi	r6,1
 8005c8c:	8009883a 	mov	r4,r16
 8005c90:	e00b883a 	mov	r5,fp
 8005c94:	da001515 	stw	r8,84(sp)
 8005c98:	da001715 	stw	r8,92(sp)
 8005c9c:	80084900 	call	8008490 <__lshift>
 8005ca0:	1009883a 	mov	r4,r2
 8005ca4:	a80b883a 	mov	r5,r21
 8005ca8:	102d883a 	mov	r22,r2
 8005cac:	80085d80 	call	80085d8 <__mcmp>
 8005cb0:	d8c01517 	ldw	r3,84(sp)
 8005cb4:	da001717 	ldw	r8,92(sp)
 8005cb8:	0081a50e 	bge	zero,r2,8006350 <_dtoa_r+0x1660>
 8005cbc:	00800e44 	movi	r2,57
 8005cc0:	40817b26 	beq	r8,r2,80062b0 <_dtoa_r+0x15c0>
 8005cc4:	40c00044 	addi	r3,r8,1
 8005cc8:	8825883a 	mov	r18,r17
 8005ccc:	9dc00044 	addi	r23,r19,1
 8005cd0:	98c00005 	stb	r3,0(r19)
 8005cd4:	a023883a 	mov	r17,r20
 8005cd8:	b039883a 	mov	fp,r22
 8005cdc:	003f3906 	br	80059c4 <__alt_data_end+0xfc0059c4>
 8005ce0:	00800e44 	movi	r2,57
 8005ce4:	9011883a 	mov	r8,r18
 8005ce8:	90817226 	beq	r18,r2,80062b4 <_dtoa_r+0x15c4>
 8005cec:	0580010e 	bge	zero,r22,8005cf4 <_dtoa_r+0x1004>
 8005cf0:	ba000c44 	addi	r8,r23,49
 8005cf4:	8825883a 	mov	r18,r17
 8005cf8:	9dc00044 	addi	r23,r19,1
 8005cfc:	9a000005 	stb	r8,0(r19)
 8005d00:	a023883a 	mov	r17,r20
 8005d04:	003f2f06 	br	80059c4 <__alt_data_end+0xfc0059c4>
 8005d08:	880b883a 	mov	r5,r17
 8005d0c:	8009883a 	mov	r4,r16
 8005d10:	01800284 	movi	r6,10
 8005d14:	000f883a 	mov	r7,zero
 8005d18:	8007de80 	call	8007de8 <__multadd>
 8005d1c:	1023883a 	mov	r17,r2
 8005d20:	1029883a 	mov	r20,r2
 8005d24:	003f9706 	br	8005b84 <__alt_data_end+0xfc005b84>
 8005d28:	8009883a 	mov	r4,r16
 8005d2c:	180b883a 	mov	r5,r3
 8005d30:	8007dc00 	call	8007dc0 <_Bfree>
 8005d34:	00800044 	movi	r2,1
 8005d38:	003f7306 	br	8005b08 <__alt_data_end+0xfc005b08>
 8005d3c:	e009883a 	mov	r4,fp
 8005d40:	a80b883a 	mov	r5,r21
 8005d44:	80085d80 	call	80085d8 <__mcmp>
 8005d48:	103ee60e 	bge	r2,zero,80058e4 <__alt_data_end+0xfc0058e4>
 8005d4c:	8009883a 	mov	r4,r16
 8005d50:	e00b883a 	mov	r5,fp
 8005d54:	01800284 	movi	r6,10
 8005d58:	000f883a 	mov	r7,zero
 8005d5c:	8007de80 	call	8007de8 <__multadd>
 8005d60:	d9000517 	ldw	r4,20(sp)
 8005d64:	d9800b17 	ldw	r6,44(sp)
 8005d68:	1039883a 	mov	fp,r2
 8005d6c:	213fffc4 	addi	r4,r4,-1
 8005d70:	d9000515 	stw	r4,20(sp)
 8005d74:	303f2d1e 	bne	r6,zero,8005a2c <__alt_data_end+0xfc005a2c>
 8005d78:	d9000d17 	ldw	r4,52(sp)
 8005d7c:	0101780e 	bge	zero,r4,8006360 <_dtoa_r+0x1670>
 8005d80:	d9000615 	stw	r4,24(sp)
 8005d84:	003edb06 	br	80058f4 <__alt_data_end+0xfc0058f4>
 8005d88:	00800084 	movi	r2,2
 8005d8c:	30818e1e 	bne	r6,r2,80063c8 <_dtoa_r+0x16d8>
 8005d90:	d8000b15 	stw	zero,44(sp)
 8005d94:	003f8106 	br	8005b9c <__alt_data_end+0xfc005b9c>
 8005d98:	d8800717 	ldw	r2,28(sp)
 8005d9c:	003c0306 	br	8004dac <__alt_data_end+0xfc004dac>
 8005da0:	d9000317 	ldw	r4,12(sp)
 8005da4:	00800084 	movi	r2,2
 8005da8:	113ed00e 	bge	r2,r4,80058ec <__alt_data_end+0xfc0058ec>
 8005dac:	d8c00617 	ldw	r3,24(sp)
 8005db0:	183f901e 	bne	r3,zero,8005bf4 <__alt_data_end+0xfc005bf4>
 8005db4:	a80b883a 	mov	r5,r21
 8005db8:	8009883a 	mov	r4,r16
 8005dbc:	01800144 	movi	r6,5
 8005dc0:	000f883a 	mov	r7,zero
 8005dc4:	8007de80 	call	8007de8 <__multadd>
 8005dc8:	e009883a 	mov	r4,fp
 8005dcc:	100b883a 	mov	r5,r2
 8005dd0:	102b883a 	mov	r21,r2
 8005dd4:	80085d80 	call	80085d8 <__mcmp>
 8005dd8:	00bf860e 	bge	zero,r2,8005bf4 <__alt_data_end+0xfc005bf4>
 8005ddc:	d9800717 	ldw	r6,28(sp)
 8005de0:	00800c44 	movi	r2,49
 8005de4:	30800005 	stb	r2,0(r6)
 8005de8:	d8800517 	ldw	r2,20(sp)
 8005dec:	35c00044 	addi	r23,r6,1
 8005df0:	10800044 	addi	r2,r2,1
 8005df4:	d8800515 	stw	r2,20(sp)
 8005df8:	003f8206 	br	8005c04 <__alt_data_end+0xfc005c04>
 8005dfc:	903e981e 	bne	r18,zero,8005860 <__alt_data_end+0xfc005860>
 8005e00:	003f8b06 	br	8005c30 <__alt_data_end+0xfc005c30>
 8005e04:	d9800517 	ldw	r6,20(sp)
 8005e08:	d8c00717 	ldw	r3,28(sp)
 8005e0c:	00800c44 	movi	r2,49
 8005e10:	31800044 	addi	r6,r6,1
 8005e14:	d9800515 	stw	r6,20(sp)
 8005e18:	18800005 	stb	r2,0(r3)
 8005e1c:	003ee906 	br	80059c4 <__alt_data_end+0xfc0059c4>
 8005e20:	dc000317 	ldw	r16,12(sp)
 8005e24:	003d6006 	br	80053a8 <__alt_data_end+0xfc0053a8>
 8005e28:	8809883a 	mov	r4,r17
 8005e2c:	800fb8c0 	call	800fb8c <__floatsidf>
 8005e30:	a009883a 	mov	r4,r20
 8005e34:	a80b883a 	mov	r5,r21
 8005e38:	100d883a 	mov	r6,r2
 8005e3c:	180f883a 	mov	r7,r3
 8005e40:	800eb100 	call	800eb10 <__muldf3>
 8005e44:	1009883a 	mov	r4,r2
 8005e48:	180b883a 	mov	r5,r3
 8005e4c:	000d883a 	mov	r6,zero
 8005e50:	01d00734 	movhi	r7,16412
 8005e54:	800d7640 	call	800d764 <__adddf3>
 8005e58:	1023883a 	mov	r17,r2
 8005e5c:	00bf3034 	movhi	r2,64704
 8005e60:	1885883a 	add	r2,r3,r2
 8005e64:	d8800e15 	stw	r2,56(sp)
 8005e68:	a009883a 	mov	r4,r20
 8005e6c:	a80b883a 	mov	r5,r21
 8005e70:	000d883a 	mov	r6,zero
 8005e74:	01d00534 	movhi	r7,16404
 8005e78:	800f2340 	call	800f234 <__subdf3>
 8005e7c:	d9c00e17 	ldw	r7,56(sp)
 8005e80:	1009883a 	mov	r4,r2
 8005e84:	180b883a 	mov	r5,r3
 8005e88:	880d883a 	mov	r6,r17
 8005e8c:	102b883a 	mov	r21,r2
 8005e90:	1829883a 	mov	r20,r3
 8005e94:	800e9500 	call	800e950 <__gedf2>
 8005e98:	00807716 	blt	zero,r2,8006078 <_dtoa_r+0x1388>
 8005e9c:	d8800e17 	ldw	r2,56(sp)
 8005ea0:	a809883a 	mov	r4,r21
 8005ea4:	a00b883a 	mov	r5,r20
 8005ea8:	11e0003c 	xorhi	r7,r2,32768
 8005eac:	880d883a 	mov	r6,r17
 8005eb0:	800ea300 	call	800ea30 <__ledf2>
 8005eb4:	103d6b0e 	bge	r2,zero,8005464 <__alt_data_end+0xfc005464>
 8005eb8:	002b883a 	mov	r21,zero
 8005ebc:	0023883a 	mov	r17,zero
 8005ec0:	003f4c06 	br	8005bf4 <__alt_data_end+0xfc005bf4>
 8005ec4:	d9800917 	ldw	r6,36(sp)
 8005ec8:	e00b883a 	mov	r5,fp
 8005ecc:	8009883a 	mov	r4,r16
 8005ed0:	80083500 	call	8008350 <__pow5mult>
 8005ed4:	1039883a 	mov	fp,r2
 8005ed8:	003e2706 	br	8005778 <__alt_data_end+0xfc005778>
 8005edc:	d8000b15 	stw	zero,44(sp)
 8005ee0:	003c4906 	br	8005008 <__alt_data_end+0xfc005008>
 8005ee4:	d9000917 	ldw	r4,36(sp)
 8005ee8:	d9800a17 	ldw	r6,40(sp)
 8005eec:	dd400915 	stw	r21,36(sp)
 8005ef0:	a905c83a 	sub	r2,r21,r4
 8005ef4:	308d883a 	add	r6,r6,r2
 8005ef8:	d9800a15 	stw	r6,40(sp)
 8005efc:	002b883a 	mov	r21,zero
 8005f00:	003df206 	br	80056cc <__alt_data_end+0xfc0056cc>
 8005f04:	dc800e15 	stw	r18,56(sp)
 8005f08:	982b883a 	mov	r21,r19
 8005f0c:	04400084 	movi	r17,2
 8005f10:	003c7406 	br	80050e4 <__alt_data_end+0xfc0050e4>
 8005f14:	04400044 	movi	r17,1
 8005f18:	dc400d15 	stw	r17,52(sp)
 8005f1c:	dc400615 	stw	r17,24(sp)
 8005f20:	dc402215 	stw	r17,136(sp)
 8005f24:	80001115 	stw	zero,68(r16)
 8005f28:	000b883a 	mov	r5,zero
 8005f2c:	003c4a06 	br	8005058 <__alt_data_end+0xfc005058>
 8005f30:	3023883a 	mov	r17,r6
 8005f34:	003ffb06 	br	8005f24 <__alt_data_end+0xfc005f24>
 8005f38:	1000021e 	bne	r2,zero,8005f44 <_dtoa_r+0x1254>
 8005f3c:	4200004c 	andi	r8,r8,1
 8005f40:	403e8f1e 	bne	r8,zero,8005980 <__alt_data_end+0xfc005980>
 8005f44:	01000c04 	movi	r4,48
 8005f48:	00000106 	br	8005f50 <_dtoa_r+0x1260>
 8005f4c:	102f883a 	mov	r23,r2
 8005f50:	b8bfffc4 	addi	r2,r23,-1
 8005f54:	10c00007 	ldb	r3,0(r2)
 8005f58:	193ffc26 	beq	r3,r4,8005f4c <__alt_data_end+0xfc005f4c>
 8005f5c:	003e9906 	br	80059c4 <__alt_data_end+0xfc0059c4>
 8005f60:	d9000517 	ldw	r4,20(sp)
 8005f64:	012fc83a 	sub	r23,zero,r4
 8005f68:	b800ad26 	beq	r23,zero,8006220 <_dtoa_r+0x1530>
 8005f6c:	b88003cc 	andi	r2,r23,15
 8005f70:	100490fa 	slli	r2,r2,3
 8005f74:	00c20074 	movhi	r3,2049
 8005f78:	18cae204 	addi	r3,r3,11144
 8005f7c:	1885883a 	add	r2,r3,r2
 8005f80:	11800017 	ldw	r6,0(r2)
 8005f84:	11c00117 	ldw	r7,4(r2)
 8005f88:	b82fd13a 	srai	r23,r23,4
 8005f8c:	9009883a 	mov	r4,r18
 8005f90:	980b883a 	mov	r5,r19
 8005f94:	800eb100 	call	800eb10 <__muldf3>
 8005f98:	1029883a 	mov	r20,r2
 8005f9c:	182b883a 	mov	r21,r3
 8005fa0:	b800f426 	beq	r23,zero,8006374 <_dtoa_r+0x1684>
 8005fa4:	02020074 	movhi	r8,2049
 8005fa8:	420ad804 	addi	r8,r8,11104
 8005fac:	8029883a 	mov	r20,r16
 8005fb0:	04400084 	movi	r17,2
 8005fb4:	4021883a 	mov	r16,r8
 8005fb8:	b980004c 	andi	r6,r23,1
 8005fbc:	1009883a 	mov	r4,r2
 8005fc0:	b82fd07a 	srai	r23,r23,1
 8005fc4:	180b883a 	mov	r5,r3
 8005fc8:	30000426 	beq	r6,zero,8005fdc <_dtoa_r+0x12ec>
 8005fcc:	81800017 	ldw	r6,0(r16)
 8005fd0:	81c00117 	ldw	r7,4(r16)
 8005fd4:	8c400044 	addi	r17,r17,1
 8005fd8:	800eb100 	call	800eb10 <__muldf3>
 8005fdc:	84000204 	addi	r16,r16,8
 8005fe0:	b83ff51e 	bne	r23,zero,8005fb8 <__alt_data_end+0xfc005fb8>
 8005fe4:	a021883a 	mov	r16,r20
 8005fe8:	182b883a 	mov	r21,r3
 8005fec:	1029883a 	mov	r20,r2
 8005ff0:	003c5506 	br	8005148 <__alt_data_end+0xfc005148>
 8005ff4:	d9800517 	ldw	r6,20(sp)
 8005ff8:	d9000717 	ldw	r4,28(sp)
 8005ffc:	00c00c04 	movi	r3,48
 8006000:	31800044 	addi	r6,r6,1
 8006004:	d9800515 	stw	r6,20(sp)
 8006008:	20c00005 	stb	r3,0(r4)
 800600c:	02000c44 	movi	r8,49
 8006010:	003da206 	br	800569c <__alt_data_end+0xfc00569c>
 8006014:	89400117 	ldw	r5,4(r17)
 8006018:	8009883a 	mov	r4,r16
 800601c:	8007d180 	call	8007d18 <_Balloc>
 8006020:	89800417 	ldw	r6,16(r17)
 8006024:	11000304 	addi	r4,r2,12
 8006028:	89400304 	addi	r5,r17,12
 800602c:	31800084 	addi	r6,r6,2
 8006030:	318d883a 	add	r6,r6,r6
 8006034:	318d883a 	add	r6,r6,r6
 8006038:	1027883a 	mov	r19,r2
 800603c:	8007abc0 	call	8007abc <memcpy>
 8006040:	8009883a 	mov	r4,r16
 8006044:	980b883a 	mov	r5,r19
 8006048:	01800044 	movi	r6,1
 800604c:	80084900 	call	8008490 <__lshift>
 8006050:	1029883a 	mov	r20,r2
 8006054:	003e8606 	br	8005a70 <__alt_data_end+0xfc005a70>
 8006058:	00800e44 	movi	r2,57
 800605c:	90809526 	beq	r18,r2,80062b4 <_dtoa_r+0x15c4>
 8006060:	92000044 	addi	r8,r18,1
 8006064:	003f2306 	br	8005cf4 <__alt_data_end+0xfc005cf4>
 8006068:	9011883a 	mov	r8,r18
 800606c:	8825883a 	mov	r18,r17
 8006070:	a023883a 	mov	r17,r20
 8006074:	003e3706 	br	8005954 <__alt_data_end+0xfc005954>
 8006078:	002b883a 	mov	r21,zero
 800607c:	0023883a 	mov	r17,zero
 8006080:	003f5606 	br	8005ddc <__alt_data_end+0xfc005ddc>
 8006084:	51bfffc4 	addi	r6,r10,-1
 8006088:	300490fa 	slli	r2,r6,3
 800608c:	00c20074 	movhi	r3,2049
 8006090:	18cae204 	addi	r3,r3,11144
 8006094:	1885883a 	add	r2,r3,r2
 8006098:	d9c00e17 	ldw	r7,56(sp)
 800609c:	11000017 	ldw	r4,0(r2)
 80060a0:	11400117 	ldw	r5,4(r2)
 80060a4:	d8800717 	ldw	r2,28(sp)
 80060a8:	d9801015 	stw	r6,64(sp)
 80060ac:	880d883a 	mov	r6,r17
 80060b0:	da801615 	stw	r10,88(sp)
 80060b4:	15c00044 	addi	r23,r2,1
 80060b8:	800eb100 	call	800eb10 <__muldf3>
 80060bc:	a80b883a 	mov	r5,r21
 80060c0:	a009883a 	mov	r4,r20
 80060c4:	d8c01115 	stw	r3,68(sp)
 80060c8:	d8800e15 	stw	r2,56(sp)
 80060cc:	800fb040 	call	800fb04 <__fixdfsi>
 80060d0:	1009883a 	mov	r4,r2
 80060d4:	1023883a 	mov	r17,r2
 80060d8:	800fb8c0 	call	800fb8c <__floatsidf>
 80060dc:	a009883a 	mov	r4,r20
 80060e0:	a80b883a 	mov	r5,r21
 80060e4:	100d883a 	mov	r6,r2
 80060e8:	180f883a 	mov	r7,r3
 80060ec:	800f2340 	call	800f234 <__subdf3>
 80060f0:	1813883a 	mov	r9,r3
 80060f4:	d8c00717 	ldw	r3,28(sp)
 80060f8:	8c400c04 	addi	r17,r17,48
 80060fc:	1011883a 	mov	r8,r2
 8006100:	1c400005 	stb	r17,0(r3)
 8006104:	da801617 	ldw	r10,88(sp)
 8006108:	00800044 	movi	r2,1
 800610c:	50802326 	beq	r10,r2,800619c <_dtoa_r+0x14ac>
 8006110:	d8800717 	ldw	r2,28(sp)
 8006114:	b82b883a 	mov	r21,r23
 8006118:	dc001315 	stw	r16,76(sp)
 800611c:	12a9883a 	add	r20,r2,r10
 8006120:	4807883a 	mov	r3,r9
 8006124:	4005883a 	mov	r2,r8
 8006128:	dc801415 	stw	r18,80(sp)
 800612c:	000d883a 	mov	r6,zero
 8006130:	01d00934 	movhi	r7,16420
 8006134:	1009883a 	mov	r4,r2
 8006138:	180b883a 	mov	r5,r3
 800613c:	800eb100 	call	800eb10 <__muldf3>
 8006140:	180b883a 	mov	r5,r3
 8006144:	1009883a 	mov	r4,r2
 8006148:	1821883a 	mov	r16,r3
 800614c:	1025883a 	mov	r18,r2
 8006150:	800fb040 	call	800fb04 <__fixdfsi>
 8006154:	1009883a 	mov	r4,r2
 8006158:	1023883a 	mov	r17,r2
 800615c:	800fb8c0 	call	800fb8c <__floatsidf>
 8006160:	9009883a 	mov	r4,r18
 8006164:	800b883a 	mov	r5,r16
 8006168:	100d883a 	mov	r6,r2
 800616c:	180f883a 	mov	r7,r3
 8006170:	8c400c04 	addi	r17,r17,48
 8006174:	800f2340 	call	800f234 <__subdf3>
 8006178:	ad400044 	addi	r21,r21,1
 800617c:	ac7fffc5 	stb	r17,-1(r21)
 8006180:	ad3fea1e 	bne	r21,r20,800612c <__alt_data_end+0xfc00612c>
 8006184:	1813883a 	mov	r9,r3
 8006188:	d8c01017 	ldw	r3,64(sp)
 800618c:	dc001317 	ldw	r16,76(sp)
 8006190:	dc801417 	ldw	r18,80(sp)
 8006194:	1011883a 	mov	r8,r2
 8006198:	b8ef883a 	add	r23,r23,r3
 800619c:	d9000e17 	ldw	r4,56(sp)
 80061a0:	d9401117 	ldw	r5,68(sp)
 80061a4:	000d883a 	mov	r6,zero
 80061a8:	01cff834 	movhi	r7,16352
 80061ac:	da001715 	stw	r8,92(sp)
 80061b0:	da401515 	stw	r9,84(sp)
 80061b4:	800d7640 	call	800d764 <__adddf3>
 80061b8:	da001717 	ldw	r8,92(sp)
 80061bc:	da401517 	ldw	r9,84(sp)
 80061c0:	1009883a 	mov	r4,r2
 80061c4:	400d883a 	mov	r6,r8
 80061c8:	480f883a 	mov	r7,r9
 80061cc:	180b883a 	mov	r5,r3
 80061d0:	800ea300 	call	800ea30 <__ledf2>
 80061d4:	da001717 	ldw	r8,92(sp)
 80061d8:	da401517 	ldw	r9,84(sp)
 80061dc:	10003b0e 	bge	r2,zero,80062cc <_dtoa_r+0x15dc>
 80061e0:	d9001217 	ldw	r4,72(sp)
 80061e4:	bd7fffc3 	ldbu	r21,-1(r23)
 80061e8:	d9000515 	stw	r4,20(sp)
 80061ec:	003d1c06 	br	8005660 <__alt_data_end+0xfc005660>
 80061f0:	d8c00817 	ldw	r3,32(sp)
 80061f4:	18a9c83a 	sub	r20,r3,r2
 80061f8:	0005883a 	mov	r2,zero
 80061fc:	003d3706 	br	80056dc <__alt_data_end+0xfc0056dc>
 8006200:	00800044 	movi	r2,1
 8006204:	003dd006 	br	8005948 <__alt_data_end+0xfc005948>
 8006208:	d8c00217 	ldw	r3,8(sp)
 800620c:	00800d84 	movi	r2,54
 8006210:	dd400917 	ldw	r21,36(sp)
 8006214:	10c5c83a 	sub	r2,r2,r3
 8006218:	dd000817 	ldw	r20,32(sp)
 800621c:	003d2f06 	br	80056dc <__alt_data_end+0xfc0056dc>
 8006220:	9029883a 	mov	r20,r18
 8006224:	982b883a 	mov	r21,r19
 8006228:	04400084 	movi	r17,2
 800622c:	003bc606 	br	8005148 <__alt_data_end+0xfc005148>
 8006230:	d8800617 	ldw	r2,24(sp)
 8006234:	103efc26 	beq	r2,zero,8005e28 <__alt_data_end+0xfc005e28>
 8006238:	d8c00d17 	ldw	r3,52(sp)
 800623c:	00fc890e 	bge	zero,r3,8005464 <__alt_data_end+0xfc005464>
 8006240:	a80b883a 	mov	r5,r21
 8006244:	a009883a 	mov	r4,r20
 8006248:	000d883a 	mov	r6,zero
 800624c:	01d00934 	movhi	r7,16420
 8006250:	800eb100 	call	800eb10 <__muldf3>
 8006254:	89000044 	addi	r4,r17,1
 8006258:	1029883a 	mov	r20,r2
 800625c:	182b883a 	mov	r21,r3
 8006260:	800fb8c0 	call	800fb8c <__floatsidf>
 8006264:	a009883a 	mov	r4,r20
 8006268:	a80b883a 	mov	r5,r21
 800626c:	100d883a 	mov	r6,r2
 8006270:	180f883a 	mov	r7,r3
 8006274:	800eb100 	call	800eb10 <__muldf3>
 8006278:	1009883a 	mov	r4,r2
 800627c:	180b883a 	mov	r5,r3
 8006280:	000d883a 	mov	r6,zero
 8006284:	01d00734 	movhi	r7,16412
 8006288:	800d7640 	call	800d764 <__adddf3>
 800628c:	d9000517 	ldw	r4,20(sp)
 8006290:	1023883a 	mov	r17,r2
 8006294:	00bf3034 	movhi	r2,64704
 8006298:	213fffc4 	addi	r4,r4,-1
 800629c:	1885883a 	add	r2,r3,r2
 80062a0:	d9001215 	stw	r4,72(sp)
 80062a4:	d8800e15 	stw	r2,56(sp)
 80062a8:	da800d17 	ldw	r10,52(sp)
 80062ac:	003bc306 	br	80051bc <__alt_data_end+0xfc0051bc>
 80062b0:	b039883a 	mov	fp,r22
 80062b4:	01000e44 	movi	r4,57
 80062b8:	8825883a 	mov	r18,r17
 80062bc:	9dc00044 	addi	r23,r19,1
 80062c0:	99000005 	stb	r4,0(r19)
 80062c4:	a023883a 	mov	r17,r20
 80062c8:	003dae06 	br	8005984 <__alt_data_end+0xfc005984>
 80062cc:	d9800e17 	ldw	r6,56(sp)
 80062d0:	d9c01117 	ldw	r7,68(sp)
 80062d4:	0009883a 	mov	r4,zero
 80062d8:	014ff834 	movhi	r5,16352
 80062dc:	da001715 	stw	r8,92(sp)
 80062e0:	da401515 	stw	r9,84(sp)
 80062e4:	800f2340 	call	800f234 <__subdf3>
 80062e8:	da001717 	ldw	r8,92(sp)
 80062ec:	da401517 	ldw	r9,84(sp)
 80062f0:	1009883a 	mov	r4,r2
 80062f4:	180b883a 	mov	r5,r3
 80062f8:	400d883a 	mov	r6,r8
 80062fc:	480f883a 	mov	r7,r9
 8006300:	800e9500 	call	800e950 <__gedf2>
 8006304:	00bc570e 	bge	zero,r2,8005464 <__alt_data_end+0xfc005464>
 8006308:	01000c04 	movi	r4,48
 800630c:	00000106 	br	8006314 <_dtoa_r+0x1624>
 8006310:	102f883a 	mov	r23,r2
 8006314:	b8bfffc4 	addi	r2,r23,-1
 8006318:	10c00007 	ldb	r3,0(r2)
 800631c:	193ffc26 	beq	r3,r4,8006310 <__alt_data_end+0xfc006310>
 8006320:	d9801217 	ldw	r6,72(sp)
 8006324:	d9800515 	stw	r6,20(sp)
 8006328:	003c1f06 	br	80053a8 <__alt_data_end+0xfc0053a8>
 800632c:	d8801217 	ldw	r2,72(sp)
 8006330:	dc001117 	ldw	r16,68(sp)
 8006334:	d8800515 	stw	r2,20(sp)
 8006338:	003cc906 	br	8005660 <__alt_data_end+0xfc005660>
 800633c:	dd801317 	ldw	r22,76(sp)
 8006340:	dc001117 	ldw	r16,68(sp)
 8006344:	dcc01417 	ldw	r19,80(sp)
 8006348:	dc801017 	ldw	r18,64(sp)
 800634c:	003c4506 	br	8005464 <__alt_data_end+0xfc005464>
 8006350:	103e5d1e 	bne	r2,zero,8005cc8 <__alt_data_end+0xfc005cc8>
 8006354:	4080004c 	andi	r2,r8,1
 8006358:	103e5b26 	beq	r2,zero,8005cc8 <__alt_data_end+0xfc005cc8>
 800635c:	003e5706 	br	8005cbc <__alt_data_end+0xfc005cbc>
 8006360:	d8c00317 	ldw	r3,12(sp)
 8006364:	00800084 	movi	r2,2
 8006368:	10c00a16 	blt	r2,r3,8006394 <_dtoa_r+0x16a4>
 800636c:	d9000d17 	ldw	r4,52(sp)
 8006370:	003e8306 	br	8005d80 <__alt_data_end+0xfc005d80>
 8006374:	04400084 	movi	r17,2
 8006378:	003b7306 	br	8005148 <__alt_data_end+0xfc005148>
 800637c:	d9801217 	ldw	r6,72(sp)
 8006380:	d9800515 	stw	r6,20(sp)
 8006384:	003cb606 	br	8005660 <__alt_data_end+0xfc005660>
 8006388:	d9001217 	ldw	r4,72(sp)
 800638c:	d9000515 	stw	r4,20(sp)
 8006390:	003c0506 	br	80053a8 <__alt_data_end+0xfc0053a8>
 8006394:	d9800d17 	ldw	r6,52(sp)
 8006398:	d9800615 	stw	r6,24(sp)
 800639c:	003e8306 	br	8005dac <__alt_data_end+0xfc005dac>
 80063a0:	d9800317 	ldw	r6,12(sp)
 80063a4:	00800084 	movi	r2,2
 80063a8:	11800216 	blt	r2,r6,80063b4 <_dtoa_r+0x16c4>
 80063ac:	d8800d17 	ldw	r2,52(sp)
 80063b0:	003da606 	br	8005a4c <__alt_data_end+0xfc005a4c>
 80063b4:	d8800d17 	ldw	r2,52(sp)
 80063b8:	d8800615 	stw	r2,24(sp)
 80063bc:	003e7b06 	br	8005dac <__alt_data_end+0xfc005dac>
 80063c0:	05000044 	movi	r20,1
 80063c4:	003b0506 	br	8004fdc <__alt_data_end+0xfc004fdc>
 80063c8:	8009883a 	mov	r4,r16
 80063cc:	80001115 	stw	zero,68(r16)
 80063d0:	000b883a 	mov	r5,zero
 80063d4:	8007d180 	call	8007d18 <_Balloc>
 80063d8:	d8800715 	stw	r2,28(sp)
 80063dc:	d8c00717 	ldw	r3,28(sp)
 80063e0:	00bfffc4 	movi	r2,-1
 80063e4:	01000044 	movi	r4,1
 80063e8:	d8800615 	stw	r2,24(sp)
 80063ec:	80c01015 	stw	r3,64(r16)
 80063f0:	d9000b15 	stw	r4,44(sp)
 80063f4:	d8002215 	stw	zero,136(sp)
 80063f8:	d8800d15 	stw	r2,52(sp)
 80063fc:	003c1906 	br	8005464 <__alt_data_end+0xfc005464>
 8006400:	193d2926 	beq	r3,r4,80058a8 <__alt_data_end+0xfc0058a8>
 8006404:	00c00f04 	movi	r3,60
 8006408:	1885c83a 	sub	r2,r3,r2
 800640c:	003d7b06 	br	80059fc <__alt_data_end+0xfc0059fc>
 8006410:	000b883a 	mov	r5,zero
 8006414:	003b1006 	br	8005058 <__alt_data_end+0xfc005058>

08006418 <_fflush_r>:
 8006418:	defffb04 	addi	sp,sp,-20
 800641c:	dcc00315 	stw	r19,12(sp)
 8006420:	dc000015 	stw	r16,0(sp)
 8006424:	dfc00415 	stw	ra,16(sp)
 8006428:	dc800215 	stw	r18,8(sp)
 800642c:	dc400115 	stw	r17,4(sp)
 8006430:	2027883a 	mov	r19,r4
 8006434:	2821883a 	mov	r16,r5
 8006438:	20000226 	beq	r4,zero,8006444 <_fflush_r+0x2c>
 800643c:	20800e17 	ldw	r2,56(r4)
 8006440:	10005326 	beq	r2,zero,8006590 <_fflush_r+0x178>
 8006444:	8080030b 	ldhu	r2,12(r16)
 8006448:	10ffffcc 	andi	r3,r2,65535
 800644c:	18e0001c 	xori	r3,r3,32768
 8006450:	18e00004 	addi	r3,r3,-32768
 8006454:	18002c26 	beq	r3,zero,8006508 <_fflush_r+0xf0>
 8006458:	10c0020c 	andi	r3,r2,8
 800645c:	1800321e 	bne	r3,zero,8006528 <_fflush_r+0x110>
 8006460:	80c00117 	ldw	r3,4(r16)
 8006464:	10820014 	ori	r2,r2,2048
 8006468:	8080030d 	sth	r2,12(r16)
 800646c:	00c0570e 	bge	zero,r3,80065cc <_fflush_r+0x1b4>
 8006470:	82000a17 	ldw	r8,40(r16)
 8006474:	40002426 	beq	r8,zero,8006508 <_fflush_r+0xf0>
 8006478:	9c400017 	ldw	r17,0(r19)
 800647c:	10c4000c 	andi	r3,r2,4096
 8006480:	98000015 	stw	zero,0(r19)
 8006484:	18004626 	beq	r3,zero,80065a0 <_fflush_r+0x188>
 8006488:	81801417 	ldw	r6,80(r16)
 800648c:	10c0010c 	andi	r3,r2,4
 8006490:	18000626 	beq	r3,zero,80064ac <_fflush_r+0x94>
 8006494:	80c00117 	ldw	r3,4(r16)
 8006498:	80800c17 	ldw	r2,48(r16)
 800649c:	30cdc83a 	sub	r6,r6,r3
 80064a0:	10000226 	beq	r2,zero,80064ac <_fflush_r+0x94>
 80064a4:	80800f17 	ldw	r2,60(r16)
 80064a8:	308dc83a 	sub	r6,r6,r2
 80064ac:	81400717 	ldw	r5,28(r16)
 80064b0:	9809883a 	mov	r4,r19
 80064b4:	000f883a 	mov	r7,zero
 80064b8:	403ee83a 	callr	r8
 80064bc:	00ffffc4 	movi	r3,-1
 80064c0:	10c04526 	beq	r2,r3,80065d8 <_fflush_r+0x1c0>
 80064c4:	80c0030b 	ldhu	r3,12(r16)
 80064c8:	81000417 	ldw	r4,16(r16)
 80064cc:	80000115 	stw	zero,4(r16)
 80064d0:	197dffcc 	andi	r5,r3,63487
 80064d4:	8140030d 	sth	r5,12(r16)
 80064d8:	81000015 	stw	r4,0(r16)
 80064dc:	18c4000c 	andi	r3,r3,4096
 80064e0:	18000126 	beq	r3,zero,80064e8 <_fflush_r+0xd0>
 80064e4:	80801415 	stw	r2,80(r16)
 80064e8:	81400c17 	ldw	r5,48(r16)
 80064ec:	9c400015 	stw	r17,0(r19)
 80064f0:	28000526 	beq	r5,zero,8006508 <_fflush_r+0xf0>
 80064f4:	80801004 	addi	r2,r16,64
 80064f8:	28800226 	beq	r5,r2,8006504 <_fflush_r+0xec>
 80064fc:	9809883a 	mov	r4,r19
 8006500:	8006b340 	call	8006b34 <_free_r>
 8006504:	80000c15 	stw	zero,48(r16)
 8006508:	0005883a 	mov	r2,zero
 800650c:	dfc00417 	ldw	ra,16(sp)
 8006510:	dcc00317 	ldw	r19,12(sp)
 8006514:	dc800217 	ldw	r18,8(sp)
 8006518:	dc400117 	ldw	r17,4(sp)
 800651c:	dc000017 	ldw	r16,0(sp)
 8006520:	dec00504 	addi	sp,sp,20
 8006524:	f800283a 	ret
 8006528:	84800417 	ldw	r18,16(r16)
 800652c:	903ff626 	beq	r18,zero,8006508 <__alt_data_end+0xfc006508>
 8006530:	84400017 	ldw	r17,0(r16)
 8006534:	108000cc 	andi	r2,r2,3
 8006538:	84800015 	stw	r18,0(r16)
 800653c:	8ca3c83a 	sub	r17,r17,r18
 8006540:	10001526 	beq	r2,zero,8006598 <_fflush_r+0x180>
 8006544:	0005883a 	mov	r2,zero
 8006548:	80800215 	stw	r2,8(r16)
 800654c:	04400316 	blt	zero,r17,800655c <_fflush_r+0x144>
 8006550:	003fed06 	br	8006508 <__alt_data_end+0xfc006508>
 8006554:	90a5883a 	add	r18,r18,r2
 8006558:	047feb0e 	bge	zero,r17,8006508 <__alt_data_end+0xfc006508>
 800655c:	80800917 	ldw	r2,36(r16)
 8006560:	81400717 	ldw	r5,28(r16)
 8006564:	880f883a 	mov	r7,r17
 8006568:	900d883a 	mov	r6,r18
 800656c:	9809883a 	mov	r4,r19
 8006570:	103ee83a 	callr	r2
 8006574:	88a3c83a 	sub	r17,r17,r2
 8006578:	00bff616 	blt	zero,r2,8006554 <__alt_data_end+0xfc006554>
 800657c:	80c0030b 	ldhu	r3,12(r16)
 8006580:	00bfffc4 	movi	r2,-1
 8006584:	18c01014 	ori	r3,r3,64
 8006588:	80c0030d 	sth	r3,12(r16)
 800658c:	003fdf06 	br	800650c <__alt_data_end+0xfc00650c>
 8006590:	80069c00 	call	80069c0 <__sinit>
 8006594:	003fab06 	br	8006444 <__alt_data_end+0xfc006444>
 8006598:	80800517 	ldw	r2,20(r16)
 800659c:	003fea06 	br	8006548 <__alt_data_end+0xfc006548>
 80065a0:	81400717 	ldw	r5,28(r16)
 80065a4:	000d883a 	mov	r6,zero
 80065a8:	9809883a 	mov	r4,r19
 80065ac:	01c00044 	movi	r7,1
 80065b0:	403ee83a 	callr	r8
 80065b4:	100d883a 	mov	r6,r2
 80065b8:	00bfffc4 	movi	r2,-1
 80065bc:	30801326 	beq	r6,r2,800660c <_fflush_r+0x1f4>
 80065c0:	8080030b 	ldhu	r2,12(r16)
 80065c4:	82000a17 	ldw	r8,40(r16)
 80065c8:	003fb006 	br	800648c <__alt_data_end+0xfc00648c>
 80065cc:	80c00f17 	ldw	r3,60(r16)
 80065d0:	00ffa716 	blt	zero,r3,8006470 <__alt_data_end+0xfc006470>
 80065d4:	003fcc06 	br	8006508 <__alt_data_end+0xfc006508>
 80065d8:	98c00017 	ldw	r3,0(r19)
 80065dc:	183fb926 	beq	r3,zero,80064c4 <__alt_data_end+0xfc0064c4>
 80065e0:	01000744 	movi	r4,29
 80065e4:	19000226 	beq	r3,r4,80065f0 <_fflush_r+0x1d8>
 80065e8:	01000584 	movi	r4,22
 80065ec:	1900101e 	bne	r3,r4,8006630 <_fflush_r+0x218>
 80065f0:	8080030b 	ldhu	r2,12(r16)
 80065f4:	80c00417 	ldw	r3,16(r16)
 80065f8:	80000115 	stw	zero,4(r16)
 80065fc:	10bdffcc 	andi	r2,r2,63487
 8006600:	8080030d 	sth	r2,12(r16)
 8006604:	80c00015 	stw	r3,0(r16)
 8006608:	003fb706 	br	80064e8 <__alt_data_end+0xfc0064e8>
 800660c:	98800017 	ldw	r2,0(r19)
 8006610:	103feb26 	beq	r2,zero,80065c0 <__alt_data_end+0xfc0065c0>
 8006614:	00c00744 	movi	r3,29
 8006618:	10c00226 	beq	r2,r3,8006624 <_fflush_r+0x20c>
 800661c:	00c00584 	movi	r3,22
 8006620:	10ffd61e 	bne	r2,r3,800657c <__alt_data_end+0xfc00657c>
 8006624:	9c400015 	stw	r17,0(r19)
 8006628:	0005883a 	mov	r2,zero
 800662c:	003fb706 	br	800650c <__alt_data_end+0xfc00650c>
 8006630:	80c0030b 	ldhu	r3,12(r16)
 8006634:	18c01014 	ori	r3,r3,64
 8006638:	80c0030d 	sth	r3,12(r16)
 800663c:	003fb306 	br	800650c <__alt_data_end+0xfc00650c>

08006640 <fflush>:
 8006640:	20000526 	beq	r4,zero,8006658 <fflush+0x18>
 8006644:	00820074 	movhi	r2,2049
 8006648:	10923804 	addi	r2,r2,18656
 800664c:	200b883a 	mov	r5,r4
 8006650:	11000017 	ldw	r4,0(r2)
 8006654:	80064181 	jmpi	8006418 <_fflush_r>
 8006658:	00820074 	movhi	r2,2049
 800665c:	10923704 	addi	r2,r2,18652
 8006660:	11000017 	ldw	r4,0(r2)
 8006664:	01420034 	movhi	r5,2048
 8006668:	29590604 	addi	r5,r5,25624
 800666c:	8006edc1 	jmpi	8006edc <_fwalk_reent>

08006670 <__fp_lock>:
 8006670:	0005883a 	mov	r2,zero
 8006674:	f800283a 	ret

08006678 <__fp_unlock>:
 8006678:	0005883a 	mov	r2,zero
 800667c:	f800283a 	ret

08006680 <_cleanup_r>:
 8006680:	01420074 	movhi	r5,2049
 8006684:	296e2104 	addi	r5,r5,-18300
 8006688:	8006e241 	jmpi	8006e24 <_fwalk>

0800668c <__sinit.part.1>:
 800668c:	defff604 	addi	sp,sp,-40
 8006690:	00c20034 	movhi	r3,2048
 8006694:	dfc00915 	stw	ra,36(sp)
 8006698:	df000815 	stw	fp,32(sp)
 800669c:	ddc00715 	stw	r23,28(sp)
 80066a0:	dd800615 	stw	r22,24(sp)
 80066a4:	dd400515 	stw	r21,20(sp)
 80066a8:	dd000415 	stw	r20,16(sp)
 80066ac:	dcc00315 	stw	r19,12(sp)
 80066b0:	dc800215 	stw	r18,8(sp)
 80066b4:	dc400115 	stw	r17,4(sp)
 80066b8:	dc000015 	stw	r16,0(sp)
 80066bc:	18d9a004 	addi	r3,r3,26240
 80066c0:	24000117 	ldw	r16,4(r4)
 80066c4:	20c00f15 	stw	r3,60(r4)
 80066c8:	07000044 	movi	fp,1
 80066cc:	00c000c4 	movi	r3,3
 80066d0:	2080bb04 	addi	r2,r4,748
 80066d4:	20c0b915 	stw	r3,740(r4)
 80066d8:	27000e15 	stw	fp,56(r4)
 80066dc:	2080ba15 	stw	r2,744(r4)
 80066e0:	2000b815 	stw	zero,736(r4)
 80066e4:	05c00204 	movi	r23,8
 80066e8:	00800104 	movi	r2,4
 80066ec:	2025883a 	mov	r18,r4
 80066f0:	b80d883a 	mov	r6,r23
 80066f4:	81001704 	addi	r4,r16,92
 80066f8:	000b883a 	mov	r5,zero
 80066fc:	80000015 	stw	zero,0(r16)
 8006700:	80000115 	stw	zero,4(r16)
 8006704:	80000215 	stw	zero,8(r16)
 8006708:	8080030d 	sth	r2,12(r16)
 800670c:	80001915 	stw	zero,100(r16)
 8006710:	8000038d 	sth	zero,14(r16)
 8006714:	80000415 	stw	zero,16(r16)
 8006718:	80000515 	stw	zero,20(r16)
 800671c:	80000615 	stw	zero,24(r16)
 8006720:	8007bf40 	call	8007bf4 <memset>
 8006724:	05820074 	movhi	r22,2049
 8006728:	94400217 	ldw	r17,8(r18)
 800672c:	05420074 	movhi	r21,2049
 8006730:	05020074 	movhi	r20,2049
 8006734:	04c20074 	movhi	r19,2049
 8006738:	b5a35b04 	addi	r22,r22,-29332
 800673c:	ad637204 	addi	r21,r21,-29240
 8006740:	a5239104 	addi	r20,r20,-29116
 8006744:	9ce3a804 	addi	r19,r19,-29024
 8006748:	85800815 	stw	r22,32(r16)
 800674c:	85400915 	stw	r21,36(r16)
 8006750:	85000a15 	stw	r20,40(r16)
 8006754:	84c00b15 	stw	r19,44(r16)
 8006758:	84000715 	stw	r16,28(r16)
 800675c:	00800284 	movi	r2,10
 8006760:	89001704 	addi	r4,r17,92
 8006764:	b80d883a 	mov	r6,r23
 8006768:	000b883a 	mov	r5,zero
 800676c:	88000015 	stw	zero,0(r17)
 8006770:	88000115 	stw	zero,4(r17)
 8006774:	88000215 	stw	zero,8(r17)
 8006778:	8880030d 	sth	r2,12(r17)
 800677c:	88001915 	stw	zero,100(r17)
 8006780:	8f00038d 	sth	fp,14(r17)
 8006784:	88000415 	stw	zero,16(r17)
 8006788:	88000515 	stw	zero,20(r17)
 800678c:	88000615 	stw	zero,24(r17)
 8006790:	8007bf40 	call	8007bf4 <memset>
 8006794:	94000317 	ldw	r16,12(r18)
 8006798:	00800484 	movi	r2,18
 800679c:	8c400715 	stw	r17,28(r17)
 80067a0:	8d800815 	stw	r22,32(r17)
 80067a4:	8d400915 	stw	r21,36(r17)
 80067a8:	8d000a15 	stw	r20,40(r17)
 80067ac:	8cc00b15 	stw	r19,44(r17)
 80067b0:	8080030d 	sth	r2,12(r16)
 80067b4:	00800084 	movi	r2,2
 80067b8:	80000015 	stw	zero,0(r16)
 80067bc:	80000115 	stw	zero,4(r16)
 80067c0:	80000215 	stw	zero,8(r16)
 80067c4:	80001915 	stw	zero,100(r16)
 80067c8:	8080038d 	sth	r2,14(r16)
 80067cc:	80000415 	stw	zero,16(r16)
 80067d0:	80000515 	stw	zero,20(r16)
 80067d4:	80000615 	stw	zero,24(r16)
 80067d8:	81001704 	addi	r4,r16,92
 80067dc:	000b883a 	mov	r5,zero
 80067e0:	b80d883a 	mov	r6,r23
 80067e4:	8007bf40 	call	8007bf4 <memset>
 80067e8:	84000715 	stw	r16,28(r16)
 80067ec:	85800815 	stw	r22,32(r16)
 80067f0:	85400915 	stw	r21,36(r16)
 80067f4:	85000a15 	stw	r20,40(r16)
 80067f8:	84c00b15 	stw	r19,44(r16)
 80067fc:	dfc00917 	ldw	ra,36(sp)
 8006800:	df000817 	ldw	fp,32(sp)
 8006804:	ddc00717 	ldw	r23,28(sp)
 8006808:	dd800617 	ldw	r22,24(sp)
 800680c:	dd400517 	ldw	r21,20(sp)
 8006810:	dd000417 	ldw	r20,16(sp)
 8006814:	dcc00317 	ldw	r19,12(sp)
 8006818:	dc800217 	ldw	r18,8(sp)
 800681c:	dc400117 	ldw	r17,4(sp)
 8006820:	dc000017 	ldw	r16,0(sp)
 8006824:	dec00a04 	addi	sp,sp,40
 8006828:	f800283a 	ret

0800682c <__sfmoreglue>:
 800682c:	defffc04 	addi	sp,sp,-16
 8006830:	dc400115 	stw	r17,4(sp)
 8006834:	2c401a24 	muli	r17,r5,104
 8006838:	dc800215 	stw	r18,8(sp)
 800683c:	2825883a 	mov	r18,r5
 8006840:	89400304 	addi	r5,r17,12
 8006844:	dc000015 	stw	r16,0(sp)
 8006848:	dfc00315 	stw	ra,12(sp)
 800684c:	800722c0 	call	800722c <_malloc_r>
 8006850:	1021883a 	mov	r16,r2
 8006854:	10000726 	beq	r2,zero,8006874 <__sfmoreglue+0x48>
 8006858:	11000304 	addi	r4,r2,12
 800685c:	10000015 	stw	zero,0(r2)
 8006860:	14800115 	stw	r18,4(r2)
 8006864:	11000215 	stw	r4,8(r2)
 8006868:	000b883a 	mov	r5,zero
 800686c:	880d883a 	mov	r6,r17
 8006870:	8007bf40 	call	8007bf4 <memset>
 8006874:	8005883a 	mov	r2,r16
 8006878:	dfc00317 	ldw	ra,12(sp)
 800687c:	dc800217 	ldw	r18,8(sp)
 8006880:	dc400117 	ldw	r17,4(sp)
 8006884:	dc000017 	ldw	r16,0(sp)
 8006888:	dec00404 	addi	sp,sp,16
 800688c:	f800283a 	ret

08006890 <__sfp>:
 8006890:	00820074 	movhi	r2,2049
 8006894:	defffb04 	addi	sp,sp,-20
 8006898:	10923704 	addi	r2,r2,18652
 800689c:	dc800215 	stw	r18,8(sp)
 80068a0:	14800017 	ldw	r18,0(r2)
 80068a4:	dcc00315 	stw	r19,12(sp)
 80068a8:	dfc00415 	stw	ra,16(sp)
 80068ac:	90800e17 	ldw	r2,56(r18)
 80068b0:	dc400115 	stw	r17,4(sp)
 80068b4:	dc000015 	stw	r16,0(sp)
 80068b8:	2027883a 	mov	r19,r4
 80068bc:	1000021e 	bne	r2,zero,80068c8 <__sfp+0x38>
 80068c0:	9009883a 	mov	r4,r18
 80068c4:	800668c0 	call	800668c <__sinit.part.1>
 80068c8:	9480b804 	addi	r18,r18,736
 80068cc:	047fffc4 	movi	r17,-1
 80068d0:	91400117 	ldw	r5,4(r18)
 80068d4:	94000217 	ldw	r16,8(r18)
 80068d8:	297fffc4 	addi	r5,r5,-1
 80068dc:	28000a16 	blt	r5,zero,8006908 <__sfp+0x78>
 80068e0:	8080030f 	ldh	r2,12(r16)
 80068e4:	10000c26 	beq	r2,zero,8006918 <__sfp+0x88>
 80068e8:	80c01d04 	addi	r3,r16,116
 80068ec:	00000206 	br	80068f8 <__sfp+0x68>
 80068f0:	18bfe60f 	ldh	r2,-104(r3)
 80068f4:	10000826 	beq	r2,zero,8006918 <__sfp+0x88>
 80068f8:	297fffc4 	addi	r5,r5,-1
 80068fc:	1c3ffd04 	addi	r16,r3,-12
 8006900:	18c01a04 	addi	r3,r3,104
 8006904:	2c7ffa1e 	bne	r5,r17,80068f0 <__alt_data_end+0xfc0068f0>
 8006908:	90800017 	ldw	r2,0(r18)
 800690c:	10001d26 	beq	r2,zero,8006984 <__sfp+0xf4>
 8006910:	1025883a 	mov	r18,r2
 8006914:	003fee06 	br	80068d0 <__alt_data_end+0xfc0068d0>
 8006918:	00bfffc4 	movi	r2,-1
 800691c:	8080038d 	sth	r2,14(r16)
 8006920:	00800044 	movi	r2,1
 8006924:	8080030d 	sth	r2,12(r16)
 8006928:	80001915 	stw	zero,100(r16)
 800692c:	80000015 	stw	zero,0(r16)
 8006930:	80000215 	stw	zero,8(r16)
 8006934:	80000115 	stw	zero,4(r16)
 8006938:	80000415 	stw	zero,16(r16)
 800693c:	80000515 	stw	zero,20(r16)
 8006940:	80000615 	stw	zero,24(r16)
 8006944:	81001704 	addi	r4,r16,92
 8006948:	000b883a 	mov	r5,zero
 800694c:	01800204 	movi	r6,8
 8006950:	8007bf40 	call	8007bf4 <memset>
 8006954:	8005883a 	mov	r2,r16
 8006958:	80000c15 	stw	zero,48(r16)
 800695c:	80000d15 	stw	zero,52(r16)
 8006960:	80001115 	stw	zero,68(r16)
 8006964:	80001215 	stw	zero,72(r16)
 8006968:	dfc00417 	ldw	ra,16(sp)
 800696c:	dcc00317 	ldw	r19,12(sp)
 8006970:	dc800217 	ldw	r18,8(sp)
 8006974:	dc400117 	ldw	r17,4(sp)
 8006978:	dc000017 	ldw	r16,0(sp)
 800697c:	dec00504 	addi	sp,sp,20
 8006980:	f800283a 	ret
 8006984:	9809883a 	mov	r4,r19
 8006988:	01400104 	movi	r5,4
 800698c:	800682c0 	call	800682c <__sfmoreglue>
 8006990:	90800015 	stw	r2,0(r18)
 8006994:	103fde1e 	bne	r2,zero,8006910 <__alt_data_end+0xfc006910>
 8006998:	00800304 	movi	r2,12
 800699c:	98800015 	stw	r2,0(r19)
 80069a0:	0005883a 	mov	r2,zero
 80069a4:	003ff006 	br	8006968 <__alt_data_end+0xfc006968>

080069a8 <_cleanup>:
 80069a8:	00820074 	movhi	r2,2049
 80069ac:	10923704 	addi	r2,r2,18652
 80069b0:	11000017 	ldw	r4,0(r2)
 80069b4:	01420074 	movhi	r5,2049
 80069b8:	296e2104 	addi	r5,r5,-18300
 80069bc:	8006e241 	jmpi	8006e24 <_fwalk>

080069c0 <__sinit>:
 80069c0:	20800e17 	ldw	r2,56(r4)
 80069c4:	10000126 	beq	r2,zero,80069cc <__sinit+0xc>
 80069c8:	f800283a 	ret
 80069cc:	800668c1 	jmpi	800668c <__sinit.part.1>

080069d0 <__sfp_lock_acquire>:
 80069d0:	f800283a 	ret

080069d4 <__sfp_lock_release>:
 80069d4:	f800283a 	ret

080069d8 <__sinit_lock_acquire>:
 80069d8:	f800283a 	ret

080069dc <__sinit_lock_release>:
 80069dc:	f800283a 	ret

080069e0 <__fp_lock_all>:
 80069e0:	00820074 	movhi	r2,2049
 80069e4:	10923804 	addi	r2,r2,18656
 80069e8:	11000017 	ldw	r4,0(r2)
 80069ec:	01420034 	movhi	r5,2048
 80069f0:	29599c04 	addi	r5,r5,26224
 80069f4:	8006e241 	jmpi	8006e24 <_fwalk>

080069f8 <__fp_unlock_all>:
 80069f8:	00820074 	movhi	r2,2049
 80069fc:	10923804 	addi	r2,r2,18656
 8006a00:	11000017 	ldw	r4,0(r2)
 8006a04:	01420034 	movhi	r5,2048
 8006a08:	29599e04 	addi	r5,r5,26232
 8006a0c:	8006e241 	jmpi	8006e24 <_fwalk>

08006a10 <_malloc_trim_r>:
 8006a10:	defffb04 	addi	sp,sp,-20
 8006a14:	dcc00315 	stw	r19,12(sp)
 8006a18:	04c20074 	movhi	r19,2049
 8006a1c:	dc800215 	stw	r18,8(sp)
 8006a20:	dc400115 	stw	r17,4(sp)
 8006a24:	dc000015 	stw	r16,0(sp)
 8006a28:	dfc00415 	stw	ra,16(sp)
 8006a2c:	2821883a 	mov	r16,r5
 8006a30:	9ccca804 	addi	r19,r19,12960
 8006a34:	2025883a 	mov	r18,r4
 8006a38:	80103240 	call	8010324 <__malloc_lock>
 8006a3c:	98800217 	ldw	r2,8(r19)
 8006a40:	14400117 	ldw	r17,4(r2)
 8006a44:	00bfff04 	movi	r2,-4
 8006a48:	88a2703a 	and	r17,r17,r2
 8006a4c:	8c21c83a 	sub	r16,r17,r16
 8006a50:	8403fbc4 	addi	r16,r16,4079
 8006a54:	8020d33a 	srli	r16,r16,12
 8006a58:	0083ffc4 	movi	r2,4095
 8006a5c:	843fffc4 	addi	r16,r16,-1
 8006a60:	8020933a 	slli	r16,r16,12
 8006a64:	1400060e 	bge	r2,r16,8006a80 <_malloc_trim_r+0x70>
 8006a68:	9009883a 	mov	r4,r18
 8006a6c:	000b883a 	mov	r5,zero
 8006a70:	8008d180 	call	8008d18 <_sbrk_r>
 8006a74:	98c00217 	ldw	r3,8(r19)
 8006a78:	1c47883a 	add	r3,r3,r17
 8006a7c:	10c00a26 	beq	r2,r3,8006aa8 <_malloc_trim_r+0x98>
 8006a80:	9009883a 	mov	r4,r18
 8006a84:	80103440 	call	8010344 <__malloc_unlock>
 8006a88:	0005883a 	mov	r2,zero
 8006a8c:	dfc00417 	ldw	ra,16(sp)
 8006a90:	dcc00317 	ldw	r19,12(sp)
 8006a94:	dc800217 	ldw	r18,8(sp)
 8006a98:	dc400117 	ldw	r17,4(sp)
 8006a9c:	dc000017 	ldw	r16,0(sp)
 8006aa0:	dec00504 	addi	sp,sp,20
 8006aa4:	f800283a 	ret
 8006aa8:	9009883a 	mov	r4,r18
 8006aac:	040bc83a 	sub	r5,zero,r16
 8006ab0:	8008d180 	call	8008d18 <_sbrk_r>
 8006ab4:	00ffffc4 	movi	r3,-1
 8006ab8:	10c00d26 	beq	r2,r3,8006af0 <_malloc_trim_r+0xe0>
 8006abc:	00c20074 	movhi	r3,2049
 8006ac0:	18d92404 	addi	r3,r3,25744
 8006ac4:	18800017 	ldw	r2,0(r3)
 8006ac8:	99000217 	ldw	r4,8(r19)
 8006acc:	8c23c83a 	sub	r17,r17,r16
 8006ad0:	8c400054 	ori	r17,r17,1
 8006ad4:	1421c83a 	sub	r16,r2,r16
 8006ad8:	24400115 	stw	r17,4(r4)
 8006adc:	9009883a 	mov	r4,r18
 8006ae0:	1c000015 	stw	r16,0(r3)
 8006ae4:	80103440 	call	8010344 <__malloc_unlock>
 8006ae8:	00800044 	movi	r2,1
 8006aec:	003fe706 	br	8006a8c <__alt_data_end+0xfc006a8c>
 8006af0:	9009883a 	mov	r4,r18
 8006af4:	000b883a 	mov	r5,zero
 8006af8:	8008d180 	call	8008d18 <_sbrk_r>
 8006afc:	99000217 	ldw	r4,8(r19)
 8006b00:	014003c4 	movi	r5,15
 8006b04:	1107c83a 	sub	r3,r2,r4
 8006b08:	28ffdd0e 	bge	r5,r3,8006a80 <__alt_data_end+0xfc006a80>
 8006b0c:	01420074 	movhi	r5,2049
 8006b10:	29523a04 	addi	r5,r5,18664
 8006b14:	29400017 	ldw	r5,0(r5)
 8006b18:	18c00054 	ori	r3,r3,1
 8006b1c:	20c00115 	stw	r3,4(r4)
 8006b20:	00c20074 	movhi	r3,2049
 8006b24:	1145c83a 	sub	r2,r2,r5
 8006b28:	18d92404 	addi	r3,r3,25744
 8006b2c:	18800015 	stw	r2,0(r3)
 8006b30:	003fd306 	br	8006a80 <__alt_data_end+0xfc006a80>

08006b34 <_free_r>:
 8006b34:	28004c26 	beq	r5,zero,8006c68 <_free_r+0x134>
 8006b38:	defffd04 	addi	sp,sp,-12
 8006b3c:	dc400115 	stw	r17,4(sp)
 8006b40:	dc000015 	stw	r16,0(sp)
 8006b44:	2023883a 	mov	r17,r4
 8006b48:	2821883a 	mov	r16,r5
 8006b4c:	dfc00215 	stw	ra,8(sp)
 8006b50:	80103240 	call	8010324 <__malloc_lock>
 8006b54:	813fff17 	ldw	r4,-4(r16)
 8006b58:	00bfff84 	movi	r2,-2
 8006b5c:	02420074 	movhi	r9,2049
 8006b60:	81bffe04 	addi	r6,r16,-8
 8006b64:	2084703a 	and	r2,r4,r2
 8006b68:	4a4ca804 	addi	r9,r9,12960
 8006b6c:	308b883a 	add	r5,r6,r2
 8006b70:	2a000117 	ldw	r8,4(r5)
 8006b74:	49c00217 	ldw	r7,8(r9)
 8006b78:	00ffff04 	movi	r3,-4
 8006b7c:	40c6703a 	and	r3,r8,r3
 8006b80:	39405326 	beq	r7,r5,8006cd0 <_free_r+0x19c>
 8006b84:	28c00115 	stw	r3,4(r5)
 8006b88:	2100004c 	andi	r4,r4,1
 8006b8c:	2000091e 	bne	r4,zero,8006bb4 <_free_r+0x80>
 8006b90:	81fffe17 	ldw	r7,-8(r16)
 8006b94:	4a000204 	addi	r8,r9,8
 8006b98:	31cdc83a 	sub	r6,r6,r7
 8006b9c:	31000217 	ldw	r4,8(r6)
 8006ba0:	11c5883a 	add	r2,r2,r7
 8006ba4:	22006126 	beq	r4,r8,8006d2c <_free_r+0x1f8>
 8006ba8:	31c00317 	ldw	r7,12(r6)
 8006bac:	21c00315 	stw	r7,12(r4)
 8006bb0:	39000215 	stw	r4,8(r7)
 8006bb4:	28c9883a 	add	r4,r5,r3
 8006bb8:	21c00117 	ldw	r7,4(r4)
 8006bbc:	39c0004c 	andi	r7,r7,1
 8006bc0:	38000d1e 	bne	r7,zero,8006bf8 <_free_r+0xc4>
 8006bc4:	29000217 	ldw	r4,8(r5)
 8006bc8:	10c5883a 	add	r2,r2,r3
 8006bcc:	00c20074 	movhi	r3,2049
 8006bd0:	18ccaa04 	addi	r3,r3,12968
 8006bd4:	20c07526 	beq	r4,r3,8006dac <_free_r+0x278>
 8006bd8:	29c00317 	ldw	r7,12(r5)
 8006bdc:	11400054 	ori	r5,r2,1
 8006be0:	3087883a 	add	r3,r6,r2
 8006be4:	21c00315 	stw	r7,12(r4)
 8006be8:	39000215 	stw	r4,8(r7)
 8006bec:	31400115 	stw	r5,4(r6)
 8006bf0:	18800015 	stw	r2,0(r3)
 8006bf4:	00000406 	br	8006c08 <_free_r+0xd4>
 8006bf8:	10c00054 	ori	r3,r2,1
 8006bfc:	30c00115 	stw	r3,4(r6)
 8006c00:	3087883a 	add	r3,r6,r2
 8006c04:	18800015 	stw	r2,0(r3)
 8006c08:	00c07fc4 	movi	r3,511
 8006c0c:	18801736 	bltu	r3,r2,8006c6c <_free_r+0x138>
 8006c10:	1004d0fa 	srli	r2,r2,3
 8006c14:	01400044 	movi	r5,1
 8006c18:	49000117 	ldw	r4,4(r9)
 8006c1c:	1087883a 	add	r3,r2,r2
 8006c20:	18c7883a 	add	r3,r3,r3
 8006c24:	1005d0ba 	srai	r2,r2,2
 8006c28:	18c7883a 	add	r3,r3,r3
 8006c2c:	1a47883a 	add	r3,r3,r9
 8006c30:	19c00217 	ldw	r7,8(r3)
 8006c34:	2884983a 	sll	r2,r5,r2
 8006c38:	30c00315 	stw	r3,12(r6)
 8006c3c:	31c00215 	stw	r7,8(r6)
 8006c40:	1104b03a 	or	r2,r2,r4
 8006c44:	19800215 	stw	r6,8(r3)
 8006c48:	48800115 	stw	r2,4(r9)
 8006c4c:	39800315 	stw	r6,12(r7)
 8006c50:	8809883a 	mov	r4,r17
 8006c54:	dfc00217 	ldw	ra,8(sp)
 8006c58:	dc400117 	ldw	r17,4(sp)
 8006c5c:	dc000017 	ldw	r16,0(sp)
 8006c60:	dec00304 	addi	sp,sp,12
 8006c64:	80103441 	jmpi	8010344 <__malloc_unlock>
 8006c68:	f800283a 	ret
 8006c6c:	1006d27a 	srli	r3,r2,9
 8006c70:	01000104 	movi	r4,4
 8006c74:	20c04036 	bltu	r4,r3,8006d78 <_free_r+0x244>
 8006c78:	1006d1ba 	srli	r3,r2,6
 8006c7c:	19400e04 	addi	r5,r3,56
 8006c80:	2947883a 	add	r3,r5,r5
 8006c84:	18c7883a 	add	r3,r3,r3
 8006c88:	18c7883a 	add	r3,r3,r3
 8006c8c:	1a49883a 	add	r4,r3,r9
 8006c90:	20c00217 	ldw	r3,8(r4)
 8006c94:	01c20074 	movhi	r7,2049
 8006c98:	39cca804 	addi	r7,r7,12960
 8006c9c:	19003b26 	beq	r3,r4,8006d8c <_free_r+0x258>
 8006ca0:	01ffff04 	movi	r7,-4
 8006ca4:	19400117 	ldw	r5,4(r3)
 8006ca8:	29ca703a 	and	r5,r5,r7
 8006cac:	1140022e 	bgeu	r2,r5,8006cb8 <_free_r+0x184>
 8006cb0:	18c00217 	ldw	r3,8(r3)
 8006cb4:	20fffb1e 	bne	r4,r3,8006ca4 <__alt_data_end+0xfc006ca4>
 8006cb8:	18800317 	ldw	r2,12(r3)
 8006cbc:	30800315 	stw	r2,12(r6)
 8006cc0:	30c00215 	stw	r3,8(r6)
 8006cc4:	11800215 	stw	r6,8(r2)
 8006cc8:	19800315 	stw	r6,12(r3)
 8006ccc:	003fe006 	br	8006c50 <__alt_data_end+0xfc006c50>
 8006cd0:	2100004c 	andi	r4,r4,1
 8006cd4:	1885883a 	add	r2,r3,r2
 8006cd8:	2000071e 	bne	r4,zero,8006cf8 <_free_r+0x1c4>
 8006cdc:	817ffe17 	ldw	r5,-8(r16)
 8006ce0:	314dc83a 	sub	r6,r6,r5
 8006ce4:	30c00317 	ldw	r3,12(r6)
 8006ce8:	31000217 	ldw	r4,8(r6)
 8006cec:	1145883a 	add	r2,r2,r5
 8006cf0:	20c00315 	stw	r3,12(r4)
 8006cf4:	19000215 	stw	r4,8(r3)
 8006cf8:	10c00054 	ori	r3,r2,1
 8006cfc:	30c00115 	stw	r3,4(r6)
 8006d00:	00c20074 	movhi	r3,2049
 8006d04:	18d23b04 	addi	r3,r3,18668
 8006d08:	18c00017 	ldw	r3,0(r3)
 8006d0c:	49800215 	stw	r6,8(r9)
 8006d10:	10ffcf36 	bltu	r2,r3,8006c50 <__alt_data_end+0xfc006c50>
 8006d14:	00820074 	movhi	r2,2049
 8006d18:	10991c04 	addi	r2,r2,25712
 8006d1c:	11400017 	ldw	r5,0(r2)
 8006d20:	8809883a 	mov	r4,r17
 8006d24:	8006a100 	call	8006a10 <_malloc_trim_r>
 8006d28:	003fc906 	br	8006c50 <__alt_data_end+0xfc006c50>
 8006d2c:	28c9883a 	add	r4,r5,r3
 8006d30:	21000117 	ldw	r4,4(r4)
 8006d34:	2100004c 	andi	r4,r4,1
 8006d38:	20000a1e 	bne	r4,zero,8006d64 <_free_r+0x230>
 8006d3c:	29000317 	ldw	r4,12(r5)
 8006d40:	29400217 	ldw	r5,8(r5)
 8006d44:	10c5883a 	add	r2,r2,r3
 8006d48:	10c00054 	ori	r3,r2,1
 8006d4c:	29000315 	stw	r4,12(r5)
 8006d50:	21400215 	stw	r5,8(r4)
 8006d54:	30c00115 	stw	r3,4(r6)
 8006d58:	308d883a 	add	r6,r6,r2
 8006d5c:	30800015 	stw	r2,0(r6)
 8006d60:	003fbb06 	br	8006c50 <__alt_data_end+0xfc006c50>
 8006d64:	10c00054 	ori	r3,r2,1
 8006d68:	30c00115 	stw	r3,4(r6)
 8006d6c:	308d883a 	add	r6,r6,r2
 8006d70:	30800015 	stw	r2,0(r6)
 8006d74:	003fb606 	br	8006c50 <__alt_data_end+0xfc006c50>
 8006d78:	01000504 	movi	r4,20
 8006d7c:	20c01436 	bltu	r4,r3,8006dd0 <_free_r+0x29c>
 8006d80:	194016c4 	addi	r5,r3,91
 8006d84:	2947883a 	add	r3,r5,r5
 8006d88:	003fbe06 	br	8006c84 <__alt_data_end+0xfc006c84>
 8006d8c:	280bd0ba 	srai	r5,r5,2
 8006d90:	00800044 	movi	r2,1
 8006d94:	39000117 	ldw	r4,4(r7)
 8006d98:	114a983a 	sll	r5,r2,r5
 8006d9c:	1805883a 	mov	r2,r3
 8006da0:	2908b03a 	or	r4,r5,r4
 8006da4:	39000115 	stw	r4,4(r7)
 8006da8:	003fc406 	br	8006cbc <__alt_data_end+0xfc006cbc>
 8006dac:	49800515 	stw	r6,20(r9)
 8006db0:	49800415 	stw	r6,16(r9)
 8006db4:	10c00054 	ori	r3,r2,1
 8006db8:	31000315 	stw	r4,12(r6)
 8006dbc:	31000215 	stw	r4,8(r6)
 8006dc0:	30c00115 	stw	r3,4(r6)
 8006dc4:	308d883a 	add	r6,r6,r2
 8006dc8:	30800015 	stw	r2,0(r6)
 8006dcc:	003fa006 	br	8006c50 <__alt_data_end+0xfc006c50>
 8006dd0:	01001504 	movi	r4,84
 8006dd4:	20c00436 	bltu	r4,r3,8006de8 <_free_r+0x2b4>
 8006dd8:	1006d33a 	srli	r3,r2,12
 8006ddc:	19401b84 	addi	r5,r3,110
 8006de0:	2947883a 	add	r3,r5,r5
 8006de4:	003fa706 	br	8006c84 <__alt_data_end+0xfc006c84>
 8006de8:	01005504 	movi	r4,340
 8006dec:	20c00436 	bltu	r4,r3,8006e00 <_free_r+0x2cc>
 8006df0:	1006d3fa 	srli	r3,r2,15
 8006df4:	19401dc4 	addi	r5,r3,119
 8006df8:	2947883a 	add	r3,r5,r5
 8006dfc:	003fa106 	br	8006c84 <__alt_data_end+0xfc006c84>
 8006e00:	01015504 	movi	r4,1364
 8006e04:	20c00436 	bltu	r4,r3,8006e18 <_free_r+0x2e4>
 8006e08:	1006d4ba 	srli	r3,r2,18
 8006e0c:	19401f04 	addi	r5,r3,124
 8006e10:	2947883a 	add	r3,r5,r5
 8006e14:	003f9b06 	br	8006c84 <__alt_data_end+0xfc006c84>
 8006e18:	00c03f04 	movi	r3,252
 8006e1c:	01401f84 	movi	r5,126
 8006e20:	003f9806 	br	8006c84 <__alt_data_end+0xfc006c84>

08006e24 <_fwalk>:
 8006e24:	defff804 	addi	sp,sp,-32
 8006e28:	dd400515 	stw	r21,20(sp)
 8006e2c:	2540b804 	addi	r21,r4,736
 8006e30:	dd800615 	stw	r22,24(sp)
 8006e34:	dd000415 	stw	r20,16(sp)
 8006e38:	dfc00715 	stw	ra,28(sp)
 8006e3c:	dcc00315 	stw	r19,12(sp)
 8006e40:	dc800215 	stw	r18,8(sp)
 8006e44:	dc400115 	stw	r17,4(sp)
 8006e48:	dc000015 	stw	r16,0(sp)
 8006e4c:	2829883a 	mov	r20,r5
 8006e50:	002d883a 	mov	r22,zero
 8006e54:	80069d00 	call	80069d0 <__sfp_lock_acquire>
 8006e58:	a8001426 	beq	r21,zero,8006eac <_fwalk+0x88>
 8006e5c:	04ffffc4 	movi	r19,-1
 8006e60:	ac400117 	ldw	r17,4(r21)
 8006e64:	ac800217 	ldw	r18,8(r21)
 8006e68:	8c7fffc4 	addi	r17,r17,-1
 8006e6c:	88000d16 	blt	r17,zero,8006ea4 <_fwalk+0x80>
 8006e70:	94000304 	addi	r16,r18,12
 8006e74:	94800384 	addi	r18,r18,14
 8006e78:	80c0000f 	ldh	r3,0(r16)
 8006e7c:	8c7fffc4 	addi	r17,r17,-1
 8006e80:	813ffd04 	addi	r4,r16,-12
 8006e84:	18000426 	beq	r3,zero,8006e98 <_fwalk+0x74>
 8006e88:	90c0000f 	ldh	r3,0(r18)
 8006e8c:	1cc00226 	beq	r3,r19,8006e98 <_fwalk+0x74>
 8006e90:	a03ee83a 	callr	r20
 8006e94:	b0acb03a 	or	r22,r22,r2
 8006e98:	84001a04 	addi	r16,r16,104
 8006e9c:	94801a04 	addi	r18,r18,104
 8006ea0:	8cfff51e 	bne	r17,r19,8006e78 <__alt_data_end+0xfc006e78>
 8006ea4:	ad400017 	ldw	r21,0(r21)
 8006ea8:	a83fed1e 	bne	r21,zero,8006e60 <__alt_data_end+0xfc006e60>
 8006eac:	80069d40 	call	80069d4 <__sfp_lock_release>
 8006eb0:	b005883a 	mov	r2,r22
 8006eb4:	dfc00717 	ldw	ra,28(sp)
 8006eb8:	dd800617 	ldw	r22,24(sp)
 8006ebc:	dd400517 	ldw	r21,20(sp)
 8006ec0:	dd000417 	ldw	r20,16(sp)
 8006ec4:	dcc00317 	ldw	r19,12(sp)
 8006ec8:	dc800217 	ldw	r18,8(sp)
 8006ecc:	dc400117 	ldw	r17,4(sp)
 8006ed0:	dc000017 	ldw	r16,0(sp)
 8006ed4:	dec00804 	addi	sp,sp,32
 8006ed8:	f800283a 	ret

08006edc <_fwalk_reent>:
 8006edc:	defff804 	addi	sp,sp,-32
 8006ee0:	dd400515 	stw	r21,20(sp)
 8006ee4:	2540b804 	addi	r21,r4,736
 8006ee8:	dd800615 	stw	r22,24(sp)
 8006eec:	dd000415 	stw	r20,16(sp)
 8006ef0:	dcc00315 	stw	r19,12(sp)
 8006ef4:	dfc00715 	stw	ra,28(sp)
 8006ef8:	dc800215 	stw	r18,8(sp)
 8006efc:	dc400115 	stw	r17,4(sp)
 8006f00:	dc000015 	stw	r16,0(sp)
 8006f04:	2027883a 	mov	r19,r4
 8006f08:	2829883a 	mov	r20,r5
 8006f0c:	002d883a 	mov	r22,zero
 8006f10:	80069d00 	call	80069d0 <__sfp_lock_acquire>
 8006f14:	a8001326 	beq	r21,zero,8006f64 <_fwalk_reent+0x88>
 8006f18:	04bfffc4 	movi	r18,-1
 8006f1c:	ac400117 	ldw	r17,4(r21)
 8006f20:	ac000217 	ldw	r16,8(r21)
 8006f24:	8c7fffc4 	addi	r17,r17,-1
 8006f28:	88000c16 	blt	r17,zero,8006f5c <_fwalk_reent+0x80>
 8006f2c:	84000304 	addi	r16,r16,12
 8006f30:	80c0000f 	ldh	r3,0(r16)
 8006f34:	8c7fffc4 	addi	r17,r17,-1
 8006f38:	817ffd04 	addi	r5,r16,-12
 8006f3c:	18000526 	beq	r3,zero,8006f54 <_fwalk_reent+0x78>
 8006f40:	80c0008f 	ldh	r3,2(r16)
 8006f44:	9809883a 	mov	r4,r19
 8006f48:	1c800226 	beq	r3,r18,8006f54 <_fwalk_reent+0x78>
 8006f4c:	a03ee83a 	callr	r20
 8006f50:	b0acb03a 	or	r22,r22,r2
 8006f54:	84001a04 	addi	r16,r16,104
 8006f58:	8cbff51e 	bne	r17,r18,8006f30 <__alt_data_end+0xfc006f30>
 8006f5c:	ad400017 	ldw	r21,0(r21)
 8006f60:	a83fee1e 	bne	r21,zero,8006f1c <__alt_data_end+0xfc006f1c>
 8006f64:	80069d40 	call	80069d4 <__sfp_lock_release>
 8006f68:	b005883a 	mov	r2,r22
 8006f6c:	dfc00717 	ldw	ra,28(sp)
 8006f70:	dd800617 	ldw	r22,24(sp)
 8006f74:	dd400517 	ldw	r21,20(sp)
 8006f78:	dd000417 	ldw	r20,16(sp)
 8006f7c:	dcc00317 	ldw	r19,12(sp)
 8006f80:	dc800217 	ldw	r18,8(sp)
 8006f84:	dc400117 	ldw	r17,4(sp)
 8006f88:	dc000017 	ldw	r16,0(sp)
 8006f8c:	dec00804 	addi	sp,sp,32
 8006f90:	f800283a 	ret

08006f94 <_setlocale_r>:
 8006f94:	30001b26 	beq	r6,zero,8007004 <_setlocale_r+0x70>
 8006f98:	01420074 	movhi	r5,2049
 8006f9c:	defffe04 	addi	sp,sp,-8
 8006fa0:	294ac804 	addi	r5,r5,11040
 8006fa4:	3009883a 	mov	r4,r6
 8006fa8:	dc000015 	stw	r16,0(sp)
 8006fac:	dfc00115 	stw	ra,4(sp)
 8006fb0:	3021883a 	mov	r16,r6
 8006fb4:	8008ea80 	call	8008ea8 <strcmp>
 8006fb8:	1000061e 	bne	r2,zero,8006fd4 <_setlocale_r+0x40>
 8006fbc:	00820074 	movhi	r2,2049
 8006fc0:	108ac704 	addi	r2,r2,11036
 8006fc4:	dfc00117 	ldw	ra,4(sp)
 8006fc8:	dc000017 	ldw	r16,0(sp)
 8006fcc:	dec00204 	addi	sp,sp,8
 8006fd0:	f800283a 	ret
 8006fd4:	01420074 	movhi	r5,2049
 8006fd8:	294ac704 	addi	r5,r5,11036
 8006fdc:	8009883a 	mov	r4,r16
 8006fe0:	8008ea80 	call	8008ea8 <strcmp>
 8006fe4:	103ff526 	beq	r2,zero,8006fbc <__alt_data_end+0xfc006fbc>
 8006fe8:	01420074 	movhi	r5,2049
 8006fec:	294aaa04 	addi	r5,r5,10920
 8006ff0:	8009883a 	mov	r4,r16
 8006ff4:	8008ea80 	call	8008ea8 <strcmp>
 8006ff8:	103ff026 	beq	r2,zero,8006fbc <__alt_data_end+0xfc006fbc>
 8006ffc:	0005883a 	mov	r2,zero
 8007000:	003ff006 	br	8006fc4 <__alt_data_end+0xfc006fc4>
 8007004:	00820074 	movhi	r2,2049
 8007008:	108ac704 	addi	r2,r2,11036
 800700c:	f800283a 	ret

08007010 <__locale_charset>:
 8007010:	00820074 	movhi	r2,2049
 8007014:	108c9204 	addi	r2,r2,12872
 8007018:	f800283a 	ret

0800701c <__locale_mb_cur_max>:
 800701c:	00820074 	movhi	r2,2049
 8007020:	10923904 	addi	r2,r2,18660
 8007024:	10800017 	ldw	r2,0(r2)
 8007028:	f800283a 	ret

0800702c <__locale_msgcharset>:
 800702c:	00820074 	movhi	r2,2049
 8007030:	108c8a04 	addi	r2,r2,12840
 8007034:	f800283a 	ret

08007038 <__locale_cjk_lang>:
 8007038:	0005883a 	mov	r2,zero
 800703c:	f800283a 	ret

08007040 <_localeconv_r>:
 8007040:	00820074 	movhi	r2,2049
 8007044:	108c9a04 	addi	r2,r2,12904
 8007048:	f800283a 	ret

0800704c <setlocale>:
 800704c:	00c20074 	movhi	r3,2049
 8007050:	18d23804 	addi	r3,r3,18656
 8007054:	2005883a 	mov	r2,r4
 8007058:	19000017 	ldw	r4,0(r3)
 800705c:	280d883a 	mov	r6,r5
 8007060:	100b883a 	mov	r5,r2
 8007064:	8006f941 	jmpi	8006f94 <_setlocale_r>

08007068 <localeconv>:
 8007068:	00820074 	movhi	r2,2049
 800706c:	108c9a04 	addi	r2,r2,12904
 8007070:	f800283a 	ret

08007074 <__smakebuf_r>:
 8007074:	2880030b 	ldhu	r2,12(r5)
 8007078:	10c0008c 	andi	r3,r2,2
 800707c:	1800401e 	bne	r3,zero,8007180 <__smakebuf_r+0x10c>
 8007080:	deffec04 	addi	sp,sp,-80
 8007084:	dc000f15 	stw	r16,60(sp)
 8007088:	2821883a 	mov	r16,r5
 800708c:	2940038f 	ldh	r5,14(r5)
 8007090:	dc401015 	stw	r17,64(sp)
 8007094:	dfc01315 	stw	ra,76(sp)
 8007098:	dcc01215 	stw	r19,72(sp)
 800709c:	dc801115 	stw	r18,68(sp)
 80070a0:	2023883a 	mov	r17,r4
 80070a4:	28001b16 	blt	r5,zero,8007114 <__smakebuf_r+0xa0>
 80070a8:	d80d883a 	mov	r6,sp
 80070ac:	800ba740 	call	800ba74 <_fstat_r>
 80070b0:	10001716 	blt	r2,zero,8007110 <__smakebuf_r+0x9c>
 80070b4:	d8800117 	ldw	r2,4(sp)
 80070b8:	00e00014 	movui	r3,32768
 80070bc:	10bc000c 	andi	r2,r2,61440
 80070c0:	10c03726 	beq	r2,r3,80071a0 <__smakebuf_r+0x12c>
 80070c4:	80c0030b 	ldhu	r3,12(r16)
 80070c8:	18c20014 	ori	r3,r3,2048
 80070cc:	80c0030d 	sth	r3,12(r16)
 80070d0:	00c80004 	movi	r3,8192
 80070d4:	10c03c1e 	bne	r2,r3,80071c8 <__smakebuf_r+0x154>
 80070d8:	8140038f 	ldh	r5,14(r16)
 80070dc:	8809883a 	mov	r4,r17
 80070e0:	800bf700 	call	800bf70 <_isatty_r>
 80070e4:	10004e26 	beq	r2,zero,8007220 <__smakebuf_r+0x1ac>
 80070e8:	8080030b 	ldhu	r2,12(r16)
 80070ec:	04c00044 	movi	r19,1
 80070f0:	80c010c4 	addi	r3,r16,67
 80070f4:	14c4b03a 	or	r2,r2,r19
 80070f8:	8080030d 	sth	r2,12(r16)
 80070fc:	80c00015 	stw	r3,0(r16)
 8007100:	80c00415 	stw	r3,16(r16)
 8007104:	84c00515 	stw	r19,20(r16)
 8007108:	04810004 	movi	r18,1024
 800710c:	00000706 	br	800712c <__smakebuf_r+0xb8>
 8007110:	8080030b 	ldhu	r2,12(r16)
 8007114:	10c0200c 	andi	r3,r2,128
 8007118:	18001f1e 	bne	r3,zero,8007198 <__smakebuf_r+0x124>
 800711c:	04810004 	movi	r18,1024
 8007120:	10820014 	ori	r2,r2,2048
 8007124:	8080030d 	sth	r2,12(r16)
 8007128:	0027883a 	mov	r19,zero
 800712c:	8809883a 	mov	r4,r17
 8007130:	900b883a 	mov	r5,r18
 8007134:	800722c0 	call	800722c <_malloc_r>
 8007138:	10002e26 	beq	r2,zero,80071f4 <__smakebuf_r+0x180>
 800713c:	80c0030b 	ldhu	r3,12(r16)
 8007140:	01020034 	movhi	r4,2048
 8007144:	2119a004 	addi	r4,r4,26240
 8007148:	89000f15 	stw	r4,60(r17)
 800714c:	18c02014 	ori	r3,r3,128
 8007150:	80c0030d 	sth	r3,12(r16)
 8007154:	80800015 	stw	r2,0(r16)
 8007158:	80800415 	stw	r2,16(r16)
 800715c:	84800515 	stw	r18,20(r16)
 8007160:	98001c1e 	bne	r19,zero,80071d4 <__smakebuf_r+0x160>
 8007164:	dfc01317 	ldw	ra,76(sp)
 8007168:	dcc01217 	ldw	r19,72(sp)
 800716c:	dc801117 	ldw	r18,68(sp)
 8007170:	dc401017 	ldw	r17,64(sp)
 8007174:	dc000f17 	ldw	r16,60(sp)
 8007178:	dec01404 	addi	sp,sp,80
 800717c:	f800283a 	ret
 8007180:	288010c4 	addi	r2,r5,67
 8007184:	28800015 	stw	r2,0(r5)
 8007188:	28800415 	stw	r2,16(r5)
 800718c:	00800044 	movi	r2,1
 8007190:	28800515 	stw	r2,20(r5)
 8007194:	f800283a 	ret
 8007198:	04801004 	movi	r18,64
 800719c:	003fe006 	br	8007120 <__alt_data_end+0xfc007120>
 80071a0:	81000a17 	ldw	r4,40(r16)
 80071a4:	00c20074 	movhi	r3,2049
 80071a8:	18e39104 	addi	r3,r3,-29116
 80071ac:	20ffc51e 	bne	r4,r3,80070c4 <__alt_data_end+0xfc0070c4>
 80071b0:	80c0030b 	ldhu	r3,12(r16)
 80071b4:	01010004 	movi	r4,1024
 80071b8:	81001315 	stw	r4,76(r16)
 80071bc:	1906b03a 	or	r3,r3,r4
 80071c0:	80c0030d 	sth	r3,12(r16)
 80071c4:	003fc206 	br	80070d0 <__alt_data_end+0xfc0070d0>
 80071c8:	0027883a 	mov	r19,zero
 80071cc:	04810004 	movi	r18,1024
 80071d0:	003fd606 	br	800712c <__alt_data_end+0xfc00712c>
 80071d4:	8140038f 	ldh	r5,14(r16)
 80071d8:	8809883a 	mov	r4,r17
 80071dc:	800bf700 	call	800bf70 <_isatty_r>
 80071e0:	103fe026 	beq	r2,zero,8007164 <__alt_data_end+0xfc007164>
 80071e4:	8080030b 	ldhu	r2,12(r16)
 80071e8:	10800054 	ori	r2,r2,1
 80071ec:	8080030d 	sth	r2,12(r16)
 80071f0:	003fdc06 	br	8007164 <__alt_data_end+0xfc007164>
 80071f4:	8080030b 	ldhu	r2,12(r16)
 80071f8:	10c0800c 	andi	r3,r2,512
 80071fc:	183fd91e 	bne	r3,zero,8007164 <__alt_data_end+0xfc007164>
 8007200:	10800094 	ori	r2,r2,2
 8007204:	80c010c4 	addi	r3,r16,67
 8007208:	8080030d 	sth	r2,12(r16)
 800720c:	00800044 	movi	r2,1
 8007210:	80c00015 	stw	r3,0(r16)
 8007214:	80c00415 	stw	r3,16(r16)
 8007218:	80800515 	stw	r2,20(r16)
 800721c:	003fd106 	br	8007164 <__alt_data_end+0xfc007164>
 8007220:	04c00044 	movi	r19,1
 8007224:	04810004 	movi	r18,1024
 8007228:	003fc006 	br	800712c <__alt_data_end+0xfc00712c>

0800722c <_malloc_r>:
 800722c:	defff504 	addi	sp,sp,-44
 8007230:	dc800315 	stw	r18,12(sp)
 8007234:	dfc00a15 	stw	ra,40(sp)
 8007238:	df000915 	stw	fp,36(sp)
 800723c:	ddc00815 	stw	r23,32(sp)
 8007240:	dd800715 	stw	r22,28(sp)
 8007244:	dd400615 	stw	r21,24(sp)
 8007248:	dd000515 	stw	r20,20(sp)
 800724c:	dcc00415 	stw	r19,16(sp)
 8007250:	dc400215 	stw	r17,8(sp)
 8007254:	dc000115 	stw	r16,4(sp)
 8007258:	288002c4 	addi	r2,r5,11
 800725c:	00c00584 	movi	r3,22
 8007260:	2025883a 	mov	r18,r4
 8007264:	18802a2e 	bgeu	r3,r2,8007310 <_malloc_r+0xe4>
 8007268:	047ffe04 	movi	r17,-8
 800726c:	1462703a 	and	r17,r2,r17
 8007270:	88009e16 	blt	r17,zero,80074ec <_malloc_r+0x2c0>
 8007274:	89409d36 	bltu	r17,r5,80074ec <_malloc_r+0x2c0>
 8007278:	80103240 	call	8010324 <__malloc_lock>
 800727c:	00807dc4 	movi	r2,503
 8007280:	14402736 	bltu	r2,r17,8007320 <_malloc_r+0xf4>
 8007284:	8806d0fa 	srli	r3,r17,3
 8007288:	04c20074 	movhi	r19,2049
 800728c:	9ccca804 	addi	r19,r19,12960
 8007290:	18c5883a 	add	r2,r3,r3
 8007294:	1085883a 	add	r2,r2,r2
 8007298:	1085883a 	add	r2,r2,r2
 800729c:	9885883a 	add	r2,r19,r2
 80072a0:	14000317 	ldw	r16,12(r2)
 80072a4:	80814a26 	beq	r16,r2,80077d0 <_malloc_r+0x5a4>
 80072a8:	80c00117 	ldw	r3,4(r16)
 80072ac:	81000317 	ldw	r4,12(r16)
 80072b0:	00bfff04 	movi	r2,-4
 80072b4:	1884703a 	and	r2,r3,r2
 80072b8:	81400217 	ldw	r5,8(r16)
 80072bc:	8085883a 	add	r2,r16,r2
 80072c0:	10c00117 	ldw	r3,4(r2)
 80072c4:	29000315 	stw	r4,12(r5)
 80072c8:	21400215 	stw	r5,8(r4)
 80072cc:	18c00054 	ori	r3,r3,1
 80072d0:	10c00115 	stw	r3,4(r2)
 80072d4:	9009883a 	mov	r4,r18
 80072d8:	80103440 	call	8010344 <__malloc_unlock>
 80072dc:	80800204 	addi	r2,r16,8
 80072e0:	dfc00a17 	ldw	ra,40(sp)
 80072e4:	df000917 	ldw	fp,36(sp)
 80072e8:	ddc00817 	ldw	r23,32(sp)
 80072ec:	dd800717 	ldw	r22,28(sp)
 80072f0:	dd400617 	ldw	r21,24(sp)
 80072f4:	dd000517 	ldw	r20,20(sp)
 80072f8:	dcc00417 	ldw	r19,16(sp)
 80072fc:	dc800317 	ldw	r18,12(sp)
 8007300:	dc400217 	ldw	r17,8(sp)
 8007304:	dc000117 	ldw	r16,4(sp)
 8007308:	dec00b04 	addi	sp,sp,44
 800730c:	f800283a 	ret
 8007310:	04400404 	movi	r17,16
 8007314:	89407536 	bltu	r17,r5,80074ec <_malloc_r+0x2c0>
 8007318:	80103240 	call	8010324 <__malloc_lock>
 800731c:	003fd906 	br	8007284 <__alt_data_end+0xfc007284>
 8007320:	8806d27a 	srli	r3,r17,9
 8007324:	18007526 	beq	r3,zero,80074fc <_malloc_r+0x2d0>
 8007328:	00800104 	movi	r2,4
 800732c:	10c0ef36 	bltu	r2,r3,80076ec <_malloc_r+0x4c0>
 8007330:	8806d1ba 	srli	r3,r17,6
 8007334:	19c00e04 	addi	r7,r3,56
 8007338:	39cb883a 	add	r5,r7,r7
 800733c:	04c20074 	movhi	r19,2049
 8007340:	294b883a 	add	r5,r5,r5
 8007344:	9ccca804 	addi	r19,r19,12960
 8007348:	294b883a 	add	r5,r5,r5
 800734c:	994b883a 	add	r5,r19,r5
 8007350:	2c000317 	ldw	r16,12(r5)
 8007354:	2c000e26 	beq	r5,r16,8007390 <_malloc_r+0x164>
 8007358:	80800117 	ldw	r2,4(r16)
 800735c:	01bfff04 	movi	r6,-4
 8007360:	010003c4 	movi	r4,15
 8007364:	1184703a 	and	r2,r2,r6
 8007368:	1447c83a 	sub	r3,r2,r17
 800736c:	20c00716 	blt	r4,r3,800738c <_malloc_r+0x160>
 8007370:	1800650e 	bge	r3,zero,8007508 <_malloc_r+0x2dc>
 8007374:	84000317 	ldw	r16,12(r16)
 8007378:	2c000526 	beq	r5,r16,8007390 <_malloc_r+0x164>
 800737c:	80800117 	ldw	r2,4(r16)
 8007380:	1184703a 	and	r2,r2,r6
 8007384:	1447c83a 	sub	r3,r2,r17
 8007388:	20fff90e 	bge	r4,r3,8007370 <__alt_data_end+0xfc007370>
 800738c:	39ffffc4 	addi	r7,r7,-1
 8007390:	38c00044 	addi	r3,r7,1
 8007394:	01820074 	movhi	r6,2049
 8007398:	9c000417 	ldw	r16,16(r19)
 800739c:	318ca804 	addi	r6,r6,12960
 80073a0:	32400204 	addi	r9,r6,8
 80073a4:	82410326 	beq	r16,r9,80077b4 <_malloc_r+0x588>
 80073a8:	81000117 	ldw	r4,4(r16)
 80073ac:	00bfff04 	movi	r2,-4
 80073b0:	208e703a 	and	r7,r4,r2
 80073b4:	3c45c83a 	sub	r2,r7,r17
 80073b8:	010003c4 	movi	r4,15
 80073bc:	2080ee16 	blt	r4,r2,8007778 <_malloc_r+0x54c>
 80073c0:	32400515 	stw	r9,20(r6)
 80073c4:	32400415 	stw	r9,16(r6)
 80073c8:	1000510e 	bge	r2,zero,8007510 <_malloc_r+0x2e4>
 80073cc:	00807fc4 	movi	r2,511
 80073d0:	11c0ce36 	bltu	r2,r7,800770c <_malloc_r+0x4e0>
 80073d4:	3808d0fa 	srli	r4,r7,3
 80073d8:	01c00044 	movi	r7,1
 80073dc:	30800117 	ldw	r2,4(r6)
 80073e0:	210b883a 	add	r5,r4,r4
 80073e4:	294b883a 	add	r5,r5,r5
 80073e8:	2009d0ba 	srai	r4,r4,2
 80073ec:	294b883a 	add	r5,r5,r5
 80073f0:	298b883a 	add	r5,r5,r6
 80073f4:	2a000217 	ldw	r8,8(r5)
 80073f8:	3908983a 	sll	r4,r7,r4
 80073fc:	81400315 	stw	r5,12(r16)
 8007400:	82000215 	stw	r8,8(r16)
 8007404:	2088b03a 	or	r4,r4,r2
 8007408:	2c000215 	stw	r16,8(r5)
 800740c:	31000115 	stw	r4,4(r6)
 8007410:	44000315 	stw	r16,12(r8)
 8007414:	1805d0ba 	srai	r2,r3,2
 8007418:	01400044 	movi	r5,1
 800741c:	288a983a 	sll	r5,r5,r2
 8007420:	21404336 	bltu	r4,r5,8007530 <_malloc_r+0x304>
 8007424:	2144703a 	and	r2,r4,r5
 8007428:	10000a1e 	bne	r2,zero,8007454 <_malloc_r+0x228>
 800742c:	00bfff04 	movi	r2,-4
 8007430:	294b883a 	add	r5,r5,r5
 8007434:	1886703a 	and	r3,r3,r2
 8007438:	2144703a 	and	r2,r4,r5
 800743c:	18c00104 	addi	r3,r3,4
 8007440:	1000041e 	bne	r2,zero,8007454 <_malloc_r+0x228>
 8007444:	294b883a 	add	r5,r5,r5
 8007448:	2144703a 	and	r2,r4,r5
 800744c:	18c00104 	addi	r3,r3,4
 8007450:	103ffc26 	beq	r2,zero,8007444 <__alt_data_end+0xfc007444>
 8007454:	023fff04 	movi	r8,-4
 8007458:	01c003c4 	movi	r7,15
 800745c:	18c5883a 	add	r2,r3,r3
 8007460:	1085883a 	add	r2,r2,r2
 8007464:	1085883a 	add	r2,r2,r2
 8007468:	9895883a 	add	r10,r19,r2
 800746c:	52c00304 	addi	r11,r10,12
 8007470:	1819883a 	mov	r12,r3
 8007474:	5c000017 	ldw	r16,0(r11)
 8007478:	59bffd04 	addi	r6,r11,-12
 800747c:	8180041e 	bne	r16,r6,8007490 <_malloc_r+0x264>
 8007480:	0000ce06 	br	80077bc <_malloc_r+0x590>
 8007484:	2000d70e 	bge	r4,zero,80077e4 <_malloc_r+0x5b8>
 8007488:	84000317 	ldw	r16,12(r16)
 800748c:	8180cb26 	beq	r16,r6,80077bc <_malloc_r+0x590>
 8007490:	80800117 	ldw	r2,4(r16)
 8007494:	1204703a 	and	r2,r2,r8
 8007498:	1449c83a 	sub	r4,r2,r17
 800749c:	393ff90e 	bge	r7,r4,8007484 <__alt_data_end+0xfc007484>
 80074a0:	80800317 	ldw	r2,12(r16)
 80074a4:	80c00217 	ldw	r3,8(r16)
 80074a8:	89400054 	ori	r5,r17,1
 80074ac:	81400115 	stw	r5,4(r16)
 80074b0:	18800315 	stw	r2,12(r3)
 80074b4:	10c00215 	stw	r3,8(r2)
 80074b8:	8463883a 	add	r17,r16,r17
 80074bc:	9c400515 	stw	r17,20(r19)
 80074c0:	9c400415 	stw	r17,16(r19)
 80074c4:	20800054 	ori	r2,r4,1
 80074c8:	88800115 	stw	r2,4(r17)
 80074cc:	8a400315 	stw	r9,12(r17)
 80074d0:	8a400215 	stw	r9,8(r17)
 80074d4:	8923883a 	add	r17,r17,r4
 80074d8:	89000015 	stw	r4,0(r17)
 80074dc:	9009883a 	mov	r4,r18
 80074e0:	80103440 	call	8010344 <__malloc_unlock>
 80074e4:	80800204 	addi	r2,r16,8
 80074e8:	003f7d06 	br	80072e0 <__alt_data_end+0xfc0072e0>
 80074ec:	00800304 	movi	r2,12
 80074f0:	90800015 	stw	r2,0(r18)
 80074f4:	0005883a 	mov	r2,zero
 80074f8:	003f7906 	br	80072e0 <__alt_data_end+0xfc0072e0>
 80074fc:	01401f84 	movi	r5,126
 8007500:	01c00fc4 	movi	r7,63
 8007504:	003f8d06 	br	800733c <__alt_data_end+0xfc00733c>
 8007508:	81000317 	ldw	r4,12(r16)
 800750c:	003f6a06 	br	80072b8 <__alt_data_end+0xfc0072b8>
 8007510:	81c5883a 	add	r2,r16,r7
 8007514:	10c00117 	ldw	r3,4(r2)
 8007518:	9009883a 	mov	r4,r18
 800751c:	18c00054 	ori	r3,r3,1
 8007520:	10c00115 	stw	r3,4(r2)
 8007524:	80103440 	call	8010344 <__malloc_unlock>
 8007528:	80800204 	addi	r2,r16,8
 800752c:	003f6c06 	br	80072e0 <__alt_data_end+0xfc0072e0>
 8007530:	9c000217 	ldw	r16,8(r19)
 8007534:	00bfff04 	movi	r2,-4
 8007538:	85800117 	ldw	r22,4(r16)
 800753c:	b0ac703a 	and	r22,r22,r2
 8007540:	b4400336 	bltu	r22,r17,8007550 <_malloc_r+0x324>
 8007544:	b445c83a 	sub	r2,r22,r17
 8007548:	00c003c4 	movi	r3,15
 800754c:	18805d16 	blt	r3,r2,80076c4 <_malloc_r+0x498>
 8007550:	05c20074 	movhi	r23,2049
 8007554:	00820074 	movhi	r2,2049
 8007558:	bdd23a04 	addi	r23,r23,18664
 800755c:	10991c04 	addi	r2,r2,25712
 8007560:	15400017 	ldw	r21,0(r2)
 8007564:	b9000017 	ldw	r4,0(r23)
 8007568:	00ffffc4 	movi	r3,-1
 800756c:	858d883a 	add	r6,r16,r22
 8007570:	8d6b883a 	add	r21,r17,r21
 8007574:	20c0e426 	beq	r4,r3,8007908 <_malloc_r+0x6dc>
 8007578:	ad4403c4 	addi	r21,r21,4111
 800757c:	00fc0004 	movi	r3,-4096
 8007580:	a8ea703a 	and	r21,r21,r3
 8007584:	9009883a 	mov	r4,r18
 8007588:	a80b883a 	mov	r5,r21
 800758c:	d9800015 	stw	r6,0(sp)
 8007590:	8008d180 	call	8008d18 <_sbrk_r>
 8007594:	00ffffc4 	movi	r3,-1
 8007598:	1029883a 	mov	r20,r2
 800759c:	d9800017 	ldw	r6,0(sp)
 80075a0:	10c0a426 	beq	r2,r3,8007834 <_malloc_r+0x608>
 80075a4:	1180a236 	bltu	r2,r6,8007830 <_malloc_r+0x604>
 80075a8:	07020074 	movhi	fp,2049
 80075ac:	e7192404 	addi	fp,fp,25744
 80075b0:	e0c00017 	ldw	r3,0(fp)
 80075b4:	a8c7883a 	add	r3,r21,r3
 80075b8:	e0c00015 	stw	r3,0(fp)
 80075bc:	3500da26 	beq	r6,r20,8007928 <_malloc_r+0x6fc>
 80075c0:	b9000017 	ldw	r4,0(r23)
 80075c4:	00bfffc4 	movi	r2,-1
 80075c8:	2080e426 	beq	r4,r2,800795c <_malloc_r+0x730>
 80075cc:	a185c83a 	sub	r2,r20,r6
 80075d0:	1885883a 	add	r2,r3,r2
 80075d4:	e0800015 	stw	r2,0(fp)
 80075d8:	a0c001cc 	andi	r3,r20,7
 80075dc:	1800b526 	beq	r3,zero,80078b4 <_malloc_r+0x688>
 80075e0:	a0e9c83a 	sub	r20,r20,r3
 80075e4:	00840204 	movi	r2,4104
 80075e8:	a5000204 	addi	r20,r20,8
 80075ec:	10c7c83a 	sub	r3,r2,r3
 80075f0:	a545883a 	add	r2,r20,r21
 80075f4:	1083ffcc 	andi	r2,r2,4095
 80075f8:	18abc83a 	sub	r21,r3,r2
 80075fc:	9009883a 	mov	r4,r18
 8007600:	a80b883a 	mov	r5,r21
 8007604:	8008d180 	call	8008d18 <_sbrk_r>
 8007608:	00ffffc4 	movi	r3,-1
 800760c:	10c0d026 	beq	r2,r3,8007950 <_malloc_r+0x724>
 8007610:	1507c83a 	sub	r3,r2,r20
 8007614:	a8c7883a 	add	r3,r21,r3
 8007618:	18c00054 	ori	r3,r3,1
 800761c:	e0800017 	ldw	r2,0(fp)
 8007620:	9d000215 	stw	r20,8(r19)
 8007624:	a0c00115 	stw	r3,4(r20)
 8007628:	a887883a 	add	r3,r21,r2
 800762c:	e0c00015 	stw	r3,0(fp)
 8007630:	84c00e26 	beq	r16,r19,800766c <_malloc_r+0x440>
 8007634:	018003c4 	movi	r6,15
 8007638:	3580a02e 	bgeu	r6,r22,80078bc <_malloc_r+0x690>
 800763c:	81400117 	ldw	r5,4(r16)
 8007640:	013ffe04 	movi	r4,-8
 8007644:	b0bffd04 	addi	r2,r22,-12
 8007648:	1104703a 	and	r2,r2,r4
 800764c:	2900004c 	andi	r4,r5,1
 8007650:	1108b03a 	or	r4,r2,r4
 8007654:	81000115 	stw	r4,4(r16)
 8007658:	01400144 	movi	r5,5
 800765c:	8089883a 	add	r4,r16,r2
 8007660:	21400115 	stw	r5,4(r4)
 8007664:	21400215 	stw	r5,8(r4)
 8007668:	3080c036 	bltu	r6,r2,800796c <_malloc_r+0x740>
 800766c:	00820074 	movhi	r2,2049
 8007670:	10991b04 	addi	r2,r2,25708
 8007674:	11000017 	ldw	r4,0(r2)
 8007678:	20c0012e 	bgeu	r4,r3,8007680 <_malloc_r+0x454>
 800767c:	10c00015 	stw	r3,0(r2)
 8007680:	00820074 	movhi	r2,2049
 8007684:	10991a04 	addi	r2,r2,25704
 8007688:	11000017 	ldw	r4,0(r2)
 800768c:	9c000217 	ldw	r16,8(r19)
 8007690:	20c0012e 	bgeu	r4,r3,8007698 <_malloc_r+0x46c>
 8007694:	10c00015 	stw	r3,0(r2)
 8007698:	80c00117 	ldw	r3,4(r16)
 800769c:	00bfff04 	movi	r2,-4
 80076a0:	1886703a 	and	r3,r3,r2
 80076a4:	1c45c83a 	sub	r2,r3,r17
 80076a8:	1c400236 	bltu	r3,r17,80076b4 <_malloc_r+0x488>
 80076ac:	00c003c4 	movi	r3,15
 80076b0:	18800416 	blt	r3,r2,80076c4 <_malloc_r+0x498>
 80076b4:	9009883a 	mov	r4,r18
 80076b8:	80103440 	call	8010344 <__malloc_unlock>
 80076bc:	0005883a 	mov	r2,zero
 80076c0:	003f0706 	br	80072e0 <__alt_data_end+0xfc0072e0>
 80076c4:	88c00054 	ori	r3,r17,1
 80076c8:	80c00115 	stw	r3,4(r16)
 80076cc:	8463883a 	add	r17,r16,r17
 80076d0:	10800054 	ori	r2,r2,1
 80076d4:	9c400215 	stw	r17,8(r19)
 80076d8:	88800115 	stw	r2,4(r17)
 80076dc:	9009883a 	mov	r4,r18
 80076e0:	80103440 	call	8010344 <__malloc_unlock>
 80076e4:	80800204 	addi	r2,r16,8
 80076e8:	003efd06 	br	80072e0 <__alt_data_end+0xfc0072e0>
 80076ec:	00800504 	movi	r2,20
 80076f0:	10c0482e 	bgeu	r2,r3,8007814 <_malloc_r+0x5e8>
 80076f4:	00801504 	movi	r2,84
 80076f8:	10c06836 	bltu	r2,r3,800789c <_malloc_r+0x670>
 80076fc:	8806d33a 	srli	r3,r17,12
 8007700:	19c01b84 	addi	r7,r3,110
 8007704:	39cb883a 	add	r5,r7,r7
 8007708:	003f0c06 	br	800733c <__alt_data_end+0xfc00733c>
 800770c:	3804d27a 	srli	r2,r7,9
 8007710:	01000104 	movi	r4,4
 8007714:	2080422e 	bgeu	r4,r2,8007820 <_malloc_r+0x5f4>
 8007718:	01000504 	movi	r4,20
 800771c:	20807c36 	bltu	r4,r2,8007910 <_malloc_r+0x6e4>
 8007720:	110016c4 	addi	r4,r2,91
 8007724:	210b883a 	add	r5,r4,r4
 8007728:	294b883a 	add	r5,r5,r5
 800772c:	294b883a 	add	r5,r5,r5
 8007730:	994b883a 	add	r5,r19,r5
 8007734:	28800217 	ldw	r2,8(r5)
 8007738:	02020074 	movhi	r8,2049
 800773c:	420ca804 	addi	r8,r8,12960
 8007740:	11406326 	beq	r2,r5,80078d0 <_malloc_r+0x6a4>
 8007744:	01bfff04 	movi	r6,-4
 8007748:	11000117 	ldw	r4,4(r2)
 800774c:	2188703a 	and	r4,r4,r6
 8007750:	3900022e 	bgeu	r7,r4,800775c <_malloc_r+0x530>
 8007754:	10800217 	ldw	r2,8(r2)
 8007758:	28bffb1e 	bne	r5,r2,8007748 <__alt_data_end+0xfc007748>
 800775c:	11800317 	ldw	r6,12(r2)
 8007760:	99000117 	ldw	r4,4(r19)
 8007764:	81800315 	stw	r6,12(r16)
 8007768:	80800215 	stw	r2,8(r16)
 800776c:	34000215 	stw	r16,8(r6)
 8007770:	14000315 	stw	r16,12(r2)
 8007774:	003f2706 	br	8007414 <__alt_data_end+0xfc007414>
 8007778:	88c00054 	ori	r3,r17,1
 800777c:	80c00115 	stw	r3,4(r16)
 8007780:	8463883a 	add	r17,r16,r17
 8007784:	34400515 	stw	r17,20(r6)
 8007788:	34400415 	stw	r17,16(r6)
 800778c:	10c00054 	ori	r3,r2,1
 8007790:	8a400315 	stw	r9,12(r17)
 8007794:	8a400215 	stw	r9,8(r17)
 8007798:	88c00115 	stw	r3,4(r17)
 800779c:	88a3883a 	add	r17,r17,r2
 80077a0:	88800015 	stw	r2,0(r17)
 80077a4:	9009883a 	mov	r4,r18
 80077a8:	80103440 	call	8010344 <__malloc_unlock>
 80077ac:	80800204 	addi	r2,r16,8
 80077b0:	003ecb06 	br	80072e0 <__alt_data_end+0xfc0072e0>
 80077b4:	31000117 	ldw	r4,4(r6)
 80077b8:	003f1606 	br	8007414 <__alt_data_end+0xfc007414>
 80077bc:	63000044 	addi	r12,r12,1
 80077c0:	608000cc 	andi	r2,r12,3
 80077c4:	5ac00204 	addi	r11,r11,8
 80077c8:	103f2a1e 	bne	r2,zero,8007474 <__alt_data_end+0xfc007474>
 80077cc:	00002106 	br	8007854 <_malloc_r+0x628>
 80077d0:	80800204 	addi	r2,r16,8
 80077d4:	84000517 	ldw	r16,20(r16)
 80077d8:	143eb31e 	bne	r2,r16,80072a8 <__alt_data_end+0xfc0072a8>
 80077dc:	18c00084 	addi	r3,r3,2
 80077e0:	003eec06 	br	8007394 <__alt_data_end+0xfc007394>
 80077e4:	8085883a 	add	r2,r16,r2
 80077e8:	10c00117 	ldw	r3,4(r2)
 80077ec:	81000317 	ldw	r4,12(r16)
 80077f0:	81400217 	ldw	r5,8(r16)
 80077f4:	18c00054 	ori	r3,r3,1
 80077f8:	10c00115 	stw	r3,4(r2)
 80077fc:	29000315 	stw	r4,12(r5)
 8007800:	21400215 	stw	r5,8(r4)
 8007804:	9009883a 	mov	r4,r18
 8007808:	80103440 	call	8010344 <__malloc_unlock>
 800780c:	80800204 	addi	r2,r16,8
 8007810:	003eb306 	br	80072e0 <__alt_data_end+0xfc0072e0>
 8007814:	19c016c4 	addi	r7,r3,91
 8007818:	39cb883a 	add	r5,r7,r7
 800781c:	003ec706 	br	800733c <__alt_data_end+0xfc00733c>
 8007820:	3804d1ba 	srli	r2,r7,6
 8007824:	11000e04 	addi	r4,r2,56
 8007828:	210b883a 	add	r5,r4,r4
 800782c:	003fbe06 	br	8007728 <__alt_data_end+0xfc007728>
 8007830:	84ff5d26 	beq	r16,r19,80075a8 <__alt_data_end+0xfc0075a8>
 8007834:	9c000217 	ldw	r16,8(r19)
 8007838:	00bfff04 	movi	r2,-4
 800783c:	80c00117 	ldw	r3,4(r16)
 8007840:	1886703a 	and	r3,r3,r2
 8007844:	003f9706 	br	80076a4 <__alt_data_end+0xfc0076a4>
 8007848:	52800017 	ldw	r10,0(r10)
 800784c:	18ffffc4 	addi	r3,r3,-1
 8007850:	50805c1e 	bne	r10,r2,80079c4 <_malloc_r+0x798>
 8007854:	190000cc 	andi	r4,r3,3
 8007858:	50bffe04 	addi	r2,r10,-8
 800785c:	203ffa1e 	bne	r4,zero,8007848 <__alt_data_end+0xfc007848>
 8007860:	98800117 	ldw	r2,4(r19)
 8007864:	0146303a 	nor	r3,zero,r5
 8007868:	1884703a 	and	r2,r3,r2
 800786c:	98800115 	stw	r2,4(r19)
 8007870:	294b883a 	add	r5,r5,r5
 8007874:	117f2e36 	bltu	r2,r5,8007530 <__alt_data_end+0xfc007530>
 8007878:	283f2d26 	beq	r5,zero,8007530 <__alt_data_end+0xfc007530>
 800787c:	1146703a 	and	r3,r2,r5
 8007880:	1800521e 	bne	r3,zero,80079cc <_malloc_r+0x7a0>
 8007884:	6007883a 	mov	r3,r12
 8007888:	294b883a 	add	r5,r5,r5
 800788c:	1148703a 	and	r4,r2,r5
 8007890:	18c00104 	addi	r3,r3,4
 8007894:	203ffc26 	beq	r4,zero,8007888 <__alt_data_end+0xfc007888>
 8007898:	003ef006 	br	800745c <__alt_data_end+0xfc00745c>
 800789c:	00805504 	movi	r2,340
 80078a0:	10c01336 	bltu	r2,r3,80078f0 <_malloc_r+0x6c4>
 80078a4:	8806d3fa 	srli	r3,r17,15
 80078a8:	19c01dc4 	addi	r7,r3,119
 80078ac:	39cb883a 	add	r5,r7,r7
 80078b0:	003ea206 	br	800733c <__alt_data_end+0xfc00733c>
 80078b4:	00c40004 	movi	r3,4096
 80078b8:	003f4d06 	br	80075f0 <__alt_data_end+0xfc0075f0>
 80078bc:	00800044 	movi	r2,1
 80078c0:	a0800115 	stw	r2,4(r20)
 80078c4:	a021883a 	mov	r16,r20
 80078c8:	0007883a 	mov	r3,zero
 80078cc:	003f7506 	br	80076a4 <__alt_data_end+0xfc0076a4>
 80078d0:	200bd0ba 	srai	r5,r4,2
 80078d4:	01800044 	movi	r6,1
 80078d8:	41000117 	ldw	r4,4(r8)
 80078dc:	314a983a 	sll	r5,r6,r5
 80078e0:	100d883a 	mov	r6,r2
 80078e4:	2908b03a 	or	r4,r5,r4
 80078e8:	41000115 	stw	r4,4(r8)
 80078ec:	003f9d06 	br	8007764 <__alt_data_end+0xfc007764>
 80078f0:	00815504 	movi	r2,1364
 80078f4:	10c01336 	bltu	r2,r3,8007944 <_malloc_r+0x718>
 80078f8:	8806d4ba 	srli	r3,r17,18
 80078fc:	19c01f04 	addi	r7,r3,124
 8007900:	39cb883a 	add	r5,r7,r7
 8007904:	003e8d06 	br	800733c <__alt_data_end+0xfc00733c>
 8007908:	ad400404 	addi	r21,r21,16
 800790c:	003f1d06 	br	8007584 <__alt_data_end+0xfc007584>
 8007910:	01001504 	movi	r4,84
 8007914:	20801c36 	bltu	r4,r2,8007988 <_malloc_r+0x75c>
 8007918:	3804d33a 	srli	r2,r7,12
 800791c:	11001b84 	addi	r4,r2,110
 8007920:	210b883a 	add	r5,r4,r4
 8007924:	003f8006 	br	8007728 <__alt_data_end+0xfc007728>
 8007928:	3083ffcc 	andi	r2,r6,4095
 800792c:	103f241e 	bne	r2,zero,80075c0 <__alt_data_end+0xfc0075c0>
 8007930:	99000217 	ldw	r4,8(r19)
 8007934:	ad85883a 	add	r2,r21,r22
 8007938:	10800054 	ori	r2,r2,1
 800793c:	20800115 	stw	r2,4(r4)
 8007940:	003f4a06 	br	800766c <__alt_data_end+0xfc00766c>
 8007944:	01403f04 	movi	r5,252
 8007948:	01c01f84 	movi	r7,126
 800794c:	003e7b06 	br	800733c <__alt_data_end+0xfc00733c>
 8007950:	00c00044 	movi	r3,1
 8007954:	002b883a 	mov	r21,zero
 8007958:	003f3006 	br	800761c <__alt_data_end+0xfc00761c>
 800795c:	00820074 	movhi	r2,2049
 8007960:	10923a04 	addi	r2,r2,18664
 8007964:	15000015 	stw	r20,0(r2)
 8007968:	003f1b06 	br	80075d8 <__alt_data_end+0xfc0075d8>
 800796c:	9009883a 	mov	r4,r18
 8007970:	81400204 	addi	r5,r16,8
 8007974:	8006b340 	call	8006b34 <_free_r>
 8007978:	00820074 	movhi	r2,2049
 800797c:	10992404 	addi	r2,r2,25744
 8007980:	10c00017 	ldw	r3,0(r2)
 8007984:	003f3906 	br	800766c <__alt_data_end+0xfc00766c>
 8007988:	01005504 	movi	r4,340
 800798c:	20800436 	bltu	r4,r2,80079a0 <_malloc_r+0x774>
 8007990:	3804d3fa 	srli	r2,r7,15
 8007994:	11001dc4 	addi	r4,r2,119
 8007998:	210b883a 	add	r5,r4,r4
 800799c:	003f6206 	br	8007728 <__alt_data_end+0xfc007728>
 80079a0:	01015504 	movi	r4,1364
 80079a4:	20800436 	bltu	r4,r2,80079b8 <_malloc_r+0x78c>
 80079a8:	3804d4ba 	srli	r2,r7,18
 80079ac:	11001f04 	addi	r4,r2,124
 80079b0:	210b883a 	add	r5,r4,r4
 80079b4:	003f5c06 	br	8007728 <__alt_data_end+0xfc007728>
 80079b8:	01403f04 	movi	r5,252
 80079bc:	01001f84 	movi	r4,126
 80079c0:	003f5906 	br	8007728 <__alt_data_end+0xfc007728>
 80079c4:	98800117 	ldw	r2,4(r19)
 80079c8:	003fa906 	br	8007870 <__alt_data_end+0xfc007870>
 80079cc:	6007883a 	mov	r3,r12
 80079d0:	003ea206 	br	800745c <__alt_data_end+0xfc00745c>

080079d4 <memchr>:
 80079d4:	208000cc 	andi	r2,r4,3
 80079d8:	280f883a 	mov	r7,r5
 80079dc:	10003526 	beq	r2,zero,8007ab4 <memchr+0xe0>
 80079e0:	30bfffc4 	addi	r2,r6,-1
 80079e4:	30001b26 	beq	r6,zero,8007a54 <memchr+0x80>
 80079e8:	21800003 	ldbu	r6,0(r4)
 80079ec:	28c03fcc 	andi	r3,r5,255
 80079f0:	30c01a26 	beq	r6,r3,8007a5c <memchr+0x88>
 80079f4:	180d883a 	mov	r6,r3
 80079f8:	00000406 	br	8007a0c <memchr+0x38>
 80079fc:	10001526 	beq	r2,zero,8007a54 <memchr+0x80>
 8007a00:	20c00003 	ldbu	r3,0(r4)
 8007a04:	10bfffc4 	addi	r2,r2,-1
 8007a08:	19801426 	beq	r3,r6,8007a5c <memchr+0x88>
 8007a0c:	21000044 	addi	r4,r4,1
 8007a10:	20c000cc 	andi	r3,r4,3
 8007a14:	183ff91e 	bne	r3,zero,80079fc <__alt_data_end+0xfc0079fc>
 8007a18:	024000c4 	movi	r9,3
 8007a1c:	48801136 	bltu	r9,r2,8007a64 <memchr+0x90>
 8007a20:	10000c26 	beq	r2,zero,8007a54 <memchr+0x80>
 8007a24:	20c00003 	ldbu	r3,0(r4)
 8007a28:	29403fcc 	andi	r5,r5,255
 8007a2c:	19400b26 	beq	r3,r5,8007a5c <memchr+0x88>
 8007a30:	20c00044 	addi	r3,r4,1
 8007a34:	2085883a 	add	r2,r4,r2
 8007a38:	39803fcc 	andi	r6,r7,255
 8007a3c:	00000306 	br	8007a4c <memchr+0x78>
 8007a40:	18c00044 	addi	r3,r3,1
 8007a44:	197fffc3 	ldbu	r5,-1(r3)
 8007a48:	29800426 	beq	r5,r6,8007a5c <memchr+0x88>
 8007a4c:	1809883a 	mov	r4,r3
 8007a50:	18bffb1e 	bne	r3,r2,8007a40 <__alt_data_end+0xfc007a40>
 8007a54:	0005883a 	mov	r2,zero
 8007a58:	f800283a 	ret
 8007a5c:	2005883a 	mov	r2,r4
 8007a60:	f800283a 	ret
 8007a64:	28c03fcc 	andi	r3,r5,255
 8007a68:	1810923a 	slli	r8,r3,8
 8007a6c:	02ffbff4 	movhi	r11,65279
 8007a70:	02a02074 	movhi	r10,32897
 8007a74:	40c6b03a 	or	r3,r8,r3
 8007a78:	1810943a 	slli	r8,r3,16
 8007a7c:	5affbfc4 	addi	r11,r11,-257
 8007a80:	52a02004 	addi	r10,r10,-32640
 8007a84:	40d0b03a 	or	r8,r8,r3
 8007a88:	20c00017 	ldw	r3,0(r4)
 8007a8c:	40c6f03a 	xor	r3,r8,r3
 8007a90:	1acd883a 	add	r6,r3,r11
 8007a94:	00c6303a 	nor	r3,zero,r3
 8007a98:	30c6703a 	and	r3,r6,r3
 8007a9c:	1a86703a 	and	r3,r3,r10
 8007aa0:	183fdf1e 	bne	r3,zero,8007a20 <__alt_data_end+0xfc007a20>
 8007aa4:	10bfff04 	addi	r2,r2,-4
 8007aa8:	21000104 	addi	r4,r4,4
 8007aac:	48bff636 	bltu	r9,r2,8007a88 <__alt_data_end+0xfc007a88>
 8007ab0:	003fdb06 	br	8007a20 <__alt_data_end+0xfc007a20>
 8007ab4:	3005883a 	mov	r2,r6
 8007ab8:	003fd706 	br	8007a18 <__alt_data_end+0xfc007a18>

08007abc <memcpy>:
 8007abc:	deffff04 	addi	sp,sp,-4
 8007ac0:	dc000015 	stw	r16,0(sp)
 8007ac4:	00c003c4 	movi	r3,15
 8007ac8:	2005883a 	mov	r2,r4
 8007acc:	1980432e 	bgeu	r3,r6,8007bdc <memcpy+0x120>
 8007ad0:	2146b03a 	or	r3,r4,r5
 8007ad4:	18c000cc 	andi	r3,r3,3
 8007ad8:	1800421e 	bne	r3,zero,8007be4 <memcpy+0x128>
 8007adc:	343ffc04 	addi	r16,r6,-16
 8007ae0:	8020d13a 	srli	r16,r16,4
 8007ae4:	28c00104 	addi	r3,r5,4
 8007ae8:	23400104 	addi	r13,r4,4
 8007aec:	801e913a 	slli	r15,r16,4
 8007af0:	2b000204 	addi	r12,r5,8
 8007af4:	22c00204 	addi	r11,r4,8
 8007af8:	7bc00504 	addi	r15,r15,20
 8007afc:	2a800304 	addi	r10,r5,12
 8007b00:	22400304 	addi	r9,r4,12
 8007b04:	2bdf883a 	add	r15,r5,r15
 8007b08:	2811883a 	mov	r8,r5
 8007b0c:	200f883a 	mov	r7,r4
 8007b10:	41000017 	ldw	r4,0(r8)
 8007b14:	39c00404 	addi	r7,r7,16
 8007b18:	18c00404 	addi	r3,r3,16
 8007b1c:	393ffc15 	stw	r4,-16(r7)
 8007b20:	1bbffc17 	ldw	r14,-16(r3)
 8007b24:	6b400404 	addi	r13,r13,16
 8007b28:	5ac00404 	addi	r11,r11,16
 8007b2c:	6bbffc15 	stw	r14,-16(r13)
 8007b30:	63800017 	ldw	r14,0(r12)
 8007b34:	4a400404 	addi	r9,r9,16
 8007b38:	42000404 	addi	r8,r8,16
 8007b3c:	5bbffc15 	stw	r14,-16(r11)
 8007b40:	53800017 	ldw	r14,0(r10)
 8007b44:	63000404 	addi	r12,r12,16
 8007b48:	52800404 	addi	r10,r10,16
 8007b4c:	4bbffc15 	stw	r14,-16(r9)
 8007b50:	1bffef1e 	bne	r3,r15,8007b10 <__alt_data_end+0xfc007b10>
 8007b54:	81c00044 	addi	r7,r16,1
 8007b58:	380e913a 	slli	r7,r7,4
 8007b5c:	310003cc 	andi	r4,r6,15
 8007b60:	02c000c4 	movi	r11,3
 8007b64:	11c7883a 	add	r3,r2,r7
 8007b68:	29cb883a 	add	r5,r5,r7
 8007b6c:	59001f2e 	bgeu	r11,r4,8007bec <memcpy+0x130>
 8007b70:	1813883a 	mov	r9,r3
 8007b74:	2811883a 	mov	r8,r5
 8007b78:	200f883a 	mov	r7,r4
 8007b7c:	42800017 	ldw	r10,0(r8)
 8007b80:	4a400104 	addi	r9,r9,4
 8007b84:	39ffff04 	addi	r7,r7,-4
 8007b88:	4abfff15 	stw	r10,-4(r9)
 8007b8c:	42000104 	addi	r8,r8,4
 8007b90:	59fffa36 	bltu	r11,r7,8007b7c <__alt_data_end+0xfc007b7c>
 8007b94:	213fff04 	addi	r4,r4,-4
 8007b98:	2008d0ba 	srli	r4,r4,2
 8007b9c:	318000cc 	andi	r6,r6,3
 8007ba0:	21000044 	addi	r4,r4,1
 8007ba4:	2109883a 	add	r4,r4,r4
 8007ba8:	2109883a 	add	r4,r4,r4
 8007bac:	1907883a 	add	r3,r3,r4
 8007bb0:	290b883a 	add	r5,r5,r4
 8007bb4:	30000626 	beq	r6,zero,8007bd0 <memcpy+0x114>
 8007bb8:	198d883a 	add	r6,r3,r6
 8007bbc:	29c00003 	ldbu	r7,0(r5)
 8007bc0:	18c00044 	addi	r3,r3,1
 8007bc4:	29400044 	addi	r5,r5,1
 8007bc8:	19ffffc5 	stb	r7,-1(r3)
 8007bcc:	19bffb1e 	bne	r3,r6,8007bbc <__alt_data_end+0xfc007bbc>
 8007bd0:	dc000017 	ldw	r16,0(sp)
 8007bd4:	dec00104 	addi	sp,sp,4
 8007bd8:	f800283a 	ret
 8007bdc:	2007883a 	mov	r3,r4
 8007be0:	003ff406 	br	8007bb4 <__alt_data_end+0xfc007bb4>
 8007be4:	2007883a 	mov	r3,r4
 8007be8:	003ff306 	br	8007bb8 <__alt_data_end+0xfc007bb8>
 8007bec:	200d883a 	mov	r6,r4
 8007bf0:	003ff006 	br	8007bb4 <__alt_data_end+0xfc007bb4>

08007bf4 <memset>:
 8007bf4:	20c000cc 	andi	r3,r4,3
 8007bf8:	2005883a 	mov	r2,r4
 8007bfc:	18004326 	beq	r3,zero,8007d0c <memset+0x118>
 8007c00:	31ffffc4 	addi	r7,r6,-1
 8007c04:	30004026 	beq	r6,zero,8007d08 <memset+0x114>
 8007c08:	2813883a 	mov	r9,r5
 8007c0c:	200d883a 	mov	r6,r4
 8007c10:	2007883a 	mov	r3,r4
 8007c14:	00000406 	br	8007c28 <memset+0x34>
 8007c18:	3a3fffc4 	addi	r8,r7,-1
 8007c1c:	31800044 	addi	r6,r6,1
 8007c20:	38003926 	beq	r7,zero,8007d08 <memset+0x114>
 8007c24:	400f883a 	mov	r7,r8
 8007c28:	18c00044 	addi	r3,r3,1
 8007c2c:	32400005 	stb	r9,0(r6)
 8007c30:	1a0000cc 	andi	r8,r3,3
 8007c34:	403ff81e 	bne	r8,zero,8007c18 <__alt_data_end+0xfc007c18>
 8007c38:	010000c4 	movi	r4,3
 8007c3c:	21c02d2e 	bgeu	r4,r7,8007cf4 <memset+0x100>
 8007c40:	29803fcc 	andi	r6,r5,255
 8007c44:	3008923a 	slli	r4,r6,8
 8007c48:	218cb03a 	or	r6,r4,r6
 8007c4c:	3008943a 	slli	r4,r6,16
 8007c50:	218cb03a 	or	r6,r4,r6
 8007c54:	010003c4 	movi	r4,15
 8007c58:	21c0182e 	bgeu	r4,r7,8007cbc <memset+0xc8>
 8007c5c:	3b3ffc04 	addi	r12,r7,-16
 8007c60:	6018d13a 	srli	r12,r12,4
 8007c64:	1a000104 	addi	r8,r3,4
 8007c68:	1ac00204 	addi	r11,r3,8
 8007c6c:	6008913a 	slli	r4,r12,4
 8007c70:	1a800304 	addi	r10,r3,12
 8007c74:	1813883a 	mov	r9,r3
 8007c78:	21000504 	addi	r4,r4,20
 8007c7c:	1909883a 	add	r4,r3,r4
 8007c80:	49800015 	stw	r6,0(r9)
 8007c84:	41800015 	stw	r6,0(r8)
 8007c88:	59800015 	stw	r6,0(r11)
 8007c8c:	51800015 	stw	r6,0(r10)
 8007c90:	42000404 	addi	r8,r8,16
 8007c94:	4a400404 	addi	r9,r9,16
 8007c98:	5ac00404 	addi	r11,r11,16
 8007c9c:	52800404 	addi	r10,r10,16
 8007ca0:	413ff71e 	bne	r8,r4,8007c80 <__alt_data_end+0xfc007c80>
 8007ca4:	63000044 	addi	r12,r12,1
 8007ca8:	6018913a 	slli	r12,r12,4
 8007cac:	39c003cc 	andi	r7,r7,15
 8007cb0:	010000c4 	movi	r4,3
 8007cb4:	1b07883a 	add	r3,r3,r12
 8007cb8:	21c00e2e 	bgeu	r4,r7,8007cf4 <memset+0x100>
 8007cbc:	1813883a 	mov	r9,r3
 8007cc0:	3811883a 	mov	r8,r7
 8007cc4:	010000c4 	movi	r4,3
 8007cc8:	49800015 	stw	r6,0(r9)
 8007ccc:	423fff04 	addi	r8,r8,-4
 8007cd0:	4a400104 	addi	r9,r9,4
 8007cd4:	223ffc36 	bltu	r4,r8,8007cc8 <__alt_data_end+0xfc007cc8>
 8007cd8:	393fff04 	addi	r4,r7,-4
 8007cdc:	2008d0ba 	srli	r4,r4,2
 8007ce0:	39c000cc 	andi	r7,r7,3
 8007ce4:	21000044 	addi	r4,r4,1
 8007ce8:	2109883a 	add	r4,r4,r4
 8007cec:	2109883a 	add	r4,r4,r4
 8007cf0:	1907883a 	add	r3,r3,r4
 8007cf4:	38000426 	beq	r7,zero,8007d08 <memset+0x114>
 8007cf8:	19cf883a 	add	r7,r3,r7
 8007cfc:	19400005 	stb	r5,0(r3)
 8007d00:	18c00044 	addi	r3,r3,1
 8007d04:	19fffd1e 	bne	r3,r7,8007cfc <__alt_data_end+0xfc007cfc>
 8007d08:	f800283a 	ret
 8007d0c:	2007883a 	mov	r3,r4
 8007d10:	300f883a 	mov	r7,r6
 8007d14:	003fc806 	br	8007c38 <__alt_data_end+0xfc007c38>

08007d18 <_Balloc>:
 8007d18:	20801317 	ldw	r2,76(r4)
 8007d1c:	defffc04 	addi	sp,sp,-16
 8007d20:	dc400115 	stw	r17,4(sp)
 8007d24:	dc000015 	stw	r16,0(sp)
 8007d28:	dfc00315 	stw	ra,12(sp)
 8007d2c:	dc800215 	stw	r18,8(sp)
 8007d30:	2023883a 	mov	r17,r4
 8007d34:	2821883a 	mov	r16,r5
 8007d38:	10000f26 	beq	r2,zero,8007d78 <_Balloc+0x60>
 8007d3c:	8407883a 	add	r3,r16,r16
 8007d40:	18c7883a 	add	r3,r3,r3
 8007d44:	10c7883a 	add	r3,r2,r3
 8007d48:	18800017 	ldw	r2,0(r3)
 8007d4c:	10001126 	beq	r2,zero,8007d94 <_Balloc+0x7c>
 8007d50:	11000017 	ldw	r4,0(r2)
 8007d54:	19000015 	stw	r4,0(r3)
 8007d58:	10000415 	stw	zero,16(r2)
 8007d5c:	10000315 	stw	zero,12(r2)
 8007d60:	dfc00317 	ldw	ra,12(sp)
 8007d64:	dc800217 	ldw	r18,8(sp)
 8007d68:	dc400117 	ldw	r17,4(sp)
 8007d6c:	dc000017 	ldw	r16,0(sp)
 8007d70:	dec00404 	addi	sp,sp,16
 8007d74:	f800283a 	ret
 8007d78:	01400104 	movi	r5,4
 8007d7c:	01800844 	movi	r6,33
 8007d80:	800b6c00 	call	800b6c0 <_calloc_r>
 8007d84:	88801315 	stw	r2,76(r17)
 8007d88:	103fec1e 	bne	r2,zero,8007d3c <__alt_data_end+0xfc007d3c>
 8007d8c:	0005883a 	mov	r2,zero
 8007d90:	003ff306 	br	8007d60 <__alt_data_end+0xfc007d60>
 8007d94:	01400044 	movi	r5,1
 8007d98:	2c24983a 	sll	r18,r5,r16
 8007d9c:	8809883a 	mov	r4,r17
 8007da0:	91800144 	addi	r6,r18,5
 8007da4:	318d883a 	add	r6,r6,r6
 8007da8:	318d883a 	add	r6,r6,r6
 8007dac:	800b6c00 	call	800b6c0 <_calloc_r>
 8007db0:	103ff626 	beq	r2,zero,8007d8c <__alt_data_end+0xfc007d8c>
 8007db4:	14000115 	stw	r16,4(r2)
 8007db8:	14800215 	stw	r18,8(r2)
 8007dbc:	003fe606 	br	8007d58 <__alt_data_end+0xfc007d58>

08007dc0 <_Bfree>:
 8007dc0:	28000826 	beq	r5,zero,8007de4 <_Bfree+0x24>
 8007dc4:	28c00117 	ldw	r3,4(r5)
 8007dc8:	20801317 	ldw	r2,76(r4)
 8007dcc:	18c7883a 	add	r3,r3,r3
 8007dd0:	18c7883a 	add	r3,r3,r3
 8007dd4:	10c5883a 	add	r2,r2,r3
 8007dd8:	10c00017 	ldw	r3,0(r2)
 8007ddc:	28c00015 	stw	r3,0(r5)
 8007de0:	11400015 	stw	r5,0(r2)
 8007de4:	f800283a 	ret

08007de8 <__multadd>:
 8007de8:	defffa04 	addi	sp,sp,-24
 8007dec:	dc000115 	stw	r16,4(sp)
 8007df0:	2c000417 	ldw	r16,16(r5)
 8007df4:	dc800315 	stw	r18,12(sp)
 8007df8:	dc400215 	stw	r17,8(sp)
 8007dfc:	dfc00515 	stw	ra,20(sp)
 8007e00:	dcc00415 	stw	r19,16(sp)
 8007e04:	2823883a 	mov	r17,r5
 8007e08:	2025883a 	mov	r18,r4
 8007e0c:	2a400504 	addi	r9,r5,20
 8007e10:	0015883a 	mov	r10,zero
 8007e14:	4a000017 	ldw	r8,0(r9)
 8007e18:	4a400104 	addi	r9,r9,4
 8007e1c:	52800044 	addi	r10,r10,1
 8007e20:	40ffffcc 	andi	r3,r8,65535
 8007e24:	1987383a 	mul	r3,r3,r6
 8007e28:	4010d43a 	srli	r8,r8,16
 8007e2c:	19cf883a 	add	r7,r3,r7
 8007e30:	4191383a 	mul	r8,r8,r6
 8007e34:	3816d43a 	srli	r11,r7,16
 8007e38:	38ffffcc 	andi	r3,r7,65535
 8007e3c:	5a0f883a 	add	r7,r11,r8
 8007e40:	3810943a 	slli	r8,r7,16
 8007e44:	380ed43a 	srli	r7,r7,16
 8007e48:	40c7883a 	add	r3,r8,r3
 8007e4c:	48ffff15 	stw	r3,-4(r9)
 8007e50:	543ff016 	blt	r10,r16,8007e14 <__alt_data_end+0xfc007e14>
 8007e54:	38000926 	beq	r7,zero,8007e7c <__multadd+0x94>
 8007e58:	88800217 	ldw	r2,8(r17)
 8007e5c:	80800f0e 	bge	r16,r2,8007e9c <__multadd+0xb4>
 8007e60:	80800144 	addi	r2,r16,5
 8007e64:	1085883a 	add	r2,r2,r2
 8007e68:	1085883a 	add	r2,r2,r2
 8007e6c:	8885883a 	add	r2,r17,r2
 8007e70:	11c00015 	stw	r7,0(r2)
 8007e74:	84000044 	addi	r16,r16,1
 8007e78:	8c000415 	stw	r16,16(r17)
 8007e7c:	8805883a 	mov	r2,r17
 8007e80:	dfc00517 	ldw	ra,20(sp)
 8007e84:	dcc00417 	ldw	r19,16(sp)
 8007e88:	dc800317 	ldw	r18,12(sp)
 8007e8c:	dc400217 	ldw	r17,8(sp)
 8007e90:	dc000117 	ldw	r16,4(sp)
 8007e94:	dec00604 	addi	sp,sp,24
 8007e98:	f800283a 	ret
 8007e9c:	89400117 	ldw	r5,4(r17)
 8007ea0:	9009883a 	mov	r4,r18
 8007ea4:	d9c00015 	stw	r7,0(sp)
 8007ea8:	29400044 	addi	r5,r5,1
 8007eac:	8007d180 	call	8007d18 <_Balloc>
 8007eb0:	89800417 	ldw	r6,16(r17)
 8007eb4:	89400304 	addi	r5,r17,12
 8007eb8:	11000304 	addi	r4,r2,12
 8007ebc:	31800084 	addi	r6,r6,2
 8007ec0:	318d883a 	add	r6,r6,r6
 8007ec4:	318d883a 	add	r6,r6,r6
 8007ec8:	1027883a 	mov	r19,r2
 8007ecc:	8007abc0 	call	8007abc <memcpy>
 8007ed0:	89000117 	ldw	r4,4(r17)
 8007ed4:	90c01317 	ldw	r3,76(r18)
 8007ed8:	d9c00017 	ldw	r7,0(sp)
 8007edc:	2109883a 	add	r4,r4,r4
 8007ee0:	2109883a 	add	r4,r4,r4
 8007ee4:	1907883a 	add	r3,r3,r4
 8007ee8:	18800017 	ldw	r2,0(r3)
 8007eec:	88800015 	stw	r2,0(r17)
 8007ef0:	1c400015 	stw	r17,0(r3)
 8007ef4:	9823883a 	mov	r17,r19
 8007ef8:	003fd906 	br	8007e60 <__alt_data_end+0xfc007e60>

08007efc <__s2b>:
 8007efc:	defff904 	addi	sp,sp,-28
 8007f00:	dc400115 	stw	r17,4(sp)
 8007f04:	dc000015 	stw	r16,0(sp)
 8007f08:	2023883a 	mov	r17,r4
 8007f0c:	2821883a 	mov	r16,r5
 8007f10:	39000204 	addi	r4,r7,8
 8007f14:	01400244 	movi	r5,9
 8007f18:	dcc00315 	stw	r19,12(sp)
 8007f1c:	dc800215 	stw	r18,8(sp)
 8007f20:	dfc00615 	stw	ra,24(sp)
 8007f24:	dd400515 	stw	r21,20(sp)
 8007f28:	dd000415 	stw	r20,16(sp)
 8007f2c:	3825883a 	mov	r18,r7
 8007f30:	3027883a 	mov	r19,r6
 8007f34:	800d6a40 	call	800d6a4 <__divsi3>
 8007f38:	00c00044 	movi	r3,1
 8007f3c:	000b883a 	mov	r5,zero
 8007f40:	1880030e 	bge	r3,r2,8007f50 <__s2b+0x54>
 8007f44:	18c7883a 	add	r3,r3,r3
 8007f48:	29400044 	addi	r5,r5,1
 8007f4c:	18bffd16 	blt	r3,r2,8007f44 <__alt_data_end+0xfc007f44>
 8007f50:	8809883a 	mov	r4,r17
 8007f54:	8007d180 	call	8007d18 <_Balloc>
 8007f58:	d8c00717 	ldw	r3,28(sp)
 8007f5c:	10c00515 	stw	r3,20(r2)
 8007f60:	00c00044 	movi	r3,1
 8007f64:	10c00415 	stw	r3,16(r2)
 8007f68:	00c00244 	movi	r3,9
 8007f6c:	1cc0210e 	bge	r3,r19,8007ff4 <__s2b+0xf8>
 8007f70:	80eb883a 	add	r21,r16,r3
 8007f74:	a829883a 	mov	r20,r21
 8007f78:	84e1883a 	add	r16,r16,r19
 8007f7c:	a1c00007 	ldb	r7,0(r20)
 8007f80:	8809883a 	mov	r4,r17
 8007f84:	a5000044 	addi	r20,r20,1
 8007f88:	100b883a 	mov	r5,r2
 8007f8c:	01800284 	movi	r6,10
 8007f90:	39fff404 	addi	r7,r7,-48
 8007f94:	8007de80 	call	8007de8 <__multadd>
 8007f98:	a43ff81e 	bne	r20,r16,8007f7c <__alt_data_end+0xfc007f7c>
 8007f9c:	ace1883a 	add	r16,r21,r19
 8007fa0:	843ffe04 	addi	r16,r16,-8
 8007fa4:	9c800a0e 	bge	r19,r18,8007fd0 <__s2b+0xd4>
 8007fa8:	94e5c83a 	sub	r18,r18,r19
 8007fac:	84a5883a 	add	r18,r16,r18
 8007fb0:	81c00007 	ldb	r7,0(r16)
 8007fb4:	8809883a 	mov	r4,r17
 8007fb8:	84000044 	addi	r16,r16,1
 8007fbc:	100b883a 	mov	r5,r2
 8007fc0:	01800284 	movi	r6,10
 8007fc4:	39fff404 	addi	r7,r7,-48
 8007fc8:	8007de80 	call	8007de8 <__multadd>
 8007fcc:	84bff81e 	bne	r16,r18,8007fb0 <__alt_data_end+0xfc007fb0>
 8007fd0:	dfc00617 	ldw	ra,24(sp)
 8007fd4:	dd400517 	ldw	r21,20(sp)
 8007fd8:	dd000417 	ldw	r20,16(sp)
 8007fdc:	dcc00317 	ldw	r19,12(sp)
 8007fe0:	dc800217 	ldw	r18,8(sp)
 8007fe4:	dc400117 	ldw	r17,4(sp)
 8007fe8:	dc000017 	ldw	r16,0(sp)
 8007fec:	dec00704 	addi	sp,sp,28
 8007ff0:	f800283a 	ret
 8007ff4:	84000284 	addi	r16,r16,10
 8007ff8:	1827883a 	mov	r19,r3
 8007ffc:	003fe906 	br	8007fa4 <__alt_data_end+0xfc007fa4>

08008000 <__hi0bits>:
 8008000:	20bfffec 	andhi	r2,r4,65535
 8008004:	1000141e 	bne	r2,zero,8008058 <__hi0bits+0x58>
 8008008:	2008943a 	slli	r4,r4,16
 800800c:	00800404 	movi	r2,16
 8008010:	20ffc02c 	andhi	r3,r4,65280
 8008014:	1800021e 	bne	r3,zero,8008020 <__hi0bits+0x20>
 8008018:	2008923a 	slli	r4,r4,8
 800801c:	10800204 	addi	r2,r2,8
 8008020:	20fc002c 	andhi	r3,r4,61440
 8008024:	1800021e 	bne	r3,zero,8008030 <__hi0bits+0x30>
 8008028:	2008913a 	slli	r4,r4,4
 800802c:	10800104 	addi	r2,r2,4
 8008030:	20f0002c 	andhi	r3,r4,49152
 8008034:	1800031e 	bne	r3,zero,8008044 <__hi0bits+0x44>
 8008038:	2109883a 	add	r4,r4,r4
 800803c:	10800084 	addi	r2,r2,2
 8008040:	2109883a 	add	r4,r4,r4
 8008044:	20000316 	blt	r4,zero,8008054 <__hi0bits+0x54>
 8008048:	2110002c 	andhi	r4,r4,16384
 800804c:	2000041e 	bne	r4,zero,8008060 <__hi0bits+0x60>
 8008050:	00800804 	movi	r2,32
 8008054:	f800283a 	ret
 8008058:	0005883a 	mov	r2,zero
 800805c:	003fec06 	br	8008010 <__alt_data_end+0xfc008010>
 8008060:	10800044 	addi	r2,r2,1
 8008064:	f800283a 	ret

08008068 <__lo0bits>:
 8008068:	20c00017 	ldw	r3,0(r4)
 800806c:	188001cc 	andi	r2,r3,7
 8008070:	10000826 	beq	r2,zero,8008094 <__lo0bits+0x2c>
 8008074:	1880004c 	andi	r2,r3,1
 8008078:	1000211e 	bne	r2,zero,8008100 <__lo0bits+0x98>
 800807c:	1880008c 	andi	r2,r3,2
 8008080:	1000211e 	bne	r2,zero,8008108 <__lo0bits+0xa0>
 8008084:	1806d0ba 	srli	r3,r3,2
 8008088:	00800084 	movi	r2,2
 800808c:	20c00015 	stw	r3,0(r4)
 8008090:	f800283a 	ret
 8008094:	18bfffcc 	andi	r2,r3,65535
 8008098:	10001326 	beq	r2,zero,80080e8 <__lo0bits+0x80>
 800809c:	0005883a 	mov	r2,zero
 80080a0:	19403fcc 	andi	r5,r3,255
 80080a4:	2800021e 	bne	r5,zero,80080b0 <__lo0bits+0x48>
 80080a8:	1806d23a 	srli	r3,r3,8
 80080ac:	10800204 	addi	r2,r2,8
 80080b0:	194003cc 	andi	r5,r3,15
 80080b4:	2800021e 	bne	r5,zero,80080c0 <__lo0bits+0x58>
 80080b8:	1806d13a 	srli	r3,r3,4
 80080bc:	10800104 	addi	r2,r2,4
 80080c0:	194000cc 	andi	r5,r3,3
 80080c4:	2800021e 	bne	r5,zero,80080d0 <__lo0bits+0x68>
 80080c8:	1806d0ba 	srli	r3,r3,2
 80080cc:	10800084 	addi	r2,r2,2
 80080d0:	1940004c 	andi	r5,r3,1
 80080d4:	2800081e 	bne	r5,zero,80080f8 <__lo0bits+0x90>
 80080d8:	1806d07a 	srli	r3,r3,1
 80080dc:	1800051e 	bne	r3,zero,80080f4 <__lo0bits+0x8c>
 80080e0:	00800804 	movi	r2,32
 80080e4:	f800283a 	ret
 80080e8:	1806d43a 	srli	r3,r3,16
 80080ec:	00800404 	movi	r2,16
 80080f0:	003feb06 	br	80080a0 <__alt_data_end+0xfc0080a0>
 80080f4:	10800044 	addi	r2,r2,1
 80080f8:	20c00015 	stw	r3,0(r4)
 80080fc:	f800283a 	ret
 8008100:	0005883a 	mov	r2,zero
 8008104:	f800283a 	ret
 8008108:	1806d07a 	srli	r3,r3,1
 800810c:	00800044 	movi	r2,1
 8008110:	20c00015 	stw	r3,0(r4)
 8008114:	f800283a 	ret

08008118 <__i2b>:
 8008118:	defffd04 	addi	sp,sp,-12
 800811c:	dc000015 	stw	r16,0(sp)
 8008120:	04000044 	movi	r16,1
 8008124:	dc400115 	stw	r17,4(sp)
 8008128:	2823883a 	mov	r17,r5
 800812c:	800b883a 	mov	r5,r16
 8008130:	dfc00215 	stw	ra,8(sp)
 8008134:	8007d180 	call	8007d18 <_Balloc>
 8008138:	14400515 	stw	r17,20(r2)
 800813c:	14000415 	stw	r16,16(r2)
 8008140:	dfc00217 	ldw	ra,8(sp)
 8008144:	dc400117 	ldw	r17,4(sp)
 8008148:	dc000017 	ldw	r16,0(sp)
 800814c:	dec00304 	addi	sp,sp,12
 8008150:	f800283a 	ret

08008154 <__multiply>:
 8008154:	defffa04 	addi	sp,sp,-24
 8008158:	dcc00315 	stw	r19,12(sp)
 800815c:	dc800215 	stw	r18,8(sp)
 8008160:	2cc00417 	ldw	r19,16(r5)
 8008164:	34800417 	ldw	r18,16(r6)
 8008168:	dd000415 	stw	r20,16(sp)
 800816c:	dc400115 	stw	r17,4(sp)
 8008170:	dfc00515 	stw	ra,20(sp)
 8008174:	dc000015 	stw	r16,0(sp)
 8008178:	2829883a 	mov	r20,r5
 800817c:	3023883a 	mov	r17,r6
 8008180:	9c807016 	blt	r19,r18,8008344 <__multiply+0x1f0>
 8008184:	9005883a 	mov	r2,r18
 8008188:	9825883a 	mov	r18,r19
 800818c:	1027883a 	mov	r19,r2
 8008190:	a0800217 	ldw	r2,8(r20)
 8008194:	94e1883a 	add	r16,r18,r19
 8008198:	a1400117 	ldw	r5,4(r20)
 800819c:	1400010e 	bge	r2,r16,80081a4 <__multiply+0x50>
 80081a0:	29400044 	addi	r5,r5,1
 80081a4:	8007d180 	call	8007d18 <_Balloc>
 80081a8:	8417883a 	add	r11,r16,r16
 80081ac:	13000504 	addi	r12,r2,20
 80081b0:	5ad7883a 	add	r11,r11,r11
 80081b4:	62d7883a 	add	r11,r12,r11
 80081b8:	6007883a 	mov	r3,r12
 80081bc:	62c0032e 	bgeu	r12,r11,80081cc <__multiply+0x78>
 80081c0:	18000015 	stw	zero,0(r3)
 80081c4:	18c00104 	addi	r3,r3,4
 80081c8:	1afffd36 	bltu	r3,r11,80081c0 <__alt_data_end+0xfc0081c0>
 80081cc:	9ce7883a 	add	r19,r19,r19
 80081d0:	94a5883a 	add	r18,r18,r18
 80081d4:	89800504 	addi	r6,r17,20
 80081d8:	9ce7883a 	add	r19,r19,r19
 80081dc:	a3800504 	addi	r14,r20,20
 80081e0:	94a5883a 	add	r18,r18,r18
 80081e4:	34db883a 	add	r13,r6,r19
 80081e8:	7495883a 	add	r10,r14,r18
 80081ec:	3340422e 	bgeu	r6,r13,80082f8 <__multiply+0x1a4>
 80081f0:	34400017 	ldw	r17,0(r6)
 80081f4:	8cbfffcc 	andi	r18,r17,65535
 80081f8:	90001b26 	beq	r18,zero,8008268 <__multiply+0x114>
 80081fc:	6013883a 	mov	r9,r12
 8008200:	7023883a 	mov	r17,r14
 8008204:	0011883a 	mov	r8,zero
 8008208:	88c00017 	ldw	r3,0(r17)
 800820c:	4bc00017 	ldw	r15,0(r9)
 8008210:	8c400104 	addi	r17,r17,4
 8008214:	19ffffcc 	andi	r7,r3,65535
 8008218:	3c8f383a 	mul	r7,r7,r18
 800821c:	1808d43a 	srli	r4,r3,16
 8008220:	797fffcc 	andi	r5,r15,65535
 8008224:	29cb883a 	add	r5,r5,r7
 8008228:	2a0b883a 	add	r5,r5,r8
 800822c:	2489383a 	mul	r4,r4,r18
 8008230:	7806d43a 	srli	r3,r15,16
 8008234:	2810d43a 	srli	r8,r5,16
 8008238:	297fffcc 	andi	r5,r5,65535
 800823c:	1907883a 	add	r3,r3,r4
 8008240:	1a07883a 	add	r3,r3,r8
 8008244:	1808943a 	slli	r4,r3,16
 8008248:	480f883a 	mov	r7,r9
 800824c:	1810d43a 	srli	r8,r3,16
 8008250:	214ab03a 	or	r5,r4,r5
 8008254:	49400015 	stw	r5,0(r9)
 8008258:	4a400104 	addi	r9,r9,4
 800825c:	8abfea36 	bltu	r17,r10,8008208 <__alt_data_end+0xfc008208>
 8008260:	3a000115 	stw	r8,4(r7)
 8008264:	34400017 	ldw	r17,0(r6)
 8008268:	8822d43a 	srli	r17,r17,16
 800826c:	88001f26 	beq	r17,zero,80082ec <__multiply+0x198>
 8008270:	60c00017 	ldw	r3,0(r12)
 8008274:	7013883a 	mov	r9,r14
 8008278:	601f883a 	mov	r15,r12
 800827c:	1811883a 	mov	r8,r3
 8008280:	6027883a 	mov	r19,r12
 8008284:	000f883a 	mov	r7,zero
 8008288:	00000106 	br	8008290 <__multiply+0x13c>
 800828c:	9027883a 	mov	r19,r18
 8008290:	4940000b 	ldhu	r5,0(r9)
 8008294:	4010d43a 	srli	r8,r8,16
 8008298:	193fffcc 	andi	r4,r3,65535
 800829c:	2c4b383a 	mul	r5,r5,r17
 80082a0:	7bc00104 	addi	r15,r15,4
 80082a4:	4a400104 	addi	r9,r9,4
 80082a8:	2a0b883a 	add	r5,r5,r8
 80082ac:	29cb883a 	add	r5,r5,r7
 80082b0:	2806943a 	slli	r3,r5,16
 80082b4:	9c800104 	addi	r18,r19,4
 80082b8:	280ad43a 	srli	r5,r5,16
 80082bc:	1908b03a 	or	r4,r3,r4
 80082c0:	793fff15 	stw	r4,-4(r15)
 80082c4:	48ffff17 	ldw	r3,-4(r9)
 80082c8:	92000017 	ldw	r8,0(r18)
 80082cc:	1806d43a 	srli	r3,r3,16
 80082d0:	413fffcc 	andi	r4,r8,65535
 80082d4:	1c47383a 	mul	r3,r3,r17
 80082d8:	1907883a 	add	r3,r3,r4
 80082dc:	1947883a 	add	r3,r3,r5
 80082e0:	180ed43a 	srli	r7,r3,16
 80082e4:	4abfe936 	bltu	r9,r10,800828c <__alt_data_end+0xfc00828c>
 80082e8:	98c00115 	stw	r3,4(r19)
 80082ec:	31800104 	addi	r6,r6,4
 80082f0:	63000104 	addi	r12,r12,4
 80082f4:	337fbe36 	bltu	r6,r13,80081f0 <__alt_data_end+0xfc0081f0>
 80082f8:	0400090e 	bge	zero,r16,8008320 <__multiply+0x1cc>
 80082fc:	58ffff17 	ldw	r3,-4(r11)
 8008300:	5affff04 	addi	r11,r11,-4
 8008304:	18000326 	beq	r3,zero,8008314 <__multiply+0x1c0>
 8008308:	00000506 	br	8008320 <__multiply+0x1cc>
 800830c:	58c00017 	ldw	r3,0(r11)
 8008310:	1800031e 	bne	r3,zero,8008320 <__multiply+0x1cc>
 8008314:	843fffc4 	addi	r16,r16,-1
 8008318:	5affff04 	addi	r11,r11,-4
 800831c:	803ffb1e 	bne	r16,zero,800830c <__alt_data_end+0xfc00830c>
 8008320:	14000415 	stw	r16,16(r2)
 8008324:	dfc00517 	ldw	ra,20(sp)
 8008328:	dd000417 	ldw	r20,16(sp)
 800832c:	dcc00317 	ldw	r19,12(sp)
 8008330:	dc800217 	ldw	r18,8(sp)
 8008334:	dc400117 	ldw	r17,4(sp)
 8008338:	dc000017 	ldw	r16,0(sp)
 800833c:	dec00604 	addi	sp,sp,24
 8008340:	f800283a 	ret
 8008344:	3029883a 	mov	r20,r6
 8008348:	2823883a 	mov	r17,r5
 800834c:	003f9006 	br	8008190 <__alt_data_end+0xfc008190>

08008350 <__pow5mult>:
 8008350:	defffa04 	addi	sp,sp,-24
 8008354:	dcc00315 	stw	r19,12(sp)
 8008358:	dc800215 	stw	r18,8(sp)
 800835c:	dc000015 	stw	r16,0(sp)
 8008360:	dfc00515 	stw	ra,20(sp)
 8008364:	dd000415 	stw	r20,16(sp)
 8008368:	dc400115 	stw	r17,4(sp)
 800836c:	308000cc 	andi	r2,r6,3
 8008370:	3021883a 	mov	r16,r6
 8008374:	2027883a 	mov	r19,r4
 8008378:	2825883a 	mov	r18,r5
 800837c:	10002e1e 	bne	r2,zero,8008438 <__pow5mult+0xe8>
 8008380:	8021d0ba 	srai	r16,r16,2
 8008384:	80001a26 	beq	r16,zero,80083f0 <__pow5mult+0xa0>
 8008388:	9c401217 	ldw	r17,72(r19)
 800838c:	8800061e 	bne	r17,zero,80083a8 <__pow5mult+0x58>
 8008390:	00003406 	br	8008464 <__pow5mult+0x114>
 8008394:	8021d07a 	srai	r16,r16,1
 8008398:	80001526 	beq	r16,zero,80083f0 <__pow5mult+0xa0>
 800839c:	88800017 	ldw	r2,0(r17)
 80083a0:	10001c26 	beq	r2,zero,8008414 <__pow5mult+0xc4>
 80083a4:	1023883a 	mov	r17,r2
 80083a8:	80c0004c 	andi	r3,r16,1
 80083ac:	183ff926 	beq	r3,zero,8008394 <__alt_data_end+0xfc008394>
 80083b0:	900b883a 	mov	r5,r18
 80083b4:	880d883a 	mov	r6,r17
 80083b8:	9809883a 	mov	r4,r19
 80083bc:	80081540 	call	8008154 <__multiply>
 80083c0:	90001b26 	beq	r18,zero,8008430 <__pow5mult+0xe0>
 80083c4:	91c00117 	ldw	r7,4(r18)
 80083c8:	98c01317 	ldw	r3,76(r19)
 80083cc:	8021d07a 	srai	r16,r16,1
 80083d0:	39cf883a 	add	r7,r7,r7
 80083d4:	39cf883a 	add	r7,r7,r7
 80083d8:	19c7883a 	add	r3,r3,r7
 80083dc:	19000017 	ldw	r4,0(r3)
 80083e0:	91000015 	stw	r4,0(r18)
 80083e4:	1c800015 	stw	r18,0(r3)
 80083e8:	1025883a 	mov	r18,r2
 80083ec:	803feb1e 	bne	r16,zero,800839c <__alt_data_end+0xfc00839c>
 80083f0:	9005883a 	mov	r2,r18
 80083f4:	dfc00517 	ldw	ra,20(sp)
 80083f8:	dd000417 	ldw	r20,16(sp)
 80083fc:	dcc00317 	ldw	r19,12(sp)
 8008400:	dc800217 	ldw	r18,8(sp)
 8008404:	dc400117 	ldw	r17,4(sp)
 8008408:	dc000017 	ldw	r16,0(sp)
 800840c:	dec00604 	addi	sp,sp,24
 8008410:	f800283a 	ret
 8008414:	9809883a 	mov	r4,r19
 8008418:	880b883a 	mov	r5,r17
 800841c:	880d883a 	mov	r6,r17
 8008420:	80081540 	call	8008154 <__multiply>
 8008424:	88800015 	stw	r2,0(r17)
 8008428:	10000015 	stw	zero,0(r2)
 800842c:	003fdd06 	br	80083a4 <__alt_data_end+0xfc0083a4>
 8008430:	1025883a 	mov	r18,r2
 8008434:	003fd706 	br	8008394 <__alt_data_end+0xfc008394>
 8008438:	10bfffc4 	addi	r2,r2,-1
 800843c:	1085883a 	add	r2,r2,r2
 8008440:	00c20074 	movhi	r3,2049
 8008444:	18cacb04 	addi	r3,r3,11052
 8008448:	1085883a 	add	r2,r2,r2
 800844c:	1885883a 	add	r2,r3,r2
 8008450:	11800017 	ldw	r6,0(r2)
 8008454:	000f883a 	mov	r7,zero
 8008458:	8007de80 	call	8007de8 <__multadd>
 800845c:	1025883a 	mov	r18,r2
 8008460:	003fc706 	br	8008380 <__alt_data_end+0xfc008380>
 8008464:	05000044 	movi	r20,1
 8008468:	9809883a 	mov	r4,r19
 800846c:	a00b883a 	mov	r5,r20
 8008470:	8007d180 	call	8007d18 <_Balloc>
 8008474:	1023883a 	mov	r17,r2
 8008478:	00809c44 	movi	r2,625
 800847c:	88800515 	stw	r2,20(r17)
 8008480:	8d000415 	stw	r20,16(r17)
 8008484:	9c401215 	stw	r17,72(r19)
 8008488:	88000015 	stw	zero,0(r17)
 800848c:	003fc606 	br	80083a8 <__alt_data_end+0xfc0083a8>

08008490 <__lshift>:
 8008490:	defff904 	addi	sp,sp,-28
 8008494:	dd000415 	stw	r20,16(sp)
 8008498:	dcc00315 	stw	r19,12(sp)
 800849c:	3029d17a 	srai	r20,r6,5
 80084a0:	2cc00417 	ldw	r19,16(r5)
 80084a4:	28800217 	ldw	r2,8(r5)
 80084a8:	dd400515 	stw	r21,20(sp)
 80084ac:	a4e7883a 	add	r19,r20,r19
 80084b0:	dc800215 	stw	r18,8(sp)
 80084b4:	dc400115 	stw	r17,4(sp)
 80084b8:	dc000015 	stw	r16,0(sp)
 80084bc:	dfc00615 	stw	ra,24(sp)
 80084c0:	9c000044 	addi	r16,r19,1
 80084c4:	2823883a 	mov	r17,r5
 80084c8:	302b883a 	mov	r21,r6
 80084cc:	2025883a 	mov	r18,r4
 80084d0:	29400117 	ldw	r5,4(r5)
 80084d4:	1400030e 	bge	r2,r16,80084e4 <__lshift+0x54>
 80084d8:	1085883a 	add	r2,r2,r2
 80084dc:	29400044 	addi	r5,r5,1
 80084e0:	143ffd16 	blt	r2,r16,80084d8 <__alt_data_end+0xfc0084d8>
 80084e4:	9009883a 	mov	r4,r18
 80084e8:	8007d180 	call	8007d18 <_Balloc>
 80084ec:	11c00504 	addi	r7,r2,20
 80084f0:	0500090e 	bge	zero,r20,8008518 <__lshift+0x88>
 80084f4:	3811883a 	mov	r8,r7
 80084f8:	0007883a 	mov	r3,zero
 80084fc:	40000015 	stw	zero,0(r8)
 8008500:	18c00044 	addi	r3,r3,1
 8008504:	42000104 	addi	r8,r8,4
 8008508:	1d3ffc1e 	bne	r3,r20,80084fc <__alt_data_end+0xfc0084fc>
 800850c:	18c7883a 	add	r3,r3,r3
 8008510:	18c7883a 	add	r3,r3,r3
 8008514:	38cf883a 	add	r7,r7,r3
 8008518:	89000417 	ldw	r4,16(r17)
 800851c:	88c00504 	addi	r3,r17,20
 8008520:	a98007cc 	andi	r6,r21,31
 8008524:	2109883a 	add	r4,r4,r4
 8008528:	2109883a 	add	r4,r4,r4
 800852c:	1909883a 	add	r4,r3,r4
 8008530:	30002326 	beq	r6,zero,80085c0 <__lshift+0x130>
 8008534:	01400804 	movi	r5,32
 8008538:	298bc83a 	sub	r5,r5,r6
 800853c:	0013883a 	mov	r9,zero
 8008540:	1a000017 	ldw	r8,0(r3)
 8008544:	3815883a 	mov	r10,r7
 8008548:	39c00104 	addi	r7,r7,4
 800854c:	4190983a 	sll	r8,r8,r6
 8008550:	18c00104 	addi	r3,r3,4
 8008554:	4a10b03a 	or	r8,r9,r8
 8008558:	3a3fff15 	stw	r8,-4(r7)
 800855c:	1a3fff17 	ldw	r8,-4(r3)
 8008560:	4152d83a 	srl	r9,r8,r5
 8008564:	193ff636 	bltu	r3,r4,8008540 <__alt_data_end+0xfc008540>
 8008568:	52400115 	stw	r9,4(r10)
 800856c:	48000126 	beq	r9,zero,8008574 <__lshift+0xe4>
 8008570:	9c000084 	addi	r16,r19,2
 8008574:	89000117 	ldw	r4,4(r17)
 8008578:	90c01317 	ldw	r3,76(r18)
 800857c:	843fffc4 	addi	r16,r16,-1
 8008580:	2109883a 	add	r4,r4,r4
 8008584:	2109883a 	add	r4,r4,r4
 8008588:	1907883a 	add	r3,r3,r4
 800858c:	19000017 	ldw	r4,0(r3)
 8008590:	14000415 	stw	r16,16(r2)
 8008594:	89000015 	stw	r4,0(r17)
 8008598:	1c400015 	stw	r17,0(r3)
 800859c:	dfc00617 	ldw	ra,24(sp)
 80085a0:	dd400517 	ldw	r21,20(sp)
 80085a4:	dd000417 	ldw	r20,16(sp)
 80085a8:	dcc00317 	ldw	r19,12(sp)
 80085ac:	dc800217 	ldw	r18,8(sp)
 80085b0:	dc400117 	ldw	r17,4(sp)
 80085b4:	dc000017 	ldw	r16,0(sp)
 80085b8:	dec00704 	addi	sp,sp,28
 80085bc:	f800283a 	ret
 80085c0:	19400017 	ldw	r5,0(r3)
 80085c4:	39c00104 	addi	r7,r7,4
 80085c8:	18c00104 	addi	r3,r3,4
 80085cc:	397fff15 	stw	r5,-4(r7)
 80085d0:	193ffb36 	bltu	r3,r4,80085c0 <__alt_data_end+0xfc0085c0>
 80085d4:	003fe706 	br	8008574 <__alt_data_end+0xfc008574>

080085d8 <__mcmp>:
 80085d8:	20800417 	ldw	r2,16(r4)
 80085dc:	28c00417 	ldw	r3,16(r5)
 80085e0:	10c5c83a 	sub	r2,r2,r3
 80085e4:	1000111e 	bne	r2,zero,800862c <__mcmp+0x54>
 80085e8:	18c7883a 	add	r3,r3,r3
 80085ec:	18c7883a 	add	r3,r3,r3
 80085f0:	21000504 	addi	r4,r4,20
 80085f4:	29400504 	addi	r5,r5,20
 80085f8:	20c5883a 	add	r2,r4,r3
 80085fc:	28cb883a 	add	r5,r5,r3
 8008600:	00000106 	br	8008608 <__mcmp+0x30>
 8008604:	20800a2e 	bgeu	r4,r2,8008630 <__mcmp+0x58>
 8008608:	10bfff04 	addi	r2,r2,-4
 800860c:	297fff04 	addi	r5,r5,-4
 8008610:	11800017 	ldw	r6,0(r2)
 8008614:	28c00017 	ldw	r3,0(r5)
 8008618:	30fffa26 	beq	r6,r3,8008604 <__alt_data_end+0xfc008604>
 800861c:	30c00236 	bltu	r6,r3,8008628 <__mcmp+0x50>
 8008620:	00800044 	movi	r2,1
 8008624:	f800283a 	ret
 8008628:	00bfffc4 	movi	r2,-1
 800862c:	f800283a 	ret
 8008630:	0005883a 	mov	r2,zero
 8008634:	f800283a 	ret

08008638 <__mdiff>:
 8008638:	defffb04 	addi	sp,sp,-20
 800863c:	dc000015 	stw	r16,0(sp)
 8008640:	2821883a 	mov	r16,r5
 8008644:	dcc00315 	stw	r19,12(sp)
 8008648:	300b883a 	mov	r5,r6
 800864c:	2027883a 	mov	r19,r4
 8008650:	8009883a 	mov	r4,r16
 8008654:	dc800215 	stw	r18,8(sp)
 8008658:	dfc00415 	stw	ra,16(sp)
 800865c:	dc400115 	stw	r17,4(sp)
 8008660:	3025883a 	mov	r18,r6
 8008664:	80085d80 	call	80085d8 <__mcmp>
 8008668:	10005226 	beq	r2,zero,80087b4 <__mdiff+0x17c>
 800866c:	10004c16 	blt	r2,zero,80087a0 <__mdiff+0x168>
 8008670:	0023883a 	mov	r17,zero
 8008674:	81400117 	ldw	r5,4(r16)
 8008678:	9809883a 	mov	r4,r19
 800867c:	8007d180 	call	8007d18 <_Balloc>
 8008680:	83400417 	ldw	r13,16(r16)
 8008684:	93800417 	ldw	r14,16(r18)
 8008688:	81000504 	addi	r4,r16,20
 800868c:	6b59883a 	add	r12,r13,r13
 8008690:	739d883a 	add	r14,r14,r14
 8008694:	6319883a 	add	r12,r12,r12
 8008698:	91800504 	addi	r6,r18,20
 800869c:	739d883a 	add	r14,r14,r14
 80086a0:	14400315 	stw	r17,12(r2)
 80086a4:	2319883a 	add	r12,r4,r12
 80086a8:	339d883a 	add	r14,r6,r14
 80086ac:	12400504 	addi	r9,r2,20
 80086b0:	0007883a 	mov	r3,zero
 80086b4:	22000017 	ldw	r8,0(r4)
 80086b8:	32800017 	ldw	r10,0(r6)
 80086bc:	4ac00104 	addi	r11,r9,4
 80086c0:	41ffffcc 	andi	r7,r8,65535
 80086c4:	38c7883a 	add	r3,r7,r3
 80086c8:	51ffffcc 	andi	r7,r10,65535
 80086cc:	19cfc83a 	sub	r7,r3,r7
 80086d0:	4010d43a 	srli	r8,r8,16
 80086d4:	5014d43a 	srli	r10,r10,16
 80086d8:	3807d43a 	srai	r3,r7,16
 80086dc:	39ffffcc 	andi	r7,r7,65535
 80086e0:	4291c83a 	sub	r8,r8,r10
 80086e4:	40c7883a 	add	r3,r8,r3
 80086e8:	1810943a 	slli	r8,r3,16
 80086ec:	31800104 	addi	r6,r6,4
 80086f0:	21000104 	addi	r4,r4,4
 80086f4:	41ceb03a 	or	r7,r8,r7
 80086f8:	49c00015 	stw	r7,0(r9)
 80086fc:	1807d43a 	srai	r3,r3,16
 8008700:	580b883a 	mov	r5,r11
 8008704:	5813883a 	mov	r9,r11
 8008708:	33bfea36 	bltu	r6,r14,80086b4 <__alt_data_end+0xfc0086b4>
 800870c:	2011883a 	mov	r8,r4
 8008710:	2300152e 	bgeu	r4,r12,8008768 <__mdiff+0x130>
 8008714:	21400017 	ldw	r5,0(r4)
 8008718:	4a400104 	addi	r9,r9,4
 800871c:	21000104 	addi	r4,r4,4
 8008720:	29ffffcc 	andi	r7,r5,65535
 8008724:	38c7883a 	add	r3,r7,r3
 8008728:	280ad43a 	srli	r5,r5,16
 800872c:	180dd43a 	srai	r6,r3,16
 8008730:	19ffffcc 	andi	r7,r3,65535
 8008734:	3147883a 	add	r3,r6,r5
 8008738:	180a943a 	slli	r5,r3,16
 800873c:	1807d43a 	srai	r3,r3,16
 8008740:	29ceb03a 	or	r7,r5,r7
 8008744:	49ffff15 	stw	r7,-4(r9)
 8008748:	233ff236 	bltu	r4,r12,8008714 <__alt_data_end+0xfc008714>
 800874c:	0206303a 	nor	r3,zero,r8
 8008750:	1b07883a 	add	r3,r3,r12
 8008754:	1806d0ba 	srli	r3,r3,2
 8008758:	18c00044 	addi	r3,r3,1
 800875c:	18c7883a 	add	r3,r3,r3
 8008760:	18c7883a 	add	r3,r3,r3
 8008764:	58cb883a 	add	r5,r11,r3
 8008768:	28ffff04 	addi	r3,r5,-4
 800876c:	3800041e 	bne	r7,zero,8008780 <__mdiff+0x148>
 8008770:	18ffff04 	addi	r3,r3,-4
 8008774:	19000017 	ldw	r4,0(r3)
 8008778:	6b7fffc4 	addi	r13,r13,-1
 800877c:	203ffc26 	beq	r4,zero,8008770 <__alt_data_end+0xfc008770>
 8008780:	13400415 	stw	r13,16(r2)
 8008784:	dfc00417 	ldw	ra,16(sp)
 8008788:	dcc00317 	ldw	r19,12(sp)
 800878c:	dc800217 	ldw	r18,8(sp)
 8008790:	dc400117 	ldw	r17,4(sp)
 8008794:	dc000017 	ldw	r16,0(sp)
 8008798:	dec00504 	addi	sp,sp,20
 800879c:	f800283a 	ret
 80087a0:	8005883a 	mov	r2,r16
 80087a4:	04400044 	movi	r17,1
 80087a8:	9021883a 	mov	r16,r18
 80087ac:	1025883a 	mov	r18,r2
 80087b0:	003fb006 	br	8008674 <__alt_data_end+0xfc008674>
 80087b4:	9809883a 	mov	r4,r19
 80087b8:	000b883a 	mov	r5,zero
 80087bc:	8007d180 	call	8007d18 <_Balloc>
 80087c0:	00c00044 	movi	r3,1
 80087c4:	10c00415 	stw	r3,16(r2)
 80087c8:	10000515 	stw	zero,20(r2)
 80087cc:	003fed06 	br	8008784 <__alt_data_end+0xfc008784>

080087d0 <__ulp>:
 80087d0:	295ffc2c 	andhi	r5,r5,32752
 80087d4:	00bf3034 	movhi	r2,64704
 80087d8:	2887883a 	add	r3,r5,r2
 80087dc:	00c0020e 	bge	zero,r3,80087e8 <__ulp+0x18>
 80087e0:	0005883a 	mov	r2,zero
 80087e4:	f800283a 	ret
 80087e8:	00c7c83a 	sub	r3,zero,r3
 80087ec:	180bd53a 	srai	r5,r3,20
 80087f0:	008004c4 	movi	r2,19
 80087f4:	11400a0e 	bge	r2,r5,8008820 <__ulp+0x50>
 80087f8:	00800c84 	movi	r2,50
 80087fc:	0007883a 	mov	r3,zero
 8008800:	11400516 	blt	r2,r5,8008818 <__ulp+0x48>
 8008804:	00800cc4 	movi	r2,51
 8008808:	114bc83a 	sub	r5,r2,r5
 800880c:	00800044 	movi	r2,1
 8008810:	1144983a 	sll	r2,r2,r5
 8008814:	f800283a 	ret
 8008818:	00800044 	movi	r2,1
 800881c:	f800283a 	ret
 8008820:	00800234 	movhi	r2,8
 8008824:	1147d83a 	sra	r3,r2,r5
 8008828:	0005883a 	mov	r2,zero
 800882c:	f800283a 	ret

08008830 <__b2d>:
 8008830:	defffa04 	addi	sp,sp,-24
 8008834:	dc000015 	stw	r16,0(sp)
 8008838:	24000417 	ldw	r16,16(r4)
 800883c:	dc400115 	stw	r17,4(sp)
 8008840:	24400504 	addi	r17,r4,20
 8008844:	8421883a 	add	r16,r16,r16
 8008848:	8421883a 	add	r16,r16,r16
 800884c:	8c21883a 	add	r16,r17,r16
 8008850:	dc800215 	stw	r18,8(sp)
 8008854:	84bfff17 	ldw	r18,-4(r16)
 8008858:	dd000415 	stw	r20,16(sp)
 800885c:	dcc00315 	stw	r19,12(sp)
 8008860:	9009883a 	mov	r4,r18
 8008864:	2829883a 	mov	r20,r5
 8008868:	dfc00515 	stw	ra,20(sp)
 800886c:	80080000 	call	8008000 <__hi0bits>
 8008870:	00c00804 	movi	r3,32
 8008874:	1887c83a 	sub	r3,r3,r2
 8008878:	a0c00015 	stw	r3,0(r20)
 800887c:	00c00284 	movi	r3,10
 8008880:	84ffff04 	addi	r19,r16,-4
 8008884:	18801216 	blt	r3,r2,80088d0 <__b2d+0xa0>
 8008888:	014002c4 	movi	r5,11
 800888c:	2889c83a 	sub	r4,r5,r2
 8008890:	9106d83a 	srl	r3,r18,r4
 8008894:	18cffc34 	orhi	r3,r3,16368
 8008898:	8cc0282e 	bgeu	r17,r19,800893c <__b2d+0x10c>
 800889c:	817ffe17 	ldw	r5,-8(r16)
 80088a0:	290ad83a 	srl	r5,r5,r4
 80088a4:	10800544 	addi	r2,r2,21
 80088a8:	9084983a 	sll	r2,r18,r2
 80088ac:	2884b03a 	or	r2,r5,r2
 80088b0:	dfc00517 	ldw	ra,20(sp)
 80088b4:	dd000417 	ldw	r20,16(sp)
 80088b8:	dcc00317 	ldw	r19,12(sp)
 80088bc:	dc800217 	ldw	r18,8(sp)
 80088c0:	dc400117 	ldw	r17,4(sp)
 80088c4:	dc000017 	ldw	r16,0(sp)
 80088c8:	dec00604 	addi	sp,sp,24
 80088cc:	f800283a 	ret
 80088d0:	113ffd44 	addi	r4,r2,-11
 80088d4:	8cc00f2e 	bgeu	r17,r19,8008914 <__b2d+0xe4>
 80088d8:	81bffe04 	addi	r6,r16,-8
 80088dc:	817ffe17 	ldw	r5,-8(r16)
 80088e0:	20001326 	beq	r4,zero,8008930 <__b2d+0x100>
 80088e4:	00c00ac4 	movi	r3,43
 80088e8:	1885c83a 	sub	r2,r3,r2
 80088ec:	2886d83a 	srl	r3,r5,r2
 80088f0:	9124983a 	sll	r18,r18,r4
 80088f4:	90e4b03a 	or	r18,r18,r3
 80088f8:	90cffc34 	orhi	r3,r18,16368
 80088fc:	8980112e 	bgeu	r17,r6,8008944 <__b2d+0x114>
 8008900:	81bffd17 	ldw	r6,-12(r16)
 8008904:	308cd83a 	srl	r6,r6,r2
 8008908:	2904983a 	sll	r2,r5,r4
 800890c:	1184b03a 	or	r2,r2,r6
 8008910:	003fe706 	br	80088b0 <__alt_data_end+0xfc0088b0>
 8008914:	20000526 	beq	r4,zero,800892c <__b2d+0xfc>
 8008918:	9124983a 	sll	r18,r18,r4
 800891c:	000d883a 	mov	r6,zero
 8008920:	000b883a 	mov	r5,zero
 8008924:	90cffc34 	orhi	r3,r18,16368
 8008928:	003ff706 	br	8008908 <__alt_data_end+0xfc008908>
 800892c:	000b883a 	mov	r5,zero
 8008930:	90cffc34 	orhi	r3,r18,16368
 8008934:	2805883a 	mov	r2,r5
 8008938:	003fdd06 	br	80088b0 <__alt_data_end+0xfc0088b0>
 800893c:	000b883a 	mov	r5,zero
 8008940:	003fd806 	br	80088a4 <__alt_data_end+0xfc0088a4>
 8008944:	000d883a 	mov	r6,zero
 8008948:	003fef06 	br	8008908 <__alt_data_end+0xfc008908>

0800894c <__d2b>:
 800894c:	defff704 	addi	sp,sp,-36
 8008950:	dc000215 	stw	r16,8(sp)
 8008954:	3021883a 	mov	r16,r6
 8008958:	dc400315 	stw	r17,12(sp)
 800895c:	8022907a 	slli	r17,r16,1
 8008960:	dd400715 	stw	r21,28(sp)
 8008964:	282b883a 	mov	r21,r5
 8008968:	01400044 	movi	r5,1
 800896c:	dd000615 	stw	r20,24(sp)
 8008970:	dcc00515 	stw	r19,20(sp)
 8008974:	dc800415 	stw	r18,16(sp)
 8008978:	dfc00815 	stw	ra,32(sp)
 800897c:	3829883a 	mov	r20,r7
 8008980:	dc800917 	ldw	r18,36(sp)
 8008984:	8822d57a 	srli	r17,r17,21
 8008988:	8007d180 	call	8007d18 <_Balloc>
 800898c:	1027883a 	mov	r19,r2
 8008990:	00800434 	movhi	r2,16
 8008994:	10bfffc4 	addi	r2,r2,-1
 8008998:	808c703a 	and	r6,r16,r2
 800899c:	88000126 	beq	r17,zero,80089a4 <__d2b+0x58>
 80089a0:	31800434 	orhi	r6,r6,16
 80089a4:	d9800015 	stw	r6,0(sp)
 80089a8:	a8001f26 	beq	r21,zero,8008a28 <__d2b+0xdc>
 80089ac:	d9000104 	addi	r4,sp,4
 80089b0:	dd400115 	stw	r21,4(sp)
 80089b4:	80080680 	call	8008068 <__lo0bits>
 80089b8:	d8c00017 	ldw	r3,0(sp)
 80089bc:	1000291e 	bne	r2,zero,8008a64 <__d2b+0x118>
 80089c0:	d9000117 	ldw	r4,4(sp)
 80089c4:	99000515 	stw	r4,20(r19)
 80089c8:	1820c03a 	cmpne	r16,r3,zero
 80089cc:	84000044 	addi	r16,r16,1
 80089d0:	98c00615 	stw	r3,24(r19)
 80089d4:	9c000415 	stw	r16,16(r19)
 80089d8:	88001b1e 	bne	r17,zero,8008a48 <__d2b+0xfc>
 80089dc:	800690ba 	slli	r3,r16,2
 80089e0:	10bef384 	addi	r2,r2,-1074
 80089e4:	a0800015 	stw	r2,0(r20)
 80089e8:	98c5883a 	add	r2,r19,r3
 80089ec:	11000417 	ldw	r4,16(r2)
 80089f0:	8020917a 	slli	r16,r16,5
 80089f4:	80080000 	call	8008000 <__hi0bits>
 80089f8:	8085c83a 	sub	r2,r16,r2
 80089fc:	90800015 	stw	r2,0(r18)
 8008a00:	9805883a 	mov	r2,r19
 8008a04:	dfc00817 	ldw	ra,32(sp)
 8008a08:	dd400717 	ldw	r21,28(sp)
 8008a0c:	dd000617 	ldw	r20,24(sp)
 8008a10:	dcc00517 	ldw	r19,20(sp)
 8008a14:	dc800417 	ldw	r18,16(sp)
 8008a18:	dc400317 	ldw	r17,12(sp)
 8008a1c:	dc000217 	ldw	r16,8(sp)
 8008a20:	dec00904 	addi	sp,sp,36
 8008a24:	f800283a 	ret
 8008a28:	d809883a 	mov	r4,sp
 8008a2c:	80080680 	call	8008068 <__lo0bits>
 8008a30:	d8c00017 	ldw	r3,0(sp)
 8008a34:	04000044 	movi	r16,1
 8008a38:	9c000415 	stw	r16,16(r19)
 8008a3c:	98c00515 	stw	r3,20(r19)
 8008a40:	10800804 	addi	r2,r2,32
 8008a44:	883fe526 	beq	r17,zero,80089dc <__alt_data_end+0xfc0089dc>
 8008a48:	8c7ef344 	addi	r17,r17,-1075
 8008a4c:	88a3883a 	add	r17,r17,r2
 8008a50:	00c00d44 	movi	r3,53
 8008a54:	a4400015 	stw	r17,0(r20)
 8008a58:	1885c83a 	sub	r2,r3,r2
 8008a5c:	90800015 	stw	r2,0(r18)
 8008a60:	003fe706 	br	8008a00 <__alt_data_end+0xfc008a00>
 8008a64:	01000804 	movi	r4,32
 8008a68:	2089c83a 	sub	r4,r4,r2
 8008a6c:	1908983a 	sll	r4,r3,r4
 8008a70:	d9400117 	ldw	r5,4(sp)
 8008a74:	1886d83a 	srl	r3,r3,r2
 8008a78:	2148b03a 	or	r4,r4,r5
 8008a7c:	99000515 	stw	r4,20(r19)
 8008a80:	d8c00015 	stw	r3,0(sp)
 8008a84:	003fd006 	br	80089c8 <__alt_data_end+0xfc0089c8>

08008a88 <__ratio>:
 8008a88:	defff904 	addi	sp,sp,-28
 8008a8c:	dc400315 	stw	r17,12(sp)
 8008a90:	2823883a 	mov	r17,r5
 8008a94:	d9400104 	addi	r5,sp,4
 8008a98:	dfc00615 	stw	ra,24(sp)
 8008a9c:	dcc00515 	stw	r19,20(sp)
 8008aa0:	dc800415 	stw	r18,16(sp)
 8008aa4:	2027883a 	mov	r19,r4
 8008aa8:	dc000215 	stw	r16,8(sp)
 8008aac:	80088300 	call	8008830 <__b2d>
 8008ab0:	8809883a 	mov	r4,r17
 8008ab4:	d80b883a 	mov	r5,sp
 8008ab8:	1025883a 	mov	r18,r2
 8008abc:	1821883a 	mov	r16,r3
 8008ac0:	80088300 	call	8008830 <__b2d>
 8008ac4:	8a400417 	ldw	r9,16(r17)
 8008ac8:	9a000417 	ldw	r8,16(r19)
 8008acc:	100d883a 	mov	r6,r2
 8008ad0:	d8800017 	ldw	r2,0(sp)
 8008ad4:	4251c83a 	sub	r8,r8,r9
 8008ad8:	4012917a 	slli	r9,r8,5
 8008adc:	da000117 	ldw	r8,4(sp)
 8008ae0:	4091c83a 	sub	r8,r8,r2
 8008ae4:	4251883a 	add	r8,r8,r9
 8008ae8:	02000d0e 	bge	zero,r8,8008b20 <__ratio+0x98>
 8008aec:	4010953a 	slli	r8,r8,20
 8008af0:	4421883a 	add	r16,r8,r16
 8008af4:	9009883a 	mov	r4,r18
 8008af8:	800b883a 	mov	r5,r16
 8008afc:	180f883a 	mov	r7,r3
 8008b00:	800e0000 	call	800e000 <__divdf3>
 8008b04:	dfc00617 	ldw	ra,24(sp)
 8008b08:	dcc00517 	ldw	r19,20(sp)
 8008b0c:	dc800417 	ldw	r18,16(sp)
 8008b10:	dc400317 	ldw	r17,12(sp)
 8008b14:	dc000217 	ldw	r16,8(sp)
 8008b18:	dec00704 	addi	sp,sp,28
 8008b1c:	f800283a 	ret
 8008b20:	4010953a 	slli	r8,r8,20
 8008b24:	1a07c83a 	sub	r3,r3,r8
 8008b28:	003ff206 	br	8008af4 <__alt_data_end+0xfc008af4>

08008b2c <_mprec_log10>:
 8008b2c:	defffe04 	addi	sp,sp,-8
 8008b30:	dc000015 	stw	r16,0(sp)
 8008b34:	dfc00115 	stw	ra,4(sp)
 8008b38:	008005c4 	movi	r2,23
 8008b3c:	2021883a 	mov	r16,r4
 8008b40:	11000d0e 	bge	r2,r4,8008b78 <_mprec_log10+0x4c>
 8008b44:	0005883a 	mov	r2,zero
 8008b48:	00cffc34 	movhi	r3,16368
 8008b4c:	843fffc4 	addi	r16,r16,-1
 8008b50:	1009883a 	mov	r4,r2
 8008b54:	180b883a 	mov	r5,r3
 8008b58:	000d883a 	mov	r6,zero
 8008b5c:	01d00934 	movhi	r7,16420
 8008b60:	800eb100 	call	800eb10 <__muldf3>
 8008b64:	803ff91e 	bne	r16,zero,8008b4c <__alt_data_end+0xfc008b4c>
 8008b68:	dfc00117 	ldw	ra,4(sp)
 8008b6c:	dc000017 	ldw	r16,0(sp)
 8008b70:	dec00204 	addi	sp,sp,8
 8008b74:	f800283a 	ret
 8008b78:	202090fa 	slli	r16,r4,3
 8008b7c:	00820074 	movhi	r2,2049
 8008b80:	108ae204 	addi	r2,r2,11144
 8008b84:	1421883a 	add	r16,r2,r16
 8008b88:	80800017 	ldw	r2,0(r16)
 8008b8c:	80c00117 	ldw	r3,4(r16)
 8008b90:	dfc00117 	ldw	ra,4(sp)
 8008b94:	dc000017 	ldw	r16,0(sp)
 8008b98:	dec00204 	addi	sp,sp,8
 8008b9c:	f800283a 	ret

08008ba0 <__copybits>:
 8008ba0:	297fffc4 	addi	r5,r5,-1
 8008ba4:	280fd17a 	srai	r7,r5,5
 8008ba8:	30c00417 	ldw	r3,16(r6)
 8008bac:	30800504 	addi	r2,r6,20
 8008bb0:	39c00044 	addi	r7,r7,1
 8008bb4:	18c7883a 	add	r3,r3,r3
 8008bb8:	39cf883a 	add	r7,r7,r7
 8008bbc:	18c7883a 	add	r3,r3,r3
 8008bc0:	39cf883a 	add	r7,r7,r7
 8008bc4:	10c7883a 	add	r3,r2,r3
 8008bc8:	21cf883a 	add	r7,r4,r7
 8008bcc:	10c00d2e 	bgeu	r2,r3,8008c04 <__copybits+0x64>
 8008bd0:	200b883a 	mov	r5,r4
 8008bd4:	12000017 	ldw	r8,0(r2)
 8008bd8:	29400104 	addi	r5,r5,4
 8008bdc:	10800104 	addi	r2,r2,4
 8008be0:	2a3fff15 	stw	r8,-4(r5)
 8008be4:	10fffb36 	bltu	r2,r3,8008bd4 <__alt_data_end+0xfc008bd4>
 8008be8:	1985c83a 	sub	r2,r3,r6
 8008bec:	10bffac4 	addi	r2,r2,-21
 8008bf0:	1004d0ba 	srli	r2,r2,2
 8008bf4:	10800044 	addi	r2,r2,1
 8008bf8:	1085883a 	add	r2,r2,r2
 8008bfc:	1085883a 	add	r2,r2,r2
 8008c00:	2089883a 	add	r4,r4,r2
 8008c04:	21c0032e 	bgeu	r4,r7,8008c14 <__copybits+0x74>
 8008c08:	20000015 	stw	zero,0(r4)
 8008c0c:	21000104 	addi	r4,r4,4
 8008c10:	21fffd36 	bltu	r4,r7,8008c08 <__alt_data_end+0xfc008c08>
 8008c14:	f800283a 	ret

08008c18 <__any_on>:
 8008c18:	20c00417 	ldw	r3,16(r4)
 8008c1c:	2805d17a 	srai	r2,r5,5
 8008c20:	21000504 	addi	r4,r4,20
 8008c24:	18800d0e 	bge	r3,r2,8008c5c <__any_on+0x44>
 8008c28:	18c7883a 	add	r3,r3,r3
 8008c2c:	18c7883a 	add	r3,r3,r3
 8008c30:	20c7883a 	add	r3,r4,r3
 8008c34:	20c0192e 	bgeu	r4,r3,8008c9c <__any_on+0x84>
 8008c38:	18bfff17 	ldw	r2,-4(r3)
 8008c3c:	18ffff04 	addi	r3,r3,-4
 8008c40:	1000041e 	bne	r2,zero,8008c54 <__any_on+0x3c>
 8008c44:	20c0142e 	bgeu	r4,r3,8008c98 <__any_on+0x80>
 8008c48:	18ffff04 	addi	r3,r3,-4
 8008c4c:	19400017 	ldw	r5,0(r3)
 8008c50:	283ffc26 	beq	r5,zero,8008c44 <__alt_data_end+0xfc008c44>
 8008c54:	00800044 	movi	r2,1
 8008c58:	f800283a 	ret
 8008c5c:	10c00a0e 	bge	r2,r3,8008c88 <__any_on+0x70>
 8008c60:	1085883a 	add	r2,r2,r2
 8008c64:	1085883a 	add	r2,r2,r2
 8008c68:	294007cc 	andi	r5,r5,31
 8008c6c:	2087883a 	add	r3,r4,r2
 8008c70:	283ff026 	beq	r5,zero,8008c34 <__alt_data_end+0xfc008c34>
 8008c74:	19800017 	ldw	r6,0(r3)
 8008c78:	3144d83a 	srl	r2,r6,r5
 8008c7c:	114a983a 	sll	r5,r2,r5
 8008c80:	29bff41e 	bne	r5,r6,8008c54 <__alt_data_end+0xfc008c54>
 8008c84:	003feb06 	br	8008c34 <__alt_data_end+0xfc008c34>
 8008c88:	1085883a 	add	r2,r2,r2
 8008c8c:	1085883a 	add	r2,r2,r2
 8008c90:	2087883a 	add	r3,r4,r2
 8008c94:	003fe706 	br	8008c34 <__alt_data_end+0xfc008c34>
 8008c98:	f800283a 	ret
 8008c9c:	0005883a 	mov	r2,zero
 8008ca0:	f800283a 	ret

08008ca4 <__fpclassifyd>:
 8008ca4:	00a00034 	movhi	r2,32768
 8008ca8:	10bfffc4 	addi	r2,r2,-1
 8008cac:	2884703a 	and	r2,r5,r2
 8008cb0:	10000726 	beq	r2,zero,8008cd0 <__fpclassifyd+0x2c>
 8008cb4:	00fffc34 	movhi	r3,65520
 8008cb8:	019ff834 	movhi	r6,32736
 8008cbc:	28c7883a 	add	r3,r5,r3
 8008cc0:	31bfffc4 	addi	r6,r6,-1
 8008cc4:	30c00536 	bltu	r6,r3,8008cdc <__fpclassifyd+0x38>
 8008cc8:	00800104 	movi	r2,4
 8008ccc:	f800283a 	ret
 8008cd0:	2000021e 	bne	r4,zero,8008cdc <__fpclassifyd+0x38>
 8008cd4:	00800084 	movi	r2,2
 8008cd8:	f800283a 	ret
 8008cdc:	00dffc34 	movhi	r3,32752
 8008ce0:	019ff834 	movhi	r6,32736
 8008ce4:	28cb883a 	add	r5,r5,r3
 8008ce8:	31bfffc4 	addi	r6,r6,-1
 8008cec:	317ff62e 	bgeu	r6,r5,8008cc8 <__alt_data_end+0xfc008cc8>
 8008cf0:	01400434 	movhi	r5,16
 8008cf4:	297fffc4 	addi	r5,r5,-1
 8008cf8:	28800236 	bltu	r5,r2,8008d04 <__fpclassifyd+0x60>
 8008cfc:	008000c4 	movi	r2,3
 8008d00:	f800283a 	ret
 8008d04:	10c00226 	beq	r2,r3,8008d10 <__fpclassifyd+0x6c>
 8008d08:	0005883a 	mov	r2,zero
 8008d0c:	f800283a 	ret
 8008d10:	2005003a 	cmpeq	r2,r4,zero
 8008d14:	f800283a 	ret

08008d18 <_sbrk_r>:
 8008d18:	defffd04 	addi	sp,sp,-12
 8008d1c:	dc000015 	stw	r16,0(sp)
 8008d20:	04020074 	movhi	r16,2049
 8008d24:	dc400115 	stw	r17,4(sp)
 8008d28:	84191d04 	addi	r16,r16,25716
 8008d2c:	2023883a 	mov	r17,r4
 8008d30:	2809883a 	mov	r4,r5
 8008d34:	dfc00215 	stw	ra,8(sp)
 8008d38:	80000015 	stw	zero,0(r16)
 8008d3c:	80105100 	call	8010510 <sbrk>
 8008d40:	00ffffc4 	movi	r3,-1
 8008d44:	10c00526 	beq	r2,r3,8008d5c <_sbrk_r+0x44>
 8008d48:	dfc00217 	ldw	ra,8(sp)
 8008d4c:	dc400117 	ldw	r17,4(sp)
 8008d50:	dc000017 	ldw	r16,0(sp)
 8008d54:	dec00304 	addi	sp,sp,12
 8008d58:	f800283a 	ret
 8008d5c:	80c00017 	ldw	r3,0(r16)
 8008d60:	183ff926 	beq	r3,zero,8008d48 <__alt_data_end+0xfc008d48>
 8008d64:	88c00015 	stw	r3,0(r17)
 8008d68:	003ff706 	br	8008d48 <__alt_data_end+0xfc008d48>

08008d6c <__sread>:
 8008d6c:	defffe04 	addi	sp,sp,-8
 8008d70:	dc000015 	stw	r16,0(sp)
 8008d74:	2821883a 	mov	r16,r5
 8008d78:	2940038f 	ldh	r5,14(r5)
 8008d7c:	dfc00115 	stw	ra,4(sp)
 8008d80:	800c17c0 	call	800c17c <_read_r>
 8008d84:	10000716 	blt	r2,zero,8008da4 <__sread+0x38>
 8008d88:	80c01417 	ldw	r3,80(r16)
 8008d8c:	1887883a 	add	r3,r3,r2
 8008d90:	80c01415 	stw	r3,80(r16)
 8008d94:	dfc00117 	ldw	ra,4(sp)
 8008d98:	dc000017 	ldw	r16,0(sp)
 8008d9c:	dec00204 	addi	sp,sp,8
 8008da0:	f800283a 	ret
 8008da4:	80c0030b 	ldhu	r3,12(r16)
 8008da8:	18fbffcc 	andi	r3,r3,61439
 8008dac:	80c0030d 	sth	r3,12(r16)
 8008db0:	dfc00117 	ldw	ra,4(sp)
 8008db4:	dc000017 	ldw	r16,0(sp)
 8008db8:	dec00204 	addi	sp,sp,8
 8008dbc:	f800283a 	ret

08008dc0 <__seofread>:
 8008dc0:	0005883a 	mov	r2,zero
 8008dc4:	f800283a 	ret

08008dc8 <__swrite>:
 8008dc8:	2880030b 	ldhu	r2,12(r5)
 8008dcc:	defffb04 	addi	sp,sp,-20
 8008dd0:	dcc00315 	stw	r19,12(sp)
 8008dd4:	dc800215 	stw	r18,8(sp)
 8008dd8:	dc400115 	stw	r17,4(sp)
 8008ddc:	dc000015 	stw	r16,0(sp)
 8008de0:	dfc00415 	stw	ra,16(sp)
 8008de4:	10c0400c 	andi	r3,r2,256
 8008de8:	2821883a 	mov	r16,r5
 8008dec:	2027883a 	mov	r19,r4
 8008df0:	3025883a 	mov	r18,r6
 8008df4:	3823883a 	mov	r17,r7
 8008df8:	18000526 	beq	r3,zero,8008e10 <__swrite+0x48>
 8008dfc:	2940038f 	ldh	r5,14(r5)
 8008e00:	000d883a 	mov	r6,zero
 8008e04:	01c00084 	movi	r7,2
 8008e08:	800bfc40 	call	800bfc4 <_lseek_r>
 8008e0c:	8080030b 	ldhu	r2,12(r16)
 8008e10:	8140038f 	ldh	r5,14(r16)
 8008e14:	10bbffcc 	andi	r2,r2,61439
 8008e18:	9809883a 	mov	r4,r19
 8008e1c:	900d883a 	mov	r6,r18
 8008e20:	880f883a 	mov	r7,r17
 8008e24:	8080030d 	sth	r2,12(r16)
 8008e28:	dfc00417 	ldw	ra,16(sp)
 8008e2c:	dcc00317 	ldw	r19,12(sp)
 8008e30:	dc800217 	ldw	r18,8(sp)
 8008e34:	dc400117 	ldw	r17,4(sp)
 8008e38:	dc000017 	ldw	r16,0(sp)
 8008e3c:	dec00504 	addi	sp,sp,20
 8008e40:	800b6101 	jmpi	800b610 <_write_r>

08008e44 <__sseek>:
 8008e44:	defffe04 	addi	sp,sp,-8
 8008e48:	dc000015 	stw	r16,0(sp)
 8008e4c:	2821883a 	mov	r16,r5
 8008e50:	2940038f 	ldh	r5,14(r5)
 8008e54:	dfc00115 	stw	ra,4(sp)
 8008e58:	800bfc40 	call	800bfc4 <_lseek_r>
 8008e5c:	00ffffc4 	movi	r3,-1
 8008e60:	10c00826 	beq	r2,r3,8008e84 <__sseek+0x40>
 8008e64:	80c0030b 	ldhu	r3,12(r16)
 8008e68:	80801415 	stw	r2,80(r16)
 8008e6c:	18c40014 	ori	r3,r3,4096
 8008e70:	80c0030d 	sth	r3,12(r16)
 8008e74:	dfc00117 	ldw	ra,4(sp)
 8008e78:	dc000017 	ldw	r16,0(sp)
 8008e7c:	dec00204 	addi	sp,sp,8
 8008e80:	f800283a 	ret
 8008e84:	80c0030b 	ldhu	r3,12(r16)
 8008e88:	18fbffcc 	andi	r3,r3,61439
 8008e8c:	80c0030d 	sth	r3,12(r16)
 8008e90:	dfc00117 	ldw	ra,4(sp)
 8008e94:	dc000017 	ldw	r16,0(sp)
 8008e98:	dec00204 	addi	sp,sp,8
 8008e9c:	f800283a 	ret

08008ea0 <__sclose>:
 8008ea0:	2940038f 	ldh	r5,14(r5)
 8008ea4:	800b66c1 	jmpi	800b66c <_close_r>

08008ea8 <strcmp>:
 8008ea8:	2144b03a 	or	r2,r4,r5
 8008eac:	108000cc 	andi	r2,r2,3
 8008eb0:	1000171e 	bne	r2,zero,8008f10 <strcmp+0x68>
 8008eb4:	20800017 	ldw	r2,0(r4)
 8008eb8:	28c00017 	ldw	r3,0(r5)
 8008ebc:	10c0141e 	bne	r2,r3,8008f10 <strcmp+0x68>
 8008ec0:	027fbff4 	movhi	r9,65279
 8008ec4:	4a7fbfc4 	addi	r9,r9,-257
 8008ec8:	0086303a 	nor	r3,zero,r2
 8008ecc:	02202074 	movhi	r8,32897
 8008ed0:	1245883a 	add	r2,r2,r9
 8008ed4:	42202004 	addi	r8,r8,-32640
 8008ed8:	10c4703a 	and	r2,r2,r3
 8008edc:	1204703a 	and	r2,r2,r8
 8008ee0:	10000226 	beq	r2,zero,8008eec <strcmp+0x44>
 8008ee4:	00001706 	br	8008f44 <strcmp+0x9c>
 8008ee8:	1000161e 	bne	r2,zero,8008f44 <strcmp+0x9c>
 8008eec:	21000104 	addi	r4,r4,4
 8008ef0:	20c00017 	ldw	r3,0(r4)
 8008ef4:	29400104 	addi	r5,r5,4
 8008ef8:	29800017 	ldw	r6,0(r5)
 8008efc:	1a4f883a 	add	r7,r3,r9
 8008f00:	00c4303a 	nor	r2,zero,r3
 8008f04:	3884703a 	and	r2,r7,r2
 8008f08:	1204703a 	and	r2,r2,r8
 8008f0c:	19bff626 	beq	r3,r6,8008ee8 <__alt_data_end+0xfc008ee8>
 8008f10:	20800007 	ldb	r2,0(r4)
 8008f14:	1000051e 	bne	r2,zero,8008f2c <strcmp+0x84>
 8008f18:	00000606 	br	8008f34 <strcmp+0x8c>
 8008f1c:	21000044 	addi	r4,r4,1
 8008f20:	20800007 	ldb	r2,0(r4)
 8008f24:	29400044 	addi	r5,r5,1
 8008f28:	10000226 	beq	r2,zero,8008f34 <strcmp+0x8c>
 8008f2c:	28c00007 	ldb	r3,0(r5)
 8008f30:	10fffa26 	beq	r2,r3,8008f1c <__alt_data_end+0xfc008f1c>
 8008f34:	20800003 	ldbu	r2,0(r4)
 8008f38:	28c00003 	ldbu	r3,0(r5)
 8008f3c:	10c5c83a 	sub	r2,r2,r3
 8008f40:	f800283a 	ret
 8008f44:	0005883a 	mov	r2,zero
 8008f48:	f800283a 	ret

08008f4c <__ssprint_r>:
 8008f4c:	30800217 	ldw	r2,8(r6)
 8008f50:	defff604 	addi	sp,sp,-40
 8008f54:	ddc00715 	stw	r23,28(sp)
 8008f58:	dcc00315 	stw	r19,12(sp)
 8008f5c:	dfc00915 	stw	ra,36(sp)
 8008f60:	df000815 	stw	fp,32(sp)
 8008f64:	dd800615 	stw	r22,24(sp)
 8008f68:	dd400515 	stw	r21,20(sp)
 8008f6c:	dd000415 	stw	r20,16(sp)
 8008f70:	dc800215 	stw	r18,8(sp)
 8008f74:	dc400115 	stw	r17,4(sp)
 8008f78:	dc000015 	stw	r16,0(sp)
 8008f7c:	3027883a 	mov	r19,r6
 8008f80:	35c00017 	ldw	r23,0(r6)
 8008f84:	10005526 	beq	r2,zero,80090dc <__ssprint_r+0x190>
 8008f88:	2029883a 	mov	r20,r4
 8008f8c:	29000017 	ldw	r4,0(r5)
 8008f90:	2821883a 	mov	r16,r5
 8008f94:	0039883a 	mov	fp,zero
 8008f98:	0023883a 	mov	r17,zero
 8008f9c:	88003926 	beq	r17,zero,8009084 <__ssprint_r+0x138>
 8008fa0:	84800217 	ldw	r18,8(r16)
 8008fa4:	902d883a 	mov	r22,r18
 8008fa8:	8c803a36 	bltu	r17,r18,8009094 <__ssprint_r+0x148>
 8008fac:	80c0030b 	ldhu	r3,12(r16)
 8008fb0:	1881200c 	andi	r2,r3,1152
 8008fb4:	10002626 	beq	r2,zero,8009050 <__ssprint_r+0x104>
 8008fb8:	80800517 	ldw	r2,20(r16)
 8008fbc:	81400417 	ldw	r5,16(r16)
 8008fc0:	89c00044 	addi	r7,r17,1
 8008fc4:	108d883a 	add	r6,r2,r2
 8008fc8:	3085883a 	add	r2,r6,r2
 8008fcc:	100cd7fa 	srli	r6,r2,31
 8008fd0:	216dc83a 	sub	r22,r4,r5
 8008fd4:	3d89883a 	add	r4,r7,r22
 8008fd8:	3085883a 	add	r2,r6,r2
 8008fdc:	1025d07a 	srai	r18,r2,1
 8008fe0:	900d883a 	mov	r6,r18
 8008fe4:	9100022e 	bgeu	r18,r4,8008ff0 <__ssprint_r+0xa4>
 8008fe8:	2025883a 	mov	r18,r4
 8008fec:	200d883a 	mov	r6,r4
 8008ff0:	18c1000c 	andi	r3,r3,1024
 8008ff4:	a009883a 	mov	r4,r20
 8008ff8:	18002926 	beq	r3,zero,80090a0 <__ssprint_r+0x154>
 8008ffc:	300b883a 	mov	r5,r6
 8009000:	800722c0 	call	800722c <_malloc_r>
 8009004:	102b883a 	mov	r21,r2
 8009008:	10002b26 	beq	r2,zero,80090b8 <__ssprint_r+0x16c>
 800900c:	81400417 	ldw	r5,16(r16)
 8009010:	1009883a 	mov	r4,r2
 8009014:	b00d883a 	mov	r6,r22
 8009018:	8007abc0 	call	8007abc <memcpy>
 800901c:	8080030b 	ldhu	r2,12(r16)
 8009020:	00fedfc4 	movi	r3,-1153
 8009024:	10c4703a 	and	r2,r2,r3
 8009028:	10802014 	ori	r2,r2,128
 800902c:	8080030d 	sth	r2,12(r16)
 8009030:	ad89883a 	add	r4,r21,r22
 8009034:	95adc83a 	sub	r22,r18,r22
 8009038:	84800515 	stw	r18,20(r16)
 800903c:	85800215 	stw	r22,8(r16)
 8009040:	85400415 	stw	r21,16(r16)
 8009044:	81000015 	stw	r4,0(r16)
 8009048:	8825883a 	mov	r18,r17
 800904c:	882d883a 	mov	r22,r17
 8009050:	e00b883a 	mov	r5,fp
 8009054:	b00d883a 	mov	r6,r22
 8009058:	800c0200 	call	800c020 <memmove>
 800905c:	80c00217 	ldw	r3,8(r16)
 8009060:	81000017 	ldw	r4,0(r16)
 8009064:	98800217 	ldw	r2,8(r19)
 8009068:	1ca5c83a 	sub	r18,r3,r18
 800906c:	2589883a 	add	r4,r4,r22
 8009070:	84800215 	stw	r18,8(r16)
 8009074:	81000015 	stw	r4,0(r16)
 8009078:	1463c83a 	sub	r17,r2,r17
 800907c:	9c400215 	stw	r17,8(r19)
 8009080:	88001626 	beq	r17,zero,80090dc <__ssprint_r+0x190>
 8009084:	bf000017 	ldw	fp,0(r23)
 8009088:	bc400117 	ldw	r17,4(r23)
 800908c:	bdc00204 	addi	r23,r23,8
 8009090:	003fc206 	br	8008f9c <__alt_data_end+0xfc008f9c>
 8009094:	8825883a 	mov	r18,r17
 8009098:	882d883a 	mov	r22,r17
 800909c:	003fec06 	br	8009050 <__alt_data_end+0xfc009050>
 80090a0:	800c1d80 	call	800c1d8 <_realloc_r>
 80090a4:	102b883a 	mov	r21,r2
 80090a8:	103fe11e 	bne	r2,zero,8009030 <__alt_data_end+0xfc009030>
 80090ac:	81400417 	ldw	r5,16(r16)
 80090b0:	a009883a 	mov	r4,r20
 80090b4:	8006b340 	call	8006b34 <_free_r>
 80090b8:	80c0030b 	ldhu	r3,12(r16)
 80090bc:	00800304 	movi	r2,12
 80090c0:	a0800015 	stw	r2,0(r20)
 80090c4:	18c01014 	ori	r3,r3,64
 80090c8:	80c0030d 	sth	r3,12(r16)
 80090cc:	00bfffc4 	movi	r2,-1
 80090d0:	98000215 	stw	zero,8(r19)
 80090d4:	98000115 	stw	zero,4(r19)
 80090d8:	00000206 	br	80090e4 <__ssprint_r+0x198>
 80090dc:	98000115 	stw	zero,4(r19)
 80090e0:	0005883a 	mov	r2,zero
 80090e4:	dfc00917 	ldw	ra,36(sp)
 80090e8:	df000817 	ldw	fp,32(sp)
 80090ec:	ddc00717 	ldw	r23,28(sp)
 80090f0:	dd800617 	ldw	r22,24(sp)
 80090f4:	dd400517 	ldw	r21,20(sp)
 80090f8:	dd000417 	ldw	r20,16(sp)
 80090fc:	dcc00317 	ldw	r19,12(sp)
 8009100:	dc800217 	ldw	r18,8(sp)
 8009104:	dc400117 	ldw	r17,4(sp)
 8009108:	dc000017 	ldw	r16,0(sp)
 800910c:	dec00a04 	addi	sp,sp,40
 8009110:	f800283a 	ret

08009114 <___svfiprintf_internal_r>:
 8009114:	2880030b 	ldhu	r2,12(r5)
 8009118:	deffc904 	addi	sp,sp,-220
 800911c:	dd403215 	stw	r21,200(sp)
 8009120:	dfc03615 	stw	ra,216(sp)
 8009124:	df003515 	stw	fp,212(sp)
 8009128:	ddc03415 	stw	r23,208(sp)
 800912c:	dd803315 	stw	r22,204(sp)
 8009130:	dd003115 	stw	r20,196(sp)
 8009134:	dcc03015 	stw	r19,192(sp)
 8009138:	dc802f15 	stw	r18,188(sp)
 800913c:	dc402e15 	stw	r17,184(sp)
 8009140:	dc002d15 	stw	r16,180(sp)
 8009144:	d9402715 	stw	r5,156(sp)
 8009148:	d9002915 	stw	r4,164(sp)
 800914c:	1080200c 	andi	r2,r2,128
 8009150:	d9c02315 	stw	r7,140(sp)
 8009154:	302b883a 	mov	r21,r6
 8009158:	10000226 	beq	r2,zero,8009164 <___svfiprintf_internal_r+0x50>
 800915c:	28800417 	ldw	r2,16(r5)
 8009160:	1003ce26 	beq	r2,zero,800a09c <___svfiprintf_internal_r+0xf88>
 8009164:	dac01a04 	addi	r11,sp,104
 8009168:	da8019c4 	addi	r10,sp,103
 800916c:	dc802917 	ldw	r18,164(sp)
 8009170:	dd002717 	ldw	r20,156(sp)
 8009174:	04c20074 	movhi	r19,2049
 8009178:	dac01e15 	stw	r11,120(sp)
 800917c:	5a97c83a 	sub	r11,r11,r10
 8009180:	9ccb1404 	addi	r19,r19,11344
 8009184:	da801f15 	stw	r10,124(sp)
 8009188:	dec01a15 	stw	sp,104(sp)
 800918c:	d8001c15 	stw	zero,112(sp)
 8009190:	d8001b15 	stw	zero,108(sp)
 8009194:	d8002a15 	stw	zero,168(sp)
 8009198:	d8002415 	stw	zero,144(sp)
 800919c:	d811883a 	mov	r8,sp
 80091a0:	dac02b15 	stw	r11,172(sp)
 80091a4:	a8800007 	ldb	r2,0(r21)
 80091a8:	10026826 	beq	r2,zero,8009b4c <___svfiprintf_internal_r+0xa38>
 80091ac:	01000944 	movi	r4,37
 80091b0:	11026626 	beq	r2,r4,8009b4c <___svfiprintf_internal_r+0xa38>
 80091b4:	a805883a 	mov	r2,r21
 80091b8:	00000106 	br	80091c0 <___svfiprintf_internal_r+0xac>
 80091bc:	19000326 	beq	r3,r4,80091cc <___svfiprintf_internal_r+0xb8>
 80091c0:	10800044 	addi	r2,r2,1
 80091c4:	10c00007 	ldb	r3,0(r2)
 80091c8:	183ffc1e 	bne	r3,zero,80091bc <__alt_data_end+0xfc0091bc>
 80091cc:	1561c83a 	sub	r16,r2,r21
 80091d0:	102d883a 	mov	r22,r2
 80091d4:	80000e26 	beq	r16,zero,8009210 <___svfiprintf_internal_r+0xfc>
 80091d8:	d8c01c17 	ldw	r3,112(sp)
 80091dc:	d8801b17 	ldw	r2,108(sp)
 80091e0:	45400015 	stw	r21,0(r8)
 80091e4:	1c07883a 	add	r3,r3,r16
 80091e8:	10800044 	addi	r2,r2,1
 80091ec:	d8c01c15 	stw	r3,112(sp)
 80091f0:	44000115 	stw	r16,4(r8)
 80091f4:	d8801b15 	stw	r2,108(sp)
 80091f8:	00c001c4 	movi	r3,7
 80091fc:	1882d616 	blt	r3,r2,8009d58 <___svfiprintf_internal_r+0xc44>
 8009200:	42000204 	addi	r8,r8,8
 8009204:	da802417 	ldw	r10,144(sp)
 8009208:	5415883a 	add	r10,r10,r16
 800920c:	da802415 	stw	r10,144(sp)
 8009210:	b0800007 	ldb	r2,0(r22)
 8009214:	10027326 	beq	r2,zero,8009be4 <___svfiprintf_internal_r+0xad0>
 8009218:	b1000047 	ldb	r4,1(r22)
 800921c:	b5400044 	addi	r21,r22,1
 8009220:	d8001d85 	stb	zero,118(sp)
 8009224:	000d883a 	mov	r6,zero
 8009228:	043fffc4 	movi	r16,-1
 800922c:	d8002115 	stw	zero,132(sp)
 8009230:	0023883a 	mov	r17,zero
 8009234:	00c01604 	movi	r3,88
 8009238:	01400244 	movi	r5,9
 800923c:	02400a84 	movi	r9,42
 8009240:	01c01b04 	movi	r7,108
 8009244:	ad400044 	addi	r21,r21,1
 8009248:	20bff804 	addi	r2,r4,-32
 800924c:	18819536 	bltu	r3,r2,80098a4 <___svfiprintf_internal_r+0x790>
 8009250:	100490ba 	slli	r2,r2,2
 8009254:	02c20074 	movhi	r11,2049
 8009258:	5ae49a04 	addi	r11,r11,-28056
 800925c:	12c5883a 	add	r2,r2,r11
 8009260:	10800017 	ldw	r2,0(r2)
 8009264:	1000683a 	jmp	r2
 8009268:	080097a4 	muli	zero,at,606
 800926c:	080098a4 	muli	zero,at,610
 8009270:	080098a4 	muli	zero,at,610
 8009274:	08009798 	cmpnei	zero,at,606
 8009278:	080098a4 	muli	zero,at,610
 800927c:	080098a4 	muli	zero,at,610
 8009280:	080098a4 	muli	zero,at,610
 8009284:	080098a4 	muli	zero,at,610
 8009288:	080098a4 	muli	zero,at,610
 800928c:	080098a4 	muli	zero,at,610
 8009290:	080094c8 	cmpgei	zero,at,595
 8009294:	080098d8 	cmpnei	zero,at,611
 8009298:	080098a4 	muli	zero,at,610
 800929c:	080094f0 	cmpltui	zero,at,595
 80092a0:	080098e4 	muli	zero,at,611
 80092a4:	080098a4 	muli	zero,at,610
 80092a8:	080098cc 	andi	zero,at,611
 80092ac:	0800986c 	andhi	zero,at,609
 80092b0:	0800986c 	andhi	zero,at,609
 80092b4:	0800986c 	andhi	zero,at,609
 80092b8:	0800986c 	andhi	zero,at,609
 80092bc:	0800986c 	andhi	zero,at,609
 80092c0:	0800986c 	andhi	zero,at,609
 80092c4:	0800986c 	andhi	zero,at,609
 80092c8:	0800986c 	andhi	zero,at,609
 80092cc:	0800986c 	andhi	zero,at,609
 80092d0:	080098a4 	muli	zero,at,610
 80092d4:	080098a4 	muli	zero,at,610
 80092d8:	080098a4 	muli	zero,at,610
 80092dc:	080098a4 	muli	zero,at,610
 80092e0:	080098a4 	muli	zero,at,610
 80092e4:	080098a4 	muli	zero,at,610
 80092e8:	080098a4 	muli	zero,at,610
 80092ec:	080098a4 	muli	zero,at,610
 80092f0:	080098a4 	muli	zero,at,610
 80092f4:	080098a4 	muli	zero,at,610
 80092f8:	08009804 	addi	zero,at,608
 80092fc:	080098a4 	muli	zero,at,610
 8009300:	080098a4 	muli	zero,at,610
 8009304:	080098a4 	muli	zero,at,610
 8009308:	080098a4 	muli	zero,at,610
 800930c:	080098a4 	muli	zero,at,610
 8009310:	080098a4 	muli	zero,at,610
 8009314:	080098a4 	muli	zero,at,610
 8009318:	080098a4 	muli	zero,at,610
 800931c:	080098a4 	muli	zero,at,610
 8009320:	080098a4 	muli	zero,at,610
 8009324:	08009498 	cmpnei	zero,at,594
 8009328:	080098a4 	muli	zero,at,610
 800932c:	080098a4 	muli	zero,at,610
 8009330:	080098a4 	muli	zero,at,610
 8009334:	080098a4 	muli	zero,at,610
 8009338:	080098a4 	muli	zero,at,610
 800933c:	080093cc 	andi	zero,at,591
 8009340:	080098a4 	muli	zero,at,610
 8009344:	080098a4 	muli	zero,at,610
 8009348:	080096f8 	rdprs	zero,at,603
 800934c:	080098a4 	muli	zero,at,610
 8009350:	080098a4 	muli	zero,at,610
 8009354:	080098a4 	muli	zero,at,610
 8009358:	080098a4 	muli	zero,at,610
 800935c:	080098a4 	muli	zero,at,610
 8009360:	080098a4 	muli	zero,at,610
 8009364:	080098a4 	muli	zero,at,610
 8009368:	080098a4 	muli	zero,at,610
 800936c:	080098a4 	muli	zero,at,610
 8009370:	080098a4 	muli	zero,at,610
 8009374:	080095e4 	muli	zero,at,599
 8009378:	080095a4 	muli	zero,at,598
 800937c:	080098a4 	muli	zero,at,610
 8009380:	080098a4 	muli	zero,at,610
 8009384:	080098a4 	muli	zero,at,610
 8009388:	08009754 	ori	zero,at,605
 800938c:	080095a4 	muli	zero,at,598
 8009390:	080098a4 	muli	zero,at,610
 8009394:	080098a4 	muli	zero,at,610
 8009398:	08009740 	call	800974 <__reset-0x77ff68c>
 800939c:	080098a4 	muli	zero,at,610
 80093a0:	08009760 	cmpeqi	zero,at,605
 80093a4:	0800949c 	xori	zero,at,594
 80093a8:	08009564 	muli	zero,at,597
 80093ac:	08009558 	cmpnei	zero,at,597
 80093b0:	080098a4 	muli	zero,at,610
 80093b4:	080094fc 	xorhi	zero,at,595
 80093b8:	080098a4 	muli	zero,at,610
 80093bc:	080093d0 	cmplti	zero,at,591
 80093c0:	080098a4 	muli	zero,at,610
 80093c4:	080098a4 	muli	zero,at,610
 80093c8:	080097c0 	call	80097c <__reset-0x77ff684>
 80093cc:	8c400414 	ori	r17,r17,16
 80093d0:	88c0080c 	andi	r3,r17,32
 80093d4:	d8802317 	ldw	r2,140(sp)
 80093d8:	18029626 	beq	r3,zero,8009e34 <___svfiprintf_internal_r+0xd20>
 80093dc:	dac02317 	ldw	r11,140(sp)
 80093e0:	12400017 	ldw	r9,0(r2)
 80093e4:	12800117 	ldw	r10,4(r2)
 80093e8:	5ac00204 	addi	r11,r11,8
 80093ec:	dac02315 	stw	r11,140(sp)
 80093f0:	00800044 	movi	r2,1
 80093f4:	4a86b03a 	or	r3,r9,r10
 80093f8:	d8001d85 	stb	zero,118(sp)
 80093fc:	8039883a 	mov	fp,r16
 8009400:	0017883a 	mov	r11,zero
 8009404:	80000216 	blt	r16,zero,8009410 <___svfiprintf_internal_r+0x2fc>
 8009408:	013fdfc4 	movi	r4,-129
 800940c:	8922703a 	and	r17,r17,r4
 8009410:	1801d01e 	bne	r3,zero,8009b54 <___svfiprintf_internal_r+0xa40>
 8009414:	80024426 	beq	r16,zero,8009d28 <___svfiprintf_internal_r+0xc14>
 8009418:	10803fcc 	andi	r2,r2,255
 800941c:	00c00044 	movi	r3,1
 8009420:	10c2b326 	beq	r2,r3,8009ef0 <___svfiprintf_internal_r+0xddc>
 8009424:	00c00084 	movi	r3,2
 8009428:	10c25b26 	beq	r2,r3,8009d98 <___svfiprintf_internal_r+0xc84>
 800942c:	d8c01a04 	addi	r3,sp,104
 8009430:	4808d0fa 	srli	r4,r9,3
 8009434:	500a977a 	slli	r5,r10,29
 8009438:	5014d0fa 	srli	r10,r10,3
 800943c:	4a4001cc 	andi	r9,r9,7
 8009440:	48800c04 	addi	r2,r9,48
 8009444:	18ffffc4 	addi	r3,r3,-1
 8009448:	2912b03a 	or	r9,r5,r4
 800944c:	18800005 	stb	r2,0(r3)
 8009450:	4a88b03a 	or	r4,r9,r10
 8009454:	203ff61e 	bne	r4,zero,8009430 <__alt_data_end+0xfc009430>
 8009458:	8900004c 	andi	r4,r17,1
 800945c:	d8c02615 	stw	r3,152(sp)
 8009460:	2002951e 	bne	r4,zero,8009eb8 <___svfiprintf_internal_r+0xda4>
 8009464:	da801e17 	ldw	r10,120(sp)
 8009468:	50f9c83a 	sub	fp,r10,r3
 800946c:	df002015 	stw	fp,128(sp)
 8009470:	e400010e 	bge	fp,r16,8009478 <___svfiprintf_internal_r+0x364>
 8009474:	dc002015 	stw	r16,128(sp)
 8009478:	5ac03fcc 	andi	r11,r11,255
 800947c:	5ac0201c 	xori	r11,r11,128
 8009480:	5affe004 	addi	r11,r11,-128
 8009484:	58006326 	beq	r11,zero,8009614 <___svfiprintf_internal_r+0x500>
 8009488:	d8c02017 	ldw	r3,128(sp)
 800948c:	18c00044 	addi	r3,r3,1
 8009490:	d8c02015 	stw	r3,128(sp)
 8009494:	00005f06 	br	8009614 <___svfiprintf_internal_r+0x500>
 8009498:	8c400414 	ori	r17,r17,16
 800949c:	88c0080c 	andi	r3,r17,32
 80094a0:	d8802317 	ldw	r2,140(sp)
 80094a4:	18027826 	beq	r3,zero,8009e88 <___svfiprintf_internal_r+0xd74>
 80094a8:	dac02317 	ldw	r11,140(sp)
 80094ac:	12400017 	ldw	r9,0(r2)
 80094b0:	12800117 	ldw	r10,4(r2)
 80094b4:	5ac00204 	addi	r11,r11,8
 80094b8:	dac02315 	stw	r11,140(sp)
 80094bc:	0005883a 	mov	r2,zero
 80094c0:	4a86b03a 	or	r3,r9,r10
 80094c4:	003fcc06 	br	80093f8 <__alt_data_end+0xfc0093f8>
 80094c8:	da802317 	ldw	r10,140(sp)
 80094cc:	dac02317 	ldw	r11,140(sp)
 80094d0:	52800017 	ldw	r10,0(r10)
 80094d4:	58800104 	addi	r2,r11,4
 80094d8:	da802115 	stw	r10,132(sp)
 80094dc:	50028a0e 	bge	r10,zero,8009f08 <___svfiprintf_internal_r+0xdf4>
 80094e0:	da802117 	ldw	r10,132(sp)
 80094e4:	d8802315 	stw	r2,140(sp)
 80094e8:	0295c83a 	sub	r10,zero,r10
 80094ec:	da802115 	stw	r10,132(sp)
 80094f0:	8c400114 	ori	r17,r17,4
 80094f4:	a9000007 	ldb	r4,0(r21)
 80094f8:	003f5206 	br	8009244 <__alt_data_end+0xfc009244>
 80094fc:	da802317 	ldw	r10,140(sp)
 8009500:	dac02317 	ldw	r11,140(sp)
 8009504:	d8001d85 	stb	zero,118(sp)
 8009508:	52800017 	ldw	r10,0(r10)
 800950c:	5dc00104 	addi	r23,r11,4
 8009510:	da802615 	stw	r10,152(sp)
 8009514:	5002eb26 	beq	r10,zero,800a0c4 <___svfiprintf_internal_r+0xfb0>
 8009518:	d9002617 	ldw	r4,152(sp)
 800951c:	8002d716 	blt	r16,zero,800a07c <___svfiprintf_internal_r+0xf68>
 8009520:	000b883a 	mov	r5,zero
 8009524:	800d883a 	mov	r6,r16
 8009528:	da002c15 	stw	r8,176(sp)
 800952c:	80079d40 	call	80079d4 <memchr>
 8009530:	da002c17 	ldw	r8,176(sp)
 8009534:	1002fb26 	beq	r2,zero,800a124 <___svfiprintf_internal_r+0x1010>
 8009538:	d8c02617 	ldw	r3,152(sp)
 800953c:	10f9c83a 	sub	fp,r2,r3
 8009540:	8700010e 	bge	r16,fp,8009548 <___svfiprintf_internal_r+0x434>
 8009544:	8039883a 	mov	fp,r16
 8009548:	dac01d83 	ldbu	r11,118(sp)
 800954c:	ddc02315 	stw	r23,140(sp)
 8009550:	0021883a 	mov	r16,zero
 8009554:	003fc506 	br	800946c <__alt_data_end+0xfc00946c>
 8009558:	8c400814 	ori	r17,r17,32
 800955c:	a9000007 	ldb	r4,0(r21)
 8009560:	003f3806 	br	8009244 <__alt_data_end+0xfc009244>
 8009564:	dac02317 	ldw	r11,140(sp)
 8009568:	00800c04 	movi	r2,48
 800956c:	d8801d05 	stb	r2,116(sp)
 8009570:	5a400017 	ldw	r9,0(r11)
 8009574:	00801e04 	movi	r2,120
 8009578:	d8801d45 	stb	r2,117(sp)
 800957c:	00820074 	movhi	r2,2049
 8009580:	108aab04 	addi	r2,r2,10924
 8009584:	5ac00104 	addi	r11,r11,4
 8009588:	d8802a15 	stw	r2,168(sp)
 800958c:	0015883a 	mov	r10,zero
 8009590:	8c400094 	ori	r17,r17,2
 8009594:	dac02315 	stw	r11,140(sp)
 8009598:	00800084 	movi	r2,2
 800959c:	4807883a 	mov	r3,r9
 80095a0:	003f9506 	br	80093f8 <__alt_data_end+0xfc0093f8>
 80095a4:	d9801d85 	stb	r6,118(sp)
 80095a8:	8880080c 	andi	r2,r17,32
 80095ac:	d8c02317 	ldw	r3,140(sp)
 80095b0:	10009926 	beq	r2,zero,8009818 <___svfiprintf_internal_r+0x704>
 80095b4:	dac02317 	ldw	r11,140(sp)
 80095b8:	18800117 	ldw	r2,4(r3)
 80095bc:	1a400017 	ldw	r9,0(r3)
 80095c0:	5ac00204 	addi	r11,r11,8
 80095c4:	dac02315 	stw	r11,140(sp)
 80095c8:	1015883a 	mov	r10,r2
 80095cc:	10009d16 	blt	r2,zero,8009844 <___svfiprintf_internal_r+0x730>
 80095d0:	dac01d83 	ldbu	r11,118(sp)
 80095d4:	8039883a 	mov	fp,r16
 80095d8:	00800044 	movi	r2,1
 80095dc:	4a86b03a 	or	r3,r9,r10
 80095e0:	003f8806 	br	8009404 <__alt_data_end+0xfc009404>
 80095e4:	dac02317 	ldw	r11,140(sp)
 80095e8:	00c00044 	movi	r3,1
 80095ec:	da801004 	addi	r10,sp,64
 80095f0:	58800017 	ldw	r2,0(r11)
 80095f4:	5ac00104 	addi	r11,r11,4
 80095f8:	d8c02015 	stw	r3,128(sp)
 80095fc:	d8001d85 	stb	zero,118(sp)
 8009600:	d8801005 	stb	r2,64(sp)
 8009604:	dac02315 	stw	r11,140(sp)
 8009608:	1839883a 	mov	fp,r3
 800960c:	da802615 	stw	r10,152(sp)
 8009610:	0021883a 	mov	r16,zero
 8009614:	8a80008c 	andi	r10,r17,2
 8009618:	da802215 	stw	r10,136(sp)
 800961c:	50000326 	beq	r10,zero,800962c <___svfiprintf_internal_r+0x518>
 8009620:	dac02017 	ldw	r11,128(sp)
 8009624:	5ac00084 	addi	r11,r11,2
 8009628:	dac02015 	stw	r11,128(sp)
 800962c:	88c0210c 	andi	r3,r17,132
 8009630:	d8c02515 	stw	r3,148(sp)
 8009634:	1800bb1e 	bne	r3,zero,8009924 <___svfiprintf_internal_r+0x810>
 8009638:	da802117 	ldw	r10,132(sp)
 800963c:	dac02017 	ldw	r11,128(sp)
 8009640:	52edc83a 	sub	r22,r10,r11
 8009644:	0580b70e 	bge	zero,r22,8009924 <___svfiprintf_internal_r+0x810>
 8009648:	02400404 	movi	r9,16
 800964c:	d8c01c17 	ldw	r3,112(sp)
 8009650:	d8801b17 	ldw	r2,108(sp)
 8009654:	4d82a70e 	bge	r9,r22,800a0f4 <___svfiprintf_internal_r+0xfe0>
 8009658:	01420074 	movhi	r5,2049
 800965c:	294b1804 	addi	r5,r5,11360
 8009660:	d9402815 	stw	r5,160(sp)
 8009664:	05c001c4 	movi	r23,7
 8009668:	00000306 	br	8009678 <___svfiprintf_internal_r+0x564>
 800966c:	b5bffc04 	addi	r22,r22,-16
 8009670:	42000204 	addi	r8,r8,8
 8009674:	4d80150e 	bge	r9,r22,80096cc <___svfiprintf_internal_r+0x5b8>
 8009678:	02820074 	movhi	r10,2049
 800967c:	18c00404 	addi	r3,r3,16
 8009680:	10800044 	addi	r2,r2,1
 8009684:	528b1804 	addi	r10,r10,11360
 8009688:	42800015 	stw	r10,0(r8)
 800968c:	42400115 	stw	r9,4(r8)
 8009690:	d8c01c15 	stw	r3,112(sp)
 8009694:	d8801b15 	stw	r2,108(sp)
 8009698:	b8bff40e 	bge	r23,r2,800966c <__alt_data_end+0xfc00966c>
 800969c:	9009883a 	mov	r4,r18
 80096a0:	a00b883a 	mov	r5,r20
 80096a4:	d9801a04 	addi	r6,sp,104
 80096a8:	da402c15 	stw	r9,176(sp)
 80096ac:	8008f4c0 	call	8008f4c <__ssprint_r>
 80096b0:	da402c17 	ldw	r9,176(sp)
 80096b4:	1001511e 	bne	r2,zero,8009bfc <___svfiprintf_internal_r+0xae8>
 80096b8:	b5bffc04 	addi	r22,r22,-16
 80096bc:	d8c01c17 	ldw	r3,112(sp)
 80096c0:	d8801b17 	ldw	r2,108(sp)
 80096c4:	d811883a 	mov	r8,sp
 80096c8:	4dbfeb16 	blt	r9,r22,8009678 <__alt_data_end+0xfc009678>
 80096cc:	dac02817 	ldw	r11,160(sp)
 80096d0:	b0c7883a 	add	r3,r22,r3
 80096d4:	10800044 	addi	r2,r2,1
 80096d8:	42c00015 	stw	r11,0(r8)
 80096dc:	45800115 	stw	r22,4(r8)
 80096e0:	d8c01c15 	stw	r3,112(sp)
 80096e4:	d8801b15 	stw	r2,108(sp)
 80096e8:	010001c4 	movi	r4,7
 80096ec:	2081dd16 	blt	r4,r2,8009e64 <___svfiprintf_internal_r+0xd50>
 80096f0:	42000204 	addi	r8,r8,8
 80096f4:	00008d06 	br	800992c <___svfiprintf_internal_r+0x818>
 80096f8:	00c20074 	movhi	r3,2049
 80096fc:	18caa604 	addi	r3,r3,10904
 8009700:	d8c02a15 	stw	r3,168(sp)
 8009704:	d9801d85 	stb	r6,118(sp)
 8009708:	88c0080c 	andi	r3,r17,32
 800970c:	d8802317 	ldw	r2,140(sp)
 8009710:	18003226 	beq	r3,zero,80097dc <___svfiprintf_internal_r+0x6c8>
 8009714:	da802317 	ldw	r10,140(sp)
 8009718:	12400017 	ldw	r9,0(r2)
 800971c:	52800204 	addi	r10,r10,8
 8009720:	da802315 	stw	r10,140(sp)
 8009724:	12800117 	ldw	r10,4(r2)
 8009728:	8880004c 	andi	r2,r17,1
 800972c:	1001be26 	beq	r2,zero,8009e28 <___svfiprintf_internal_r+0xd14>
 8009730:	4a86b03a 	or	r3,r9,r10
 8009734:	1802291e 	bne	r3,zero,8009fdc <___svfiprintf_internal_r+0xec8>
 8009738:	00800084 	movi	r2,2
 800973c:	003f2e06 	br	80093f8 <__alt_data_end+0xfc0093f8>
 8009740:	a9000007 	ldb	r4,0(r21)
 8009744:	a805883a 	mov	r2,r21
 8009748:	21c22a26 	beq	r4,r7,8009ff4 <___svfiprintf_internal_r+0xee0>
 800974c:	8c400414 	ori	r17,r17,16
 8009750:	003ebc06 	br	8009244 <__alt_data_end+0xfc009244>
 8009754:	8c401014 	ori	r17,r17,64
 8009758:	a9000007 	ldb	r4,0(r21)
 800975c:	003eb906 	br	8009244 <__alt_data_end+0xfc009244>
 8009760:	d9801d85 	stb	r6,118(sp)
 8009764:	8880080c 	andi	r2,r17,32
 8009768:	1002131e 	bne	r2,zero,8009fb8 <___svfiprintf_internal_r+0xea4>
 800976c:	8880040c 	andi	r2,r17,16
 8009770:	1002241e 	bne	r2,zero,800a004 <___svfiprintf_internal_r+0xef0>
 8009774:	8c40100c 	andi	r17,r17,64
 8009778:	88022226 	beq	r17,zero,800a004 <___svfiprintf_internal_r+0xef0>
 800977c:	dac02317 	ldw	r11,140(sp)
 8009780:	da802417 	ldw	r10,144(sp)
 8009784:	58800017 	ldw	r2,0(r11)
 8009788:	5ac00104 	addi	r11,r11,4
 800978c:	dac02315 	stw	r11,140(sp)
 8009790:	1280000d 	sth	r10,0(r2)
 8009794:	003e8306 	br	80091a4 <__alt_data_end+0xfc0091a4>
 8009798:	8c400054 	ori	r17,r17,1
 800979c:	a9000007 	ldb	r4,0(r21)
 80097a0:	003ea806 	br	8009244 <__alt_data_end+0xfc009244>
 80097a4:	30803fcc 	andi	r2,r6,255
 80097a8:	1080201c 	xori	r2,r2,128
 80097ac:	10bfe004 	addi	r2,r2,-128
 80097b0:	1001ff1e 	bne	r2,zero,8009fb0 <___svfiprintf_internal_r+0xe9c>
 80097b4:	01800804 	movi	r6,32
 80097b8:	a9000007 	ldb	r4,0(r21)
 80097bc:	003ea106 	br	8009244 <__alt_data_end+0xfc009244>
 80097c0:	02c20074 	movhi	r11,2049
 80097c4:	5acaab04 	addi	r11,r11,10924
 80097c8:	dac02a15 	stw	r11,168(sp)
 80097cc:	d9801d85 	stb	r6,118(sp)
 80097d0:	88c0080c 	andi	r3,r17,32
 80097d4:	d8802317 	ldw	r2,140(sp)
 80097d8:	183fce1e 	bne	r3,zero,8009714 <__alt_data_end+0xfc009714>
 80097dc:	88c0040c 	andi	r3,r17,16
 80097e0:	1801ed1e 	bne	r3,zero,8009f98 <___svfiprintf_internal_r+0xe84>
 80097e4:	88c0100c 	andi	r3,r17,64
 80097e8:	18021a26 	beq	r3,zero,800a054 <___svfiprintf_internal_r+0xf40>
 80097ec:	da802317 	ldw	r10,140(sp)
 80097f0:	1240000b 	ldhu	r9,0(r2)
 80097f4:	52800104 	addi	r10,r10,4
 80097f8:	da802315 	stw	r10,140(sp)
 80097fc:	0015883a 	mov	r10,zero
 8009800:	003fc906 	br	8009728 <__alt_data_end+0xfc009728>
 8009804:	8c400414 	ori	r17,r17,16
 8009808:	d9801d85 	stb	r6,118(sp)
 800980c:	8880080c 	andi	r2,r17,32
 8009810:	d8c02317 	ldw	r3,140(sp)
 8009814:	103f671e 	bne	r2,zero,80095b4 <__alt_data_end+0xfc0095b4>
 8009818:	8880040c 	andi	r2,r17,16
 800981c:	1001c71e 	bne	r2,zero,8009f3c <___svfiprintf_internal_r+0xe28>
 8009820:	8880100c 	andi	r2,r17,64
 8009824:	1001c526 	beq	r2,zero,8009f3c <___svfiprintf_internal_r+0xe28>
 8009828:	1a40000f 	ldh	r9,0(r3)
 800982c:	dac02317 	ldw	r11,140(sp)
 8009830:	4815d7fa 	srai	r10,r9,31
 8009834:	5ac00104 	addi	r11,r11,4
 8009838:	dac02315 	stw	r11,140(sp)
 800983c:	5005883a 	mov	r2,r10
 8009840:	103f630e 	bge	r2,zero,80095d0 <__alt_data_end+0xfc0095d0>
 8009844:	0253c83a 	sub	r9,zero,r9
 8009848:	4804c03a 	cmpne	r2,r9,zero
 800984c:	0295c83a 	sub	r10,zero,r10
 8009850:	5095c83a 	sub	r10,r10,r2
 8009854:	02c00b44 	movi	r11,45
 8009858:	dac01d85 	stb	r11,118(sp)
 800985c:	8039883a 	mov	fp,r16
 8009860:	00800044 	movi	r2,1
 8009864:	4a86b03a 	or	r3,r9,r10
 8009868:	003ee606 	br	8009404 <__alt_data_end+0xfc009404>
 800986c:	a815883a 	mov	r10,r21
 8009870:	d8002115 	stw	zero,132(sp)
 8009874:	20bff404 	addi	r2,r4,-48
 8009878:	51000007 	ldb	r4,0(r10)
 800987c:	da802117 	ldw	r10,132(sp)
 8009880:	ad400044 	addi	r21,r21,1
 8009884:	52c002a4 	muli	r11,r10,10
 8009888:	a815883a 	mov	r10,r21
 800988c:	5885883a 	add	r2,r11,r2
 8009890:	d8802115 	stw	r2,132(sp)
 8009894:	20bff404 	addi	r2,r4,-48
 8009898:	28bff72e 	bgeu	r5,r2,8009878 <__alt_data_end+0xfc009878>
 800989c:	20bff804 	addi	r2,r4,-32
 80098a0:	18be6b2e 	bgeu	r3,r2,8009250 <__alt_data_end+0xfc009250>
 80098a4:	d9801d85 	stb	r6,118(sp)
 80098a8:	2000ce26 	beq	r4,zero,8009be4 <___svfiprintf_internal_r+0xad0>
 80098ac:	02800044 	movi	r10,1
 80098b0:	dac01004 	addi	r11,sp,64
 80098b4:	da802015 	stw	r10,128(sp)
 80098b8:	d9001005 	stb	r4,64(sp)
 80098bc:	d8001d85 	stb	zero,118(sp)
 80098c0:	5039883a 	mov	fp,r10
 80098c4:	dac02615 	stw	r11,152(sp)
 80098c8:	003f5106 	br	8009610 <__alt_data_end+0xfc009610>
 80098cc:	8c402014 	ori	r17,r17,128
 80098d0:	a9000007 	ldb	r4,0(r21)
 80098d4:	003e5b06 	br	8009244 <__alt_data_end+0xfc009244>
 80098d8:	01800ac4 	movi	r6,43
 80098dc:	a9000007 	ldb	r4,0(r21)
 80098e0:	003e5806 	br	8009244 <__alt_data_end+0xfc009244>
 80098e4:	a9000007 	ldb	r4,0(r21)
 80098e8:	aa800044 	addi	r10,r21,1
 80098ec:	22421426 	beq	r4,r9,800a140 <___svfiprintf_internal_r+0x102c>
 80098f0:	20bff404 	addi	r2,r4,-48
 80098f4:	502b883a 	mov	r21,r10
 80098f8:	0021883a 	mov	r16,zero
 80098fc:	28be5236 	bltu	r5,r2,8009248 <__alt_data_end+0xfc009248>
 8009900:	a9000007 	ldb	r4,0(r21)
 8009904:	840002a4 	muli	r16,r16,10
 8009908:	ad400044 	addi	r21,r21,1
 800990c:	1421883a 	add	r16,r2,r16
 8009910:	20bff404 	addi	r2,r4,-48
 8009914:	28bffa2e 	bgeu	r5,r2,8009900 <__alt_data_end+0xfc009900>
 8009918:	803e4b0e 	bge	r16,zero,8009248 <__alt_data_end+0xfc009248>
 800991c:	043fffc4 	movi	r16,-1
 8009920:	003e4906 	br	8009248 <__alt_data_end+0xfc009248>
 8009924:	d8c01c17 	ldw	r3,112(sp)
 8009928:	d8801b17 	ldw	r2,108(sp)
 800992c:	d9001d87 	ldb	r4,118(sp)
 8009930:	20000b26 	beq	r4,zero,8009960 <___svfiprintf_internal_r+0x84c>
 8009934:	d9001d84 	addi	r4,sp,118
 8009938:	18c00044 	addi	r3,r3,1
 800993c:	10800044 	addi	r2,r2,1
 8009940:	41000015 	stw	r4,0(r8)
 8009944:	01000044 	movi	r4,1
 8009948:	41000115 	stw	r4,4(r8)
 800994c:	d8c01c15 	stw	r3,112(sp)
 8009950:	d8801b15 	stw	r2,108(sp)
 8009954:	010001c4 	movi	r4,7
 8009958:	20811e16 	blt	r4,r2,8009dd4 <___svfiprintf_internal_r+0xcc0>
 800995c:	42000204 	addi	r8,r8,8
 8009960:	da802217 	ldw	r10,136(sp)
 8009964:	50000b26 	beq	r10,zero,8009994 <___svfiprintf_internal_r+0x880>
 8009968:	d9001d04 	addi	r4,sp,116
 800996c:	18c00084 	addi	r3,r3,2
 8009970:	10800044 	addi	r2,r2,1
 8009974:	41000015 	stw	r4,0(r8)
 8009978:	01000084 	movi	r4,2
 800997c:	41000115 	stw	r4,4(r8)
 8009980:	d8c01c15 	stw	r3,112(sp)
 8009984:	d8801b15 	stw	r2,108(sp)
 8009988:	010001c4 	movi	r4,7
 800998c:	20811a16 	blt	r4,r2,8009df8 <___svfiprintf_internal_r+0xce4>
 8009990:	42000204 	addi	r8,r8,8
 8009994:	dac02517 	ldw	r11,148(sp)
 8009998:	01002004 	movi	r4,128
 800999c:	5900a826 	beq	r11,r4,8009c40 <___svfiprintf_internal_r+0xb2c>
 80099a0:	8721c83a 	sub	r16,r16,fp
 80099a4:	0400260e 	bge	zero,r16,8009a40 <___svfiprintf_internal_r+0x92c>
 80099a8:	01c00404 	movi	r7,16
 80099ac:	3c01a50e 	bge	r7,r16,800a044 <___svfiprintf_internal_r+0xf30>
 80099b0:	01020074 	movhi	r4,2049
 80099b4:	210b1404 	addi	r4,r4,11344
 80099b8:	d9002215 	stw	r4,136(sp)
 80099bc:	382f883a 	mov	r23,r7
 80099c0:	058001c4 	movi	r22,7
 80099c4:	00000306 	br	80099d4 <___svfiprintf_internal_r+0x8c0>
 80099c8:	843ffc04 	addi	r16,r16,-16
 80099cc:	42000204 	addi	r8,r8,8
 80099d0:	bc00110e 	bge	r23,r16,8009a18 <___svfiprintf_internal_r+0x904>
 80099d4:	18c00404 	addi	r3,r3,16
 80099d8:	10800044 	addi	r2,r2,1
 80099dc:	44c00015 	stw	r19,0(r8)
 80099e0:	45c00115 	stw	r23,4(r8)
 80099e4:	d8c01c15 	stw	r3,112(sp)
 80099e8:	d8801b15 	stw	r2,108(sp)
 80099ec:	b0bff60e 	bge	r22,r2,80099c8 <__alt_data_end+0xfc0099c8>
 80099f0:	9009883a 	mov	r4,r18
 80099f4:	a00b883a 	mov	r5,r20
 80099f8:	d9801a04 	addi	r6,sp,104
 80099fc:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009a00:	10007e1e 	bne	r2,zero,8009bfc <___svfiprintf_internal_r+0xae8>
 8009a04:	843ffc04 	addi	r16,r16,-16
 8009a08:	d8c01c17 	ldw	r3,112(sp)
 8009a0c:	d8801b17 	ldw	r2,108(sp)
 8009a10:	d811883a 	mov	r8,sp
 8009a14:	bc3fef16 	blt	r23,r16,80099d4 <__alt_data_end+0xfc0099d4>
 8009a18:	da802217 	ldw	r10,136(sp)
 8009a1c:	1c07883a 	add	r3,r3,r16
 8009a20:	10800044 	addi	r2,r2,1
 8009a24:	42800015 	stw	r10,0(r8)
 8009a28:	44000115 	stw	r16,4(r8)
 8009a2c:	d8c01c15 	stw	r3,112(sp)
 8009a30:	d8801b15 	stw	r2,108(sp)
 8009a34:	010001c4 	movi	r4,7
 8009a38:	2080ce16 	blt	r4,r2,8009d74 <___svfiprintf_internal_r+0xc60>
 8009a3c:	42000204 	addi	r8,r8,8
 8009a40:	dac02617 	ldw	r11,152(sp)
 8009a44:	e0c7883a 	add	r3,fp,r3
 8009a48:	10800044 	addi	r2,r2,1
 8009a4c:	42c00015 	stw	r11,0(r8)
 8009a50:	47000115 	stw	fp,4(r8)
 8009a54:	d8c01c15 	stw	r3,112(sp)
 8009a58:	d8801b15 	stw	r2,108(sp)
 8009a5c:	010001c4 	movi	r4,7
 8009a60:	2080a316 	blt	r4,r2,8009cf0 <___svfiprintf_internal_r+0xbdc>
 8009a64:	42000204 	addi	r8,r8,8
 8009a68:	8c40010c 	andi	r17,r17,4
 8009a6c:	88002b26 	beq	r17,zero,8009b1c <___svfiprintf_internal_r+0xa08>
 8009a70:	da802117 	ldw	r10,132(sp)
 8009a74:	dac02017 	ldw	r11,128(sp)
 8009a78:	52e1c83a 	sub	r16,r10,r11
 8009a7c:	0400270e 	bge	zero,r16,8009b1c <___svfiprintf_internal_r+0xa08>
 8009a80:	04400404 	movi	r17,16
 8009a84:	d8801b17 	ldw	r2,108(sp)
 8009a88:	8c019e0e 	bge	r17,r16,800a104 <___svfiprintf_internal_r+0xff0>
 8009a8c:	01420074 	movhi	r5,2049
 8009a90:	294b1804 	addi	r5,r5,11360
 8009a94:	d9402815 	stw	r5,160(sp)
 8009a98:	070001c4 	movi	fp,7
 8009a9c:	00000306 	br	8009aac <___svfiprintf_internal_r+0x998>
 8009aa0:	843ffc04 	addi	r16,r16,-16
 8009aa4:	42000204 	addi	r8,r8,8
 8009aa8:	8c00130e 	bge	r17,r16,8009af8 <___svfiprintf_internal_r+0x9e4>
 8009aac:	02820074 	movhi	r10,2049
 8009ab0:	18c00404 	addi	r3,r3,16
 8009ab4:	10800044 	addi	r2,r2,1
 8009ab8:	528b1804 	addi	r10,r10,11360
 8009abc:	42800015 	stw	r10,0(r8)
 8009ac0:	44400115 	stw	r17,4(r8)
 8009ac4:	d8c01c15 	stw	r3,112(sp)
 8009ac8:	d8801b15 	stw	r2,108(sp)
 8009acc:	e0bff40e 	bge	fp,r2,8009aa0 <__alt_data_end+0xfc009aa0>
 8009ad0:	9009883a 	mov	r4,r18
 8009ad4:	a00b883a 	mov	r5,r20
 8009ad8:	d9801a04 	addi	r6,sp,104
 8009adc:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009ae0:	1000461e 	bne	r2,zero,8009bfc <___svfiprintf_internal_r+0xae8>
 8009ae4:	843ffc04 	addi	r16,r16,-16
 8009ae8:	d8c01c17 	ldw	r3,112(sp)
 8009aec:	d8801b17 	ldw	r2,108(sp)
 8009af0:	d811883a 	mov	r8,sp
 8009af4:	8c3fed16 	blt	r17,r16,8009aac <__alt_data_end+0xfc009aac>
 8009af8:	dac02817 	ldw	r11,160(sp)
 8009afc:	1c07883a 	add	r3,r3,r16
 8009b00:	10800044 	addi	r2,r2,1
 8009b04:	42c00015 	stw	r11,0(r8)
 8009b08:	44000115 	stw	r16,4(r8)
 8009b0c:	d8c01c15 	stw	r3,112(sp)
 8009b10:	d8801b15 	stw	r2,108(sp)
 8009b14:	010001c4 	movi	r4,7
 8009b18:	2080fe16 	blt	r4,r2,8009f14 <___svfiprintf_internal_r+0xe00>
 8009b1c:	dd802017 	ldw	r22,128(sp)
 8009b20:	da802117 	ldw	r10,132(sp)
 8009b24:	b280010e 	bge	r22,r10,8009b2c <___svfiprintf_internal_r+0xa18>
 8009b28:	502d883a 	mov	r22,r10
 8009b2c:	dac02417 	ldw	r11,144(sp)
 8009b30:	5d97883a 	add	r11,r11,r22
 8009b34:	dac02415 	stw	r11,144(sp)
 8009b38:	1800751e 	bne	r3,zero,8009d10 <___svfiprintf_internal_r+0xbfc>
 8009b3c:	a8800007 	ldb	r2,0(r21)
 8009b40:	d8001b15 	stw	zero,108(sp)
 8009b44:	d811883a 	mov	r8,sp
 8009b48:	103d981e 	bne	r2,zero,80091ac <__alt_data_end+0xfc0091ac>
 8009b4c:	a82d883a 	mov	r22,r21
 8009b50:	003daf06 	br	8009210 <__alt_data_end+0xfc009210>
 8009b54:	10803fcc 	andi	r2,r2,255
 8009b58:	00c00044 	movi	r3,1
 8009b5c:	10fe311e 	bne	r2,r3,8009424 <__alt_data_end+0xfc009424>
 8009b60:	5000e126 	beq	r10,zero,8009ee8 <___svfiprintf_internal_r+0xdd4>
 8009b64:	dc402015 	stw	r17,128(sp)
 8009b68:	dc002215 	stw	r16,136(sp)
 8009b6c:	dd801a04 	addi	r22,sp,104
 8009b70:	402f883a 	mov	r23,r8
 8009b74:	5839883a 	mov	fp,r11
 8009b78:	4821883a 	mov	r16,r9
 8009b7c:	5023883a 	mov	r17,r10
 8009b80:	8009883a 	mov	r4,r16
 8009b84:	880b883a 	mov	r5,r17
 8009b88:	01800284 	movi	r6,10
 8009b8c:	000f883a 	mov	r7,zero
 8009b90:	800d0a80 	call	800d0a8 <__umoddi3>
 8009b94:	10800c04 	addi	r2,r2,48
 8009b98:	b5bfffc4 	addi	r22,r22,-1
 8009b9c:	8009883a 	mov	r4,r16
 8009ba0:	880b883a 	mov	r5,r17
 8009ba4:	01800284 	movi	r6,10
 8009ba8:	000f883a 	mov	r7,zero
 8009bac:	b0800005 	stb	r2,0(r22)
 8009bb0:	800cae80 	call	800cae8 <__udivdi3>
 8009bb4:	1021883a 	mov	r16,r2
 8009bb8:	10c4b03a 	or	r2,r2,r3
 8009bbc:	1823883a 	mov	r17,r3
 8009bc0:	103fef1e 	bne	r2,zero,8009b80 <__alt_data_end+0xfc009b80>
 8009bc4:	da801e17 	ldw	r10,120(sp)
 8009bc8:	e017883a 	mov	r11,fp
 8009bcc:	b811883a 	mov	r8,r23
 8009bd0:	dc402017 	ldw	r17,128(sp)
 8009bd4:	dc002217 	ldw	r16,136(sp)
 8009bd8:	dd802615 	stw	r22,152(sp)
 8009bdc:	55b9c83a 	sub	fp,r10,r22
 8009be0:	003e2206 	br	800946c <__alt_data_end+0xfc00946c>
 8009be4:	d8801c17 	ldw	r2,112(sp)
 8009be8:	10000426 	beq	r2,zero,8009bfc <___svfiprintf_internal_r+0xae8>
 8009bec:	d9002917 	ldw	r4,164(sp)
 8009bf0:	d9402717 	ldw	r5,156(sp)
 8009bf4:	d9801a04 	addi	r6,sp,104
 8009bf8:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009bfc:	da802717 	ldw	r10,156(sp)
 8009c00:	5080030b 	ldhu	r2,12(r10)
 8009c04:	1080100c 	andi	r2,r2,64
 8009c08:	1000511e 	bne	r2,zero,8009d50 <___svfiprintf_internal_r+0xc3c>
 8009c0c:	d8802417 	ldw	r2,144(sp)
 8009c10:	dfc03617 	ldw	ra,216(sp)
 8009c14:	df003517 	ldw	fp,212(sp)
 8009c18:	ddc03417 	ldw	r23,208(sp)
 8009c1c:	dd803317 	ldw	r22,204(sp)
 8009c20:	dd403217 	ldw	r21,200(sp)
 8009c24:	dd003117 	ldw	r20,196(sp)
 8009c28:	dcc03017 	ldw	r19,192(sp)
 8009c2c:	dc802f17 	ldw	r18,188(sp)
 8009c30:	dc402e17 	ldw	r17,184(sp)
 8009c34:	dc002d17 	ldw	r16,180(sp)
 8009c38:	dec03704 	addi	sp,sp,220
 8009c3c:	f800283a 	ret
 8009c40:	da802117 	ldw	r10,132(sp)
 8009c44:	dac02017 	ldw	r11,128(sp)
 8009c48:	52edc83a 	sub	r22,r10,r11
 8009c4c:	05bf540e 	bge	zero,r22,80099a0 <__alt_data_end+0xfc0099a0>
 8009c50:	02400404 	movi	r9,16
 8009c54:	4d812f0e 	bge	r9,r22,800a114 <___svfiprintf_internal_r+0x1000>
 8009c58:	01420074 	movhi	r5,2049
 8009c5c:	294b1404 	addi	r5,r5,11344
 8009c60:	d9402215 	stw	r5,136(sp)
 8009c64:	05c001c4 	movi	r23,7
 8009c68:	00000306 	br	8009c78 <___svfiprintf_internal_r+0xb64>
 8009c6c:	b5bffc04 	addi	r22,r22,-16
 8009c70:	42000204 	addi	r8,r8,8
 8009c74:	4d80130e 	bge	r9,r22,8009cc4 <___svfiprintf_internal_r+0xbb0>
 8009c78:	18c00404 	addi	r3,r3,16
 8009c7c:	10800044 	addi	r2,r2,1
 8009c80:	44c00015 	stw	r19,0(r8)
 8009c84:	42400115 	stw	r9,4(r8)
 8009c88:	d8c01c15 	stw	r3,112(sp)
 8009c8c:	d8801b15 	stw	r2,108(sp)
 8009c90:	b8bff60e 	bge	r23,r2,8009c6c <__alt_data_end+0xfc009c6c>
 8009c94:	9009883a 	mov	r4,r18
 8009c98:	a00b883a 	mov	r5,r20
 8009c9c:	d9801a04 	addi	r6,sp,104
 8009ca0:	da402c15 	stw	r9,176(sp)
 8009ca4:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009ca8:	da402c17 	ldw	r9,176(sp)
 8009cac:	103fd31e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009cb0:	b5bffc04 	addi	r22,r22,-16
 8009cb4:	d8c01c17 	ldw	r3,112(sp)
 8009cb8:	d8801b17 	ldw	r2,108(sp)
 8009cbc:	d811883a 	mov	r8,sp
 8009cc0:	4dbfed16 	blt	r9,r22,8009c78 <__alt_data_end+0xfc009c78>
 8009cc4:	da802217 	ldw	r10,136(sp)
 8009cc8:	1d87883a 	add	r3,r3,r22
 8009ccc:	10800044 	addi	r2,r2,1
 8009cd0:	42800015 	stw	r10,0(r8)
 8009cd4:	45800115 	stw	r22,4(r8)
 8009cd8:	d8c01c15 	stw	r3,112(sp)
 8009cdc:	d8801b15 	stw	r2,108(sp)
 8009ce0:	010001c4 	movi	r4,7
 8009ce4:	2080ce16 	blt	r4,r2,800a020 <___svfiprintf_internal_r+0xf0c>
 8009ce8:	42000204 	addi	r8,r8,8
 8009cec:	003f2c06 	br	80099a0 <__alt_data_end+0xfc0099a0>
 8009cf0:	9009883a 	mov	r4,r18
 8009cf4:	a00b883a 	mov	r5,r20
 8009cf8:	d9801a04 	addi	r6,sp,104
 8009cfc:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009d00:	103fbe1e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009d04:	d8c01c17 	ldw	r3,112(sp)
 8009d08:	d811883a 	mov	r8,sp
 8009d0c:	003f5606 	br	8009a68 <__alt_data_end+0xfc009a68>
 8009d10:	9009883a 	mov	r4,r18
 8009d14:	a00b883a 	mov	r5,r20
 8009d18:	d9801a04 	addi	r6,sp,104
 8009d1c:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009d20:	103f8626 	beq	r2,zero,8009b3c <__alt_data_end+0xfc009b3c>
 8009d24:	003fb506 	br	8009bfc <__alt_data_end+0xfc009bfc>
 8009d28:	10803fcc 	andi	r2,r2,255
 8009d2c:	10003b1e 	bne	r2,zero,8009e1c <___svfiprintf_internal_r+0xd08>
 8009d30:	8880004c 	andi	r2,r17,1
 8009d34:	10007e26 	beq	r2,zero,8009f30 <___svfiprintf_internal_r+0xe1c>
 8009d38:	00800c04 	movi	r2,48
 8009d3c:	d8c019c4 	addi	r3,sp,103
 8009d40:	d88019c5 	stb	r2,103(sp)
 8009d44:	df002b17 	ldw	fp,172(sp)
 8009d48:	d8c02615 	stw	r3,152(sp)
 8009d4c:	003dc706 	br	800946c <__alt_data_end+0xfc00946c>
 8009d50:	00bfffc4 	movi	r2,-1
 8009d54:	003fae06 	br	8009c10 <__alt_data_end+0xfc009c10>
 8009d58:	9009883a 	mov	r4,r18
 8009d5c:	a00b883a 	mov	r5,r20
 8009d60:	d9801a04 	addi	r6,sp,104
 8009d64:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009d68:	103fa41e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009d6c:	d811883a 	mov	r8,sp
 8009d70:	003d2406 	br	8009204 <__alt_data_end+0xfc009204>
 8009d74:	9009883a 	mov	r4,r18
 8009d78:	a00b883a 	mov	r5,r20
 8009d7c:	d9801a04 	addi	r6,sp,104
 8009d80:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009d84:	103f9d1e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009d88:	d8c01c17 	ldw	r3,112(sp)
 8009d8c:	d8801b17 	ldw	r2,108(sp)
 8009d90:	d811883a 	mov	r8,sp
 8009d94:	003f2a06 	br	8009a40 <__alt_data_end+0xfc009a40>
 8009d98:	d9402a17 	ldw	r5,168(sp)
 8009d9c:	d8c01a04 	addi	r3,sp,104
 8009da0:	488003cc 	andi	r2,r9,15
 8009da4:	5008973a 	slli	r4,r10,28
 8009da8:	2885883a 	add	r2,r5,r2
 8009dac:	4812d13a 	srli	r9,r9,4
 8009db0:	10800003 	ldbu	r2,0(r2)
 8009db4:	5014d13a 	srli	r10,r10,4
 8009db8:	18ffffc4 	addi	r3,r3,-1
 8009dbc:	2252b03a 	or	r9,r4,r9
 8009dc0:	18800005 	stb	r2,0(r3)
 8009dc4:	4a84b03a 	or	r2,r9,r10
 8009dc8:	103ff51e 	bne	r2,zero,8009da0 <__alt_data_end+0xfc009da0>
 8009dcc:	d8c02615 	stw	r3,152(sp)
 8009dd0:	003da406 	br	8009464 <__alt_data_end+0xfc009464>
 8009dd4:	9009883a 	mov	r4,r18
 8009dd8:	a00b883a 	mov	r5,r20
 8009ddc:	d9801a04 	addi	r6,sp,104
 8009de0:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009de4:	103f851e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009de8:	d8c01c17 	ldw	r3,112(sp)
 8009dec:	d8801b17 	ldw	r2,108(sp)
 8009df0:	d811883a 	mov	r8,sp
 8009df4:	003eda06 	br	8009960 <__alt_data_end+0xfc009960>
 8009df8:	9009883a 	mov	r4,r18
 8009dfc:	a00b883a 	mov	r5,r20
 8009e00:	d9801a04 	addi	r6,sp,104
 8009e04:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009e08:	103f7c1e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009e0c:	d8c01c17 	ldw	r3,112(sp)
 8009e10:	d8801b17 	ldw	r2,108(sp)
 8009e14:	d811883a 	mov	r8,sp
 8009e18:	003ede06 	br	8009994 <__alt_data_end+0xfc009994>
 8009e1c:	da801a04 	addi	r10,sp,104
 8009e20:	da802615 	stw	r10,152(sp)
 8009e24:	003d9106 	br	800946c <__alt_data_end+0xfc00946c>
 8009e28:	00800084 	movi	r2,2
 8009e2c:	4a86b03a 	or	r3,r9,r10
 8009e30:	003d7106 	br	80093f8 <__alt_data_end+0xfc0093f8>
 8009e34:	88c0040c 	andi	r3,r17,16
 8009e38:	18004f1e 	bne	r3,zero,8009f78 <___svfiprintf_internal_r+0xe64>
 8009e3c:	88c0100c 	andi	r3,r17,64
 8009e40:	18004d26 	beq	r3,zero,8009f78 <___svfiprintf_internal_r+0xe64>
 8009e44:	dac02317 	ldw	r11,140(sp)
 8009e48:	1240000b 	ldhu	r9,0(r2)
 8009e4c:	0015883a 	mov	r10,zero
 8009e50:	5ac00104 	addi	r11,r11,4
 8009e54:	dac02315 	stw	r11,140(sp)
 8009e58:	00800044 	movi	r2,1
 8009e5c:	4807883a 	mov	r3,r9
 8009e60:	003d6506 	br	80093f8 <__alt_data_end+0xfc0093f8>
 8009e64:	9009883a 	mov	r4,r18
 8009e68:	a00b883a 	mov	r5,r20
 8009e6c:	d9801a04 	addi	r6,sp,104
 8009e70:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009e74:	103f611e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009e78:	d8c01c17 	ldw	r3,112(sp)
 8009e7c:	d8801b17 	ldw	r2,108(sp)
 8009e80:	d811883a 	mov	r8,sp
 8009e84:	003ea906 	br	800992c <__alt_data_end+0xfc00992c>
 8009e88:	88c0040c 	andi	r3,r17,16
 8009e8c:	1800321e 	bne	r3,zero,8009f58 <___svfiprintf_internal_r+0xe44>
 8009e90:	88c0100c 	andi	r3,r17,64
 8009e94:	18003026 	beq	r3,zero,8009f58 <___svfiprintf_internal_r+0xe44>
 8009e98:	dac02317 	ldw	r11,140(sp)
 8009e9c:	1240000b 	ldhu	r9,0(r2)
 8009ea0:	0015883a 	mov	r10,zero
 8009ea4:	5ac00104 	addi	r11,r11,4
 8009ea8:	dac02315 	stw	r11,140(sp)
 8009eac:	0005883a 	mov	r2,zero
 8009eb0:	4807883a 	mov	r3,r9
 8009eb4:	003d5006 	br	80093f8 <__alt_data_end+0xfc0093f8>
 8009eb8:	10803fcc 	andi	r2,r2,255
 8009ebc:	1080201c 	xori	r2,r2,128
 8009ec0:	10bfe004 	addi	r2,r2,-128
 8009ec4:	01000c04 	movi	r4,48
 8009ec8:	11006826 	beq	r2,r4,800a06c <___svfiprintf_internal_r+0xf58>
 8009ecc:	da802617 	ldw	r10,152(sp)
 8009ed0:	d8801e17 	ldw	r2,120(sp)
 8009ed4:	193fffc5 	stb	r4,-1(r3)
 8009ed8:	52bfffc4 	addi	r10,r10,-1
 8009edc:	da802615 	stw	r10,152(sp)
 8009ee0:	12b9c83a 	sub	fp,r2,r10
 8009ee4:	003d6106 	br	800946c <__alt_data_end+0xfc00946c>
 8009ee8:	00800244 	movi	r2,9
 8009eec:	127f1d36 	bltu	r2,r9,8009b64 <__alt_data_end+0xfc009b64>
 8009ef0:	4a400c04 	addi	r9,r9,48
 8009ef4:	d8c019c4 	addi	r3,sp,103
 8009ef8:	da4019c5 	stb	r9,103(sp)
 8009efc:	df002b17 	ldw	fp,172(sp)
 8009f00:	d8c02615 	stw	r3,152(sp)
 8009f04:	003d5906 	br	800946c <__alt_data_end+0xfc00946c>
 8009f08:	d8802315 	stw	r2,140(sp)
 8009f0c:	a9000007 	ldb	r4,0(r21)
 8009f10:	003ccc06 	br	8009244 <__alt_data_end+0xfc009244>
 8009f14:	9009883a 	mov	r4,r18
 8009f18:	a00b883a 	mov	r5,r20
 8009f1c:	d9801a04 	addi	r6,sp,104
 8009f20:	8008f4c0 	call	8008f4c <__ssprint_r>
 8009f24:	103f351e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009f28:	d8c01c17 	ldw	r3,112(sp)
 8009f2c:	003efb06 	br	8009b1c <__alt_data_end+0xfc009b1c>
 8009f30:	d8c01a04 	addi	r3,sp,104
 8009f34:	d8c02615 	stw	r3,152(sp)
 8009f38:	003d4c06 	br	800946c <__alt_data_end+0xfc00946c>
 8009f3c:	da802317 	ldw	r10,140(sp)
 8009f40:	1a400017 	ldw	r9,0(r3)
 8009f44:	52800104 	addi	r10,r10,4
 8009f48:	da802315 	stw	r10,140(sp)
 8009f4c:	4815d7fa 	srai	r10,r9,31
 8009f50:	5005883a 	mov	r2,r10
 8009f54:	003d9d06 	br	80095cc <__alt_data_end+0xfc0095cc>
 8009f58:	da802317 	ldw	r10,140(sp)
 8009f5c:	12400017 	ldw	r9,0(r2)
 8009f60:	0005883a 	mov	r2,zero
 8009f64:	52800104 	addi	r10,r10,4
 8009f68:	da802315 	stw	r10,140(sp)
 8009f6c:	4807883a 	mov	r3,r9
 8009f70:	0015883a 	mov	r10,zero
 8009f74:	003d2006 	br	80093f8 <__alt_data_end+0xfc0093f8>
 8009f78:	da802317 	ldw	r10,140(sp)
 8009f7c:	12400017 	ldw	r9,0(r2)
 8009f80:	00800044 	movi	r2,1
 8009f84:	52800104 	addi	r10,r10,4
 8009f88:	da802315 	stw	r10,140(sp)
 8009f8c:	4807883a 	mov	r3,r9
 8009f90:	0015883a 	mov	r10,zero
 8009f94:	003d1806 	br	80093f8 <__alt_data_end+0xfc0093f8>
 8009f98:	dac02317 	ldw	r11,140(sp)
 8009f9c:	12400017 	ldw	r9,0(r2)
 8009fa0:	0015883a 	mov	r10,zero
 8009fa4:	5ac00104 	addi	r11,r11,4
 8009fa8:	dac02315 	stw	r11,140(sp)
 8009fac:	003dde06 	br	8009728 <__alt_data_end+0xfc009728>
 8009fb0:	a9000007 	ldb	r4,0(r21)
 8009fb4:	003ca306 	br	8009244 <__alt_data_end+0xfc009244>
 8009fb8:	dac02317 	ldw	r11,140(sp)
 8009fbc:	da802417 	ldw	r10,144(sp)
 8009fc0:	58800017 	ldw	r2,0(r11)
 8009fc4:	5007d7fa 	srai	r3,r10,31
 8009fc8:	5ac00104 	addi	r11,r11,4
 8009fcc:	dac02315 	stw	r11,140(sp)
 8009fd0:	12800015 	stw	r10,0(r2)
 8009fd4:	10c00115 	stw	r3,4(r2)
 8009fd8:	003c7206 	br	80091a4 <__alt_data_end+0xfc0091a4>
 8009fdc:	00800c04 	movi	r2,48
 8009fe0:	d8801d05 	stb	r2,116(sp)
 8009fe4:	d9001d45 	stb	r4,117(sp)
 8009fe8:	8c400094 	ori	r17,r17,2
 8009fec:	00800084 	movi	r2,2
 8009ff0:	003d0106 	br	80093f8 <__alt_data_end+0xfc0093f8>
 8009ff4:	ad400044 	addi	r21,r21,1
 8009ff8:	8c400814 	ori	r17,r17,32
 8009ffc:	11000047 	ldb	r4,1(r2)
 800a000:	003c9006 	br	8009244 <__alt_data_end+0xfc009244>
 800a004:	dac02317 	ldw	r11,140(sp)
 800a008:	da802417 	ldw	r10,144(sp)
 800a00c:	58800017 	ldw	r2,0(r11)
 800a010:	5ac00104 	addi	r11,r11,4
 800a014:	dac02315 	stw	r11,140(sp)
 800a018:	12800015 	stw	r10,0(r2)
 800a01c:	003c6106 	br	80091a4 <__alt_data_end+0xfc0091a4>
 800a020:	9009883a 	mov	r4,r18
 800a024:	a00b883a 	mov	r5,r20
 800a028:	d9801a04 	addi	r6,sp,104
 800a02c:	8008f4c0 	call	8008f4c <__ssprint_r>
 800a030:	103ef21e 	bne	r2,zero,8009bfc <__alt_data_end+0xfc009bfc>
 800a034:	d8c01c17 	ldw	r3,112(sp)
 800a038:	d8801b17 	ldw	r2,108(sp)
 800a03c:	d811883a 	mov	r8,sp
 800a040:	003e5706 	br	80099a0 <__alt_data_end+0xfc0099a0>
 800a044:	02c20074 	movhi	r11,2049
 800a048:	5acb1404 	addi	r11,r11,11344
 800a04c:	dac02215 	stw	r11,136(sp)
 800a050:	003e7106 	br	8009a18 <__alt_data_end+0xfc009a18>
 800a054:	dac02317 	ldw	r11,140(sp)
 800a058:	12400017 	ldw	r9,0(r2)
 800a05c:	0015883a 	mov	r10,zero
 800a060:	5ac00104 	addi	r11,r11,4
 800a064:	dac02315 	stw	r11,140(sp)
 800a068:	003daf06 	br	8009728 <__alt_data_end+0xfc009728>
 800a06c:	da801e17 	ldw	r10,120(sp)
 800a070:	d8c02617 	ldw	r3,152(sp)
 800a074:	50f9c83a 	sub	fp,r10,r3
 800a078:	003cfc06 	br	800946c <__alt_data_end+0xfc00946c>
 800a07c:	da002c15 	stw	r8,176(sp)
 800a080:	80009780 	call	8000978 <strlen>
 800a084:	1039883a 	mov	fp,r2
 800a088:	dac01d83 	ldbu	r11,118(sp)
 800a08c:	ddc02315 	stw	r23,140(sp)
 800a090:	0021883a 	mov	r16,zero
 800a094:	da002c17 	ldw	r8,176(sp)
 800a098:	003cf406 	br	800946c <__alt_data_end+0xfc00946c>
 800a09c:	04001004 	movi	r16,64
 800a0a0:	800b883a 	mov	r5,r16
 800a0a4:	800722c0 	call	800722c <_malloc_r>
 800a0a8:	da802717 	ldw	r10,156(sp)
 800a0ac:	50800015 	stw	r2,0(r10)
 800a0b0:	50800415 	stw	r2,16(r10)
 800a0b4:	10002c26 	beq	r2,zero,800a168 <___svfiprintf_internal_r+0x1054>
 800a0b8:	da802717 	ldw	r10,156(sp)
 800a0bc:	54000515 	stw	r16,20(r10)
 800a0c0:	003c2806 	br	8009164 <__alt_data_end+0xfc009164>
 800a0c4:	00800184 	movi	r2,6
 800a0c8:	1400012e 	bgeu	r2,r16,800a0d0 <___svfiprintf_internal_r+0xfbc>
 800a0cc:	1021883a 	mov	r16,r2
 800a0d0:	8039883a 	mov	fp,r16
 800a0d4:	802d883a 	mov	r22,r16
 800a0d8:	80001716 	blt	r16,zero,800a138 <___svfiprintf_internal_r+0x1024>
 800a0dc:	00820074 	movhi	r2,2049
 800a0e0:	108ab004 	addi	r2,r2,10944
 800a0e4:	dd802015 	stw	r22,128(sp)
 800a0e8:	ddc02315 	stw	r23,140(sp)
 800a0ec:	d8802615 	stw	r2,152(sp)
 800a0f0:	003d4706 	br	8009610 <__alt_data_end+0xfc009610>
 800a0f4:	01020074 	movhi	r4,2049
 800a0f8:	210b1804 	addi	r4,r4,11360
 800a0fc:	d9002815 	stw	r4,160(sp)
 800a100:	003d7206 	br	80096cc <__alt_data_end+0xfc0096cc>
 800a104:	01020074 	movhi	r4,2049
 800a108:	210b1804 	addi	r4,r4,11360
 800a10c:	d9002815 	stw	r4,160(sp)
 800a110:	003e7906 	br	8009af8 <__alt_data_end+0xfc009af8>
 800a114:	01020074 	movhi	r4,2049
 800a118:	210b1404 	addi	r4,r4,11344
 800a11c:	d9002215 	stw	r4,136(sp)
 800a120:	003ee806 	br	8009cc4 <__alt_data_end+0xfc009cc4>
 800a124:	8039883a 	mov	fp,r16
 800a128:	dac01d83 	ldbu	r11,118(sp)
 800a12c:	ddc02315 	stw	r23,140(sp)
 800a130:	0021883a 	mov	r16,zero
 800a134:	003ccd06 	br	800946c <__alt_data_end+0xfc00946c>
 800a138:	002d883a 	mov	r22,zero
 800a13c:	003fe706 	br	800a0dc <__alt_data_end+0xfc00a0dc>
 800a140:	dac02317 	ldw	r11,140(sp)
 800a144:	a805883a 	mov	r2,r21
 800a148:	502b883a 	mov	r21,r10
 800a14c:	5c000017 	ldw	r16,0(r11)
 800a150:	59000104 	addi	r4,r11,4
 800a154:	d9002315 	stw	r4,140(sp)
 800a158:	803fa80e 	bge	r16,zero,8009ffc <__alt_data_end+0xfc009ffc>
 800a15c:	043fffc4 	movi	r16,-1
 800a160:	11000047 	ldb	r4,1(r2)
 800a164:	003c3706 	br	8009244 <__alt_data_end+0xfc009244>
 800a168:	dac02917 	ldw	r11,164(sp)
 800a16c:	00800304 	movi	r2,12
 800a170:	58800015 	stw	r2,0(r11)
 800a174:	00bfffc4 	movi	r2,-1
 800a178:	003ea506 	br	8009c10 <__alt_data_end+0xfc009c10>

0800a17c <__sprint_r.part.0>:
 800a17c:	28801917 	ldw	r2,100(r5)
 800a180:	defff604 	addi	sp,sp,-40
 800a184:	dd400515 	stw	r21,20(sp)
 800a188:	dcc00315 	stw	r19,12(sp)
 800a18c:	dfc00915 	stw	ra,36(sp)
 800a190:	df000815 	stw	fp,32(sp)
 800a194:	ddc00715 	stw	r23,28(sp)
 800a198:	dd800615 	stw	r22,24(sp)
 800a19c:	dd000415 	stw	r20,16(sp)
 800a1a0:	dc800215 	stw	r18,8(sp)
 800a1a4:	dc400115 	stw	r17,4(sp)
 800a1a8:	dc000015 	stw	r16,0(sp)
 800a1ac:	1088000c 	andi	r2,r2,8192
 800a1b0:	2827883a 	mov	r19,r5
 800a1b4:	302b883a 	mov	r21,r6
 800a1b8:	10002d26 	beq	r2,zero,800a270 <__sprint_r.part.0+0xf4>
 800a1bc:	30800217 	ldw	r2,8(r6)
 800a1c0:	35800017 	ldw	r22,0(r6)
 800a1c4:	10002826 	beq	r2,zero,800a268 <__sprint_r.part.0+0xec>
 800a1c8:	2029883a 	mov	r20,r4
 800a1cc:	b5c00104 	addi	r23,r22,4
 800a1d0:	04bfffc4 	movi	r18,-1
 800a1d4:	bc400017 	ldw	r17,0(r23)
 800a1d8:	b4000017 	ldw	r16,0(r22)
 800a1dc:	0039883a 	mov	fp,zero
 800a1e0:	8822d0ba 	srli	r17,r17,2
 800a1e4:	04400316 	blt	zero,r17,800a1f4 <__sprint_r.part.0+0x78>
 800a1e8:	00001706 	br	800a248 <__sprint_r.part.0+0xcc>
 800a1ec:	84000104 	addi	r16,r16,4
 800a1f0:	8f001526 	beq	r17,fp,800a248 <__sprint_r.part.0+0xcc>
 800a1f4:	81400017 	ldw	r5,0(r16)
 800a1f8:	a009883a 	mov	r4,r20
 800a1fc:	980d883a 	mov	r6,r19
 800a200:	800b8980 	call	800b898 <_fputwc_r>
 800a204:	e7000044 	addi	fp,fp,1
 800a208:	14bff81e 	bne	r2,r18,800a1ec <__alt_data_end+0xfc00a1ec>
 800a20c:	9005883a 	mov	r2,r18
 800a210:	a8000215 	stw	zero,8(r21)
 800a214:	a8000115 	stw	zero,4(r21)
 800a218:	dfc00917 	ldw	ra,36(sp)
 800a21c:	df000817 	ldw	fp,32(sp)
 800a220:	ddc00717 	ldw	r23,28(sp)
 800a224:	dd800617 	ldw	r22,24(sp)
 800a228:	dd400517 	ldw	r21,20(sp)
 800a22c:	dd000417 	ldw	r20,16(sp)
 800a230:	dcc00317 	ldw	r19,12(sp)
 800a234:	dc800217 	ldw	r18,8(sp)
 800a238:	dc400117 	ldw	r17,4(sp)
 800a23c:	dc000017 	ldw	r16,0(sp)
 800a240:	dec00a04 	addi	sp,sp,40
 800a244:	f800283a 	ret
 800a248:	a8c00217 	ldw	r3,8(r21)
 800a24c:	8c63883a 	add	r17,r17,r17
 800a250:	8c63883a 	add	r17,r17,r17
 800a254:	1c45c83a 	sub	r2,r3,r17
 800a258:	a8800215 	stw	r2,8(r21)
 800a25c:	b5800204 	addi	r22,r22,8
 800a260:	bdc00204 	addi	r23,r23,8
 800a264:	103fdb1e 	bne	r2,zero,800a1d4 <__alt_data_end+0xfc00a1d4>
 800a268:	0005883a 	mov	r2,zero
 800a26c:	003fe806 	br	800a210 <__alt_data_end+0xfc00a210>
 800a270:	800bacc0 	call	800bacc <__sfvwrite_r>
 800a274:	003fe606 	br	800a210 <__alt_data_end+0xfc00a210>

0800a278 <__sprint_r>:
 800a278:	30c00217 	ldw	r3,8(r6)
 800a27c:	18000126 	beq	r3,zero,800a284 <__sprint_r+0xc>
 800a280:	800a17c1 	jmpi	800a17c <__sprint_r.part.0>
 800a284:	30000115 	stw	zero,4(r6)
 800a288:	0005883a 	mov	r2,zero
 800a28c:	f800283a 	ret

0800a290 <___vfiprintf_internal_r>:
 800a290:	defeca04 	addi	sp,sp,-1240
 800a294:	dd813215 	stw	r22,1224(sp)
 800a298:	dd013015 	stw	r20,1216(sp)
 800a29c:	dfc13515 	stw	ra,1236(sp)
 800a2a0:	df013415 	stw	fp,1232(sp)
 800a2a4:	ddc13315 	stw	r23,1228(sp)
 800a2a8:	dd413115 	stw	r21,1220(sp)
 800a2ac:	dcc12f15 	stw	r19,1212(sp)
 800a2b0:	dc812e15 	stw	r18,1208(sp)
 800a2b4:	dc412d15 	stw	r17,1204(sp)
 800a2b8:	dc012c15 	stw	r16,1200(sp)
 800a2bc:	d9012015 	stw	r4,1152(sp)
 800a2c0:	d9c12115 	stw	r7,1156(sp)
 800a2c4:	2829883a 	mov	r20,r5
 800a2c8:	302d883a 	mov	r22,r6
 800a2cc:	20000226 	beq	r4,zero,800a2d8 <___vfiprintf_internal_r+0x48>
 800a2d0:	20800e17 	ldw	r2,56(r4)
 800a2d4:	1001d326 	beq	r2,zero,800aa24 <___vfiprintf_internal_r+0x794>
 800a2d8:	a0c0030b 	ldhu	r3,12(r20)
 800a2dc:	1908000c 	andi	r4,r3,8192
 800a2e0:	1805883a 	mov	r2,r3
 800a2e4:	2000071e 	bne	r4,zero,800a304 <___vfiprintf_internal_r+0x74>
 800a2e8:	a1001917 	ldw	r4,100(r20)
 800a2ec:	18880014 	ori	r2,r3,8192
 800a2f0:	00f7ffc4 	movi	r3,-8193
 800a2f4:	20c8703a 	and	r4,r4,r3
 800a2f8:	a080030d 	sth	r2,12(r20)
 800a2fc:	1007883a 	mov	r3,r2
 800a300:	a1001915 	stw	r4,100(r20)
 800a304:	1100020c 	andi	r4,r2,8
 800a308:	20018926 	beq	r4,zero,800a930 <___vfiprintf_internal_r+0x6a0>
 800a30c:	a1000417 	ldw	r4,16(r20)
 800a310:	20018726 	beq	r4,zero,800a930 <___vfiprintf_internal_r+0x6a0>
 800a314:	1080068c 	andi	r2,r2,26
 800a318:	01000284 	movi	r4,10
 800a31c:	11018d26 	beq	r2,r4,800a954 <___vfiprintf_internal_r+0x6c4>
 800a320:	da810a04 	addi	r10,sp,1064
 800a324:	dac109c4 	addi	r11,sp,1063
 800a328:	07020074 	movhi	fp,2049
 800a32c:	05c20074 	movhi	r23,2049
 800a330:	da811e15 	stw	r10,1144(sp)
 800a334:	52d5c83a 	sub	r10,r10,r11
 800a338:	e70b2004 	addi	fp,fp,11392
 800a33c:	bdcb1c04 	addi	r23,r23,11376
 800a340:	dac11f15 	stw	r11,1148(sp)
 800a344:	dec11a15 	stw	sp,1128(sp)
 800a348:	d8011c15 	stw	zero,1136(sp)
 800a34c:	d8011b15 	stw	zero,1132(sp)
 800a350:	d8012615 	stw	zero,1176(sp)
 800a354:	d8012215 	stw	zero,1160(sp)
 800a358:	da812715 	stw	r10,1180(sp)
 800a35c:	d811883a 	mov	r8,sp
 800a360:	b021883a 	mov	r16,r22
 800a364:	80800007 	ldb	r2,0(r16)
 800a368:	10039c26 	beq	r2,zero,800b1dc <___vfiprintf_internal_r+0xf4c>
 800a36c:	01000944 	movi	r4,37
 800a370:	11039a26 	beq	r2,r4,800b1dc <___vfiprintf_internal_r+0xf4c>
 800a374:	8005883a 	mov	r2,r16
 800a378:	00000106 	br	800a380 <___vfiprintf_internal_r+0xf0>
 800a37c:	19000326 	beq	r3,r4,800a38c <___vfiprintf_internal_r+0xfc>
 800a380:	10800044 	addi	r2,r2,1
 800a384:	10c00007 	ldb	r3,0(r2)
 800a388:	183ffc1e 	bne	r3,zero,800a37c <__alt_data_end+0xfc00a37c>
 800a38c:	1425c83a 	sub	r18,r2,r16
 800a390:	1023883a 	mov	r17,r2
 800a394:	90001026 	beq	r18,zero,800a3d8 <___vfiprintf_internal_r+0x148>
 800a398:	d8c11c17 	ldw	r3,1136(sp)
 800a39c:	d8811b17 	ldw	r2,1132(sp)
 800a3a0:	44000015 	stw	r16,0(r8)
 800a3a4:	90c7883a 	add	r3,r18,r3
 800a3a8:	10800044 	addi	r2,r2,1
 800a3ac:	44800115 	stw	r18,4(r8)
 800a3b0:	d8c11c15 	stw	r3,1136(sp)
 800a3b4:	d8811b15 	stw	r2,1132(sp)
 800a3b8:	010001c4 	movi	r4,7
 800a3bc:	2080750e 	bge	r4,r2,800a594 <___vfiprintf_internal_r+0x304>
 800a3c0:	18039d1e 	bne	r3,zero,800b238 <___vfiprintf_internal_r+0xfa8>
 800a3c4:	dac12217 	ldw	r11,1160(sp)
 800a3c8:	d8011b15 	stw	zero,1132(sp)
 800a3cc:	d811883a 	mov	r8,sp
 800a3d0:	5c97883a 	add	r11,r11,r18
 800a3d4:	dac12215 	stw	r11,1160(sp)
 800a3d8:	88800007 	ldb	r2,0(r17)
 800a3dc:	1002e026 	beq	r2,zero,800af60 <___vfiprintf_internal_r+0xcd0>
 800a3e0:	88c00047 	ldb	r3,1(r17)
 800a3e4:	8c000044 	addi	r16,r17,1
 800a3e8:	d8011d85 	stb	zero,1142(sp)
 800a3ec:	000d883a 	mov	r6,zero
 800a3f0:	027fffc4 	movi	r9,-1
 800a3f4:	0027883a 	mov	r19,zero
 800a3f8:	002b883a 	mov	r21,zero
 800a3fc:	01001604 	movi	r4,88
 800a400:	01400244 	movi	r5,9
 800a404:	03000a84 	movi	r12,42
 800a408:	01c01b04 	movi	r7,108
 800a40c:	84000044 	addi	r16,r16,1
 800a410:	18bff804 	addi	r2,r3,-32
 800a414:	20825f36 	bltu	r4,r2,800ad94 <___vfiprintf_internal_r+0xb04>
 800a418:	100490ba 	slli	r2,r2,2
 800a41c:	02820074 	movhi	r10,2049
 800a420:	52a90c04 	addi	r10,r10,-23504
 800a424:	1285883a 	add	r2,r2,r10
 800a428:	10800017 	ldw	r2,0(r2)
 800a42c:	1000683a 	jmp	r2
 800a430:	0800ac04 	addi	zero,at,688
 800a434:	0800ad94 	ori	zero,at,694
 800a438:	0800ad94 	ori	zero,at,694
 800a43c:	0800ad88 	cmpgei	zero,at,694
 800a440:	0800ad94 	ori	zero,at,694
 800a444:	0800ad94 	ori	zero,at,694
 800a448:	0800ad94 	ori	zero,at,694
 800a44c:	0800ad94 	ori	zero,at,694
 800a450:	0800ad94 	ori	zero,at,694
 800a454:	0800ad94 	ori	zero,at,694
 800a458:	0800ad60 	cmpeqi	zero,at,693
 800a45c:	0800ad7c 	xorhi	zero,at,693
 800a460:	0800ad94 	ori	zero,at,694
 800a464:	0800aa34 	orhi	zero,at,680
 800a468:	0800ab94 	ori	zero,at,686
 800a46c:	0800ad94 	ori	zero,at,694
 800a470:	0800ab18 	cmpnei	zero,at,684
 800a474:	0800ab24 	muli	zero,at,684
 800a478:	0800ab24 	muli	zero,at,684
 800a47c:	0800ab24 	muli	zero,at,684
 800a480:	0800ab24 	muli	zero,at,684
 800a484:	0800ab24 	muli	zero,at,684
 800a488:	0800ab24 	muli	zero,at,684
 800a48c:	0800ab24 	muli	zero,at,684
 800a490:	0800ab24 	muli	zero,at,684
 800a494:	0800ab24 	muli	zero,at,684
 800a498:	0800ad94 	ori	zero,at,694
 800a49c:	0800ad94 	ori	zero,at,694
 800a4a0:	0800ad94 	ori	zero,at,694
 800a4a4:	0800ad94 	ori	zero,at,694
 800a4a8:	0800ad94 	ori	zero,at,694
 800a4ac:	0800ad94 	ori	zero,at,694
 800a4b0:	0800ad94 	ori	zero,at,694
 800a4b4:	0800ad94 	ori	zero,at,694
 800a4b8:	0800ad94 	ori	zero,at,694
 800a4bc:	0800ad94 	ori	zero,at,694
 800a4c0:	0800ab50 	cmplti	zero,at,685
 800a4c4:	0800ad94 	ori	zero,at,694
 800a4c8:	0800ad94 	ori	zero,at,694
 800a4cc:	0800ad94 	ori	zero,at,694
 800a4d0:	0800ad94 	ori	zero,at,694
 800a4d4:	0800ad94 	ori	zero,at,694
 800a4d8:	0800ad94 	ori	zero,at,694
 800a4dc:	0800ad94 	ori	zero,at,694
 800a4e0:	0800ad94 	ori	zero,at,694
 800a4e4:	0800ad94 	ori	zero,at,694
 800a4e8:	0800ad94 	ori	zero,at,694
 800a4ec:	0800a5e4 	muli	zero,at,663
 800a4f0:	0800ad94 	ori	zero,at,694
 800a4f4:	0800ad94 	ori	zero,at,694
 800a4f8:	0800ad94 	ori	zero,at,694
 800a4fc:	0800ad94 	ori	zero,at,694
 800a500:	0800ad94 	ori	zero,at,694
 800a504:	0800a5a8 	cmpgeui	zero,at,662
 800a508:	0800ad94 	ori	zero,at,694
 800a50c:	0800ad94 	ori	zero,at,694
 800a510:	0800aa90 	cmplti	zero,at,682
 800a514:	0800ad94 	ori	zero,at,694
 800a518:	0800ad94 	ori	zero,at,694
 800a51c:	0800ad94 	ori	zero,at,694
 800a520:	0800ad94 	ori	zero,at,694
 800a524:	0800ad94 	ori	zero,at,694
 800a528:	0800ad94 	ori	zero,at,694
 800a52c:	0800ad94 	ori	zero,at,694
 800a530:	0800ad94 	ori	zero,at,694
 800a534:	0800ad94 	ori	zero,at,694
 800a538:	0800ad94 	ori	zero,at,694
 800a53c:	0800aae8 	cmpgeui	zero,at,683
 800a540:	0800ac80 	call	800ac8 <__reset-0x77ff538>
 800a544:	0800ad94 	ori	zero,at,694
 800a548:	0800ad94 	ori	zero,at,694
 800a54c:	0800ad94 	ori	zero,at,694
 800a550:	0800ad08 	cmpgei	zero,at,692
 800a554:	0800ac80 	call	800ac8 <__reset-0x77ff538>
 800a558:	0800ad94 	ori	zero,at,694
 800a55c:	0800ad94 	ori	zero,at,694
 800a560:	0800ad14 	ori	zero,at,692
 800a564:	0800ad94 	ori	zero,at,694
 800a568:	0800abd4 	ori	zero,at,687
 800a56c:	0800a5e8 	cmpgeui	zero,at,663
 800a570:	0800acbc 	xorhi	zero,at,690
 800a574:	0800acfc 	xorhi	zero,at,691
 800a578:	0800ad94 	ori	zero,at,694
 800a57c:	0800ac20 	cmpeqi	zero,at,688
 800a580:	0800ad94 	ori	zero,at,694
 800a584:	0800a5ac 	andhi	zero,at,662
 800a588:	0800ad94 	ori	zero,at,694
 800a58c:	0800ad94 	ori	zero,at,694
 800a590:	0800ad24 	muli	zero,at,692
 800a594:	42000204 	addi	r8,r8,8
 800a598:	dac12217 	ldw	r11,1160(sp)
 800a59c:	5c97883a 	add	r11,r11,r18
 800a5a0:	dac12215 	stw	r11,1160(sp)
 800a5a4:	003f8c06 	br	800a3d8 <__alt_data_end+0xfc00a3d8>
 800a5a8:	ad400414 	ori	r21,r21,16
 800a5ac:	a880080c 	andi	r2,r21,32
 800a5b0:	10012f1e 	bne	r2,zero,800aa70 <___vfiprintf_internal_r+0x7e0>
 800a5b4:	a880040c 	andi	r2,r21,16
 800a5b8:	1001ff1e 	bne	r2,zero,800adb8 <___vfiprintf_internal_r+0xb28>
 800a5bc:	a880100c 	andi	r2,r21,64
 800a5c0:	1001fd26 	beq	r2,zero,800adb8 <___vfiprintf_internal_r+0xb28>
 800a5c4:	da812117 	ldw	r10,1156(sp)
 800a5c8:	002d883a 	mov	r22,zero
 800a5cc:	00800044 	movi	r2,1
 800a5d0:	5480000b 	ldhu	r18,0(r10)
 800a5d4:	52800104 	addi	r10,r10,4
 800a5d8:	da812115 	stw	r10,1156(sp)
 800a5dc:	9009883a 	mov	r4,r18
 800a5e0:	00000a06 	br	800a60c <___vfiprintf_internal_r+0x37c>
 800a5e4:	ad400414 	ori	r21,r21,16
 800a5e8:	a880080c 	andi	r2,r21,32
 800a5ec:	10011426 	beq	r2,zero,800aa40 <___vfiprintf_internal_r+0x7b0>
 800a5f0:	da812117 	ldw	r10,1156(sp)
 800a5f4:	0005883a 	mov	r2,zero
 800a5f8:	54800017 	ldw	r18,0(r10)
 800a5fc:	55800117 	ldw	r22,4(r10)
 800a600:	52800204 	addi	r10,r10,8
 800a604:	da812115 	stw	r10,1156(sp)
 800a608:	9588b03a 	or	r4,r18,r22
 800a60c:	d8011d85 	stb	zero,1142(sp)
 800a610:	4823883a 	mov	r17,r9
 800a614:	0019883a 	mov	r12,zero
 800a618:	48000216 	blt	r9,zero,800a624 <___vfiprintf_internal_r+0x394>
 800a61c:	00ffdfc4 	movi	r3,-129
 800a620:	a8ea703a 	and	r21,r21,r3
 800a624:	2002221e 	bne	r4,zero,800aeb0 <___vfiprintf_internal_r+0xc20>
 800a628:	4802c726 	beq	r9,zero,800b148 <___vfiprintf_internal_r+0xeb8>
 800a62c:	10803fcc 	andi	r2,r2,255
 800a630:	00c00044 	movi	r3,1
 800a634:	10c24426 	beq	r2,r3,800af48 <___vfiprintf_internal_r+0xcb8>
 800a638:	00c00084 	movi	r3,2
 800a63c:	10c2cc26 	beq	r2,r3,800b170 <___vfiprintf_internal_r+0xee0>
 800a640:	d8c10a04 	addi	r3,sp,1064
 800a644:	9008d0fa 	srli	r4,r18,3
 800a648:	b00a977a 	slli	r5,r22,29
 800a64c:	b02cd0fa 	srli	r22,r22,3
 800a650:	948001cc 	andi	r18,r18,7
 800a654:	90800c04 	addi	r2,r18,48
 800a658:	18ffffc4 	addi	r3,r3,-1
 800a65c:	2924b03a 	or	r18,r5,r4
 800a660:	18800005 	stb	r2,0(r3)
 800a664:	9588b03a 	or	r4,r18,r22
 800a668:	203ff61e 	bne	r4,zero,800a644 <__alt_data_end+0xfc00a644>
 800a66c:	a900004c 	andi	r4,r21,1
 800a670:	d8c12415 	stw	r3,1168(sp)
 800a674:	2002fb1e 	bne	r4,zero,800b264 <___vfiprintf_internal_r+0xfd4>
 800a678:	da811e17 	ldw	r10,1144(sp)
 800a67c:	50e3c83a 	sub	r17,r10,r3
 800a680:	8825883a 	mov	r18,r17
 800a684:	8a40010e 	bge	r17,r9,800a68c <___vfiprintf_internal_r+0x3fc>
 800a688:	4825883a 	mov	r18,r9
 800a68c:	63003fcc 	andi	r12,r12,255
 800a690:	6300201c 	xori	r12,r12,128
 800a694:	633fe004 	addi	r12,r12,-128
 800a698:	60000126 	beq	r12,zero,800a6a0 <___vfiprintf_internal_r+0x410>
 800a69c:	94800044 	addi	r18,r18,1
 800a6a0:	ab80008c 	andi	r14,r21,2
 800a6a4:	70000126 	beq	r14,zero,800a6ac <___vfiprintf_internal_r+0x41c>
 800a6a8:	94800084 	addi	r18,r18,2
 800a6ac:	ad80210c 	andi	r22,r21,132
 800a6b0:	b001df1e 	bne	r22,zero,800ae30 <___vfiprintf_internal_r+0xba0>
 800a6b4:	9c8fc83a 	sub	r7,r19,r18
 800a6b8:	01c1dd0e 	bge	zero,r7,800ae30 <___vfiprintf_internal_r+0xba0>
 800a6bc:	03000404 	movi	r12,16
 800a6c0:	d8811c17 	ldw	r2,1136(sp)
 800a6c4:	61c3920e 	bge	r12,r7,800b510 <___vfiprintf_internal_r+0x1280>
 800a6c8:	02820074 	movhi	r10,2049
 800a6cc:	528b2004 	addi	r10,r10,11392
 800a6d0:	dc012915 	stw	r16,1188(sp)
 800a6d4:	d9811b17 	ldw	r6,1132(sp)
 800a6d8:	da812315 	stw	r10,1164(sp)
 800a6dc:	00c001c4 	movi	r3,7
 800a6e0:	da412515 	stw	r9,1172(sp)
 800a6e4:	db812815 	stw	r14,1184(sp)
 800a6e8:	3821883a 	mov	r16,r7
 800a6ec:	00000506 	br	800a704 <___vfiprintf_internal_r+0x474>
 800a6f0:	31400084 	addi	r5,r6,2
 800a6f4:	42000204 	addi	r8,r8,8
 800a6f8:	200d883a 	mov	r6,r4
 800a6fc:	843ffc04 	addi	r16,r16,-16
 800a700:	64000d0e 	bge	r12,r16,800a738 <___vfiprintf_internal_r+0x4a8>
 800a704:	10800404 	addi	r2,r2,16
 800a708:	31000044 	addi	r4,r6,1
 800a70c:	47000015 	stw	fp,0(r8)
 800a710:	43000115 	stw	r12,4(r8)
 800a714:	d8811c15 	stw	r2,1136(sp)
 800a718:	d9011b15 	stw	r4,1132(sp)
 800a71c:	193ff40e 	bge	r3,r4,800a6f0 <__alt_data_end+0xfc00a6f0>
 800a720:	1001b51e 	bne	r2,zero,800adf8 <___vfiprintf_internal_r+0xb68>
 800a724:	843ffc04 	addi	r16,r16,-16
 800a728:	000d883a 	mov	r6,zero
 800a72c:	01400044 	movi	r5,1
 800a730:	d811883a 	mov	r8,sp
 800a734:	643ff316 	blt	r12,r16,800a704 <__alt_data_end+0xfc00a704>
 800a738:	800f883a 	mov	r7,r16
 800a73c:	da412517 	ldw	r9,1172(sp)
 800a740:	db812817 	ldw	r14,1184(sp)
 800a744:	dc012917 	ldw	r16,1188(sp)
 800a748:	dac12317 	ldw	r11,1164(sp)
 800a74c:	3887883a 	add	r3,r7,r2
 800a750:	41c00115 	stw	r7,4(r8)
 800a754:	42c00015 	stw	r11,0(r8)
 800a758:	d8c11c15 	stw	r3,1136(sp)
 800a75c:	d9411b15 	stw	r5,1132(sp)
 800a760:	008001c4 	movi	r2,7
 800a764:	11429316 	blt	r2,r5,800b1b4 <___vfiprintf_internal_r+0xf24>
 800a768:	d9011d87 	ldb	r4,1142(sp)
 800a76c:	42000204 	addi	r8,r8,8
 800a770:	28800044 	addi	r2,r5,1
 800a774:	2001b31e 	bne	r4,zero,800ae44 <___vfiprintf_internal_r+0xbb4>
 800a778:	70000c26 	beq	r14,zero,800a7ac <___vfiprintf_internal_r+0x51c>
 800a77c:	d9011d04 	addi	r4,sp,1140
 800a780:	18c00084 	addi	r3,r3,2
 800a784:	41000015 	stw	r4,0(r8)
 800a788:	01000084 	movi	r4,2
 800a78c:	41000115 	stw	r4,4(r8)
 800a790:	d8c11c15 	stw	r3,1136(sp)
 800a794:	d8811b15 	stw	r2,1132(sp)
 800a798:	010001c4 	movi	r4,7
 800a79c:	20826516 	blt	r4,r2,800b134 <___vfiprintf_internal_r+0xea4>
 800a7a0:	100b883a 	mov	r5,r2
 800a7a4:	42000204 	addi	r8,r8,8
 800a7a8:	10800044 	addi	r2,r2,1
 800a7ac:	01002004 	movi	r4,128
 800a7b0:	b1021a26 	beq	r22,r4,800b01c <___vfiprintf_internal_r+0xd8c>
 800a7b4:	4c6dc83a 	sub	r22,r9,r17
 800a7b8:	0580230e 	bge	zero,r22,800a848 <___vfiprintf_internal_r+0x5b8>
 800a7bc:	01c00404 	movi	r7,16
 800a7c0:	3d83300e 	bge	r7,r22,800b484 <___vfiprintf_internal_r+0x11f4>
 800a7c4:	00820074 	movhi	r2,2049
 800a7c8:	108b1c04 	addi	r2,r2,11376
 800a7cc:	d8812315 	stw	r2,1164(sp)
 800a7d0:	030001c4 	movi	r12,7
 800a7d4:	00000506 	br	800a7ec <___vfiprintf_internal_r+0x55c>
 800a7d8:	28800084 	addi	r2,r5,2
 800a7dc:	42000204 	addi	r8,r8,8
 800a7e0:	200b883a 	mov	r5,r4
 800a7e4:	b5bffc04 	addi	r22,r22,-16
 800a7e8:	3d800d0e 	bge	r7,r22,800a820 <___vfiprintf_internal_r+0x590>
 800a7ec:	18c00404 	addi	r3,r3,16
 800a7f0:	29000044 	addi	r4,r5,1
 800a7f4:	45c00015 	stw	r23,0(r8)
 800a7f8:	41c00115 	stw	r7,4(r8)
 800a7fc:	d8c11c15 	stw	r3,1136(sp)
 800a800:	d9011b15 	stw	r4,1132(sp)
 800a804:	613ff40e 	bge	r12,r4,800a7d8 <__alt_data_end+0xfc00a7d8>
 800a808:	18019b1e 	bne	r3,zero,800ae78 <___vfiprintf_internal_r+0xbe8>
 800a80c:	b5bffc04 	addi	r22,r22,-16
 800a810:	000b883a 	mov	r5,zero
 800a814:	00800044 	movi	r2,1
 800a818:	d811883a 	mov	r8,sp
 800a81c:	3dbff316 	blt	r7,r22,800a7ec <__alt_data_end+0xfc00a7ec>
 800a820:	da812317 	ldw	r10,1164(sp)
 800a824:	1d87883a 	add	r3,r3,r22
 800a828:	45800115 	stw	r22,4(r8)
 800a82c:	42800015 	stw	r10,0(r8)
 800a830:	d8c11c15 	stw	r3,1136(sp)
 800a834:	d8811b15 	stw	r2,1132(sp)
 800a838:	010001c4 	movi	r4,7
 800a83c:	2081dd16 	blt	r4,r2,800afb4 <___vfiprintf_internal_r+0xd24>
 800a840:	42000204 	addi	r8,r8,8
 800a844:	10800044 	addi	r2,r2,1
 800a848:	da812417 	ldw	r10,1168(sp)
 800a84c:	1c47883a 	add	r3,r3,r17
 800a850:	44400115 	stw	r17,4(r8)
 800a854:	42800015 	stw	r10,0(r8)
 800a858:	d8c11c15 	stw	r3,1136(sp)
 800a85c:	d8811b15 	stw	r2,1132(sp)
 800a860:	010001c4 	movi	r4,7
 800a864:	2081dc0e 	bge	r4,r2,800afd8 <___vfiprintf_internal_r+0xd48>
 800a868:	1802611e 	bne	r3,zero,800b1f0 <___vfiprintf_internal_r+0xf60>
 800a86c:	d8011b15 	stw	zero,1132(sp)
 800a870:	aac0010c 	andi	r11,r21,4
 800a874:	58002726 	beq	r11,zero,800a914 <___vfiprintf_internal_r+0x684>
 800a878:	9ca3c83a 	sub	r17,r19,r18
 800a87c:	d811883a 	mov	r8,sp
 800a880:	0443510e 	bge	zero,r17,800b5c8 <___vfiprintf_internal_r+0x1338>
 800a884:	01c00404 	movi	r7,16
 800a888:	3c43320e 	bge	r7,r17,800b554 <___vfiprintf_internal_r+0x12c4>
 800a88c:	00820074 	movhi	r2,2049
 800a890:	108b2004 	addi	r2,r2,11392
 800a894:	d9011b17 	ldw	r4,1132(sp)
 800a898:	d8812315 	stw	r2,1164(sp)
 800a89c:	382d883a 	mov	r22,r7
 800a8a0:	054001c4 	movi	r21,7
 800a8a4:	00000506 	br	800a8bc <___vfiprintf_internal_r+0x62c>
 800a8a8:	21400084 	addi	r5,r4,2
 800a8ac:	42000204 	addi	r8,r8,8
 800a8b0:	1009883a 	mov	r4,r2
 800a8b4:	8c7ffc04 	addi	r17,r17,-16
 800a8b8:	b4400d0e 	bge	r22,r17,800a8f0 <___vfiprintf_internal_r+0x660>
 800a8bc:	18c00404 	addi	r3,r3,16
 800a8c0:	20800044 	addi	r2,r4,1
 800a8c4:	47000015 	stw	fp,0(r8)
 800a8c8:	45800115 	stw	r22,4(r8)
 800a8cc:	d8c11c15 	stw	r3,1136(sp)
 800a8d0:	d8811b15 	stw	r2,1132(sp)
 800a8d4:	a8bff40e 	bge	r21,r2,800a8a8 <__alt_data_end+0xfc00a8a8>
 800a8d8:	1801ac1e 	bne	r3,zero,800af8c <___vfiprintf_internal_r+0xcfc>
 800a8dc:	8c7ffc04 	addi	r17,r17,-16
 800a8e0:	0009883a 	mov	r4,zero
 800a8e4:	01400044 	movi	r5,1
 800a8e8:	d811883a 	mov	r8,sp
 800a8ec:	b47ff316 	blt	r22,r17,800a8bc <__alt_data_end+0xfc00a8bc>
 800a8f0:	da812317 	ldw	r10,1164(sp)
 800a8f4:	1c47883a 	add	r3,r3,r17
 800a8f8:	44400115 	stw	r17,4(r8)
 800a8fc:	42800015 	stw	r10,0(r8)
 800a900:	d8c11c15 	stw	r3,1136(sp)
 800a904:	d9411b15 	stw	r5,1132(sp)
 800a908:	008001c4 	movi	r2,7
 800a90c:	1141b70e 	bge	r2,r5,800afec <___vfiprintf_internal_r+0xd5c>
 800a910:	1802cf1e 	bne	r3,zero,800b450 <___vfiprintf_internal_r+0x11c0>
 800a914:	94c2ca16 	blt	r18,r19,800b440 <___vfiprintf_internal_r+0x11b0>
 800a918:	dac12217 	ldw	r11,1160(sp)
 800a91c:	5c97883a 	add	r11,r11,r18
 800a920:	dac12215 	stw	r11,1160(sp)
 800a924:	d8011b15 	stw	zero,1132(sp)
 800a928:	d811883a 	mov	r8,sp
 800a92c:	003e8d06 	br	800a364 <__alt_data_end+0xfc00a364>
 800a930:	d9012017 	ldw	r4,1152(sp)
 800a934:	a00b883a 	mov	r5,r20
 800a938:	80049c00 	call	80049c0 <__swsetup_r>
 800a93c:	10002c1e 	bne	r2,zero,800a9f0 <___vfiprintf_internal_r+0x760>
 800a940:	a0c0030b 	ldhu	r3,12(r20)
 800a944:	01000284 	movi	r4,10
 800a948:	1805883a 	mov	r2,r3
 800a94c:	1080068c 	andi	r2,r2,26
 800a950:	113e731e 	bne	r2,r4,800a320 <__alt_data_end+0xfc00a320>
 800a954:	a080038b 	ldhu	r2,14(r20)
 800a958:	113fffcc 	andi	r4,r2,65535
 800a95c:	2120001c 	xori	r4,r4,32768
 800a960:	21200004 	addi	r4,r4,-32768
 800a964:	203e6e16 	blt	r4,zero,800a320 <__alt_data_end+0xfc00a320>
 800a968:	a3001917 	ldw	r12,100(r20)
 800a96c:	a2c00717 	ldw	r11,28(r20)
 800a970:	a2800917 	ldw	r10,36(r20)
 800a974:	d9012017 	ldw	r4,1152(sp)
 800a978:	d9c12117 	ldw	r7,1156(sp)
 800a97c:	02410004 	movi	r9,1024
 800a980:	18ffff4c 	andi	r3,r3,65533
 800a984:	da4b883a 	add	r5,sp,r9
 800a988:	b00d883a 	mov	r6,r22
 800a98c:	d8c1030d 	sth	r3,1036(sp)
 800a990:	db011915 	stw	r12,1124(sp)
 800a994:	d881038d 	sth	r2,1038(sp)
 800a998:	dac10715 	stw	r11,1052(sp)
 800a99c:	da810915 	stw	r10,1060(sp)
 800a9a0:	dec10015 	stw	sp,1024(sp)
 800a9a4:	dec10415 	stw	sp,1040(sp)
 800a9a8:	da410215 	stw	r9,1032(sp)
 800a9ac:	da410515 	stw	r9,1044(sp)
 800a9b0:	d8010615 	stw	zero,1048(sp)
 800a9b4:	800a2900 	call	800a290 <___vfiprintf_internal_r>
 800a9b8:	1021883a 	mov	r16,r2
 800a9bc:	10000416 	blt	r2,zero,800a9d0 <___vfiprintf_internal_r+0x740>
 800a9c0:	d9012017 	ldw	r4,1152(sp)
 800a9c4:	d9410004 	addi	r5,sp,1024
 800a9c8:	80064180 	call	8006418 <_fflush_r>
 800a9cc:	1002fc1e 	bne	r2,zero,800b5c0 <___vfiprintf_internal_r+0x1330>
 800a9d0:	d881030b 	ldhu	r2,1036(sp)
 800a9d4:	1080100c 	andi	r2,r2,64
 800a9d8:	10000326 	beq	r2,zero,800a9e8 <___vfiprintf_internal_r+0x758>
 800a9dc:	a080030b 	ldhu	r2,12(r20)
 800a9e0:	10801014 	ori	r2,r2,64
 800a9e4:	a080030d 	sth	r2,12(r20)
 800a9e8:	8005883a 	mov	r2,r16
 800a9ec:	00000106 	br	800a9f4 <___vfiprintf_internal_r+0x764>
 800a9f0:	00bfffc4 	movi	r2,-1
 800a9f4:	dfc13517 	ldw	ra,1236(sp)
 800a9f8:	df013417 	ldw	fp,1232(sp)
 800a9fc:	ddc13317 	ldw	r23,1228(sp)
 800aa00:	dd813217 	ldw	r22,1224(sp)
 800aa04:	dd413117 	ldw	r21,1220(sp)
 800aa08:	dd013017 	ldw	r20,1216(sp)
 800aa0c:	dcc12f17 	ldw	r19,1212(sp)
 800aa10:	dc812e17 	ldw	r18,1208(sp)
 800aa14:	dc412d17 	ldw	r17,1204(sp)
 800aa18:	dc012c17 	ldw	r16,1200(sp)
 800aa1c:	dec13604 	addi	sp,sp,1240
 800aa20:	f800283a 	ret
 800aa24:	80069c00 	call	80069c0 <__sinit>
 800aa28:	003e2b06 	br	800a2d8 <__alt_data_end+0xfc00a2d8>
 800aa2c:	04e7c83a 	sub	r19,zero,r19
 800aa30:	d8812115 	stw	r2,1156(sp)
 800aa34:	ad400114 	ori	r21,r21,4
 800aa38:	80c00007 	ldb	r3,0(r16)
 800aa3c:	003e7306 	br	800a40c <__alt_data_end+0xfc00a40c>
 800aa40:	a880040c 	andi	r2,r21,16
 800aa44:	1000e41e 	bne	r2,zero,800add8 <___vfiprintf_internal_r+0xb48>
 800aa48:	a880100c 	andi	r2,r21,64
 800aa4c:	1000e226 	beq	r2,zero,800add8 <___vfiprintf_internal_r+0xb48>
 800aa50:	da812117 	ldw	r10,1156(sp)
 800aa54:	002d883a 	mov	r22,zero
 800aa58:	0005883a 	mov	r2,zero
 800aa5c:	5480000b 	ldhu	r18,0(r10)
 800aa60:	52800104 	addi	r10,r10,4
 800aa64:	da812115 	stw	r10,1156(sp)
 800aa68:	9009883a 	mov	r4,r18
 800aa6c:	003ee706 	br	800a60c <__alt_data_end+0xfc00a60c>
 800aa70:	da812117 	ldw	r10,1156(sp)
 800aa74:	00800044 	movi	r2,1
 800aa78:	54800017 	ldw	r18,0(r10)
 800aa7c:	55800117 	ldw	r22,4(r10)
 800aa80:	52800204 	addi	r10,r10,8
 800aa84:	da812115 	stw	r10,1156(sp)
 800aa88:	9588b03a 	or	r4,r18,r22
 800aa8c:	003edf06 	br	800a60c <__alt_data_end+0xfc00a60c>
 800aa90:	02c20074 	movhi	r11,2049
 800aa94:	5acaa604 	addi	r11,r11,10904
 800aa98:	d9811d85 	stb	r6,1142(sp)
 800aa9c:	dac12615 	stw	r11,1176(sp)
 800aaa0:	a900080c 	andi	r4,r21,32
 800aaa4:	d8812117 	ldw	r2,1156(sp)
 800aaa8:	2000a526 	beq	r4,zero,800ad40 <___vfiprintf_internal_r+0xab0>
 800aaac:	da812117 	ldw	r10,1156(sp)
 800aab0:	14800017 	ldw	r18,0(r2)
 800aab4:	15800117 	ldw	r22,4(r2)
 800aab8:	52800204 	addi	r10,r10,8
 800aabc:	da812115 	stw	r10,1156(sp)
 800aac0:	a880004c 	andi	r2,r21,1
 800aac4:	1001d926 	beq	r2,zero,800b22c <___vfiprintf_internal_r+0xf9c>
 800aac8:	9588b03a 	or	r4,r18,r22
 800aacc:	20024426 	beq	r4,zero,800b3e0 <___vfiprintf_internal_r+0x1150>
 800aad0:	00800c04 	movi	r2,48
 800aad4:	d8811d05 	stb	r2,1140(sp)
 800aad8:	d8c11d45 	stb	r3,1141(sp)
 800aadc:	ad400094 	ori	r21,r21,2
 800aae0:	00800084 	movi	r2,2
 800aae4:	003ec906 	br	800a60c <__alt_data_end+0xfc00a60c>
 800aae8:	da812117 	ldw	r10,1156(sp)
 800aaec:	04800044 	movi	r18,1
 800aaf0:	dac10004 	addi	r11,sp,1024
 800aaf4:	50800017 	ldw	r2,0(r10)
 800aaf8:	52800104 	addi	r10,r10,4
 800aafc:	d8011d85 	stb	zero,1142(sp)
 800ab00:	d8810005 	stb	r2,1024(sp)
 800ab04:	da812115 	stw	r10,1156(sp)
 800ab08:	9023883a 	mov	r17,r18
 800ab0c:	dac12415 	stw	r11,1168(sp)
 800ab10:	0013883a 	mov	r9,zero
 800ab14:	003ee206 	br	800a6a0 <__alt_data_end+0xfc00a6a0>
 800ab18:	ad402014 	ori	r21,r21,128
 800ab1c:	80c00007 	ldb	r3,0(r16)
 800ab20:	003e3a06 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ab24:	8015883a 	mov	r10,r16
 800ab28:	0027883a 	mov	r19,zero
 800ab2c:	18bff404 	addi	r2,r3,-48
 800ab30:	50c00007 	ldb	r3,0(r10)
 800ab34:	9cc002a4 	muli	r19,r19,10
 800ab38:	84000044 	addi	r16,r16,1
 800ab3c:	8015883a 	mov	r10,r16
 800ab40:	98a7883a 	add	r19,r19,r2
 800ab44:	18bff404 	addi	r2,r3,-48
 800ab48:	28bff92e 	bgeu	r5,r2,800ab30 <__alt_data_end+0xfc00ab30>
 800ab4c:	003e3006 	br	800a410 <__alt_data_end+0xfc00a410>
 800ab50:	ad400414 	ori	r21,r21,16
 800ab54:	d9811d85 	stb	r6,1142(sp)
 800ab58:	a880080c 	andi	r2,r21,32
 800ab5c:	d8c12117 	ldw	r3,1156(sp)
 800ab60:	10004b26 	beq	r2,zero,800ac90 <___vfiprintf_internal_r+0xa00>
 800ab64:	da812117 	ldw	r10,1156(sp)
 800ab68:	18800117 	ldw	r2,4(r3)
 800ab6c:	1c800017 	ldw	r18,0(r3)
 800ab70:	52800204 	addi	r10,r10,8
 800ab74:	da812115 	stw	r10,1156(sp)
 800ab78:	102d883a 	mov	r22,r2
 800ab7c:	1001f116 	blt	r2,zero,800b344 <___vfiprintf_internal_r+0x10b4>
 800ab80:	db011d83 	ldbu	r12,1142(sp)
 800ab84:	4823883a 	mov	r17,r9
 800ab88:	00800044 	movi	r2,1
 800ab8c:	9588b03a 	or	r4,r18,r22
 800ab90:	003ea106 	br	800a618 <__alt_data_end+0xfc00a618>
 800ab94:	80c00007 	ldb	r3,0(r16)
 800ab98:	82800044 	addi	r10,r16,1
 800ab9c:	1b027f26 	beq	r3,r12,800b59c <___vfiprintf_internal_r+0x130c>
 800aba0:	18bff404 	addi	r2,r3,-48
 800aba4:	5021883a 	mov	r16,r10
 800aba8:	0013883a 	mov	r9,zero
 800abac:	28be1836 	bltu	r5,r2,800a410 <__alt_data_end+0xfc00a410>
 800abb0:	80c00007 	ldb	r3,0(r16)
 800abb4:	4a4002a4 	muli	r9,r9,10
 800abb8:	84000044 	addi	r16,r16,1
 800abbc:	1253883a 	add	r9,r2,r9
 800abc0:	18bff404 	addi	r2,r3,-48
 800abc4:	28bffa2e 	bgeu	r5,r2,800abb0 <__alt_data_end+0xfc00abb0>
 800abc8:	483e110e 	bge	r9,zero,800a410 <__alt_data_end+0xfc00a410>
 800abcc:	027fffc4 	movi	r9,-1
 800abd0:	003e0f06 	br	800a410 <__alt_data_end+0xfc00a410>
 800abd4:	d9811d85 	stb	r6,1142(sp)
 800abd8:	a880080c 	andi	r2,r21,32
 800abdc:	1001ee26 	beq	r2,zero,800b398 <___vfiprintf_internal_r+0x1108>
 800abe0:	da812117 	ldw	r10,1156(sp)
 800abe4:	dac12217 	ldw	r11,1160(sp)
 800abe8:	50800017 	ldw	r2,0(r10)
 800abec:	5807d7fa 	srai	r3,r11,31
 800abf0:	52800104 	addi	r10,r10,4
 800abf4:	da812115 	stw	r10,1156(sp)
 800abf8:	12c00015 	stw	r11,0(r2)
 800abfc:	10c00115 	stw	r3,4(r2)
 800ac00:	003dd806 	br	800a364 <__alt_data_end+0xfc00a364>
 800ac04:	30803fcc 	andi	r2,r6,255
 800ac08:	1080201c 	xori	r2,r2,128
 800ac0c:	10bfe004 	addi	r2,r2,-128
 800ac10:	1001df1e 	bne	r2,zero,800b390 <___vfiprintf_internal_r+0x1100>
 800ac14:	01800804 	movi	r6,32
 800ac18:	80c00007 	ldb	r3,0(r16)
 800ac1c:	003dfb06 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ac20:	da812117 	ldw	r10,1156(sp)
 800ac24:	dac12117 	ldw	r11,1156(sp)
 800ac28:	d8011d85 	stb	zero,1142(sp)
 800ac2c:	52800017 	ldw	r10,0(r10)
 800ac30:	5d800104 	addi	r22,r11,4
 800ac34:	da812415 	stw	r10,1168(sp)
 800ac38:	50023b26 	beq	r10,zero,800b528 <___vfiprintf_internal_r+0x1298>
 800ac3c:	d9012417 	ldw	r4,1168(sp)
 800ac40:	48021f16 	blt	r9,zero,800b4c0 <___vfiprintf_internal_r+0x1230>
 800ac44:	480d883a 	mov	r6,r9
 800ac48:	000b883a 	mov	r5,zero
 800ac4c:	da012a15 	stw	r8,1192(sp)
 800ac50:	da412b15 	stw	r9,1196(sp)
 800ac54:	80079d40 	call	80079d4 <memchr>
 800ac58:	da012a17 	ldw	r8,1192(sp)
 800ac5c:	da412b17 	ldw	r9,1196(sp)
 800ac60:	10024726 	beq	r2,zero,800b580 <___vfiprintf_internal_r+0x12f0>
 800ac64:	d8c12417 	ldw	r3,1168(sp)
 800ac68:	10e3c83a 	sub	r17,r2,r3
 800ac6c:	4c41f616 	blt	r9,r17,800b448 <___vfiprintf_internal_r+0x11b8>
 800ac70:	db011d83 	ldbu	r12,1142(sp)
 800ac74:	dd812115 	stw	r22,1156(sp)
 800ac78:	0013883a 	mov	r9,zero
 800ac7c:	003e8006 	br	800a680 <__alt_data_end+0xfc00a680>
 800ac80:	d9811d85 	stb	r6,1142(sp)
 800ac84:	a880080c 	andi	r2,r21,32
 800ac88:	d8c12117 	ldw	r3,1156(sp)
 800ac8c:	103fb51e 	bne	r2,zero,800ab64 <__alt_data_end+0xfc00ab64>
 800ac90:	a880040c 	andi	r2,r21,16
 800ac94:	10015e1e 	bne	r2,zero,800b210 <___vfiprintf_internal_r+0xf80>
 800ac98:	a880100c 	andi	r2,r21,64
 800ac9c:	10015c26 	beq	r2,zero,800b210 <___vfiprintf_internal_r+0xf80>
 800aca0:	1c80000f 	ldh	r18,0(r3)
 800aca4:	da812117 	ldw	r10,1156(sp)
 800aca8:	902dd7fa 	srai	r22,r18,31
 800acac:	52800104 	addi	r10,r10,4
 800acb0:	da812115 	stw	r10,1156(sp)
 800acb4:	b005883a 	mov	r2,r22
 800acb8:	003fb006 	br	800ab7c <__alt_data_end+0xfc00ab7c>
 800acbc:	da812117 	ldw	r10,1156(sp)
 800acc0:	00800c04 	movi	r2,48
 800acc4:	02c20074 	movhi	r11,2049
 800acc8:	54800017 	ldw	r18,0(r10)
 800accc:	d8811d05 	stb	r2,1140(sp)
 800acd0:	52800104 	addi	r10,r10,4
 800acd4:	00801e04 	movi	r2,120
 800acd8:	5acaab04 	addi	r11,r11,10924
 800acdc:	d8811d45 	stb	r2,1141(sp)
 800ace0:	002d883a 	mov	r22,zero
 800ace4:	ad400094 	ori	r21,r21,2
 800ace8:	da812115 	stw	r10,1156(sp)
 800acec:	dac12615 	stw	r11,1176(sp)
 800acf0:	00800084 	movi	r2,2
 800acf4:	9009883a 	mov	r4,r18
 800acf8:	003e4406 	br	800a60c <__alt_data_end+0xfc00a60c>
 800acfc:	ad400814 	ori	r21,r21,32
 800ad00:	80c00007 	ldb	r3,0(r16)
 800ad04:	003dc106 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ad08:	ad401014 	ori	r21,r21,64
 800ad0c:	80c00007 	ldb	r3,0(r16)
 800ad10:	003dbe06 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ad14:	80c00007 	ldb	r3,0(r16)
 800ad18:	19c1de26 	beq	r3,r7,800b494 <___vfiprintf_internal_r+0x1204>
 800ad1c:	ad400414 	ori	r21,r21,16
 800ad20:	003dba06 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ad24:	00820074 	movhi	r2,2049
 800ad28:	108aab04 	addi	r2,r2,10924
 800ad2c:	d8812615 	stw	r2,1176(sp)
 800ad30:	d9811d85 	stb	r6,1142(sp)
 800ad34:	a900080c 	andi	r4,r21,32
 800ad38:	d8812117 	ldw	r2,1156(sp)
 800ad3c:	203f5b1e 	bne	r4,zero,800aaac <__alt_data_end+0xfc00aaac>
 800ad40:	a900040c 	andi	r4,r21,16
 800ad44:	2001a826 	beq	r4,zero,800b3e8 <___vfiprintf_internal_r+0x1158>
 800ad48:	dac12117 	ldw	r11,1156(sp)
 800ad4c:	14800017 	ldw	r18,0(r2)
 800ad50:	002d883a 	mov	r22,zero
 800ad54:	5ac00104 	addi	r11,r11,4
 800ad58:	dac12115 	stw	r11,1156(sp)
 800ad5c:	003f5806 	br	800aac0 <__alt_data_end+0xfc00aac0>
 800ad60:	da812117 	ldw	r10,1156(sp)
 800ad64:	54c00017 	ldw	r19,0(r10)
 800ad68:	50800104 	addi	r2,r10,4
 800ad6c:	983f2f16 	blt	r19,zero,800aa2c <__alt_data_end+0xfc00aa2c>
 800ad70:	d8812115 	stw	r2,1156(sp)
 800ad74:	80c00007 	ldb	r3,0(r16)
 800ad78:	003da406 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ad7c:	01800ac4 	movi	r6,43
 800ad80:	80c00007 	ldb	r3,0(r16)
 800ad84:	003da106 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ad88:	ad400054 	ori	r21,r21,1
 800ad8c:	80c00007 	ldb	r3,0(r16)
 800ad90:	003d9e06 	br	800a40c <__alt_data_end+0xfc00a40c>
 800ad94:	d9811d85 	stb	r6,1142(sp)
 800ad98:	18007126 	beq	r3,zero,800af60 <___vfiprintf_internal_r+0xcd0>
 800ad9c:	04800044 	movi	r18,1
 800ada0:	d8c10005 	stb	r3,1024(sp)
 800ada4:	d8c10004 	addi	r3,sp,1024
 800ada8:	d8011d85 	stb	zero,1142(sp)
 800adac:	9023883a 	mov	r17,r18
 800adb0:	d8c12415 	stw	r3,1168(sp)
 800adb4:	003f5606 	br	800ab10 <__alt_data_end+0xfc00ab10>
 800adb8:	dac12117 	ldw	r11,1156(sp)
 800adbc:	002d883a 	mov	r22,zero
 800adc0:	00800044 	movi	r2,1
 800adc4:	5c800017 	ldw	r18,0(r11)
 800adc8:	5ac00104 	addi	r11,r11,4
 800adcc:	dac12115 	stw	r11,1156(sp)
 800add0:	9009883a 	mov	r4,r18
 800add4:	003e0d06 	br	800a60c <__alt_data_end+0xfc00a60c>
 800add8:	dac12117 	ldw	r11,1156(sp)
 800addc:	002d883a 	mov	r22,zero
 800ade0:	0005883a 	mov	r2,zero
 800ade4:	5c800017 	ldw	r18,0(r11)
 800ade8:	5ac00104 	addi	r11,r11,4
 800adec:	dac12115 	stw	r11,1156(sp)
 800adf0:	9009883a 	mov	r4,r18
 800adf4:	003e0506 	br	800a60c <__alt_data_end+0xfc00a60c>
 800adf8:	d9012017 	ldw	r4,1152(sp)
 800adfc:	a00b883a 	mov	r5,r20
 800ae00:	d9811a04 	addi	r6,sp,1128
 800ae04:	d8c12a15 	stw	r3,1192(sp)
 800ae08:	db012b15 	stw	r12,1196(sp)
 800ae0c:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800ae10:	d8c12a17 	ldw	r3,1192(sp)
 800ae14:	db012b17 	ldw	r12,1196(sp)
 800ae18:	1000571e 	bne	r2,zero,800af78 <___vfiprintf_internal_r+0xce8>
 800ae1c:	d9811b17 	ldw	r6,1132(sp)
 800ae20:	d8811c17 	ldw	r2,1136(sp)
 800ae24:	d811883a 	mov	r8,sp
 800ae28:	31400044 	addi	r5,r6,1
 800ae2c:	003e3306 	br	800a6fc <__alt_data_end+0xfc00a6fc>
 800ae30:	d9411b17 	ldw	r5,1132(sp)
 800ae34:	d8c11c17 	ldw	r3,1136(sp)
 800ae38:	28800044 	addi	r2,r5,1
 800ae3c:	d9011d87 	ldb	r4,1142(sp)
 800ae40:	203e4d26 	beq	r4,zero,800a778 <__alt_data_end+0xfc00a778>
 800ae44:	01000044 	movi	r4,1
 800ae48:	d9411d84 	addi	r5,sp,1142
 800ae4c:	1907883a 	add	r3,r3,r4
 800ae50:	41400015 	stw	r5,0(r8)
 800ae54:	41000115 	stw	r4,4(r8)
 800ae58:	d8c11c15 	stw	r3,1136(sp)
 800ae5c:	d8811b15 	stw	r2,1132(sp)
 800ae60:	014001c4 	movi	r5,7
 800ae64:	2880aa16 	blt	r5,r2,800b110 <___vfiprintf_internal_r+0xe80>
 800ae68:	100b883a 	mov	r5,r2
 800ae6c:	42000204 	addi	r8,r8,8
 800ae70:	10800044 	addi	r2,r2,1
 800ae74:	003e4006 	br	800a778 <__alt_data_end+0xfc00a778>
 800ae78:	d9012017 	ldw	r4,1152(sp)
 800ae7c:	a00b883a 	mov	r5,r20
 800ae80:	d9811a04 	addi	r6,sp,1128
 800ae84:	d9c12a15 	stw	r7,1192(sp)
 800ae88:	db012b15 	stw	r12,1196(sp)
 800ae8c:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800ae90:	d9c12a17 	ldw	r7,1192(sp)
 800ae94:	db012b17 	ldw	r12,1196(sp)
 800ae98:	1000371e 	bne	r2,zero,800af78 <___vfiprintf_internal_r+0xce8>
 800ae9c:	d9411b17 	ldw	r5,1132(sp)
 800aea0:	d8c11c17 	ldw	r3,1136(sp)
 800aea4:	d811883a 	mov	r8,sp
 800aea8:	28800044 	addi	r2,r5,1
 800aeac:	003e4d06 	br	800a7e4 <__alt_data_end+0xfc00a7e4>
 800aeb0:	10803fcc 	andi	r2,r2,255
 800aeb4:	00c00044 	movi	r3,1
 800aeb8:	10fddf1e 	bne	r2,r3,800a638 <__alt_data_end+0xfc00a638>
 800aebc:	b000021e 	bne	r22,zero,800aec8 <___vfiprintf_internal_r+0xc38>
 800aec0:	00800244 	movi	r2,9
 800aec4:	1480202e 	bgeu	r2,r18,800af48 <___vfiprintf_internal_r+0xcb8>
 800aec8:	dc012515 	stw	r16,1172(sp)
 800aecc:	dc410a04 	addi	r17,sp,1064
 800aed0:	9021883a 	mov	r16,r18
 800aed4:	da012415 	stw	r8,1168(sp)
 800aed8:	b025883a 	mov	r18,r22
 800aedc:	da412315 	stw	r9,1164(sp)
 800aee0:	602d883a 	mov	r22,r12
 800aee4:	8009883a 	mov	r4,r16
 800aee8:	900b883a 	mov	r5,r18
 800aeec:	01800284 	movi	r6,10
 800aef0:	000f883a 	mov	r7,zero
 800aef4:	800d0a80 	call	800d0a8 <__umoddi3>
 800aef8:	10800c04 	addi	r2,r2,48
 800aefc:	8c7fffc4 	addi	r17,r17,-1
 800af00:	8009883a 	mov	r4,r16
 800af04:	900b883a 	mov	r5,r18
 800af08:	01800284 	movi	r6,10
 800af0c:	000f883a 	mov	r7,zero
 800af10:	88800005 	stb	r2,0(r17)
 800af14:	800cae80 	call	800cae8 <__udivdi3>
 800af18:	1021883a 	mov	r16,r2
 800af1c:	10c4b03a 	or	r2,r2,r3
 800af20:	1825883a 	mov	r18,r3
 800af24:	103fef1e 	bne	r2,zero,800aee4 <__alt_data_end+0xfc00aee4>
 800af28:	da811e17 	ldw	r10,1144(sp)
 800af2c:	da012417 	ldw	r8,1168(sp)
 800af30:	da412317 	ldw	r9,1164(sp)
 800af34:	dc412415 	stw	r17,1168(sp)
 800af38:	b019883a 	mov	r12,r22
 800af3c:	dc012517 	ldw	r16,1172(sp)
 800af40:	5463c83a 	sub	r17,r10,r17
 800af44:	003dce06 	br	800a680 <__alt_data_end+0xfc00a680>
 800af48:	94800c04 	addi	r18,r18,48
 800af4c:	d8c109c4 	addi	r3,sp,1063
 800af50:	dc8109c5 	stb	r18,1063(sp)
 800af54:	dc412717 	ldw	r17,1180(sp)
 800af58:	d8c12415 	stw	r3,1168(sp)
 800af5c:	003dc806 	br	800a680 <__alt_data_end+0xfc00a680>
 800af60:	d8811c17 	ldw	r2,1136(sp)
 800af64:	10000426 	beq	r2,zero,800af78 <___vfiprintf_internal_r+0xce8>
 800af68:	d9012017 	ldw	r4,1152(sp)
 800af6c:	a00b883a 	mov	r5,r20
 800af70:	d9811a04 	addi	r6,sp,1128
 800af74:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800af78:	a080030b 	ldhu	r2,12(r20)
 800af7c:	1080100c 	andi	r2,r2,64
 800af80:	103e9b1e 	bne	r2,zero,800a9f0 <__alt_data_end+0xfc00a9f0>
 800af84:	d8812217 	ldw	r2,1160(sp)
 800af88:	003e9a06 	br	800a9f4 <__alt_data_end+0xfc00a9f4>
 800af8c:	d9012017 	ldw	r4,1152(sp)
 800af90:	a00b883a 	mov	r5,r20
 800af94:	d9811a04 	addi	r6,sp,1128
 800af98:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800af9c:	103ff61e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800afa0:	d9011b17 	ldw	r4,1132(sp)
 800afa4:	d8c11c17 	ldw	r3,1136(sp)
 800afa8:	d811883a 	mov	r8,sp
 800afac:	21400044 	addi	r5,r4,1
 800afb0:	003e4006 	br	800a8b4 <__alt_data_end+0xfc00a8b4>
 800afb4:	1800d61e 	bne	r3,zero,800b310 <___vfiprintf_internal_r+0x1080>
 800afb8:	dac12417 	ldw	r11,1168(sp)
 800afbc:	00800044 	movi	r2,1
 800afc0:	dc400115 	stw	r17,4(sp)
 800afc4:	dac00015 	stw	r11,0(sp)
 800afc8:	dc411c15 	stw	r17,1136(sp)
 800afcc:	d8811b15 	stw	r2,1132(sp)
 800afd0:	8807883a 	mov	r3,r17
 800afd4:	d811883a 	mov	r8,sp
 800afd8:	42000204 	addi	r8,r8,8
 800afdc:	aac0010c 	andi	r11,r21,4
 800afe0:	58000226 	beq	r11,zero,800afec <___vfiprintf_internal_r+0xd5c>
 800afe4:	9ca3c83a 	sub	r17,r19,r18
 800afe8:	047e2616 	blt	zero,r17,800a884 <__alt_data_end+0xfc00a884>
 800afec:	94c0010e 	bge	r18,r19,800aff4 <___vfiprintf_internal_r+0xd64>
 800aff0:	9825883a 	mov	r18,r19
 800aff4:	da812217 	ldw	r10,1160(sp)
 800aff8:	5495883a 	add	r10,r10,r18
 800affc:	da812215 	stw	r10,1160(sp)
 800b000:	183e4826 	beq	r3,zero,800a924 <__alt_data_end+0xfc00a924>
 800b004:	d9012017 	ldw	r4,1152(sp)
 800b008:	a00b883a 	mov	r5,r20
 800b00c:	d9811a04 	addi	r6,sp,1128
 800b010:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b014:	103e4326 	beq	r2,zero,800a924 <__alt_data_end+0xfc00a924>
 800b018:	003fd706 	br	800af78 <__alt_data_end+0xfc00af78>
 800b01c:	9cadc83a 	sub	r22,r19,r18
 800b020:	05bde40e 	bge	zero,r22,800a7b4 <__alt_data_end+0xfc00a7b4>
 800b024:	03000404 	movi	r12,16
 800b028:	6581500e 	bge	r12,r22,800b56c <___vfiprintf_internal_r+0x12dc>
 800b02c:	00820074 	movhi	r2,2049
 800b030:	108b1c04 	addi	r2,r2,11376
 800b034:	d8812315 	stw	r2,1164(sp)
 800b038:	8005883a 	mov	r2,r16
 800b03c:	038001c4 	movi	r14,7
 800b040:	b021883a 	mov	r16,r22
 800b044:	da412515 	stw	r9,1172(sp)
 800b048:	102d883a 	mov	r22,r2
 800b04c:	00000506 	br	800b064 <___vfiprintf_internal_r+0xdd4>
 800b050:	29000084 	addi	r4,r5,2
 800b054:	42000204 	addi	r8,r8,8
 800b058:	100b883a 	mov	r5,r2
 800b05c:	843ffc04 	addi	r16,r16,-16
 800b060:	64000d0e 	bge	r12,r16,800b098 <___vfiprintf_internal_r+0xe08>
 800b064:	18c00404 	addi	r3,r3,16
 800b068:	28800044 	addi	r2,r5,1
 800b06c:	45c00015 	stw	r23,0(r8)
 800b070:	43000115 	stw	r12,4(r8)
 800b074:	d8c11c15 	stw	r3,1136(sp)
 800b078:	d8811b15 	stw	r2,1132(sp)
 800b07c:	70bff40e 	bge	r14,r2,800b050 <__alt_data_end+0xfc00b050>
 800b080:	1800151e 	bne	r3,zero,800b0d8 <___vfiprintf_internal_r+0xe48>
 800b084:	843ffc04 	addi	r16,r16,-16
 800b088:	000b883a 	mov	r5,zero
 800b08c:	01000044 	movi	r4,1
 800b090:	d811883a 	mov	r8,sp
 800b094:	643ff316 	blt	r12,r16,800b064 <__alt_data_end+0xfc00b064>
 800b098:	da412517 	ldw	r9,1172(sp)
 800b09c:	b005883a 	mov	r2,r22
 800b0a0:	802d883a 	mov	r22,r16
 800b0a4:	1021883a 	mov	r16,r2
 800b0a8:	da812317 	ldw	r10,1164(sp)
 800b0ac:	1d87883a 	add	r3,r3,r22
 800b0b0:	45800115 	stw	r22,4(r8)
 800b0b4:	42800015 	stw	r10,0(r8)
 800b0b8:	d8c11c15 	stw	r3,1136(sp)
 800b0bc:	d9011b15 	stw	r4,1132(sp)
 800b0c0:	008001c4 	movi	r2,7
 800b0c4:	11008d16 	blt	r2,r4,800b2fc <___vfiprintf_internal_r+0x106c>
 800b0c8:	42000204 	addi	r8,r8,8
 800b0cc:	20800044 	addi	r2,r4,1
 800b0d0:	200b883a 	mov	r5,r4
 800b0d4:	003db706 	br	800a7b4 <__alt_data_end+0xfc00a7b4>
 800b0d8:	d9012017 	ldw	r4,1152(sp)
 800b0dc:	a00b883a 	mov	r5,r20
 800b0e0:	d9811a04 	addi	r6,sp,1128
 800b0e4:	db012b15 	stw	r12,1196(sp)
 800b0e8:	db812a15 	stw	r14,1192(sp)
 800b0ec:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b0f0:	db012b17 	ldw	r12,1196(sp)
 800b0f4:	db812a17 	ldw	r14,1192(sp)
 800b0f8:	103f9f1e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b0fc:	d9411b17 	ldw	r5,1132(sp)
 800b100:	d8c11c17 	ldw	r3,1136(sp)
 800b104:	d811883a 	mov	r8,sp
 800b108:	29000044 	addi	r4,r5,1
 800b10c:	003fd306 	br	800b05c <__alt_data_end+0xfc00b05c>
 800b110:	18006c1e 	bne	r3,zero,800b2c4 <___vfiprintf_internal_r+0x1034>
 800b114:	70004f26 	beq	r14,zero,800b254 <___vfiprintf_internal_r+0xfc4>
 800b118:	d8811d04 	addi	r2,sp,1140
 800b11c:	00c00084 	movi	r3,2
 800b120:	d8800015 	stw	r2,0(sp)
 800b124:	d8c00115 	stw	r3,4(sp)
 800b128:	2005883a 	mov	r2,r4
 800b12c:	d811883a 	mov	r8,sp
 800b130:	003d9b06 	br	800a7a0 <__alt_data_end+0xfc00a7a0>
 800b134:	1800571e 	bne	r3,zero,800b294 <___vfiprintf_internal_r+0x1004>
 800b138:	000b883a 	mov	r5,zero
 800b13c:	00800044 	movi	r2,1
 800b140:	d811883a 	mov	r8,sp
 800b144:	003d9906 	br	800a7ac <__alt_data_end+0xfc00a7ac>
 800b148:	10803fcc 	andi	r2,r2,255
 800b14c:	1000251e 	bne	r2,zero,800b1e4 <___vfiprintf_internal_r+0xf54>
 800b150:	a880004c 	andi	r2,r21,1
 800b154:	10007826 	beq	r2,zero,800b338 <___vfiprintf_internal_r+0x10a8>
 800b158:	00800c04 	movi	r2,48
 800b15c:	d8c109c4 	addi	r3,sp,1063
 800b160:	d88109c5 	stb	r2,1063(sp)
 800b164:	dc412717 	ldw	r17,1180(sp)
 800b168:	d8c12415 	stw	r3,1168(sp)
 800b16c:	003d4406 	br	800a680 <__alt_data_end+0xfc00a680>
 800b170:	d9012617 	ldw	r4,1176(sp)
 800b174:	dc410a04 	addi	r17,sp,1064
 800b178:	908003cc 	andi	r2,r18,15
 800b17c:	b006973a 	slli	r3,r22,28
 800b180:	2085883a 	add	r2,r4,r2
 800b184:	9024d13a 	srli	r18,r18,4
 800b188:	10800003 	ldbu	r2,0(r2)
 800b18c:	b02cd13a 	srli	r22,r22,4
 800b190:	8c7fffc4 	addi	r17,r17,-1
 800b194:	1ca4b03a 	or	r18,r3,r18
 800b198:	88800005 	stb	r2,0(r17)
 800b19c:	9584b03a 	or	r2,r18,r22
 800b1a0:	103ff51e 	bne	r2,zero,800b178 <__alt_data_end+0xfc00b178>
 800b1a4:	dac11e17 	ldw	r11,1144(sp)
 800b1a8:	dc412415 	stw	r17,1168(sp)
 800b1ac:	5c63c83a 	sub	r17,r11,r17
 800b1b0:	003d3306 	br	800a680 <__alt_data_end+0xfc00a680>
 800b1b4:	1800941e 	bne	r3,zero,800b408 <___vfiprintf_internal_r+0x1178>
 800b1b8:	d8811d87 	ldb	r2,1142(sp)
 800b1bc:	10006b26 	beq	r2,zero,800b36c <___vfiprintf_internal_r+0x10dc>
 800b1c0:	00c00044 	movi	r3,1
 800b1c4:	d9011d84 	addi	r4,sp,1142
 800b1c8:	1805883a 	mov	r2,r3
 800b1cc:	d9000015 	stw	r4,0(sp)
 800b1d0:	d8c00115 	stw	r3,4(sp)
 800b1d4:	d811883a 	mov	r8,sp
 800b1d8:	003f2306 	br	800ae68 <__alt_data_end+0xfc00ae68>
 800b1dc:	8023883a 	mov	r17,r16
 800b1e0:	003c7d06 	br	800a3d8 <__alt_data_end+0xfc00a3d8>
 800b1e4:	da810a04 	addi	r10,sp,1064
 800b1e8:	da812415 	stw	r10,1168(sp)
 800b1ec:	003d2406 	br	800a680 <__alt_data_end+0xfc00a680>
 800b1f0:	d9012017 	ldw	r4,1152(sp)
 800b1f4:	a00b883a 	mov	r5,r20
 800b1f8:	d9811a04 	addi	r6,sp,1128
 800b1fc:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b200:	103f5d1e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b204:	d8c11c17 	ldw	r3,1136(sp)
 800b208:	d811883a 	mov	r8,sp
 800b20c:	003f7306 	br	800afdc <__alt_data_end+0xfc00afdc>
 800b210:	1c800017 	ldw	r18,0(r3)
 800b214:	dac12117 	ldw	r11,1156(sp)
 800b218:	902dd7fa 	srai	r22,r18,31
 800b21c:	5ac00104 	addi	r11,r11,4
 800b220:	dac12115 	stw	r11,1156(sp)
 800b224:	b005883a 	mov	r2,r22
 800b228:	003e5406 	br	800ab7c <__alt_data_end+0xfc00ab7c>
 800b22c:	00800084 	movi	r2,2
 800b230:	9588b03a 	or	r4,r18,r22
 800b234:	003cf506 	br	800a60c <__alt_data_end+0xfc00a60c>
 800b238:	d9012017 	ldw	r4,1152(sp)
 800b23c:	a00b883a 	mov	r5,r20
 800b240:	d9811a04 	addi	r6,sp,1128
 800b244:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b248:	103f4b1e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b24c:	d811883a 	mov	r8,sp
 800b250:	003cd106 	br	800a598 <__alt_data_end+0xfc00a598>
 800b254:	000b883a 	mov	r5,zero
 800b258:	2005883a 	mov	r2,r4
 800b25c:	d811883a 	mov	r8,sp
 800b260:	003d5206 	br	800a7ac <__alt_data_end+0xfc00a7ac>
 800b264:	10803fcc 	andi	r2,r2,255
 800b268:	1080201c 	xori	r2,r2,128
 800b26c:	10bfe004 	addi	r2,r2,-128
 800b270:	01000c04 	movi	r4,48
 800b274:	11008e26 	beq	r2,r4,800b4b0 <___vfiprintf_internal_r+0x1220>
 800b278:	da812417 	ldw	r10,1168(sp)
 800b27c:	dac11e17 	ldw	r11,1144(sp)
 800b280:	193fffc5 	stb	r4,-1(r3)
 800b284:	52bfffc4 	addi	r10,r10,-1
 800b288:	da812415 	stw	r10,1168(sp)
 800b28c:	5aa3c83a 	sub	r17,r11,r10
 800b290:	003cfb06 	br	800a680 <__alt_data_end+0xfc00a680>
 800b294:	d9012017 	ldw	r4,1152(sp)
 800b298:	a00b883a 	mov	r5,r20
 800b29c:	d9811a04 	addi	r6,sp,1128
 800b2a0:	da412b15 	stw	r9,1196(sp)
 800b2a4:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b2a8:	da412b17 	ldw	r9,1196(sp)
 800b2ac:	103f321e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b2b0:	d9411b17 	ldw	r5,1132(sp)
 800b2b4:	d8c11c17 	ldw	r3,1136(sp)
 800b2b8:	d811883a 	mov	r8,sp
 800b2bc:	28800044 	addi	r2,r5,1
 800b2c0:	003d3a06 	br	800a7ac <__alt_data_end+0xfc00a7ac>
 800b2c4:	d9012017 	ldw	r4,1152(sp)
 800b2c8:	a00b883a 	mov	r5,r20
 800b2cc:	d9811a04 	addi	r6,sp,1128
 800b2d0:	da412b15 	stw	r9,1196(sp)
 800b2d4:	db812a15 	stw	r14,1192(sp)
 800b2d8:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b2dc:	da412b17 	ldw	r9,1196(sp)
 800b2e0:	db812a17 	ldw	r14,1192(sp)
 800b2e4:	103f241e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b2e8:	d9411b17 	ldw	r5,1132(sp)
 800b2ec:	d8c11c17 	ldw	r3,1136(sp)
 800b2f0:	d811883a 	mov	r8,sp
 800b2f4:	28800044 	addi	r2,r5,1
 800b2f8:	003d1f06 	br	800a778 <__alt_data_end+0xfc00a778>
 800b2fc:	1800781e 	bne	r3,zero,800b4e0 <___vfiprintf_internal_r+0x1250>
 800b300:	000b883a 	mov	r5,zero
 800b304:	00800044 	movi	r2,1
 800b308:	d811883a 	mov	r8,sp
 800b30c:	003d2906 	br	800a7b4 <__alt_data_end+0xfc00a7b4>
 800b310:	d9012017 	ldw	r4,1152(sp)
 800b314:	a00b883a 	mov	r5,r20
 800b318:	d9811a04 	addi	r6,sp,1128
 800b31c:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b320:	103f151e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b324:	d8811b17 	ldw	r2,1132(sp)
 800b328:	d8c11c17 	ldw	r3,1136(sp)
 800b32c:	d811883a 	mov	r8,sp
 800b330:	10800044 	addi	r2,r2,1
 800b334:	003d4406 	br	800a848 <__alt_data_end+0xfc00a848>
 800b338:	dac10a04 	addi	r11,sp,1064
 800b33c:	dac12415 	stw	r11,1168(sp)
 800b340:	003ccf06 	br	800a680 <__alt_data_end+0xfc00a680>
 800b344:	04a5c83a 	sub	r18,zero,r18
 800b348:	9004c03a 	cmpne	r2,r18,zero
 800b34c:	05adc83a 	sub	r22,zero,r22
 800b350:	b0adc83a 	sub	r22,r22,r2
 800b354:	03000b44 	movi	r12,45
 800b358:	db011d85 	stb	r12,1142(sp)
 800b35c:	4823883a 	mov	r17,r9
 800b360:	00800044 	movi	r2,1
 800b364:	9588b03a 	or	r4,r18,r22
 800b368:	003cab06 	br	800a618 <__alt_data_end+0xfc00a618>
 800b36c:	000b883a 	mov	r5,zero
 800b370:	00800044 	movi	r2,1
 800b374:	d811883a 	mov	r8,sp
 800b378:	703d0c26 	beq	r14,zero,800a7ac <__alt_data_end+0xfc00a7ac>
 800b37c:	00c00084 	movi	r3,2
 800b380:	d9011d04 	addi	r4,sp,1140
 800b384:	d9000015 	stw	r4,0(sp)
 800b388:	d8c00115 	stw	r3,4(sp)
 800b38c:	003d0406 	br	800a7a0 <__alt_data_end+0xfc00a7a0>
 800b390:	80c00007 	ldb	r3,0(r16)
 800b394:	003c1d06 	br	800a40c <__alt_data_end+0xfc00a40c>
 800b398:	a880040c 	andi	r2,r21,16
 800b39c:	1000091e 	bne	r2,zero,800b3c4 <___vfiprintf_internal_r+0x1134>
 800b3a0:	aac0100c 	andi	r11,r21,64
 800b3a4:	58000726 	beq	r11,zero,800b3c4 <___vfiprintf_internal_r+0x1134>
 800b3a8:	da812117 	ldw	r10,1156(sp)
 800b3ac:	dac12217 	ldw	r11,1160(sp)
 800b3b0:	50800017 	ldw	r2,0(r10)
 800b3b4:	52800104 	addi	r10,r10,4
 800b3b8:	da812115 	stw	r10,1156(sp)
 800b3bc:	12c0000d 	sth	r11,0(r2)
 800b3c0:	003be806 	br	800a364 <__alt_data_end+0xfc00a364>
 800b3c4:	da812117 	ldw	r10,1156(sp)
 800b3c8:	dac12217 	ldw	r11,1160(sp)
 800b3cc:	50800017 	ldw	r2,0(r10)
 800b3d0:	52800104 	addi	r10,r10,4
 800b3d4:	da812115 	stw	r10,1156(sp)
 800b3d8:	12c00015 	stw	r11,0(r2)
 800b3dc:	003be106 	br	800a364 <__alt_data_end+0xfc00a364>
 800b3e0:	00800084 	movi	r2,2
 800b3e4:	003c8906 	br	800a60c <__alt_data_end+0xfc00a60c>
 800b3e8:	a900100c 	andi	r4,r21,64
 800b3ec:	20001f26 	beq	r4,zero,800b46c <___vfiprintf_internal_r+0x11dc>
 800b3f0:	da812117 	ldw	r10,1156(sp)
 800b3f4:	1480000b 	ldhu	r18,0(r2)
 800b3f8:	002d883a 	mov	r22,zero
 800b3fc:	52800104 	addi	r10,r10,4
 800b400:	da812115 	stw	r10,1156(sp)
 800b404:	003dae06 	br	800aac0 <__alt_data_end+0xfc00aac0>
 800b408:	d9012017 	ldw	r4,1152(sp)
 800b40c:	a00b883a 	mov	r5,r20
 800b410:	d9811a04 	addi	r6,sp,1128
 800b414:	da412b15 	stw	r9,1196(sp)
 800b418:	db812a15 	stw	r14,1192(sp)
 800b41c:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b420:	da412b17 	ldw	r9,1196(sp)
 800b424:	db812a17 	ldw	r14,1192(sp)
 800b428:	103ed31e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b42c:	d9411b17 	ldw	r5,1132(sp)
 800b430:	d8c11c17 	ldw	r3,1136(sp)
 800b434:	d811883a 	mov	r8,sp
 800b438:	28800044 	addi	r2,r5,1
 800b43c:	003e7f06 	br	800ae3c <__alt_data_end+0xfc00ae3c>
 800b440:	9825883a 	mov	r18,r19
 800b444:	003d3406 	br	800a918 <__alt_data_end+0xfc00a918>
 800b448:	4823883a 	mov	r17,r9
 800b44c:	003e0806 	br	800ac70 <__alt_data_end+0xfc00ac70>
 800b450:	d9012017 	ldw	r4,1152(sp)
 800b454:	a00b883a 	mov	r5,r20
 800b458:	d9811a04 	addi	r6,sp,1128
 800b45c:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b460:	103ec51e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b464:	d8c11c17 	ldw	r3,1136(sp)
 800b468:	003ee006 	br	800afec <__alt_data_end+0xfc00afec>
 800b46c:	dac12117 	ldw	r11,1156(sp)
 800b470:	14800017 	ldw	r18,0(r2)
 800b474:	002d883a 	mov	r22,zero
 800b478:	5ac00104 	addi	r11,r11,4
 800b47c:	dac12115 	stw	r11,1156(sp)
 800b480:	003d8f06 	br	800aac0 <__alt_data_end+0xfc00aac0>
 800b484:	02c20074 	movhi	r11,2049
 800b488:	5acb1c04 	addi	r11,r11,11376
 800b48c:	dac12315 	stw	r11,1164(sp)
 800b490:	003ce306 	br	800a820 <__alt_data_end+0xfc00a820>
 800b494:	80c00043 	ldbu	r3,1(r16)
 800b498:	ad400814 	ori	r21,r21,32
 800b49c:	84000044 	addi	r16,r16,1
 800b4a0:	18c03fcc 	andi	r3,r3,255
 800b4a4:	18c0201c 	xori	r3,r3,128
 800b4a8:	18ffe004 	addi	r3,r3,-128
 800b4ac:	003bd706 	br	800a40c <__alt_data_end+0xfc00a40c>
 800b4b0:	dac11e17 	ldw	r11,1144(sp)
 800b4b4:	d8c12417 	ldw	r3,1168(sp)
 800b4b8:	58e3c83a 	sub	r17,r11,r3
 800b4bc:	003c7006 	br	800a680 <__alt_data_end+0xfc00a680>
 800b4c0:	da012a15 	stw	r8,1192(sp)
 800b4c4:	80009780 	call	8000978 <strlen>
 800b4c8:	1023883a 	mov	r17,r2
 800b4cc:	db011d83 	ldbu	r12,1142(sp)
 800b4d0:	dd812115 	stw	r22,1156(sp)
 800b4d4:	0013883a 	mov	r9,zero
 800b4d8:	da012a17 	ldw	r8,1192(sp)
 800b4dc:	003c6806 	br	800a680 <__alt_data_end+0xfc00a680>
 800b4e0:	d9012017 	ldw	r4,1152(sp)
 800b4e4:	a00b883a 	mov	r5,r20
 800b4e8:	d9811a04 	addi	r6,sp,1128
 800b4ec:	da412b15 	stw	r9,1196(sp)
 800b4f0:	800a17c0 	call	800a17c <__sprint_r.part.0>
 800b4f4:	da412b17 	ldw	r9,1196(sp)
 800b4f8:	103e9f1e 	bne	r2,zero,800af78 <__alt_data_end+0xfc00af78>
 800b4fc:	d9411b17 	ldw	r5,1132(sp)
 800b500:	d8c11c17 	ldw	r3,1136(sp)
 800b504:	d811883a 	mov	r8,sp
 800b508:	28800044 	addi	r2,r5,1
 800b50c:	003ca906 	br	800a7b4 <__alt_data_end+0xfc00a7b4>
 800b510:	d9411b17 	ldw	r5,1132(sp)
 800b514:	01020074 	movhi	r4,2049
 800b518:	210b2004 	addi	r4,r4,11392
 800b51c:	d9012315 	stw	r4,1164(sp)
 800b520:	29400044 	addi	r5,r5,1
 800b524:	003c8806 	br	800a748 <__alt_data_end+0xfc00a748>
 800b528:	00800184 	movi	r2,6
 800b52c:	1240012e 	bgeu	r2,r9,800b534 <___vfiprintf_internal_r+0x12a4>
 800b530:	1013883a 	mov	r9,r2
 800b534:	4823883a 	mov	r17,r9
 800b538:	4825883a 	mov	r18,r9
 800b53c:	48001516 	blt	r9,zero,800b594 <___vfiprintf_internal_r+0x1304>
 800b540:	00820074 	movhi	r2,2049
 800b544:	108ab004 	addi	r2,r2,10944
 800b548:	dd812115 	stw	r22,1156(sp)
 800b54c:	d8812415 	stw	r2,1168(sp)
 800b550:	003d6f06 	br	800ab10 <__alt_data_end+0xfc00ab10>
 800b554:	d9411b17 	ldw	r5,1132(sp)
 800b558:	02c20074 	movhi	r11,2049
 800b55c:	5acb2004 	addi	r11,r11,11392
 800b560:	dac12315 	stw	r11,1164(sp)
 800b564:	29400044 	addi	r5,r5,1
 800b568:	003ce106 	br	800a8f0 <__alt_data_end+0xfc00a8f0>
 800b56c:	01020074 	movhi	r4,2049
 800b570:	210b1c04 	addi	r4,r4,11376
 800b574:	d9012315 	stw	r4,1164(sp)
 800b578:	1009883a 	mov	r4,r2
 800b57c:	003eca06 	br	800b0a8 <__alt_data_end+0xfc00b0a8>
 800b580:	4823883a 	mov	r17,r9
 800b584:	db011d83 	ldbu	r12,1142(sp)
 800b588:	dd812115 	stw	r22,1156(sp)
 800b58c:	0013883a 	mov	r9,zero
 800b590:	003c3b06 	br	800a680 <__alt_data_end+0xfc00a680>
 800b594:	0025883a 	mov	r18,zero
 800b598:	003fe906 	br	800b540 <__alt_data_end+0xfc00b540>
 800b59c:	dac12117 	ldw	r11,1156(sp)
 800b5a0:	8005883a 	mov	r2,r16
 800b5a4:	5021883a 	mov	r16,r10
 800b5a8:	5a400017 	ldw	r9,0(r11)
 800b5ac:	58c00104 	addi	r3,r11,4
 800b5b0:	d8c12115 	stw	r3,1156(sp)
 800b5b4:	48000a16 	blt	r9,zero,800b5e0 <___vfiprintf_internal_r+0x1350>
 800b5b8:	10c00047 	ldb	r3,1(r2)
 800b5bc:	003b9306 	br	800a40c <__alt_data_end+0xfc00a40c>
 800b5c0:	043fffc4 	movi	r16,-1
 800b5c4:	003d0206 	br	800a9d0 <__alt_data_end+0xfc00a9d0>
 800b5c8:	94c0010e 	bge	r18,r19,800b5d0 <___vfiprintf_internal_r+0x1340>
 800b5cc:	9825883a 	mov	r18,r19
 800b5d0:	da812217 	ldw	r10,1160(sp)
 800b5d4:	5495883a 	add	r10,r10,r18
 800b5d8:	da812215 	stw	r10,1160(sp)
 800b5dc:	003cd106 	br	800a924 <__alt_data_end+0xfc00a924>
 800b5e0:	027fffc4 	movi	r9,-1
 800b5e4:	10c00047 	ldb	r3,1(r2)
 800b5e8:	003b8806 	br	800a40c <__alt_data_end+0xfc00a40c>

0800b5ec <__vfiprintf_internal>:
 800b5ec:	2007883a 	mov	r3,r4
 800b5f0:	01020074 	movhi	r4,2049
 800b5f4:	21123804 	addi	r4,r4,18656
 800b5f8:	21000017 	ldw	r4,0(r4)
 800b5fc:	2805883a 	mov	r2,r5
 800b600:	300f883a 	mov	r7,r6
 800b604:	180b883a 	mov	r5,r3
 800b608:	100d883a 	mov	r6,r2
 800b60c:	800a2901 	jmpi	800a290 <___vfiprintf_internal_r>

0800b610 <_write_r>:
 800b610:	defffd04 	addi	sp,sp,-12
 800b614:	dc000015 	stw	r16,0(sp)
 800b618:	04020074 	movhi	r16,2049
 800b61c:	dc400115 	stw	r17,4(sp)
 800b620:	84191d04 	addi	r16,r16,25716
 800b624:	2023883a 	mov	r17,r4
 800b628:	2809883a 	mov	r4,r5
 800b62c:	300b883a 	mov	r5,r6
 800b630:	380d883a 	mov	r6,r7
 800b634:	dfc00215 	stw	ra,8(sp)
 800b638:	80000015 	stw	zero,0(r16)
 800b63c:	80106100 	call	8010610 <write>
 800b640:	00ffffc4 	movi	r3,-1
 800b644:	10c00526 	beq	r2,r3,800b65c <_write_r+0x4c>
 800b648:	dfc00217 	ldw	ra,8(sp)
 800b64c:	dc400117 	ldw	r17,4(sp)
 800b650:	dc000017 	ldw	r16,0(sp)
 800b654:	dec00304 	addi	sp,sp,12
 800b658:	f800283a 	ret
 800b65c:	80c00017 	ldw	r3,0(r16)
 800b660:	183ff926 	beq	r3,zero,800b648 <__alt_data_end+0xfc00b648>
 800b664:	88c00015 	stw	r3,0(r17)
 800b668:	003ff706 	br	800b648 <__alt_data_end+0xfc00b648>

0800b66c <_close_r>:
 800b66c:	defffd04 	addi	sp,sp,-12
 800b670:	dc000015 	stw	r16,0(sp)
 800b674:	04020074 	movhi	r16,2049
 800b678:	dc400115 	stw	r17,4(sp)
 800b67c:	84191d04 	addi	r16,r16,25716
 800b680:	2023883a 	mov	r17,r4
 800b684:	2809883a 	mov	r4,r5
 800b688:	dfc00215 	stw	ra,8(sp)
 800b68c:	80000015 	stw	zero,0(r16)
 800b690:	800fdb40 	call	800fdb4 <close>
 800b694:	00ffffc4 	movi	r3,-1
 800b698:	10c00526 	beq	r2,r3,800b6b0 <_close_r+0x44>
 800b69c:	dfc00217 	ldw	ra,8(sp)
 800b6a0:	dc400117 	ldw	r17,4(sp)
 800b6a4:	dc000017 	ldw	r16,0(sp)
 800b6a8:	dec00304 	addi	sp,sp,12
 800b6ac:	f800283a 	ret
 800b6b0:	80c00017 	ldw	r3,0(r16)
 800b6b4:	183ff926 	beq	r3,zero,800b69c <__alt_data_end+0xfc00b69c>
 800b6b8:	88c00015 	stw	r3,0(r17)
 800b6bc:	003ff706 	br	800b69c <__alt_data_end+0xfc00b69c>

0800b6c0 <_calloc_r>:
 800b6c0:	298b383a 	mul	r5,r5,r6
 800b6c4:	defffe04 	addi	sp,sp,-8
 800b6c8:	dc000015 	stw	r16,0(sp)
 800b6cc:	dfc00115 	stw	ra,4(sp)
 800b6d0:	800722c0 	call	800722c <_malloc_r>
 800b6d4:	1021883a 	mov	r16,r2
 800b6d8:	10002826 	beq	r2,zero,800b77c <_calloc_r+0xbc>
 800b6dc:	11bfff17 	ldw	r6,-4(r2)
 800b6e0:	00bfff04 	movi	r2,-4
 800b6e4:	00c00904 	movi	r3,36
 800b6e8:	308c703a 	and	r6,r6,r2
 800b6ec:	308d883a 	add	r6,r6,r2
 800b6f0:	19801436 	bltu	r3,r6,800b744 <_calloc_r+0x84>
 800b6f4:	008004c4 	movi	r2,19
 800b6f8:	11800936 	bltu	r2,r6,800b720 <_calloc_r+0x60>
 800b6fc:	8005883a 	mov	r2,r16
 800b700:	10000015 	stw	zero,0(r2)
 800b704:	10000115 	stw	zero,4(r2)
 800b708:	10000215 	stw	zero,8(r2)
 800b70c:	8005883a 	mov	r2,r16
 800b710:	dfc00117 	ldw	ra,4(sp)
 800b714:	dc000017 	ldw	r16,0(sp)
 800b718:	dec00204 	addi	sp,sp,8
 800b71c:	f800283a 	ret
 800b720:	80000015 	stw	zero,0(r16)
 800b724:	80000115 	stw	zero,4(r16)
 800b728:	008006c4 	movi	r2,27
 800b72c:	11800d2e 	bgeu	r2,r6,800b764 <_calloc_r+0xa4>
 800b730:	80000215 	stw	zero,8(r16)
 800b734:	80000315 	stw	zero,12(r16)
 800b738:	30c00c26 	beq	r6,r3,800b76c <_calloc_r+0xac>
 800b73c:	80800404 	addi	r2,r16,16
 800b740:	003fef06 	br	800b700 <__alt_data_end+0xfc00b700>
 800b744:	8009883a 	mov	r4,r16
 800b748:	000b883a 	mov	r5,zero
 800b74c:	8007bf40 	call	8007bf4 <memset>
 800b750:	8005883a 	mov	r2,r16
 800b754:	dfc00117 	ldw	ra,4(sp)
 800b758:	dc000017 	ldw	r16,0(sp)
 800b75c:	dec00204 	addi	sp,sp,8
 800b760:	f800283a 	ret
 800b764:	80800204 	addi	r2,r16,8
 800b768:	003fe506 	br	800b700 <__alt_data_end+0xfc00b700>
 800b76c:	80000415 	stw	zero,16(r16)
 800b770:	80800604 	addi	r2,r16,24
 800b774:	80000515 	stw	zero,20(r16)
 800b778:	003fe106 	br	800b700 <__alt_data_end+0xfc00b700>
 800b77c:	0005883a 	mov	r2,zero
 800b780:	003fe306 	br	800b710 <__alt_data_end+0xfc00b710>

0800b784 <_fclose_r>:
 800b784:	28003226 	beq	r5,zero,800b850 <_fclose_r+0xcc>
 800b788:	defffc04 	addi	sp,sp,-16
 800b78c:	dc400115 	stw	r17,4(sp)
 800b790:	2023883a 	mov	r17,r4
 800b794:	dc000015 	stw	r16,0(sp)
 800b798:	dfc00315 	stw	ra,12(sp)
 800b79c:	dc800215 	stw	r18,8(sp)
 800b7a0:	2821883a 	mov	r16,r5
 800b7a4:	80069d00 	call	80069d0 <__sfp_lock_acquire>
 800b7a8:	88000226 	beq	r17,zero,800b7b4 <_fclose_r+0x30>
 800b7ac:	88800e17 	ldw	r2,56(r17)
 800b7b0:	10002926 	beq	r2,zero,800b858 <_fclose_r+0xd4>
 800b7b4:	8080030f 	ldh	r2,12(r16)
 800b7b8:	10002226 	beq	r2,zero,800b844 <_fclose_r+0xc0>
 800b7bc:	8809883a 	mov	r4,r17
 800b7c0:	800b883a 	mov	r5,r16
 800b7c4:	80064180 	call	8006418 <_fflush_r>
 800b7c8:	1025883a 	mov	r18,r2
 800b7cc:	80800b17 	ldw	r2,44(r16)
 800b7d0:	10000426 	beq	r2,zero,800b7e4 <_fclose_r+0x60>
 800b7d4:	81400717 	ldw	r5,28(r16)
 800b7d8:	8809883a 	mov	r4,r17
 800b7dc:	103ee83a 	callr	r2
 800b7e0:	10002616 	blt	r2,zero,800b87c <_fclose_r+0xf8>
 800b7e4:	8080030b 	ldhu	r2,12(r16)
 800b7e8:	1080200c 	andi	r2,r2,128
 800b7ec:	10001f1e 	bne	r2,zero,800b86c <_fclose_r+0xe8>
 800b7f0:	81400c17 	ldw	r5,48(r16)
 800b7f4:	28000526 	beq	r5,zero,800b80c <_fclose_r+0x88>
 800b7f8:	80801004 	addi	r2,r16,64
 800b7fc:	28800226 	beq	r5,r2,800b808 <_fclose_r+0x84>
 800b800:	8809883a 	mov	r4,r17
 800b804:	8006b340 	call	8006b34 <_free_r>
 800b808:	80000c15 	stw	zero,48(r16)
 800b80c:	81401117 	ldw	r5,68(r16)
 800b810:	28000326 	beq	r5,zero,800b820 <_fclose_r+0x9c>
 800b814:	8809883a 	mov	r4,r17
 800b818:	8006b340 	call	8006b34 <_free_r>
 800b81c:	80001115 	stw	zero,68(r16)
 800b820:	8000030d 	sth	zero,12(r16)
 800b824:	80069d40 	call	80069d4 <__sfp_lock_release>
 800b828:	9005883a 	mov	r2,r18
 800b82c:	dfc00317 	ldw	ra,12(sp)
 800b830:	dc800217 	ldw	r18,8(sp)
 800b834:	dc400117 	ldw	r17,4(sp)
 800b838:	dc000017 	ldw	r16,0(sp)
 800b83c:	dec00404 	addi	sp,sp,16
 800b840:	f800283a 	ret
 800b844:	80069d40 	call	80069d4 <__sfp_lock_release>
 800b848:	0005883a 	mov	r2,zero
 800b84c:	003ff706 	br	800b82c <__alt_data_end+0xfc00b82c>
 800b850:	0005883a 	mov	r2,zero
 800b854:	f800283a 	ret
 800b858:	8809883a 	mov	r4,r17
 800b85c:	80069c00 	call	80069c0 <__sinit>
 800b860:	8080030f 	ldh	r2,12(r16)
 800b864:	103fd51e 	bne	r2,zero,800b7bc <__alt_data_end+0xfc00b7bc>
 800b868:	003ff606 	br	800b844 <__alt_data_end+0xfc00b844>
 800b86c:	81400417 	ldw	r5,16(r16)
 800b870:	8809883a 	mov	r4,r17
 800b874:	8006b340 	call	8006b34 <_free_r>
 800b878:	003fdd06 	br	800b7f0 <__alt_data_end+0xfc00b7f0>
 800b87c:	04bfffc4 	movi	r18,-1
 800b880:	003fd806 	br	800b7e4 <__alt_data_end+0xfc00b7e4>

0800b884 <fclose>:
 800b884:	00820074 	movhi	r2,2049
 800b888:	10923804 	addi	r2,r2,18656
 800b88c:	200b883a 	mov	r5,r4
 800b890:	11000017 	ldw	r4,0(r2)
 800b894:	800b7841 	jmpi	800b784 <_fclose_r>

0800b898 <_fputwc_r>:
 800b898:	3080030b 	ldhu	r2,12(r6)
 800b89c:	defff804 	addi	sp,sp,-32
 800b8a0:	dcc00415 	stw	r19,16(sp)
 800b8a4:	dc800315 	stw	r18,12(sp)
 800b8a8:	dc000115 	stw	r16,4(sp)
 800b8ac:	dfc00715 	stw	ra,28(sp)
 800b8b0:	dd400615 	stw	r21,24(sp)
 800b8b4:	dd000515 	stw	r20,20(sp)
 800b8b8:	dc400215 	stw	r17,8(sp)
 800b8bc:	10c8000c 	andi	r3,r2,8192
 800b8c0:	3021883a 	mov	r16,r6
 800b8c4:	2027883a 	mov	r19,r4
 800b8c8:	2825883a 	mov	r18,r5
 800b8cc:	1800051e 	bne	r3,zero,800b8e4 <_fputwc_r+0x4c>
 800b8d0:	30c01917 	ldw	r3,100(r6)
 800b8d4:	10880014 	ori	r2,r2,8192
 800b8d8:	3080030d 	sth	r2,12(r6)
 800b8dc:	18880014 	ori	r2,r3,8192
 800b8e0:	30801915 	stw	r2,100(r6)
 800b8e4:	800701c0 	call	800701c <__locale_mb_cur_max>
 800b8e8:	00c00044 	movi	r3,1
 800b8ec:	10c03e26 	beq	r2,r3,800b9e8 <_fputwc_r+0x150>
 800b8f0:	9809883a 	mov	r4,r19
 800b8f4:	d80b883a 	mov	r5,sp
 800b8f8:	900d883a 	mov	r6,r18
 800b8fc:	81c01704 	addi	r7,r16,92
 800b900:	800c8e80 	call	800c8e8 <_wcrtomb_r>
 800b904:	1029883a 	mov	r20,r2
 800b908:	00bfffc4 	movi	r2,-1
 800b90c:	a0802026 	beq	r20,r2,800b990 <_fputwc_r+0xf8>
 800b910:	d9400003 	ldbu	r5,0(sp)
 800b914:	a0001c26 	beq	r20,zero,800b988 <_fputwc_r+0xf0>
 800b918:	0023883a 	mov	r17,zero
 800b91c:	05400284 	movi	r21,10
 800b920:	00000906 	br	800b948 <_fputwc_r+0xb0>
 800b924:	80800017 	ldw	r2,0(r16)
 800b928:	11400005 	stb	r5,0(r2)
 800b92c:	80c00017 	ldw	r3,0(r16)
 800b930:	18c00044 	addi	r3,r3,1
 800b934:	80c00015 	stw	r3,0(r16)
 800b938:	8c400044 	addi	r17,r17,1
 800b93c:	dc45883a 	add	r2,sp,r17
 800b940:	8d00112e 	bgeu	r17,r20,800b988 <_fputwc_r+0xf0>
 800b944:	11400003 	ldbu	r5,0(r2)
 800b948:	80c00217 	ldw	r3,8(r16)
 800b94c:	18ffffc4 	addi	r3,r3,-1
 800b950:	80c00215 	stw	r3,8(r16)
 800b954:	183ff30e 	bge	r3,zero,800b924 <__alt_data_end+0xfc00b924>
 800b958:	80800617 	ldw	r2,24(r16)
 800b95c:	18801916 	blt	r3,r2,800b9c4 <_fputwc_r+0x12c>
 800b960:	80800017 	ldw	r2,0(r16)
 800b964:	11400005 	stb	r5,0(r2)
 800b968:	80800017 	ldw	r2,0(r16)
 800b96c:	10c00003 	ldbu	r3,0(r2)
 800b970:	10800044 	addi	r2,r2,1
 800b974:	1d402326 	beq	r3,r21,800ba04 <_fputwc_r+0x16c>
 800b978:	80800015 	stw	r2,0(r16)
 800b97c:	8c400044 	addi	r17,r17,1
 800b980:	dc45883a 	add	r2,sp,r17
 800b984:	8d3fef36 	bltu	r17,r20,800b944 <__alt_data_end+0xfc00b944>
 800b988:	9005883a 	mov	r2,r18
 800b98c:	00000406 	br	800b9a0 <_fputwc_r+0x108>
 800b990:	80c0030b 	ldhu	r3,12(r16)
 800b994:	a005883a 	mov	r2,r20
 800b998:	18c01014 	ori	r3,r3,64
 800b99c:	80c0030d 	sth	r3,12(r16)
 800b9a0:	dfc00717 	ldw	ra,28(sp)
 800b9a4:	dd400617 	ldw	r21,24(sp)
 800b9a8:	dd000517 	ldw	r20,20(sp)
 800b9ac:	dcc00417 	ldw	r19,16(sp)
 800b9b0:	dc800317 	ldw	r18,12(sp)
 800b9b4:	dc400217 	ldw	r17,8(sp)
 800b9b8:	dc000117 	ldw	r16,4(sp)
 800b9bc:	dec00804 	addi	sp,sp,32
 800b9c0:	f800283a 	ret
 800b9c4:	9809883a 	mov	r4,r19
 800b9c8:	29403fcc 	andi	r5,r5,255
 800b9cc:	800d883a 	mov	r6,r16
 800b9d0:	800c7780 	call	800c778 <__swbuf_r>
 800b9d4:	10bfffe0 	cmpeqi	r2,r2,-1
 800b9d8:	10803fcc 	andi	r2,r2,255
 800b9dc:	103fd626 	beq	r2,zero,800b938 <__alt_data_end+0xfc00b938>
 800b9e0:	00bfffc4 	movi	r2,-1
 800b9e4:	003fee06 	br	800b9a0 <__alt_data_end+0xfc00b9a0>
 800b9e8:	90ffffc4 	addi	r3,r18,-1
 800b9ec:	01003f84 	movi	r4,254
 800b9f0:	20ffbf36 	bltu	r4,r3,800b8f0 <__alt_data_end+0xfc00b8f0>
 800b9f4:	900b883a 	mov	r5,r18
 800b9f8:	dc800005 	stb	r18,0(sp)
 800b9fc:	1029883a 	mov	r20,r2
 800ba00:	003fc506 	br	800b918 <__alt_data_end+0xfc00b918>
 800ba04:	9809883a 	mov	r4,r19
 800ba08:	a80b883a 	mov	r5,r21
 800ba0c:	800d883a 	mov	r6,r16
 800ba10:	800c7780 	call	800c778 <__swbuf_r>
 800ba14:	10bfffe0 	cmpeqi	r2,r2,-1
 800ba18:	003fef06 	br	800b9d8 <__alt_data_end+0xfc00b9d8>

0800ba1c <fputwc>:
 800ba1c:	defffc04 	addi	sp,sp,-16
 800ba20:	dc000115 	stw	r16,4(sp)
 800ba24:	04020074 	movhi	r16,2049
 800ba28:	84123804 	addi	r16,r16,18656
 800ba2c:	dc400215 	stw	r17,8(sp)
 800ba30:	2023883a 	mov	r17,r4
 800ba34:	81000017 	ldw	r4,0(r16)
 800ba38:	dfc00315 	stw	ra,12(sp)
 800ba3c:	280d883a 	mov	r6,r5
 800ba40:	20000626 	beq	r4,zero,800ba5c <fputwc+0x40>
 800ba44:	20800e17 	ldw	r2,56(r4)
 800ba48:	1000041e 	bne	r2,zero,800ba5c <fputwc+0x40>
 800ba4c:	d9400015 	stw	r5,0(sp)
 800ba50:	80069c00 	call	80069c0 <__sinit>
 800ba54:	81000017 	ldw	r4,0(r16)
 800ba58:	d9800017 	ldw	r6,0(sp)
 800ba5c:	880b883a 	mov	r5,r17
 800ba60:	dfc00317 	ldw	ra,12(sp)
 800ba64:	dc400217 	ldw	r17,8(sp)
 800ba68:	dc000117 	ldw	r16,4(sp)
 800ba6c:	dec00404 	addi	sp,sp,16
 800ba70:	800b8981 	jmpi	800b898 <_fputwc_r>

0800ba74 <_fstat_r>:
 800ba74:	defffd04 	addi	sp,sp,-12
 800ba78:	dc000015 	stw	r16,0(sp)
 800ba7c:	04020074 	movhi	r16,2049
 800ba80:	dc400115 	stw	r17,4(sp)
 800ba84:	84191d04 	addi	r16,r16,25716
 800ba88:	2023883a 	mov	r17,r4
 800ba8c:	2809883a 	mov	r4,r5
 800ba90:	300b883a 	mov	r5,r6
 800ba94:	dfc00215 	stw	ra,8(sp)
 800ba98:	80000015 	stw	zero,0(r16)
 800ba9c:	800ff000 	call	800ff00 <fstat>
 800baa0:	00ffffc4 	movi	r3,-1
 800baa4:	10c00526 	beq	r2,r3,800babc <_fstat_r+0x48>
 800baa8:	dfc00217 	ldw	ra,8(sp)
 800baac:	dc400117 	ldw	r17,4(sp)
 800bab0:	dc000017 	ldw	r16,0(sp)
 800bab4:	dec00304 	addi	sp,sp,12
 800bab8:	f800283a 	ret
 800babc:	80c00017 	ldw	r3,0(r16)
 800bac0:	183ff926 	beq	r3,zero,800baa8 <__alt_data_end+0xfc00baa8>
 800bac4:	88c00015 	stw	r3,0(r17)
 800bac8:	003ff706 	br	800baa8 <__alt_data_end+0xfc00baa8>

0800bacc <__sfvwrite_r>:
 800bacc:	30800217 	ldw	r2,8(r6)
 800bad0:	10004526 	beq	r2,zero,800bbe8 <__sfvwrite_r+0x11c>
 800bad4:	28c0030b 	ldhu	r3,12(r5)
 800bad8:	defff404 	addi	sp,sp,-48
 800badc:	dd400715 	stw	r21,28(sp)
 800bae0:	dcc00515 	stw	r19,20(sp)
 800bae4:	dc000215 	stw	r16,8(sp)
 800bae8:	dfc00b15 	stw	ra,44(sp)
 800baec:	df000a15 	stw	fp,40(sp)
 800baf0:	ddc00915 	stw	r23,36(sp)
 800baf4:	dd800815 	stw	r22,32(sp)
 800baf8:	dd000615 	stw	r20,24(sp)
 800bafc:	dc800415 	stw	r18,16(sp)
 800bb00:	dc400315 	stw	r17,12(sp)
 800bb04:	1880020c 	andi	r2,r3,8
 800bb08:	2821883a 	mov	r16,r5
 800bb0c:	202b883a 	mov	r21,r4
 800bb10:	3027883a 	mov	r19,r6
 800bb14:	10002526 	beq	r2,zero,800bbac <__sfvwrite_r+0xe0>
 800bb18:	28800417 	ldw	r2,16(r5)
 800bb1c:	10002326 	beq	r2,zero,800bbac <__sfvwrite_r+0xe0>
 800bb20:	1880008c 	andi	r2,r3,2
 800bb24:	9c400017 	ldw	r17,0(r19)
 800bb28:	10003126 	beq	r2,zero,800bbf0 <__sfvwrite_r+0x124>
 800bb2c:	0029883a 	mov	r20,zero
 800bb30:	0025883a 	mov	r18,zero
 800bb34:	05810004 	movi	r22,1024
 800bb38:	a00d883a 	mov	r6,r20
 800bb3c:	a809883a 	mov	r4,r21
 800bb40:	90002526 	beq	r18,zero,800bbd8 <__sfvwrite_r+0x10c>
 800bb44:	900f883a 	mov	r7,r18
 800bb48:	81400717 	ldw	r5,28(r16)
 800bb4c:	b480012e 	bgeu	r22,r18,800bb54 <__sfvwrite_r+0x88>
 800bb50:	01c10004 	movi	r7,1024
 800bb54:	80800917 	ldw	r2,36(r16)
 800bb58:	103ee83a 	callr	r2
 800bb5c:	0080510e 	bge	zero,r2,800bca4 <__sfvwrite_r+0x1d8>
 800bb60:	98c00217 	ldw	r3,8(r19)
 800bb64:	a0a9883a 	add	r20,r20,r2
 800bb68:	90a5c83a 	sub	r18,r18,r2
 800bb6c:	1885c83a 	sub	r2,r3,r2
 800bb70:	98800215 	stw	r2,8(r19)
 800bb74:	103ff01e 	bne	r2,zero,800bb38 <__alt_data_end+0xfc00bb38>
 800bb78:	0005883a 	mov	r2,zero
 800bb7c:	dfc00b17 	ldw	ra,44(sp)
 800bb80:	df000a17 	ldw	fp,40(sp)
 800bb84:	ddc00917 	ldw	r23,36(sp)
 800bb88:	dd800817 	ldw	r22,32(sp)
 800bb8c:	dd400717 	ldw	r21,28(sp)
 800bb90:	dd000617 	ldw	r20,24(sp)
 800bb94:	dcc00517 	ldw	r19,20(sp)
 800bb98:	dc800417 	ldw	r18,16(sp)
 800bb9c:	dc400317 	ldw	r17,12(sp)
 800bba0:	dc000217 	ldw	r16,8(sp)
 800bba4:	dec00c04 	addi	sp,sp,48
 800bba8:	f800283a 	ret
 800bbac:	a809883a 	mov	r4,r21
 800bbb0:	800b883a 	mov	r5,r16
 800bbb4:	80049c00 	call	80049c0 <__swsetup_r>
 800bbb8:	80c0030b 	ldhu	r3,12(r16)
 800bbbc:	103fd826 	beq	r2,zero,800bb20 <__alt_data_end+0xfc00bb20>
 800bbc0:	18c01014 	ori	r3,r3,64
 800bbc4:	80c0030d 	sth	r3,12(r16)
 800bbc8:	00c00244 	movi	r3,9
 800bbcc:	00bfffc4 	movi	r2,-1
 800bbd0:	a8c00015 	stw	r3,0(r21)
 800bbd4:	003fe906 	br	800bb7c <__alt_data_end+0xfc00bb7c>
 800bbd8:	8d000017 	ldw	r20,0(r17)
 800bbdc:	8c800117 	ldw	r18,4(r17)
 800bbe0:	8c400204 	addi	r17,r17,8
 800bbe4:	003fd406 	br	800bb38 <__alt_data_end+0xfc00bb38>
 800bbe8:	0005883a 	mov	r2,zero
 800bbec:	f800283a 	ret
 800bbf0:	1880004c 	andi	r2,r3,1
 800bbf4:	1000301e 	bne	r2,zero,800bcb8 <__sfvwrite_r+0x1ec>
 800bbf8:	002f883a 	mov	r23,zero
 800bbfc:	0025883a 	mov	r18,zero
 800bc00:	90001c26 	beq	r18,zero,800bc74 <__sfvwrite_r+0x1a8>
 800bc04:	1880800c 	andi	r2,r3,512
 800bc08:	85000217 	ldw	r20,8(r16)
 800bc0c:	10006c26 	beq	r2,zero,800bdc0 <__sfvwrite_r+0x2f4>
 800bc10:	a02d883a 	mov	r22,r20
 800bc14:	95008536 	bltu	r18,r20,800be2c <__sfvwrite_r+0x360>
 800bc18:	1881200c 	andi	r2,r3,1152
 800bc1c:	10009d1e 	bne	r2,zero,800be94 <__sfvwrite_r+0x3c8>
 800bc20:	81000017 	ldw	r4,0(r16)
 800bc24:	a039883a 	mov	fp,r20
 800bc28:	9029883a 	mov	r20,r18
 800bc2c:	b80b883a 	mov	r5,r23
 800bc30:	b00d883a 	mov	r6,r22
 800bc34:	800c0200 	call	800c020 <memmove>
 800bc38:	80c00217 	ldw	r3,8(r16)
 800bc3c:	81000017 	ldw	r4,0(r16)
 800bc40:	9005883a 	mov	r2,r18
 800bc44:	1f39c83a 	sub	fp,r3,fp
 800bc48:	258f883a 	add	r7,r4,r22
 800bc4c:	87000215 	stw	fp,8(r16)
 800bc50:	81c00015 	stw	r7,0(r16)
 800bc54:	98c00217 	ldw	r3,8(r19)
 800bc58:	b8af883a 	add	r23,r23,r2
 800bc5c:	90a5c83a 	sub	r18,r18,r2
 800bc60:	1d05c83a 	sub	r2,r3,r20
 800bc64:	98800215 	stw	r2,8(r19)
 800bc68:	103fc326 	beq	r2,zero,800bb78 <__alt_data_end+0xfc00bb78>
 800bc6c:	80c0030b 	ldhu	r3,12(r16)
 800bc70:	903fe41e 	bne	r18,zero,800bc04 <__alt_data_end+0xfc00bc04>
 800bc74:	8dc00017 	ldw	r23,0(r17)
 800bc78:	8c800117 	ldw	r18,4(r17)
 800bc7c:	8c400204 	addi	r17,r17,8
 800bc80:	003fdf06 	br	800bc00 <__alt_data_end+0xfc00bc00>
 800bc84:	800c1d80 	call	800c1d8 <_realloc_r>
 800bc88:	102d883a 	mov	r22,r2
 800bc8c:	1000a01e 	bne	r2,zero,800bf10 <__sfvwrite_r+0x444>
 800bc90:	81400417 	ldw	r5,16(r16)
 800bc94:	a809883a 	mov	r4,r21
 800bc98:	8006b340 	call	8006b34 <_free_r>
 800bc9c:	00800304 	movi	r2,12
 800bca0:	a8800015 	stw	r2,0(r21)
 800bca4:	80c0030b 	ldhu	r3,12(r16)
 800bca8:	00bfffc4 	movi	r2,-1
 800bcac:	18c01014 	ori	r3,r3,64
 800bcb0:	80c0030d 	sth	r3,12(r16)
 800bcb4:	003fb106 	br	800bb7c <__alt_data_end+0xfc00bb7c>
 800bcb8:	0029883a 	mov	r20,zero
 800bcbc:	0011883a 	mov	r8,zero
 800bcc0:	0039883a 	mov	fp,zero
 800bcc4:	0025883a 	mov	r18,zero
 800bcc8:	90001f26 	beq	r18,zero,800bd48 <__sfvwrite_r+0x27c>
 800bccc:	40006826 	beq	r8,zero,800be70 <__sfvwrite_r+0x3a4>
 800bcd0:	a02f883a 	mov	r23,r20
 800bcd4:	9500012e 	bgeu	r18,r20,800bcdc <__sfvwrite_r+0x210>
 800bcd8:	902f883a 	mov	r23,r18
 800bcdc:	81000017 	ldw	r4,0(r16)
 800bce0:	80800417 	ldw	r2,16(r16)
 800bce4:	b82d883a 	mov	r22,r23
 800bce8:	81800217 	ldw	r6,8(r16)
 800bcec:	81c00517 	ldw	r7,20(r16)
 800bcf0:	1100022e 	bgeu	r2,r4,800bcfc <__sfvwrite_r+0x230>
 800bcf4:	31c7883a 	add	r3,r6,r7
 800bcf8:	1dc01816 	blt	r3,r23,800bd5c <__sfvwrite_r+0x290>
 800bcfc:	b9c03f16 	blt	r23,r7,800bdfc <__sfvwrite_r+0x330>
 800bd00:	80800917 	ldw	r2,36(r16)
 800bd04:	81400717 	ldw	r5,28(r16)
 800bd08:	a809883a 	mov	r4,r21
 800bd0c:	da000115 	stw	r8,4(sp)
 800bd10:	e00d883a 	mov	r6,fp
 800bd14:	103ee83a 	callr	r2
 800bd18:	102d883a 	mov	r22,r2
 800bd1c:	da000117 	ldw	r8,4(sp)
 800bd20:	00bfe00e 	bge	zero,r2,800bca4 <__alt_data_end+0xfc00bca4>
 800bd24:	a5a9c83a 	sub	r20,r20,r22
 800bd28:	a0001f26 	beq	r20,zero,800bda8 <__sfvwrite_r+0x2dc>
 800bd2c:	98800217 	ldw	r2,8(r19)
 800bd30:	e5b9883a 	add	fp,fp,r22
 800bd34:	95a5c83a 	sub	r18,r18,r22
 800bd38:	15adc83a 	sub	r22,r2,r22
 800bd3c:	9d800215 	stw	r22,8(r19)
 800bd40:	b03f8d26 	beq	r22,zero,800bb78 <__alt_data_end+0xfc00bb78>
 800bd44:	903fe11e 	bne	r18,zero,800bccc <__alt_data_end+0xfc00bccc>
 800bd48:	8f000017 	ldw	fp,0(r17)
 800bd4c:	8c800117 	ldw	r18,4(r17)
 800bd50:	0011883a 	mov	r8,zero
 800bd54:	8c400204 	addi	r17,r17,8
 800bd58:	003fdb06 	br	800bcc8 <__alt_data_end+0xfc00bcc8>
 800bd5c:	180d883a 	mov	r6,r3
 800bd60:	e00b883a 	mov	r5,fp
 800bd64:	da000115 	stw	r8,4(sp)
 800bd68:	d8c00015 	stw	r3,0(sp)
 800bd6c:	800c0200 	call	800c020 <memmove>
 800bd70:	d8c00017 	ldw	r3,0(sp)
 800bd74:	80800017 	ldw	r2,0(r16)
 800bd78:	a809883a 	mov	r4,r21
 800bd7c:	800b883a 	mov	r5,r16
 800bd80:	10c5883a 	add	r2,r2,r3
 800bd84:	80800015 	stw	r2,0(r16)
 800bd88:	d8c00015 	stw	r3,0(sp)
 800bd8c:	80064180 	call	8006418 <_fflush_r>
 800bd90:	d8c00017 	ldw	r3,0(sp)
 800bd94:	da000117 	ldw	r8,4(sp)
 800bd98:	103fc21e 	bne	r2,zero,800bca4 <__alt_data_end+0xfc00bca4>
 800bd9c:	182d883a 	mov	r22,r3
 800bda0:	a5a9c83a 	sub	r20,r20,r22
 800bda4:	a03fe11e 	bne	r20,zero,800bd2c <__alt_data_end+0xfc00bd2c>
 800bda8:	a809883a 	mov	r4,r21
 800bdac:	800b883a 	mov	r5,r16
 800bdb0:	80064180 	call	8006418 <_fflush_r>
 800bdb4:	103fbb1e 	bne	r2,zero,800bca4 <__alt_data_end+0xfc00bca4>
 800bdb8:	0011883a 	mov	r8,zero
 800bdbc:	003fdb06 	br	800bd2c <__alt_data_end+0xfc00bd2c>
 800bdc0:	81000017 	ldw	r4,0(r16)
 800bdc4:	80800417 	ldw	r2,16(r16)
 800bdc8:	1100012e 	bgeu	r2,r4,800bdd0 <__sfvwrite_r+0x304>
 800bdcc:	a4805a36 	bltu	r20,r18,800bf38 <__sfvwrite_r+0x46c>
 800bdd0:	81c00517 	ldw	r7,20(r16)
 800bdd4:	91c01a36 	bltu	r18,r7,800be40 <__sfvwrite_r+0x374>
 800bdd8:	80800917 	ldw	r2,36(r16)
 800bddc:	81400717 	ldw	r5,28(r16)
 800bde0:	a809883a 	mov	r4,r21
 800bde4:	b80d883a 	mov	r6,r23
 800bde8:	103ee83a 	callr	r2
 800bdec:	1029883a 	mov	r20,r2
 800bdf0:	00bfac0e 	bge	zero,r2,800bca4 <__alt_data_end+0xfc00bca4>
 800bdf4:	a005883a 	mov	r2,r20
 800bdf8:	003f9606 	br	800bc54 <__alt_data_end+0xfc00bc54>
 800bdfc:	b80d883a 	mov	r6,r23
 800be00:	e00b883a 	mov	r5,fp
 800be04:	da000115 	stw	r8,4(sp)
 800be08:	800c0200 	call	800c020 <memmove>
 800be0c:	80800217 	ldw	r2,8(r16)
 800be10:	80c00017 	ldw	r3,0(r16)
 800be14:	da000117 	ldw	r8,4(sp)
 800be18:	15c5c83a 	sub	r2,r2,r23
 800be1c:	1def883a 	add	r23,r3,r23
 800be20:	80800215 	stw	r2,8(r16)
 800be24:	85c00015 	stw	r23,0(r16)
 800be28:	003fbe06 	br	800bd24 <__alt_data_end+0xfc00bd24>
 800be2c:	81000017 	ldw	r4,0(r16)
 800be30:	9039883a 	mov	fp,r18
 800be34:	9029883a 	mov	r20,r18
 800be38:	902d883a 	mov	r22,r18
 800be3c:	003f7b06 	br	800bc2c <__alt_data_end+0xfc00bc2c>
 800be40:	b80b883a 	mov	r5,r23
 800be44:	900d883a 	mov	r6,r18
 800be48:	800c0200 	call	800c020 <memmove>
 800be4c:	80c00217 	ldw	r3,8(r16)
 800be50:	80800017 	ldw	r2,0(r16)
 800be54:	9029883a 	mov	r20,r18
 800be58:	1c87c83a 	sub	r3,r3,r18
 800be5c:	1485883a 	add	r2,r2,r18
 800be60:	80800015 	stw	r2,0(r16)
 800be64:	80c00215 	stw	r3,8(r16)
 800be68:	9005883a 	mov	r2,r18
 800be6c:	003f7906 	br	800bc54 <__alt_data_end+0xfc00bc54>
 800be70:	e009883a 	mov	r4,fp
 800be74:	01400284 	movi	r5,10
 800be78:	900d883a 	mov	r6,r18
 800be7c:	80079d40 	call	80079d4 <memchr>
 800be80:	10003826 	beq	r2,zero,800bf64 <__sfvwrite_r+0x498>
 800be84:	10800044 	addi	r2,r2,1
 800be88:	1729c83a 	sub	r20,r2,fp
 800be8c:	02000044 	movi	r8,1
 800be90:	003f8f06 	br	800bcd0 <__alt_data_end+0xfc00bcd0>
 800be94:	80800517 	ldw	r2,20(r16)
 800be98:	81400417 	ldw	r5,16(r16)
 800be9c:	87000017 	ldw	fp,0(r16)
 800bea0:	10a9883a 	add	r20,r2,r2
 800bea4:	a085883a 	add	r2,r20,r2
 800bea8:	1028d7fa 	srli	r20,r2,31
 800beac:	e179c83a 	sub	fp,fp,r5
 800beb0:	e1000044 	addi	r4,fp,1
 800beb4:	a085883a 	add	r2,r20,r2
 800beb8:	1029d07a 	srai	r20,r2,1
 800bebc:	2485883a 	add	r2,r4,r18
 800bec0:	a00d883a 	mov	r6,r20
 800bec4:	a080022e 	bgeu	r20,r2,800bed0 <__sfvwrite_r+0x404>
 800bec8:	1029883a 	mov	r20,r2
 800becc:	100d883a 	mov	r6,r2
 800bed0:	18c1000c 	andi	r3,r3,1024
 800bed4:	a809883a 	mov	r4,r21
 800bed8:	183f6a26 	beq	r3,zero,800bc84 <__alt_data_end+0xfc00bc84>
 800bedc:	300b883a 	mov	r5,r6
 800bee0:	800722c0 	call	800722c <_malloc_r>
 800bee4:	102d883a 	mov	r22,r2
 800bee8:	103f6c26 	beq	r2,zero,800bc9c <__alt_data_end+0xfc00bc9c>
 800beec:	81400417 	ldw	r5,16(r16)
 800bef0:	1009883a 	mov	r4,r2
 800bef4:	e00d883a 	mov	r6,fp
 800bef8:	8007abc0 	call	8007abc <memcpy>
 800befc:	8080030b 	ldhu	r2,12(r16)
 800bf00:	00fedfc4 	movi	r3,-1153
 800bf04:	10c4703a 	and	r2,r2,r3
 800bf08:	10802014 	ori	r2,r2,128
 800bf0c:	8080030d 	sth	r2,12(r16)
 800bf10:	b709883a 	add	r4,r22,fp
 800bf14:	a707c83a 	sub	r3,r20,fp
 800bf18:	85800415 	stw	r22,16(r16)
 800bf1c:	85000515 	stw	r20,20(r16)
 800bf20:	81000015 	stw	r4,0(r16)
 800bf24:	9039883a 	mov	fp,r18
 800bf28:	80c00215 	stw	r3,8(r16)
 800bf2c:	9029883a 	mov	r20,r18
 800bf30:	902d883a 	mov	r22,r18
 800bf34:	003f3d06 	br	800bc2c <__alt_data_end+0xfc00bc2c>
 800bf38:	b80b883a 	mov	r5,r23
 800bf3c:	a00d883a 	mov	r6,r20
 800bf40:	800c0200 	call	800c020 <memmove>
 800bf44:	80800017 	ldw	r2,0(r16)
 800bf48:	a809883a 	mov	r4,r21
 800bf4c:	800b883a 	mov	r5,r16
 800bf50:	1505883a 	add	r2,r2,r20
 800bf54:	80800015 	stw	r2,0(r16)
 800bf58:	80064180 	call	8006418 <_fflush_r>
 800bf5c:	103fa526 	beq	r2,zero,800bdf4 <__alt_data_end+0xfc00bdf4>
 800bf60:	003f5006 	br	800bca4 <__alt_data_end+0xfc00bca4>
 800bf64:	95000044 	addi	r20,r18,1
 800bf68:	02000044 	movi	r8,1
 800bf6c:	003f5806 	br	800bcd0 <__alt_data_end+0xfc00bcd0>

0800bf70 <_isatty_r>:
 800bf70:	defffd04 	addi	sp,sp,-12
 800bf74:	dc000015 	stw	r16,0(sp)
 800bf78:	04020074 	movhi	r16,2049
 800bf7c:	dc400115 	stw	r17,4(sp)
 800bf80:	84191d04 	addi	r16,r16,25716
 800bf84:	2023883a 	mov	r17,r4
 800bf88:	2809883a 	mov	r4,r5
 800bf8c:	dfc00215 	stw	ra,8(sp)
 800bf90:	80000015 	stw	zero,0(r16)
 800bf94:	80100000 	call	8010000 <isatty>
 800bf98:	00ffffc4 	movi	r3,-1
 800bf9c:	10c00526 	beq	r2,r3,800bfb4 <_isatty_r+0x44>
 800bfa0:	dfc00217 	ldw	ra,8(sp)
 800bfa4:	dc400117 	ldw	r17,4(sp)
 800bfa8:	dc000017 	ldw	r16,0(sp)
 800bfac:	dec00304 	addi	sp,sp,12
 800bfb0:	f800283a 	ret
 800bfb4:	80c00017 	ldw	r3,0(r16)
 800bfb8:	183ff926 	beq	r3,zero,800bfa0 <__alt_data_end+0xfc00bfa0>
 800bfbc:	88c00015 	stw	r3,0(r17)
 800bfc0:	003ff706 	br	800bfa0 <__alt_data_end+0xfc00bfa0>

0800bfc4 <_lseek_r>:
 800bfc4:	defffd04 	addi	sp,sp,-12
 800bfc8:	dc000015 	stw	r16,0(sp)
 800bfcc:	04020074 	movhi	r16,2049
 800bfd0:	dc400115 	stw	r17,4(sp)
 800bfd4:	84191d04 	addi	r16,r16,25716
 800bfd8:	2023883a 	mov	r17,r4
 800bfdc:	2809883a 	mov	r4,r5
 800bfe0:	300b883a 	mov	r5,r6
 800bfe4:	380d883a 	mov	r6,r7
 800bfe8:	dfc00215 	stw	ra,8(sp)
 800bfec:	80000015 	stw	zero,0(r16)
 800bff0:	80101d80 	call	80101d8 <lseek>
 800bff4:	00ffffc4 	movi	r3,-1
 800bff8:	10c00526 	beq	r2,r3,800c010 <_lseek_r+0x4c>
 800bffc:	dfc00217 	ldw	ra,8(sp)
 800c000:	dc400117 	ldw	r17,4(sp)
 800c004:	dc000017 	ldw	r16,0(sp)
 800c008:	dec00304 	addi	sp,sp,12
 800c00c:	f800283a 	ret
 800c010:	80c00017 	ldw	r3,0(r16)
 800c014:	183ff926 	beq	r3,zero,800bffc <__alt_data_end+0xfc00bffc>
 800c018:	88c00015 	stw	r3,0(r17)
 800c01c:	003ff706 	br	800bffc <__alt_data_end+0xfc00bffc>

0800c020 <memmove>:
 800c020:	2005883a 	mov	r2,r4
 800c024:	29000b2e 	bgeu	r5,r4,800c054 <memmove+0x34>
 800c028:	298f883a 	add	r7,r5,r6
 800c02c:	21c0092e 	bgeu	r4,r7,800c054 <memmove+0x34>
 800c030:	2187883a 	add	r3,r4,r6
 800c034:	198bc83a 	sub	r5,r3,r6
 800c038:	30004b26 	beq	r6,zero,800c168 <memmove+0x148>
 800c03c:	39ffffc4 	addi	r7,r7,-1
 800c040:	39000003 	ldbu	r4,0(r7)
 800c044:	18ffffc4 	addi	r3,r3,-1
 800c048:	19000005 	stb	r4,0(r3)
 800c04c:	197ffb1e 	bne	r3,r5,800c03c <__alt_data_end+0xfc00c03c>
 800c050:	f800283a 	ret
 800c054:	00c003c4 	movi	r3,15
 800c058:	1980412e 	bgeu	r3,r6,800c160 <memmove+0x140>
 800c05c:	1146b03a 	or	r3,r2,r5
 800c060:	18c000cc 	andi	r3,r3,3
 800c064:	1800411e 	bne	r3,zero,800c16c <memmove+0x14c>
 800c068:	33fffc04 	addi	r15,r6,-16
 800c06c:	781ed13a 	srli	r15,r15,4
 800c070:	28c00104 	addi	r3,r5,4
 800c074:	13400104 	addi	r13,r2,4
 800c078:	781c913a 	slli	r14,r15,4
 800c07c:	2b000204 	addi	r12,r5,8
 800c080:	12c00204 	addi	r11,r2,8
 800c084:	73800504 	addi	r14,r14,20
 800c088:	2a800304 	addi	r10,r5,12
 800c08c:	12400304 	addi	r9,r2,12
 800c090:	2b9d883a 	add	r14,r5,r14
 800c094:	2811883a 	mov	r8,r5
 800c098:	100f883a 	mov	r7,r2
 800c09c:	41000017 	ldw	r4,0(r8)
 800c0a0:	39c00404 	addi	r7,r7,16
 800c0a4:	18c00404 	addi	r3,r3,16
 800c0a8:	393ffc15 	stw	r4,-16(r7)
 800c0ac:	193ffc17 	ldw	r4,-16(r3)
 800c0b0:	6b400404 	addi	r13,r13,16
 800c0b4:	5ac00404 	addi	r11,r11,16
 800c0b8:	693ffc15 	stw	r4,-16(r13)
 800c0bc:	61000017 	ldw	r4,0(r12)
 800c0c0:	4a400404 	addi	r9,r9,16
 800c0c4:	42000404 	addi	r8,r8,16
 800c0c8:	593ffc15 	stw	r4,-16(r11)
 800c0cc:	51000017 	ldw	r4,0(r10)
 800c0d0:	63000404 	addi	r12,r12,16
 800c0d4:	52800404 	addi	r10,r10,16
 800c0d8:	493ffc15 	stw	r4,-16(r9)
 800c0dc:	1bbfef1e 	bne	r3,r14,800c09c <__alt_data_end+0xfc00c09c>
 800c0e0:	79000044 	addi	r4,r15,1
 800c0e4:	2008913a 	slli	r4,r4,4
 800c0e8:	328003cc 	andi	r10,r6,15
 800c0ec:	02c000c4 	movi	r11,3
 800c0f0:	1107883a 	add	r3,r2,r4
 800c0f4:	290b883a 	add	r5,r5,r4
 800c0f8:	5a801e2e 	bgeu	r11,r10,800c174 <memmove+0x154>
 800c0fc:	1813883a 	mov	r9,r3
 800c100:	2811883a 	mov	r8,r5
 800c104:	500f883a 	mov	r7,r10
 800c108:	41000017 	ldw	r4,0(r8)
 800c10c:	4a400104 	addi	r9,r9,4
 800c110:	39ffff04 	addi	r7,r7,-4
 800c114:	493fff15 	stw	r4,-4(r9)
 800c118:	42000104 	addi	r8,r8,4
 800c11c:	59fffa36 	bltu	r11,r7,800c108 <__alt_data_end+0xfc00c108>
 800c120:	513fff04 	addi	r4,r10,-4
 800c124:	2008d0ba 	srli	r4,r4,2
 800c128:	318000cc 	andi	r6,r6,3
 800c12c:	21000044 	addi	r4,r4,1
 800c130:	2109883a 	add	r4,r4,r4
 800c134:	2109883a 	add	r4,r4,r4
 800c138:	1907883a 	add	r3,r3,r4
 800c13c:	290b883a 	add	r5,r5,r4
 800c140:	30000926 	beq	r6,zero,800c168 <memmove+0x148>
 800c144:	198d883a 	add	r6,r3,r6
 800c148:	29c00003 	ldbu	r7,0(r5)
 800c14c:	18c00044 	addi	r3,r3,1
 800c150:	29400044 	addi	r5,r5,1
 800c154:	19ffffc5 	stb	r7,-1(r3)
 800c158:	19bffb1e 	bne	r3,r6,800c148 <__alt_data_end+0xfc00c148>
 800c15c:	f800283a 	ret
 800c160:	1007883a 	mov	r3,r2
 800c164:	003ff606 	br	800c140 <__alt_data_end+0xfc00c140>
 800c168:	f800283a 	ret
 800c16c:	1007883a 	mov	r3,r2
 800c170:	003ff406 	br	800c144 <__alt_data_end+0xfc00c144>
 800c174:	500d883a 	mov	r6,r10
 800c178:	003ff106 	br	800c140 <__alt_data_end+0xfc00c140>

0800c17c <_read_r>:
 800c17c:	defffd04 	addi	sp,sp,-12
 800c180:	dc000015 	stw	r16,0(sp)
 800c184:	04020074 	movhi	r16,2049
 800c188:	dc400115 	stw	r17,4(sp)
 800c18c:	84191d04 	addi	r16,r16,25716
 800c190:	2023883a 	mov	r17,r4
 800c194:	2809883a 	mov	r4,r5
 800c198:	300b883a 	mov	r5,r6
 800c19c:	380d883a 	mov	r6,r7
 800c1a0:	dfc00215 	stw	ra,8(sp)
 800c1a4:	80000015 	stw	zero,0(r16)
 800c1a8:	80103b40 	call	80103b4 <read>
 800c1ac:	00ffffc4 	movi	r3,-1
 800c1b0:	10c00526 	beq	r2,r3,800c1c8 <_read_r+0x4c>
 800c1b4:	dfc00217 	ldw	ra,8(sp)
 800c1b8:	dc400117 	ldw	r17,4(sp)
 800c1bc:	dc000017 	ldw	r16,0(sp)
 800c1c0:	dec00304 	addi	sp,sp,12
 800c1c4:	f800283a 	ret
 800c1c8:	80c00017 	ldw	r3,0(r16)
 800c1cc:	183ff926 	beq	r3,zero,800c1b4 <__alt_data_end+0xfc00c1b4>
 800c1d0:	88c00015 	stw	r3,0(r17)
 800c1d4:	003ff706 	br	800c1b4 <__alt_data_end+0xfc00c1b4>

0800c1d8 <_realloc_r>:
 800c1d8:	defff604 	addi	sp,sp,-40
 800c1dc:	dcc00315 	stw	r19,12(sp)
 800c1e0:	dc400115 	stw	r17,4(sp)
 800c1e4:	dfc00915 	stw	ra,36(sp)
 800c1e8:	df000815 	stw	fp,32(sp)
 800c1ec:	ddc00715 	stw	r23,28(sp)
 800c1f0:	dd800615 	stw	r22,24(sp)
 800c1f4:	dd400515 	stw	r21,20(sp)
 800c1f8:	dd000415 	stw	r20,16(sp)
 800c1fc:	dc800215 	stw	r18,8(sp)
 800c200:	dc000015 	stw	r16,0(sp)
 800c204:	2827883a 	mov	r19,r5
 800c208:	3023883a 	mov	r17,r6
 800c20c:	2800bf26 	beq	r5,zero,800c50c <_realloc_r+0x334>
 800c210:	2025883a 	mov	r18,r4
 800c214:	80103240 	call	8010324 <__malloc_lock>
 800c218:	98ffff17 	ldw	r3,-4(r19)
 800c21c:	01bfff04 	movi	r6,-4
 800c220:	890002c4 	addi	r4,r17,11
 800c224:	01c00584 	movi	r7,22
 800c228:	9d7ffe04 	addi	r21,r19,-8
 800c22c:	19a0703a 	and	r16,r3,r6
 800c230:	39003f2e 	bgeu	r7,r4,800c330 <_realloc_r+0x158>
 800c234:	053ffe04 	movi	r20,-8
 800c238:	2528703a 	and	r20,r4,r20
 800c23c:	a00f883a 	mov	r7,r20
 800c240:	a0008216 	blt	r20,zero,800c44c <_realloc_r+0x274>
 800c244:	a4408136 	bltu	r20,r17,800c44c <_realloc_r+0x274>
 800c248:	81c03c0e 	bge	r16,r7,800c33c <_realloc_r+0x164>
 800c24c:	07020074 	movhi	fp,2049
 800c250:	e70ca804 	addi	fp,fp,12960
 800c254:	e1000217 	ldw	r4,8(fp)
 800c258:	ac05883a 	add	r2,r21,r16
 800c25c:	2080bf26 	beq	r4,r2,800c55c <_realloc_r+0x384>
 800c260:	11000117 	ldw	r4,4(r2)
 800c264:	023fff84 	movi	r8,-2
 800c268:	2210703a 	and	r8,r4,r8
 800c26c:	1211883a 	add	r8,r2,r8
 800c270:	41400117 	ldw	r5,4(r8)
 800c274:	2940004c 	andi	r5,r5,1
 800c278:	28004a1e 	bne	r5,zero,800c3a4 <_realloc_r+0x1cc>
 800c27c:	017fff04 	movi	r5,-4
 800c280:	2148703a 	and	r4,r4,r5
 800c284:	2409883a 	add	r4,r4,r16
 800c288:	21c0ad0e 	bge	r4,r7,800c540 <_realloc_r+0x368>
 800c28c:	18c0004c 	andi	r3,r3,1
 800c290:	18007f1e 	bne	r3,zero,800c490 <_realloc_r+0x2b8>
 800c294:	9dfffe17 	ldw	r23,-8(r19)
 800c298:	adefc83a 	sub	r23,r21,r23
 800c29c:	bd800117 	ldw	r22,4(r23)
 800c2a0:	b14a703a 	and	r5,r22,r5
 800c2a4:	216d883a 	add	r22,r4,r5
 800c2a8:	b1c04516 	blt	r22,r7,800c3c0 <_realloc_r+0x1e8>
 800c2ac:	10c00317 	ldw	r3,12(r2)
 800c2b0:	10800217 	ldw	r2,8(r2)
 800c2b4:	81bfff04 	addi	r6,r16,-4
 800c2b8:	bc400204 	addi	r17,r23,8
 800c2bc:	10c00315 	stw	r3,12(r2)
 800c2c0:	18800215 	stw	r2,8(r3)
 800c2c4:	b9400217 	ldw	r5,8(r23)
 800c2c8:	b8c00317 	ldw	r3,12(r23)
 800c2cc:	00800904 	movi	r2,36
 800c2d0:	28c00315 	stw	r3,12(r5)
 800c2d4:	19400215 	stw	r5,8(r3)
 800c2d8:	1180ef36 	bltu	r2,r6,800c698 <_realloc_r+0x4c0>
 800c2dc:	008004c4 	movi	r2,19
 800c2e0:	1180da2e 	bgeu	r2,r6,800c64c <_realloc_r+0x474>
 800c2e4:	98800017 	ldw	r2,0(r19)
 800c2e8:	b8800215 	stw	r2,8(r23)
 800c2ec:	98800117 	ldw	r2,4(r19)
 800c2f0:	b8800315 	stw	r2,12(r23)
 800c2f4:	008006c4 	movi	r2,27
 800c2f8:	1180fc2e 	bgeu	r2,r6,800c6ec <_realloc_r+0x514>
 800c2fc:	98800217 	ldw	r2,8(r19)
 800c300:	b8800415 	stw	r2,16(r23)
 800c304:	98800317 	ldw	r2,12(r19)
 800c308:	b8800515 	stw	r2,20(r23)
 800c30c:	00800904 	movi	r2,36
 800c310:	3080421e 	bne	r6,r2,800c41c <_realloc_r+0x244>
 800c314:	98800417 	ldw	r2,16(r19)
 800c318:	9cc00604 	addi	r19,r19,24
 800c31c:	b8c00804 	addi	r3,r23,32
 800c320:	b8800615 	stw	r2,24(r23)
 800c324:	98bfff17 	ldw	r2,-4(r19)
 800c328:	b8800715 	stw	r2,28(r23)
 800c32c:	00003d06 	br	800c424 <_realloc_r+0x24c>
 800c330:	01c00404 	movi	r7,16
 800c334:	3829883a 	mov	r20,r7
 800c338:	003fc206 	br	800c244 <__alt_data_end+0xfc00c244>
 800c33c:	9823883a 	mov	r17,r19
 800c340:	850fc83a 	sub	r7,r16,r20
 800c344:	008003c4 	movi	r2,15
 800c348:	18c0004c 	andi	r3,r3,1
 800c34c:	11c04336 	bltu	r2,r7,800c45c <_realloc_r+0x284>
 800c350:	1c06b03a 	or	r3,r3,r16
 800c354:	a8c00115 	stw	r3,4(r21)
 800c358:	ac21883a 	add	r16,r21,r16
 800c35c:	80c00117 	ldw	r3,4(r16)
 800c360:	18c00054 	ori	r3,r3,1
 800c364:	80c00115 	stw	r3,4(r16)
 800c368:	9009883a 	mov	r4,r18
 800c36c:	80103440 	call	8010344 <__malloc_unlock>
 800c370:	8805883a 	mov	r2,r17
 800c374:	dfc00917 	ldw	ra,36(sp)
 800c378:	df000817 	ldw	fp,32(sp)
 800c37c:	ddc00717 	ldw	r23,28(sp)
 800c380:	dd800617 	ldw	r22,24(sp)
 800c384:	dd400517 	ldw	r21,20(sp)
 800c388:	dd000417 	ldw	r20,16(sp)
 800c38c:	dcc00317 	ldw	r19,12(sp)
 800c390:	dc800217 	ldw	r18,8(sp)
 800c394:	dc400117 	ldw	r17,4(sp)
 800c398:	dc000017 	ldw	r16,0(sp)
 800c39c:	dec00a04 	addi	sp,sp,40
 800c3a0:	f800283a 	ret
 800c3a4:	18c0004c 	andi	r3,r3,1
 800c3a8:	1800391e 	bne	r3,zero,800c490 <_realloc_r+0x2b8>
 800c3ac:	9dfffe17 	ldw	r23,-8(r19)
 800c3b0:	00bfff04 	movi	r2,-4
 800c3b4:	adefc83a 	sub	r23,r21,r23
 800c3b8:	b9400117 	ldw	r5,4(r23)
 800c3bc:	288a703a 	and	r5,r5,r2
 800c3c0:	2c2d883a 	add	r22,r5,r16
 800c3c4:	b1c03216 	blt	r22,r7,800c490 <_realloc_r+0x2b8>
 800c3c8:	b8800317 	ldw	r2,12(r23)
 800c3cc:	b8c00217 	ldw	r3,8(r23)
 800c3d0:	81bfff04 	addi	r6,r16,-4
 800c3d4:	01000904 	movi	r4,36
 800c3d8:	18800315 	stw	r2,12(r3)
 800c3dc:	10c00215 	stw	r3,8(r2)
 800c3e0:	bc400204 	addi	r17,r23,8
 800c3e4:	2180ac36 	bltu	r4,r6,800c698 <_realloc_r+0x4c0>
 800c3e8:	008004c4 	movi	r2,19
 800c3ec:	1180972e 	bgeu	r2,r6,800c64c <_realloc_r+0x474>
 800c3f0:	98800017 	ldw	r2,0(r19)
 800c3f4:	b8800215 	stw	r2,8(r23)
 800c3f8:	98800117 	ldw	r2,4(r19)
 800c3fc:	b8800315 	stw	r2,12(r23)
 800c400:	008006c4 	movi	r2,27
 800c404:	1180b92e 	bgeu	r2,r6,800c6ec <_realloc_r+0x514>
 800c408:	98800217 	ldw	r2,8(r19)
 800c40c:	b8800415 	stw	r2,16(r23)
 800c410:	98800317 	ldw	r2,12(r19)
 800c414:	b8800515 	stw	r2,20(r23)
 800c418:	313fbe26 	beq	r6,r4,800c314 <__alt_data_end+0xfc00c314>
 800c41c:	b8c00604 	addi	r3,r23,24
 800c420:	9cc00404 	addi	r19,r19,16
 800c424:	98800017 	ldw	r2,0(r19)
 800c428:	b021883a 	mov	r16,r22
 800c42c:	b82b883a 	mov	r21,r23
 800c430:	18800015 	stw	r2,0(r3)
 800c434:	98800117 	ldw	r2,4(r19)
 800c438:	18800115 	stw	r2,4(r3)
 800c43c:	98800217 	ldw	r2,8(r19)
 800c440:	18800215 	stw	r2,8(r3)
 800c444:	b8c00117 	ldw	r3,4(r23)
 800c448:	003fbd06 	br	800c340 <__alt_data_end+0xfc00c340>
 800c44c:	00800304 	movi	r2,12
 800c450:	90800015 	stw	r2,0(r18)
 800c454:	0005883a 	mov	r2,zero
 800c458:	003fc606 	br	800c374 <__alt_data_end+0xfc00c374>
 800c45c:	1d06b03a 	or	r3,r3,r20
 800c460:	ad0b883a 	add	r5,r21,r20
 800c464:	a8c00115 	stw	r3,4(r21)
 800c468:	38800054 	ori	r2,r7,1
 800c46c:	28800115 	stw	r2,4(r5)
 800c470:	29cf883a 	add	r7,r5,r7
 800c474:	38800117 	ldw	r2,4(r7)
 800c478:	9009883a 	mov	r4,r18
 800c47c:	29400204 	addi	r5,r5,8
 800c480:	10800054 	ori	r2,r2,1
 800c484:	38800115 	stw	r2,4(r7)
 800c488:	8006b340 	call	8006b34 <_free_r>
 800c48c:	003fb606 	br	800c368 <__alt_data_end+0xfc00c368>
 800c490:	880b883a 	mov	r5,r17
 800c494:	9009883a 	mov	r4,r18
 800c498:	800722c0 	call	800722c <_malloc_r>
 800c49c:	1023883a 	mov	r17,r2
 800c4a0:	1000aa26 	beq	r2,zero,800c74c <_realloc_r+0x574>
 800c4a4:	98ffff17 	ldw	r3,-4(r19)
 800c4a8:	113ffe04 	addi	r4,r2,-8
 800c4ac:	00bfff84 	movi	r2,-2
 800c4b0:	1884703a 	and	r2,r3,r2
 800c4b4:	a885883a 	add	r2,r21,r2
 800c4b8:	20808626 	beq	r4,r2,800c6d4 <_realloc_r+0x4fc>
 800c4bc:	81bfff04 	addi	r6,r16,-4
 800c4c0:	00800904 	movi	r2,36
 800c4c4:	11807036 	bltu	r2,r6,800c688 <_realloc_r+0x4b0>
 800c4c8:	00c004c4 	movi	r3,19
 800c4cc:	19805636 	bltu	r3,r6,800c628 <_realloc_r+0x450>
 800c4d0:	8805883a 	mov	r2,r17
 800c4d4:	9807883a 	mov	r3,r19
 800c4d8:	19000017 	ldw	r4,0(r3)
 800c4dc:	11000015 	stw	r4,0(r2)
 800c4e0:	19000117 	ldw	r4,4(r3)
 800c4e4:	11000115 	stw	r4,4(r2)
 800c4e8:	18c00217 	ldw	r3,8(r3)
 800c4ec:	10c00215 	stw	r3,8(r2)
 800c4f0:	980b883a 	mov	r5,r19
 800c4f4:	9009883a 	mov	r4,r18
 800c4f8:	8006b340 	call	8006b34 <_free_r>
 800c4fc:	9009883a 	mov	r4,r18
 800c500:	80103440 	call	8010344 <__malloc_unlock>
 800c504:	8805883a 	mov	r2,r17
 800c508:	003f9a06 	br	800c374 <__alt_data_end+0xfc00c374>
 800c50c:	300b883a 	mov	r5,r6
 800c510:	dfc00917 	ldw	ra,36(sp)
 800c514:	df000817 	ldw	fp,32(sp)
 800c518:	ddc00717 	ldw	r23,28(sp)
 800c51c:	dd800617 	ldw	r22,24(sp)
 800c520:	dd400517 	ldw	r21,20(sp)
 800c524:	dd000417 	ldw	r20,16(sp)
 800c528:	dcc00317 	ldw	r19,12(sp)
 800c52c:	dc800217 	ldw	r18,8(sp)
 800c530:	dc400117 	ldw	r17,4(sp)
 800c534:	dc000017 	ldw	r16,0(sp)
 800c538:	dec00a04 	addi	sp,sp,40
 800c53c:	800722c1 	jmpi	800722c <_malloc_r>
 800c540:	11400317 	ldw	r5,12(r2)
 800c544:	10800217 	ldw	r2,8(r2)
 800c548:	9823883a 	mov	r17,r19
 800c54c:	2021883a 	mov	r16,r4
 800c550:	11400315 	stw	r5,12(r2)
 800c554:	28800215 	stw	r2,8(r5)
 800c558:	003f7906 	br	800c340 <__alt_data_end+0xfc00c340>
 800c55c:	21000117 	ldw	r4,4(r4)
 800c560:	00bfff04 	movi	r2,-4
 800c564:	a1800404 	addi	r6,r20,16
 800c568:	2088703a 	and	r4,r4,r2
 800c56c:	2409883a 	add	r4,r4,r16
 800c570:	2180380e 	bge	r4,r6,800c654 <_realloc_r+0x47c>
 800c574:	18c0004c 	andi	r3,r3,1
 800c578:	183fc51e 	bne	r3,zero,800c490 <__alt_data_end+0xfc00c490>
 800c57c:	9dfffe17 	ldw	r23,-8(r19)
 800c580:	adefc83a 	sub	r23,r21,r23
 800c584:	b9400117 	ldw	r5,4(r23)
 800c588:	288a703a 	and	r5,r5,r2
 800c58c:	216d883a 	add	r22,r4,r5
 800c590:	b1bf8b16 	blt	r22,r6,800c3c0 <__alt_data_end+0xfc00c3c0>
 800c594:	b8800317 	ldw	r2,12(r23)
 800c598:	b8c00217 	ldw	r3,8(r23)
 800c59c:	81bfff04 	addi	r6,r16,-4
 800c5a0:	01000904 	movi	r4,36
 800c5a4:	18800315 	stw	r2,12(r3)
 800c5a8:	10c00215 	stw	r3,8(r2)
 800c5ac:	bc400204 	addi	r17,r23,8
 800c5b0:	21805a36 	bltu	r4,r6,800c71c <_realloc_r+0x544>
 800c5b4:	008004c4 	movi	r2,19
 800c5b8:	1180562e 	bgeu	r2,r6,800c714 <_realloc_r+0x53c>
 800c5bc:	98800017 	ldw	r2,0(r19)
 800c5c0:	b8800215 	stw	r2,8(r23)
 800c5c4:	98800117 	ldw	r2,4(r19)
 800c5c8:	b8800315 	stw	r2,12(r23)
 800c5cc:	008006c4 	movi	r2,27
 800c5d0:	11805636 	bltu	r2,r6,800c72c <_realloc_r+0x554>
 800c5d4:	b8800404 	addi	r2,r23,16
 800c5d8:	9cc00204 	addi	r19,r19,8
 800c5dc:	98c00017 	ldw	r3,0(r19)
 800c5e0:	10c00015 	stw	r3,0(r2)
 800c5e4:	98c00117 	ldw	r3,4(r19)
 800c5e8:	10c00115 	stw	r3,4(r2)
 800c5ec:	98c00217 	ldw	r3,8(r19)
 800c5f0:	10c00215 	stw	r3,8(r2)
 800c5f4:	bd07883a 	add	r3,r23,r20
 800c5f8:	b505c83a 	sub	r2,r22,r20
 800c5fc:	e0c00215 	stw	r3,8(fp)
 800c600:	10800054 	ori	r2,r2,1
 800c604:	18800115 	stw	r2,4(r3)
 800c608:	b8800117 	ldw	r2,4(r23)
 800c60c:	9009883a 	mov	r4,r18
 800c610:	1080004c 	andi	r2,r2,1
 800c614:	a0a8b03a 	or	r20,r20,r2
 800c618:	bd000115 	stw	r20,4(r23)
 800c61c:	80103440 	call	8010344 <__malloc_unlock>
 800c620:	8805883a 	mov	r2,r17
 800c624:	003f5306 	br	800c374 <__alt_data_end+0xfc00c374>
 800c628:	98c00017 	ldw	r3,0(r19)
 800c62c:	88c00015 	stw	r3,0(r17)
 800c630:	98c00117 	ldw	r3,4(r19)
 800c634:	88c00115 	stw	r3,4(r17)
 800c638:	00c006c4 	movi	r3,27
 800c63c:	19801d36 	bltu	r3,r6,800c6b4 <_realloc_r+0x4dc>
 800c640:	88800204 	addi	r2,r17,8
 800c644:	98c00204 	addi	r3,r19,8
 800c648:	003fa306 	br	800c4d8 <__alt_data_end+0xfc00c4d8>
 800c64c:	8807883a 	mov	r3,r17
 800c650:	003f7406 	br	800c424 <__alt_data_end+0xfc00c424>
 800c654:	ad2b883a 	add	r21,r21,r20
 800c658:	2505c83a 	sub	r2,r4,r20
 800c65c:	e5400215 	stw	r21,8(fp)
 800c660:	10800054 	ori	r2,r2,1
 800c664:	a8800115 	stw	r2,4(r21)
 800c668:	98bfff17 	ldw	r2,-4(r19)
 800c66c:	9009883a 	mov	r4,r18
 800c670:	1080004c 	andi	r2,r2,1
 800c674:	a0a8b03a 	or	r20,r20,r2
 800c678:	9d3fff15 	stw	r20,-4(r19)
 800c67c:	80103440 	call	8010344 <__malloc_unlock>
 800c680:	9805883a 	mov	r2,r19
 800c684:	003f3b06 	br	800c374 <__alt_data_end+0xfc00c374>
 800c688:	8809883a 	mov	r4,r17
 800c68c:	980b883a 	mov	r5,r19
 800c690:	800c0200 	call	800c020 <memmove>
 800c694:	003f9606 	br	800c4f0 <__alt_data_end+0xfc00c4f0>
 800c698:	8809883a 	mov	r4,r17
 800c69c:	980b883a 	mov	r5,r19
 800c6a0:	800c0200 	call	800c020 <memmove>
 800c6a4:	b8c00117 	ldw	r3,4(r23)
 800c6a8:	b021883a 	mov	r16,r22
 800c6ac:	b82b883a 	mov	r21,r23
 800c6b0:	003f2306 	br	800c340 <__alt_data_end+0xfc00c340>
 800c6b4:	98c00217 	ldw	r3,8(r19)
 800c6b8:	88c00215 	stw	r3,8(r17)
 800c6bc:	98c00317 	ldw	r3,12(r19)
 800c6c0:	88c00315 	stw	r3,12(r17)
 800c6c4:	30800c26 	beq	r6,r2,800c6f8 <_realloc_r+0x520>
 800c6c8:	88800404 	addi	r2,r17,16
 800c6cc:	98c00404 	addi	r3,r19,16
 800c6d0:	003f8106 	br	800c4d8 <__alt_data_end+0xfc00c4d8>
 800c6d4:	893fff17 	ldw	r4,-4(r17)
 800c6d8:	00bfff04 	movi	r2,-4
 800c6dc:	9823883a 	mov	r17,r19
 800c6e0:	2084703a 	and	r2,r4,r2
 800c6e4:	80a1883a 	add	r16,r16,r2
 800c6e8:	003f1506 	br	800c340 <__alt_data_end+0xfc00c340>
 800c6ec:	b8c00404 	addi	r3,r23,16
 800c6f0:	9cc00204 	addi	r19,r19,8
 800c6f4:	003f4b06 	br	800c424 <__alt_data_end+0xfc00c424>
 800c6f8:	99000417 	ldw	r4,16(r19)
 800c6fc:	88800604 	addi	r2,r17,24
 800c700:	98c00604 	addi	r3,r19,24
 800c704:	89000415 	stw	r4,16(r17)
 800c708:	99000517 	ldw	r4,20(r19)
 800c70c:	89000515 	stw	r4,20(r17)
 800c710:	003f7106 	br	800c4d8 <__alt_data_end+0xfc00c4d8>
 800c714:	8805883a 	mov	r2,r17
 800c718:	003fb006 	br	800c5dc <__alt_data_end+0xfc00c5dc>
 800c71c:	8809883a 	mov	r4,r17
 800c720:	980b883a 	mov	r5,r19
 800c724:	800c0200 	call	800c020 <memmove>
 800c728:	003fb206 	br	800c5f4 <__alt_data_end+0xfc00c5f4>
 800c72c:	98800217 	ldw	r2,8(r19)
 800c730:	b8800415 	stw	r2,16(r23)
 800c734:	98800317 	ldw	r2,12(r19)
 800c738:	b8800515 	stw	r2,20(r23)
 800c73c:	31000726 	beq	r6,r4,800c75c <_realloc_r+0x584>
 800c740:	b8800604 	addi	r2,r23,24
 800c744:	9cc00404 	addi	r19,r19,16
 800c748:	003fa406 	br	800c5dc <__alt_data_end+0xfc00c5dc>
 800c74c:	9009883a 	mov	r4,r18
 800c750:	80103440 	call	8010344 <__malloc_unlock>
 800c754:	0005883a 	mov	r2,zero
 800c758:	003f0606 	br	800c374 <__alt_data_end+0xfc00c374>
 800c75c:	98c00417 	ldw	r3,16(r19)
 800c760:	9cc00604 	addi	r19,r19,24
 800c764:	b8800804 	addi	r2,r23,32
 800c768:	b8c00615 	stw	r3,24(r23)
 800c76c:	98ffff17 	ldw	r3,-4(r19)
 800c770:	b8c00715 	stw	r3,28(r23)
 800c774:	003f9906 	br	800c5dc <__alt_data_end+0xfc00c5dc>

0800c778 <__swbuf_r>:
 800c778:	defffc04 	addi	sp,sp,-16
 800c77c:	dc800215 	stw	r18,8(sp)
 800c780:	dc400115 	stw	r17,4(sp)
 800c784:	dc000015 	stw	r16,0(sp)
 800c788:	dfc00315 	stw	ra,12(sp)
 800c78c:	2025883a 	mov	r18,r4
 800c790:	2823883a 	mov	r17,r5
 800c794:	3021883a 	mov	r16,r6
 800c798:	20000226 	beq	r4,zero,800c7a4 <__swbuf_r+0x2c>
 800c79c:	20800e17 	ldw	r2,56(r4)
 800c7a0:	10004126 	beq	r2,zero,800c8a8 <__swbuf_r+0x130>
 800c7a4:	80c00617 	ldw	r3,24(r16)
 800c7a8:	8180030b 	ldhu	r6,12(r16)
 800c7ac:	80c00215 	stw	r3,8(r16)
 800c7b0:	30c0020c 	andi	r3,r6,8
 800c7b4:	18003526 	beq	r3,zero,800c88c <__swbuf_r+0x114>
 800c7b8:	80c00417 	ldw	r3,16(r16)
 800c7bc:	18003326 	beq	r3,zero,800c88c <__swbuf_r+0x114>
 800c7c0:	3088000c 	andi	r2,r6,8192
 800c7c4:	8c403fcc 	andi	r17,r17,255
 800c7c8:	10001726 	beq	r2,zero,800c828 <__swbuf_r+0xb0>
 800c7cc:	80800017 	ldw	r2,0(r16)
 800c7d0:	81000517 	ldw	r4,20(r16)
 800c7d4:	10c7c83a 	sub	r3,r2,r3
 800c7d8:	19001d0e 	bge	r3,r4,800c850 <__swbuf_r+0xd8>
 800c7dc:	18c00044 	addi	r3,r3,1
 800c7e0:	81400217 	ldw	r5,8(r16)
 800c7e4:	11000044 	addi	r4,r2,1
 800c7e8:	81000015 	stw	r4,0(r16)
 800c7ec:	297fffc4 	addi	r5,r5,-1
 800c7f0:	81400215 	stw	r5,8(r16)
 800c7f4:	14400005 	stb	r17,0(r2)
 800c7f8:	80800517 	ldw	r2,20(r16)
 800c7fc:	10c01d26 	beq	r2,r3,800c874 <__swbuf_r+0xfc>
 800c800:	8080030b 	ldhu	r2,12(r16)
 800c804:	1080004c 	andi	r2,r2,1
 800c808:	1000181e 	bne	r2,zero,800c86c <__swbuf_r+0xf4>
 800c80c:	8805883a 	mov	r2,r17
 800c810:	dfc00317 	ldw	ra,12(sp)
 800c814:	dc800217 	ldw	r18,8(sp)
 800c818:	dc400117 	ldw	r17,4(sp)
 800c81c:	dc000017 	ldw	r16,0(sp)
 800c820:	dec00404 	addi	sp,sp,16
 800c824:	f800283a 	ret
 800c828:	81001917 	ldw	r4,100(r16)
 800c82c:	00b7ffc4 	movi	r2,-8193
 800c830:	31880014 	ori	r6,r6,8192
 800c834:	2084703a 	and	r2,r4,r2
 800c838:	80801915 	stw	r2,100(r16)
 800c83c:	80800017 	ldw	r2,0(r16)
 800c840:	81000517 	ldw	r4,20(r16)
 800c844:	8180030d 	sth	r6,12(r16)
 800c848:	10c7c83a 	sub	r3,r2,r3
 800c84c:	193fe316 	blt	r3,r4,800c7dc <__alt_data_end+0xfc00c7dc>
 800c850:	9009883a 	mov	r4,r18
 800c854:	800b883a 	mov	r5,r16
 800c858:	80064180 	call	8006418 <_fflush_r>
 800c85c:	1000091e 	bne	r2,zero,800c884 <__swbuf_r+0x10c>
 800c860:	80800017 	ldw	r2,0(r16)
 800c864:	00c00044 	movi	r3,1
 800c868:	003fdd06 	br	800c7e0 <__alt_data_end+0xfc00c7e0>
 800c86c:	00800284 	movi	r2,10
 800c870:	88bfe61e 	bne	r17,r2,800c80c <__alt_data_end+0xfc00c80c>
 800c874:	9009883a 	mov	r4,r18
 800c878:	800b883a 	mov	r5,r16
 800c87c:	80064180 	call	8006418 <_fflush_r>
 800c880:	103fe226 	beq	r2,zero,800c80c <__alt_data_end+0xfc00c80c>
 800c884:	00bfffc4 	movi	r2,-1
 800c888:	003fe106 	br	800c810 <__alt_data_end+0xfc00c810>
 800c88c:	9009883a 	mov	r4,r18
 800c890:	800b883a 	mov	r5,r16
 800c894:	80049c00 	call	80049c0 <__swsetup_r>
 800c898:	1000051e 	bne	r2,zero,800c8b0 <__swbuf_r+0x138>
 800c89c:	8180030b 	ldhu	r6,12(r16)
 800c8a0:	80c00417 	ldw	r3,16(r16)
 800c8a4:	003fc606 	br	800c7c0 <__alt_data_end+0xfc00c7c0>
 800c8a8:	80069c00 	call	80069c0 <__sinit>
 800c8ac:	003fbd06 	br	800c7a4 <__alt_data_end+0xfc00c7a4>
 800c8b0:	80c0030b 	ldhu	r3,12(r16)
 800c8b4:	00bfffc4 	movi	r2,-1
 800c8b8:	18c01014 	ori	r3,r3,64
 800c8bc:	80c0030d 	sth	r3,12(r16)
 800c8c0:	00c00244 	movi	r3,9
 800c8c4:	90c00015 	stw	r3,0(r18)
 800c8c8:	003fd106 	br	800c810 <__alt_data_end+0xfc00c810>

0800c8cc <__swbuf>:
 800c8cc:	00c20074 	movhi	r3,2049
 800c8d0:	18d23804 	addi	r3,r3,18656
 800c8d4:	2005883a 	mov	r2,r4
 800c8d8:	19000017 	ldw	r4,0(r3)
 800c8dc:	280d883a 	mov	r6,r5
 800c8e0:	100b883a 	mov	r5,r2
 800c8e4:	800c7781 	jmpi	800c778 <__swbuf_r>

0800c8e8 <_wcrtomb_r>:
 800c8e8:	defff604 	addi	sp,sp,-40
 800c8ec:	00820074 	movhi	r2,2049
 800c8f0:	dc800815 	stw	r18,32(sp)
 800c8f4:	dc400715 	stw	r17,28(sp)
 800c8f8:	dc000615 	stw	r16,24(sp)
 800c8fc:	10923c04 	addi	r2,r2,18672
 800c900:	dfc00915 	stw	ra,36(sp)
 800c904:	2021883a 	mov	r16,r4
 800c908:	3823883a 	mov	r17,r7
 800c90c:	14800017 	ldw	r18,0(r2)
 800c910:	28001426 	beq	r5,zero,800c964 <_wcrtomb_r+0x7c>
 800c914:	d9400415 	stw	r5,16(sp)
 800c918:	d9800515 	stw	r6,20(sp)
 800c91c:	80070100 	call	8007010 <__locale_charset>
 800c920:	d9400417 	ldw	r5,16(sp)
 800c924:	d9800517 	ldw	r6,20(sp)
 800c928:	8009883a 	mov	r4,r16
 800c92c:	dc400015 	stw	r17,0(sp)
 800c930:	100f883a 	mov	r7,r2
 800c934:	903ee83a 	callr	r18
 800c938:	00ffffc4 	movi	r3,-1
 800c93c:	10c0031e 	bne	r2,r3,800c94c <_wcrtomb_r+0x64>
 800c940:	88000015 	stw	zero,0(r17)
 800c944:	00c02284 	movi	r3,138
 800c948:	80c00015 	stw	r3,0(r16)
 800c94c:	dfc00917 	ldw	ra,36(sp)
 800c950:	dc800817 	ldw	r18,32(sp)
 800c954:	dc400717 	ldw	r17,28(sp)
 800c958:	dc000617 	ldw	r16,24(sp)
 800c95c:	dec00a04 	addi	sp,sp,40
 800c960:	f800283a 	ret
 800c964:	80070100 	call	8007010 <__locale_charset>
 800c968:	8009883a 	mov	r4,r16
 800c96c:	dc400015 	stw	r17,0(sp)
 800c970:	d9400104 	addi	r5,sp,4
 800c974:	000d883a 	mov	r6,zero
 800c978:	100f883a 	mov	r7,r2
 800c97c:	903ee83a 	callr	r18
 800c980:	003fed06 	br	800c938 <__alt_data_end+0xfc00c938>

0800c984 <wcrtomb>:
 800c984:	defff504 	addi	sp,sp,-44
 800c988:	dc400515 	stw	r17,20(sp)
 800c98c:	dc000415 	stw	r16,16(sp)
 800c990:	dfc00a15 	stw	ra,40(sp)
 800c994:	dd400915 	stw	r21,36(sp)
 800c998:	dd000815 	stw	r20,32(sp)
 800c99c:	dcc00715 	stw	r19,28(sp)
 800c9a0:	dc800615 	stw	r18,24(sp)
 800c9a4:	2021883a 	mov	r16,r4
 800c9a8:	3023883a 	mov	r17,r6
 800c9ac:	20001d26 	beq	r4,zero,800ca24 <wcrtomb+0xa0>
 800c9b0:	04820074 	movhi	r18,2049
 800c9b4:	94923804 	addi	r18,r18,18656
 800c9b8:	00820074 	movhi	r2,2049
 800c9bc:	95400017 	ldw	r21,0(r18)
 800c9c0:	10923c04 	addi	r2,r2,18672
 800c9c4:	15000017 	ldw	r20,0(r2)
 800c9c8:	2827883a 	mov	r19,r5
 800c9cc:	80070100 	call	8007010 <__locale_charset>
 800c9d0:	a809883a 	mov	r4,r21
 800c9d4:	dc400015 	stw	r17,0(sp)
 800c9d8:	800b883a 	mov	r5,r16
 800c9dc:	980d883a 	mov	r6,r19
 800c9e0:	100f883a 	mov	r7,r2
 800c9e4:	a03ee83a 	callr	r20
 800c9e8:	00ffffc4 	movi	r3,-1
 800c9ec:	10c0041e 	bne	r2,r3,800ca00 <wcrtomb+0x7c>
 800c9f0:	90c00017 	ldw	r3,0(r18)
 800c9f4:	01002284 	movi	r4,138
 800c9f8:	88000015 	stw	zero,0(r17)
 800c9fc:	19000015 	stw	r4,0(r3)
 800ca00:	dfc00a17 	ldw	ra,40(sp)
 800ca04:	dd400917 	ldw	r21,36(sp)
 800ca08:	dd000817 	ldw	r20,32(sp)
 800ca0c:	dcc00717 	ldw	r19,28(sp)
 800ca10:	dc800617 	ldw	r18,24(sp)
 800ca14:	dc400517 	ldw	r17,20(sp)
 800ca18:	dc000417 	ldw	r16,16(sp)
 800ca1c:	dec00b04 	addi	sp,sp,44
 800ca20:	f800283a 	ret
 800ca24:	04820074 	movhi	r18,2049
 800ca28:	94923804 	addi	r18,r18,18656
 800ca2c:	00820074 	movhi	r2,2049
 800ca30:	94c00017 	ldw	r19,0(r18)
 800ca34:	10923c04 	addi	r2,r2,18672
 800ca38:	14000017 	ldw	r16,0(r2)
 800ca3c:	80070100 	call	8007010 <__locale_charset>
 800ca40:	9809883a 	mov	r4,r19
 800ca44:	dc400015 	stw	r17,0(sp)
 800ca48:	d9400104 	addi	r5,sp,4
 800ca4c:	000d883a 	mov	r6,zero
 800ca50:	100f883a 	mov	r7,r2
 800ca54:	803ee83a 	callr	r16
 800ca58:	003fe306 	br	800c9e8 <__alt_data_end+0xfc00c9e8>

0800ca5c <__ascii_wctomb>:
 800ca5c:	28000526 	beq	r5,zero,800ca74 <__ascii_wctomb+0x18>
 800ca60:	00803fc4 	movi	r2,255
 800ca64:	11800536 	bltu	r2,r6,800ca7c <__ascii_wctomb+0x20>
 800ca68:	29800005 	stb	r6,0(r5)
 800ca6c:	00800044 	movi	r2,1
 800ca70:	f800283a 	ret
 800ca74:	0005883a 	mov	r2,zero
 800ca78:	f800283a 	ret
 800ca7c:	00802284 	movi	r2,138
 800ca80:	20800015 	stw	r2,0(r4)
 800ca84:	00bfffc4 	movi	r2,-1
 800ca88:	f800283a 	ret

0800ca8c <_wctomb_r>:
 800ca8c:	00820074 	movhi	r2,2049
 800ca90:	defff904 	addi	sp,sp,-28
 800ca94:	10923c04 	addi	r2,r2,18672
 800ca98:	dfc00615 	stw	ra,24(sp)
 800ca9c:	dc400515 	stw	r17,20(sp)
 800caa0:	dc000415 	stw	r16,16(sp)
 800caa4:	3823883a 	mov	r17,r7
 800caa8:	14000017 	ldw	r16,0(r2)
 800caac:	d9000115 	stw	r4,4(sp)
 800cab0:	d9400215 	stw	r5,8(sp)
 800cab4:	d9800315 	stw	r6,12(sp)
 800cab8:	80070100 	call	8007010 <__locale_charset>
 800cabc:	d9000117 	ldw	r4,4(sp)
 800cac0:	d9400217 	ldw	r5,8(sp)
 800cac4:	d9800317 	ldw	r6,12(sp)
 800cac8:	dc400015 	stw	r17,0(sp)
 800cacc:	100f883a 	mov	r7,r2
 800cad0:	803ee83a 	callr	r16
 800cad4:	dfc00617 	ldw	ra,24(sp)
 800cad8:	dc400517 	ldw	r17,20(sp)
 800cadc:	dc000417 	ldw	r16,16(sp)
 800cae0:	dec00704 	addi	sp,sp,28
 800cae4:	f800283a 	ret

0800cae8 <__udivdi3>:
 800cae8:	defff504 	addi	sp,sp,-44
 800caec:	dcc00415 	stw	r19,16(sp)
 800caf0:	dc000115 	stw	r16,4(sp)
 800caf4:	dfc00a15 	stw	ra,40(sp)
 800caf8:	df000915 	stw	fp,36(sp)
 800cafc:	ddc00815 	stw	r23,32(sp)
 800cb00:	dd800715 	stw	r22,28(sp)
 800cb04:	dd400615 	stw	r21,24(sp)
 800cb08:	dd000515 	stw	r20,20(sp)
 800cb0c:	dc800315 	stw	r18,12(sp)
 800cb10:	dc400215 	stw	r17,8(sp)
 800cb14:	2027883a 	mov	r19,r4
 800cb18:	2821883a 	mov	r16,r5
 800cb1c:	3800421e 	bne	r7,zero,800cc28 <__udivdi3+0x140>
 800cb20:	3025883a 	mov	r18,r6
 800cb24:	2023883a 	mov	r17,r4
 800cb28:	2980542e 	bgeu	r5,r6,800cc7c <__udivdi3+0x194>
 800cb2c:	00bfffd4 	movui	r2,65535
 800cb30:	282d883a 	mov	r22,r5
 800cb34:	1180a836 	bltu	r2,r6,800cdd8 <__udivdi3+0x2f0>
 800cb38:	00803fc4 	movi	r2,255
 800cb3c:	1181422e 	bgeu	r2,r6,800d048 <__udivdi3+0x560>
 800cb40:	00800204 	movi	r2,8
 800cb44:	1007883a 	mov	r3,r2
 800cb48:	3084d83a 	srl	r2,r6,r2
 800cb4c:	01020074 	movhi	r4,2049
 800cb50:	210b2404 	addi	r4,r4,11408
 800cb54:	2085883a 	add	r2,r4,r2
 800cb58:	10800003 	ldbu	r2,0(r2)
 800cb5c:	10c7883a 	add	r3,r2,r3
 800cb60:	00800804 	movi	r2,32
 800cb64:	10c5c83a 	sub	r2,r2,r3
 800cb68:	10000526 	beq	r2,zero,800cb80 <__udivdi3+0x98>
 800cb6c:	80a0983a 	sll	r16,r16,r2
 800cb70:	98c6d83a 	srl	r3,r19,r3
 800cb74:	30a4983a 	sll	r18,r6,r2
 800cb78:	98a2983a 	sll	r17,r19,r2
 800cb7c:	80ecb03a 	or	r22,r16,r3
 800cb80:	902ad43a 	srli	r21,r18,16
 800cb84:	b009883a 	mov	r4,r22
 800cb88:	953fffcc 	andi	r20,r18,65535
 800cb8c:	a80b883a 	mov	r5,r21
 800cb90:	800d75c0 	call	800d75c <__umodsi3>
 800cb94:	b009883a 	mov	r4,r22
 800cb98:	a80b883a 	mov	r5,r21
 800cb9c:	1027883a 	mov	r19,r2
 800cba0:	800d7540 	call	800d754 <__udivsi3>
 800cba4:	1021883a 	mov	r16,r2
 800cba8:	8806d43a 	srli	r3,r17,16
 800cbac:	9804943a 	slli	r2,r19,16
 800cbb0:	8527383a 	mul	r19,r16,r20
 800cbb4:	10c4b03a 	or	r2,r2,r3
 800cbb8:	14c0052e 	bgeu	r2,r19,800cbd0 <__udivdi3+0xe8>
 800cbbc:	1485883a 	add	r2,r2,r18
 800cbc0:	80ffffc4 	addi	r3,r16,-1
 800cbc4:	14800136 	bltu	r2,r18,800cbcc <__udivdi3+0xe4>
 800cbc8:	14c13436 	bltu	r2,r19,800d09c <__udivdi3+0x5b4>
 800cbcc:	1821883a 	mov	r16,r3
 800cbd0:	14e7c83a 	sub	r19,r2,r19
 800cbd4:	9809883a 	mov	r4,r19
 800cbd8:	a80b883a 	mov	r5,r21
 800cbdc:	800d75c0 	call	800d75c <__umodsi3>
 800cbe0:	102d883a 	mov	r22,r2
 800cbe4:	9809883a 	mov	r4,r19
 800cbe8:	a80b883a 	mov	r5,r21
 800cbec:	800d7540 	call	800d754 <__udivsi3>
 800cbf0:	b02c943a 	slli	r22,r22,16
 800cbf4:	1529383a 	mul	r20,r2,r20
 800cbf8:	8c7fffcc 	andi	r17,r17,65535
 800cbfc:	b462b03a 	or	r17,r22,r17
 800cc00:	8d00052e 	bgeu	r17,r20,800cc18 <__udivdi3+0x130>
 800cc04:	8ca3883a 	add	r17,r17,r18
 800cc08:	10ffffc4 	addi	r3,r2,-1
 800cc0c:	8c80f636 	bltu	r17,r18,800cfe8 <__udivdi3+0x500>
 800cc10:	8d00f52e 	bgeu	r17,r20,800cfe8 <__udivdi3+0x500>
 800cc14:	10bfff84 	addi	r2,r2,-2
 800cc18:	8020943a 	slli	r16,r16,16
 800cc1c:	0007883a 	mov	r3,zero
 800cc20:	1404b03a 	or	r2,r2,r16
 800cc24:	00005b06 	br	800cd94 <__udivdi3+0x2ac>
 800cc28:	29c05836 	bltu	r5,r7,800cd8c <__udivdi3+0x2a4>
 800cc2c:	00bfffd4 	movui	r2,65535
 800cc30:	11c0642e 	bgeu	r2,r7,800cdc4 <__udivdi3+0x2dc>
 800cc34:	00804034 	movhi	r2,256
 800cc38:	10bfffc4 	addi	r2,r2,-1
 800cc3c:	11c0f32e 	bgeu	r2,r7,800d00c <__udivdi3+0x524>
 800cc40:	00c00604 	movi	r3,24
 800cc44:	180b883a 	mov	r5,r3
 800cc48:	38c6d83a 	srl	r3,r7,r3
 800cc4c:	00820074 	movhi	r2,2049
 800cc50:	108b2404 	addi	r2,r2,11408
 800cc54:	10c7883a 	add	r3,r2,r3
 800cc58:	18c00003 	ldbu	r3,0(r3)
 800cc5c:	01000804 	movi	r4,32
 800cc60:	1947883a 	add	r3,r3,r5
 800cc64:	20e5c83a 	sub	r18,r4,r3
 800cc68:	9000661e 	bne	r18,zero,800ce04 <__udivdi3+0x31c>
 800cc6c:	3c00f936 	bltu	r7,r16,800d054 <__udivdi3+0x56c>
 800cc70:	9985403a 	cmpgeu	r2,r19,r6
 800cc74:	0007883a 	mov	r3,zero
 800cc78:	00004606 	br	800cd94 <__udivdi3+0x2ac>
 800cc7c:	3000041e 	bne	r6,zero,800cc90 <__udivdi3+0x1a8>
 800cc80:	01000044 	movi	r4,1
 800cc84:	000b883a 	mov	r5,zero
 800cc88:	800d7540 	call	800d754 <__udivsi3>
 800cc8c:	1025883a 	mov	r18,r2
 800cc90:	00bfffd4 	movui	r2,65535
 800cc94:	1480562e 	bgeu	r2,r18,800cdf0 <__udivdi3+0x308>
 800cc98:	00804034 	movhi	r2,256
 800cc9c:	10bfffc4 	addi	r2,r2,-1
 800cca0:	1480e32e 	bgeu	r2,r18,800d030 <__udivdi3+0x548>
 800cca4:	00800604 	movi	r2,24
 800cca8:	1007883a 	mov	r3,r2
 800ccac:	9084d83a 	srl	r2,r18,r2
 800ccb0:	01020074 	movhi	r4,2049
 800ccb4:	210b2404 	addi	r4,r4,11408
 800ccb8:	2085883a 	add	r2,r4,r2
 800ccbc:	10800003 	ldbu	r2,0(r2)
 800ccc0:	10c5883a 	add	r2,r2,r3
 800ccc4:	00c00804 	movi	r3,32
 800ccc8:	1887c83a 	sub	r3,r3,r2
 800cccc:	1800911e 	bne	r3,zero,800cf14 <__udivdi3+0x42c>
 800ccd0:	9028d43a 	srli	r20,r18,16
 800ccd4:	84a1c83a 	sub	r16,r16,r18
 800ccd8:	957fffcc 	andi	r21,r18,65535
 800ccdc:	00c00044 	movi	r3,1
 800cce0:	8009883a 	mov	r4,r16
 800cce4:	a00b883a 	mov	r5,r20
 800cce8:	d8c00015 	stw	r3,0(sp)
 800ccec:	800d75c0 	call	800d75c <__umodsi3>
 800ccf0:	8009883a 	mov	r4,r16
 800ccf4:	a00b883a 	mov	r5,r20
 800ccf8:	1027883a 	mov	r19,r2
 800ccfc:	800d7540 	call	800d754 <__udivsi3>
 800cd00:	1021883a 	mov	r16,r2
 800cd04:	880cd43a 	srli	r6,r17,16
 800cd08:	9804943a 	slli	r2,r19,16
 800cd0c:	8567383a 	mul	r19,r16,r21
 800cd10:	d8c00017 	ldw	r3,0(sp)
 800cd14:	1188b03a 	or	r4,r2,r6
 800cd18:	24c0052e 	bgeu	r4,r19,800cd30 <__udivdi3+0x248>
 800cd1c:	2489883a 	add	r4,r4,r18
 800cd20:	80bfffc4 	addi	r2,r16,-1
 800cd24:	24800136 	bltu	r4,r18,800cd2c <__udivdi3+0x244>
 800cd28:	24c0d936 	bltu	r4,r19,800d090 <__udivdi3+0x5a8>
 800cd2c:	1021883a 	mov	r16,r2
 800cd30:	24e7c83a 	sub	r19,r4,r19
 800cd34:	9809883a 	mov	r4,r19
 800cd38:	a00b883a 	mov	r5,r20
 800cd3c:	d8c00015 	stw	r3,0(sp)
 800cd40:	800d75c0 	call	800d75c <__umodsi3>
 800cd44:	102d883a 	mov	r22,r2
 800cd48:	9809883a 	mov	r4,r19
 800cd4c:	a00b883a 	mov	r5,r20
 800cd50:	800d7540 	call	800d754 <__udivsi3>
 800cd54:	b02c943a 	slli	r22,r22,16
 800cd58:	156b383a 	mul	r21,r2,r21
 800cd5c:	8c7fffcc 	andi	r17,r17,65535
 800cd60:	b462b03a 	or	r17,r22,r17
 800cd64:	d8c00017 	ldw	r3,0(sp)
 800cd68:	8d40052e 	bgeu	r17,r21,800cd80 <__udivdi3+0x298>
 800cd6c:	8ca3883a 	add	r17,r17,r18
 800cd70:	113fffc4 	addi	r4,r2,-1
 800cd74:	8c809a36 	bltu	r17,r18,800cfe0 <__udivdi3+0x4f8>
 800cd78:	8d40992e 	bgeu	r17,r21,800cfe0 <__udivdi3+0x4f8>
 800cd7c:	10bfff84 	addi	r2,r2,-2
 800cd80:	8020943a 	slli	r16,r16,16
 800cd84:	1404b03a 	or	r2,r2,r16
 800cd88:	00000206 	br	800cd94 <__udivdi3+0x2ac>
 800cd8c:	0007883a 	mov	r3,zero
 800cd90:	0005883a 	mov	r2,zero
 800cd94:	dfc00a17 	ldw	ra,40(sp)
 800cd98:	df000917 	ldw	fp,36(sp)
 800cd9c:	ddc00817 	ldw	r23,32(sp)
 800cda0:	dd800717 	ldw	r22,28(sp)
 800cda4:	dd400617 	ldw	r21,24(sp)
 800cda8:	dd000517 	ldw	r20,20(sp)
 800cdac:	dcc00417 	ldw	r19,16(sp)
 800cdb0:	dc800317 	ldw	r18,12(sp)
 800cdb4:	dc400217 	ldw	r17,8(sp)
 800cdb8:	dc000117 	ldw	r16,4(sp)
 800cdbc:	dec00b04 	addi	sp,sp,44
 800cdc0:	f800283a 	ret
 800cdc4:	00803fc4 	movi	r2,255
 800cdc8:	11c0932e 	bgeu	r2,r7,800d018 <__udivdi3+0x530>
 800cdcc:	00c00204 	movi	r3,8
 800cdd0:	180b883a 	mov	r5,r3
 800cdd4:	003f9c06 	br	800cc48 <__alt_data_end+0xfc00cc48>
 800cdd8:	00804034 	movhi	r2,256
 800cddc:	10bfffc4 	addi	r2,r2,-1
 800cde0:	1180902e 	bgeu	r2,r6,800d024 <__udivdi3+0x53c>
 800cde4:	00800604 	movi	r2,24
 800cde8:	1007883a 	mov	r3,r2
 800cdec:	003f5606 	br	800cb48 <__alt_data_end+0xfc00cb48>
 800cdf0:	00803fc4 	movi	r2,255
 800cdf4:	1480912e 	bgeu	r2,r18,800d03c <__udivdi3+0x554>
 800cdf8:	00800204 	movi	r2,8
 800cdfc:	1007883a 	mov	r3,r2
 800ce00:	003faa06 	br	800ccac <__alt_data_end+0xfc00ccac>
 800ce04:	30eed83a 	srl	r23,r6,r3
 800ce08:	3c8e983a 	sll	r7,r7,r18
 800ce0c:	80f8d83a 	srl	fp,r16,r3
 800ce10:	98c6d83a 	srl	r3,r19,r3
 800ce14:	3deeb03a 	or	r23,r7,r23
 800ce18:	b828d43a 	srli	r20,r23,16
 800ce1c:	84a0983a 	sll	r16,r16,r18
 800ce20:	e009883a 	mov	r4,fp
 800ce24:	a00b883a 	mov	r5,r20
 800ce28:	80e2b03a 	or	r17,r16,r3
 800ce2c:	34aa983a 	sll	r21,r6,r18
 800ce30:	800d75c0 	call	800d75c <__umodsi3>
 800ce34:	e009883a 	mov	r4,fp
 800ce38:	a00b883a 	mov	r5,r20
 800ce3c:	102d883a 	mov	r22,r2
 800ce40:	800d7540 	call	800d754 <__udivsi3>
 800ce44:	1021883a 	mov	r16,r2
 800ce48:	bf3fffcc 	andi	fp,r23,65535
 800ce4c:	b004943a 	slli	r2,r22,16
 800ce50:	8808d43a 	srli	r4,r17,16
 800ce54:	872d383a 	mul	r22,r16,fp
 800ce58:	1104b03a 	or	r2,r2,r4
 800ce5c:	1580042e 	bgeu	r2,r22,800ce70 <__udivdi3+0x388>
 800ce60:	15c5883a 	add	r2,r2,r23
 800ce64:	80ffffc4 	addi	r3,r16,-1
 800ce68:	15c0812e 	bgeu	r2,r23,800d070 <__udivdi3+0x588>
 800ce6c:	1821883a 	mov	r16,r3
 800ce70:	15adc83a 	sub	r22,r2,r22
 800ce74:	b009883a 	mov	r4,r22
 800ce78:	a00b883a 	mov	r5,r20
 800ce7c:	800d75c0 	call	800d75c <__umodsi3>
 800ce80:	a00b883a 	mov	r5,r20
 800ce84:	b009883a 	mov	r4,r22
 800ce88:	d8800015 	stw	r2,0(sp)
 800ce8c:	800d7540 	call	800d754 <__udivsi3>
 800ce90:	d8c00017 	ldw	r3,0(sp)
 800ce94:	170b383a 	mul	r5,r2,fp
 800ce98:	8c7fffcc 	andi	r17,r17,65535
 800ce9c:	1806943a 	slli	r3,r3,16
 800cea0:	1c46b03a 	or	r3,r3,r17
 800cea4:	1940042e 	bgeu	r3,r5,800ceb8 <__udivdi3+0x3d0>
 800cea8:	1dc7883a 	add	r3,r3,r23
 800ceac:	113fffc4 	addi	r4,r2,-1
 800ceb0:	1dc06b2e 	bgeu	r3,r23,800d060 <__udivdi3+0x578>
 800ceb4:	2005883a 	mov	r2,r4
 800ceb8:	8020943a 	slli	r16,r16,16
 800cebc:	a9ffffcc 	andi	r7,r21,65535
 800cec0:	a82ad43a 	srli	r21,r21,16
 800cec4:	1404b03a 	or	r2,r2,r16
 800cec8:	113fffcc 	andi	r4,r2,65535
 800cecc:	100cd43a 	srli	r6,r2,16
 800ced0:	21d3383a 	mul	r9,r4,r7
 800ced4:	2549383a 	mul	r4,r4,r21
 800ced8:	31cf383a 	mul	r7,r6,r7
 800cedc:	4810d43a 	srli	r8,r9,16
 800cee0:	1947c83a 	sub	r3,r3,r5
 800cee4:	3909883a 	add	r4,r7,r4
 800cee8:	2209883a 	add	r4,r4,r8
 800ceec:	354d383a 	mul	r6,r6,r21
 800cef0:	21c0022e 	bgeu	r4,r7,800cefc <__udivdi3+0x414>
 800cef4:	01400074 	movhi	r5,1
 800cef8:	314d883a 	add	r6,r6,r5
 800cefc:	202ad43a 	srli	r21,r4,16
 800cf00:	354d883a 	add	r6,r6,r21
 800cf04:	19803f36 	bltu	r3,r6,800d004 <__udivdi3+0x51c>
 800cf08:	19803926 	beq	r3,r6,800cff0 <__udivdi3+0x508>
 800cf0c:	0007883a 	mov	r3,zero
 800cf10:	003fa006 	br	800cd94 <__alt_data_end+0xfc00cd94>
 800cf14:	90e4983a 	sll	r18,r18,r3
 800cf18:	80aad83a 	srl	r21,r16,r2
 800cf1c:	80e0983a 	sll	r16,r16,r3
 800cf20:	9028d43a 	srli	r20,r18,16
 800cf24:	9884d83a 	srl	r2,r19,r2
 800cf28:	a809883a 	mov	r4,r21
 800cf2c:	a00b883a 	mov	r5,r20
 800cf30:	80acb03a 	or	r22,r16,r2
 800cf34:	98e2983a 	sll	r17,r19,r3
 800cf38:	800d75c0 	call	800d75c <__umodsi3>
 800cf3c:	a809883a 	mov	r4,r21
 800cf40:	a00b883a 	mov	r5,r20
 800cf44:	1021883a 	mov	r16,r2
 800cf48:	800d7540 	call	800d754 <__udivsi3>
 800cf4c:	957fffcc 	andi	r21,r18,65535
 800cf50:	8020943a 	slli	r16,r16,16
 800cf54:	b00ad43a 	srli	r5,r22,16
 800cf58:	1567383a 	mul	r19,r2,r21
 800cf5c:	102f883a 	mov	r23,r2
 800cf60:	8148b03a 	or	r4,r16,r5
 800cf64:	24c0062e 	bgeu	r4,r19,800cf80 <__udivdi3+0x498>
 800cf68:	2489883a 	add	r4,r4,r18
 800cf6c:	10bfffc4 	addi	r2,r2,-1
 800cf70:	24804536 	bltu	r4,r18,800d088 <__udivdi3+0x5a0>
 800cf74:	24c0442e 	bgeu	r4,r19,800d088 <__udivdi3+0x5a0>
 800cf78:	bdffff84 	addi	r23,r23,-2
 800cf7c:	2489883a 	add	r4,r4,r18
 800cf80:	24e7c83a 	sub	r19,r4,r19
 800cf84:	9809883a 	mov	r4,r19
 800cf88:	a00b883a 	mov	r5,r20
 800cf8c:	800d75c0 	call	800d75c <__umodsi3>
 800cf90:	1021883a 	mov	r16,r2
 800cf94:	9809883a 	mov	r4,r19
 800cf98:	a00b883a 	mov	r5,r20
 800cf9c:	800d7540 	call	800d754 <__udivsi3>
 800cfa0:	8020943a 	slli	r16,r16,16
 800cfa4:	1007883a 	mov	r3,r2
 800cfa8:	1545383a 	mul	r2,r2,r21
 800cfac:	b13fffcc 	andi	r4,r22,65535
 800cfb0:	8108b03a 	or	r4,r16,r4
 800cfb4:	2080062e 	bgeu	r4,r2,800cfd0 <__udivdi3+0x4e8>
 800cfb8:	2489883a 	add	r4,r4,r18
 800cfbc:	197fffc4 	addi	r5,r3,-1
 800cfc0:	24802f36 	bltu	r4,r18,800d080 <__udivdi3+0x598>
 800cfc4:	20802e2e 	bgeu	r4,r2,800d080 <__udivdi3+0x598>
 800cfc8:	18ffff84 	addi	r3,r3,-2
 800cfcc:	2489883a 	add	r4,r4,r18
 800cfd0:	b82e943a 	slli	r23,r23,16
 800cfd4:	20a1c83a 	sub	r16,r4,r2
 800cfd8:	1dc6b03a 	or	r3,r3,r23
 800cfdc:	003f4006 	br	800cce0 <__alt_data_end+0xfc00cce0>
 800cfe0:	2005883a 	mov	r2,r4
 800cfe4:	003f6606 	br	800cd80 <__alt_data_end+0xfc00cd80>
 800cfe8:	1805883a 	mov	r2,r3
 800cfec:	003f0a06 	br	800cc18 <__alt_data_end+0xfc00cc18>
 800cff0:	2006943a 	slli	r3,r4,16
 800cff4:	9c88983a 	sll	r4,r19,r18
 800cff8:	4a7fffcc 	andi	r9,r9,65535
 800cffc:	1a47883a 	add	r3,r3,r9
 800d000:	20ffc22e 	bgeu	r4,r3,800cf0c <__alt_data_end+0xfc00cf0c>
 800d004:	10bfffc4 	addi	r2,r2,-1
 800d008:	003fc006 	br	800cf0c <__alt_data_end+0xfc00cf0c>
 800d00c:	00c00404 	movi	r3,16
 800d010:	180b883a 	mov	r5,r3
 800d014:	003f0c06 	br	800cc48 <__alt_data_end+0xfc00cc48>
 800d018:	0007883a 	mov	r3,zero
 800d01c:	000b883a 	mov	r5,zero
 800d020:	003f0906 	br	800cc48 <__alt_data_end+0xfc00cc48>
 800d024:	00800404 	movi	r2,16
 800d028:	1007883a 	mov	r3,r2
 800d02c:	003ec606 	br	800cb48 <__alt_data_end+0xfc00cb48>
 800d030:	00800404 	movi	r2,16
 800d034:	1007883a 	mov	r3,r2
 800d038:	003f1c06 	br	800ccac <__alt_data_end+0xfc00ccac>
 800d03c:	0005883a 	mov	r2,zero
 800d040:	0007883a 	mov	r3,zero
 800d044:	003f1906 	br	800ccac <__alt_data_end+0xfc00ccac>
 800d048:	0005883a 	mov	r2,zero
 800d04c:	0007883a 	mov	r3,zero
 800d050:	003ebd06 	br	800cb48 <__alt_data_end+0xfc00cb48>
 800d054:	0007883a 	mov	r3,zero
 800d058:	00800044 	movi	r2,1
 800d05c:	003f4d06 	br	800cd94 <__alt_data_end+0xfc00cd94>
 800d060:	197f942e 	bgeu	r3,r5,800ceb4 <__alt_data_end+0xfc00ceb4>
 800d064:	10bfff84 	addi	r2,r2,-2
 800d068:	1dc7883a 	add	r3,r3,r23
 800d06c:	003f9206 	br	800ceb8 <__alt_data_end+0xfc00ceb8>
 800d070:	15bf7e2e 	bgeu	r2,r22,800ce6c <__alt_data_end+0xfc00ce6c>
 800d074:	843fff84 	addi	r16,r16,-2
 800d078:	15c5883a 	add	r2,r2,r23
 800d07c:	003f7c06 	br	800ce70 <__alt_data_end+0xfc00ce70>
 800d080:	2807883a 	mov	r3,r5
 800d084:	003fd206 	br	800cfd0 <__alt_data_end+0xfc00cfd0>
 800d088:	102f883a 	mov	r23,r2
 800d08c:	003fbc06 	br	800cf80 <__alt_data_end+0xfc00cf80>
 800d090:	843fff84 	addi	r16,r16,-2
 800d094:	2489883a 	add	r4,r4,r18
 800d098:	003f2506 	br	800cd30 <__alt_data_end+0xfc00cd30>
 800d09c:	843fff84 	addi	r16,r16,-2
 800d0a0:	1485883a 	add	r2,r2,r18
 800d0a4:	003eca06 	br	800cbd0 <__alt_data_end+0xfc00cbd0>

0800d0a8 <__umoddi3>:
 800d0a8:	defff404 	addi	sp,sp,-48
 800d0ac:	ddc00915 	stw	r23,36(sp)
 800d0b0:	dc400315 	stw	r17,12(sp)
 800d0b4:	dc000215 	stw	r16,8(sp)
 800d0b8:	dfc00b15 	stw	ra,44(sp)
 800d0bc:	df000a15 	stw	fp,40(sp)
 800d0c0:	dd800815 	stw	r22,32(sp)
 800d0c4:	dd400715 	stw	r21,28(sp)
 800d0c8:	dd000615 	stw	r20,24(sp)
 800d0cc:	dcc00515 	stw	r19,20(sp)
 800d0d0:	dc800415 	stw	r18,16(sp)
 800d0d4:	2021883a 	mov	r16,r4
 800d0d8:	2823883a 	mov	r17,r5
 800d0dc:	282f883a 	mov	r23,r5
 800d0e0:	3800381e 	bne	r7,zero,800d1c4 <__umoddi3+0x11c>
 800d0e4:	3027883a 	mov	r19,r6
 800d0e8:	2029883a 	mov	r20,r4
 800d0ec:	29804e2e 	bgeu	r5,r6,800d228 <__umoddi3+0x180>
 800d0f0:	00bfffd4 	movui	r2,65535
 800d0f4:	11809c36 	bltu	r2,r6,800d368 <__umoddi3+0x2c0>
 800d0f8:	00803fc4 	movi	r2,255
 800d0fc:	11813b2e 	bgeu	r2,r6,800d5ec <__umoddi3+0x544>
 800d100:	01400204 	movi	r5,8
 800d104:	2805883a 	mov	r2,r5
 800d108:	314ad83a 	srl	r5,r6,r5
 800d10c:	00c20074 	movhi	r3,2049
 800d110:	18cb2404 	addi	r3,r3,11408
 800d114:	194b883a 	add	r5,r3,r5
 800d118:	29000003 	ldbu	r4,0(r5)
 800d11c:	2089883a 	add	r4,r4,r2
 800d120:	00800804 	movi	r2,32
 800d124:	1105c83a 	sub	r2,r2,r4
 800d128:	1000ec26 	beq	r2,zero,800d4dc <__umoddi3+0x434>
 800d12c:	88a2983a 	sll	r17,r17,r2
 800d130:	8108d83a 	srl	r4,r16,r4
 800d134:	30a6983a 	sll	r19,r6,r2
 800d138:	80a8983a 	sll	r20,r16,r2
 800d13c:	1025883a 	mov	r18,r2
 800d140:	892eb03a 	or	r23,r17,r4
 800d144:	982cd43a 	srli	r22,r19,16
 800d148:	b809883a 	mov	r4,r23
 800d14c:	9d7fffcc 	andi	r21,r19,65535
 800d150:	b00b883a 	mov	r5,r22
 800d154:	800d75c0 	call	800d75c <__umodsi3>
 800d158:	b809883a 	mov	r4,r23
 800d15c:	b00b883a 	mov	r5,r22
 800d160:	1021883a 	mov	r16,r2
 800d164:	800d7540 	call	800d754 <__udivsi3>
 800d168:	8020943a 	slli	r16,r16,16
 800d16c:	a00cd43a 	srli	r6,r20,16
 800d170:	1545383a 	mul	r2,r2,r21
 800d174:	8188b03a 	or	r4,r16,r6
 800d178:	2080042e 	bgeu	r4,r2,800d18c <__umoddi3+0xe4>
 800d17c:	24c9883a 	add	r4,r4,r19
 800d180:	24c00236 	bltu	r4,r19,800d18c <__umoddi3+0xe4>
 800d184:	2080012e 	bgeu	r4,r2,800d18c <__umoddi3+0xe4>
 800d188:	24c9883a 	add	r4,r4,r19
 800d18c:	20a3c83a 	sub	r17,r4,r2
 800d190:	8809883a 	mov	r4,r17
 800d194:	b00b883a 	mov	r5,r22
 800d198:	800d75c0 	call	800d75c <__umodsi3>
 800d19c:	8809883a 	mov	r4,r17
 800d1a0:	b00b883a 	mov	r5,r22
 800d1a4:	1021883a 	mov	r16,r2
 800d1a8:	800d7540 	call	800d754 <__udivsi3>
 800d1ac:	8006943a 	slli	r3,r16,16
 800d1b0:	1545383a 	mul	r2,r2,r21
 800d1b4:	a13fffcc 	andi	r4,r20,65535
 800d1b8:	1906b03a 	or	r3,r3,r4
 800d1bc:	1880532e 	bgeu	r3,r2,800d30c <__umoddi3+0x264>
 800d1c0:	00004e06 	br	800d2fc <__umoddi3+0x254>
 800d1c4:	29c05536 	bltu	r5,r7,800d31c <__umoddi3+0x274>
 800d1c8:	00bfffd4 	movui	r2,65535
 800d1cc:	11c0612e 	bgeu	r2,r7,800d354 <__umoddi3+0x2ac>
 800d1d0:	00804034 	movhi	r2,256
 800d1d4:	10bfffc4 	addi	r2,r2,-1
 800d1d8:	11c0f82e 	bgeu	r2,r7,800d5bc <__umoddi3+0x514>
 800d1dc:	01400604 	movi	r5,24
 800d1e0:	282b883a 	mov	r21,r5
 800d1e4:	394ad83a 	srl	r5,r7,r5
 800d1e8:	00c20074 	movhi	r3,2049
 800d1ec:	18cb2404 	addi	r3,r3,11408
 800d1f0:	194b883a 	add	r5,r3,r5
 800d1f4:	28800003 	ldbu	r2,0(r5)
 800d1f8:	00c00804 	movi	r3,32
 800d1fc:	156b883a 	add	r21,r2,r21
 800d200:	1d69c83a 	sub	r20,r3,r21
 800d204:	a000631e 	bne	r20,zero,800d394 <__umoddi3+0x2ec>
 800d208:	3c400136 	bltu	r7,r17,800d210 <__umoddi3+0x168>
 800d20c:	81810436 	bltu	r16,r6,800d620 <__umoddi3+0x578>
 800d210:	8185c83a 	sub	r2,r16,r6
 800d214:	89e3c83a 	sub	r17,r17,r7
 800d218:	8087803a 	cmpltu	r3,r16,r2
 800d21c:	88efc83a 	sub	r23,r17,r3
 800d220:	b807883a 	mov	r3,r23
 800d224:	00003f06 	br	800d324 <__umoddi3+0x27c>
 800d228:	3000041e 	bne	r6,zero,800d23c <__umoddi3+0x194>
 800d22c:	01000044 	movi	r4,1
 800d230:	000b883a 	mov	r5,zero
 800d234:	800d7540 	call	800d754 <__udivsi3>
 800d238:	1027883a 	mov	r19,r2
 800d23c:	00bfffd4 	movui	r2,65535
 800d240:	14c04f2e 	bgeu	r2,r19,800d380 <__umoddi3+0x2d8>
 800d244:	00804034 	movhi	r2,256
 800d248:	10bfffc4 	addi	r2,r2,-1
 800d24c:	14c0e42e 	bgeu	r2,r19,800d5e0 <__umoddi3+0x538>
 800d250:	00800604 	movi	r2,24
 800d254:	1007883a 	mov	r3,r2
 800d258:	9884d83a 	srl	r2,r19,r2
 800d25c:	01020074 	movhi	r4,2049
 800d260:	210b2404 	addi	r4,r4,11408
 800d264:	2085883a 	add	r2,r4,r2
 800d268:	11000003 	ldbu	r4,0(r2)
 800d26c:	00800804 	movi	r2,32
 800d270:	20c7883a 	add	r3,r4,r3
 800d274:	10c5c83a 	sub	r2,r2,r3
 800d278:	10009a1e 	bne	r2,zero,800d4e4 <__umoddi3+0x43c>
 800d27c:	982cd43a 	srli	r22,r19,16
 800d280:	8ce3c83a 	sub	r17,r17,r19
 800d284:	9c3fffcc 	andi	r16,r19,65535
 800d288:	0025883a 	mov	r18,zero
 800d28c:	8809883a 	mov	r4,r17
 800d290:	b00b883a 	mov	r5,r22
 800d294:	800d75c0 	call	800d75c <__umodsi3>
 800d298:	8809883a 	mov	r4,r17
 800d29c:	b00b883a 	mov	r5,r22
 800d2a0:	102b883a 	mov	r21,r2
 800d2a4:	800d7540 	call	800d754 <__udivsi3>
 800d2a8:	a806943a 	slli	r3,r21,16
 800d2ac:	a008d43a 	srli	r4,r20,16
 800d2b0:	1405383a 	mul	r2,r2,r16
 800d2b4:	190cb03a 	or	r6,r3,r4
 800d2b8:	3080032e 	bgeu	r6,r2,800d2c8 <__umoddi3+0x220>
 800d2bc:	34cd883a 	add	r6,r6,r19
 800d2c0:	34c00136 	bltu	r6,r19,800d2c8 <__umoddi3+0x220>
 800d2c4:	3080d436 	bltu	r6,r2,800d618 <__umoddi3+0x570>
 800d2c8:	30abc83a 	sub	r21,r6,r2
 800d2cc:	a809883a 	mov	r4,r21
 800d2d0:	b00b883a 	mov	r5,r22
 800d2d4:	800d75c0 	call	800d75c <__umodsi3>
 800d2d8:	1023883a 	mov	r17,r2
 800d2dc:	a809883a 	mov	r4,r21
 800d2e0:	b00b883a 	mov	r5,r22
 800d2e4:	800d7540 	call	800d754 <__udivsi3>
 800d2e8:	8822943a 	slli	r17,r17,16
 800d2ec:	1405383a 	mul	r2,r2,r16
 800d2f0:	a13fffcc 	andi	r4,r20,65535
 800d2f4:	8906b03a 	or	r3,r17,r4
 800d2f8:	1880042e 	bgeu	r3,r2,800d30c <__umoddi3+0x264>
 800d2fc:	1cc7883a 	add	r3,r3,r19
 800d300:	1cc00236 	bltu	r3,r19,800d30c <__umoddi3+0x264>
 800d304:	1880012e 	bgeu	r3,r2,800d30c <__umoddi3+0x264>
 800d308:	1cc7883a 	add	r3,r3,r19
 800d30c:	1887c83a 	sub	r3,r3,r2
 800d310:	1c84d83a 	srl	r2,r3,r18
 800d314:	0007883a 	mov	r3,zero
 800d318:	00000206 	br	800d324 <__umoddi3+0x27c>
 800d31c:	2005883a 	mov	r2,r4
 800d320:	2807883a 	mov	r3,r5
 800d324:	dfc00b17 	ldw	ra,44(sp)
 800d328:	df000a17 	ldw	fp,40(sp)
 800d32c:	ddc00917 	ldw	r23,36(sp)
 800d330:	dd800817 	ldw	r22,32(sp)
 800d334:	dd400717 	ldw	r21,28(sp)
 800d338:	dd000617 	ldw	r20,24(sp)
 800d33c:	dcc00517 	ldw	r19,20(sp)
 800d340:	dc800417 	ldw	r18,16(sp)
 800d344:	dc400317 	ldw	r17,12(sp)
 800d348:	dc000217 	ldw	r16,8(sp)
 800d34c:	dec00c04 	addi	sp,sp,48
 800d350:	f800283a 	ret
 800d354:	00803fc4 	movi	r2,255
 800d358:	11c0952e 	bgeu	r2,r7,800d5b0 <__umoddi3+0x508>
 800d35c:	01400204 	movi	r5,8
 800d360:	282b883a 	mov	r21,r5
 800d364:	003f9f06 	br	800d1e4 <__alt_data_end+0xfc00d1e4>
 800d368:	00804034 	movhi	r2,256
 800d36c:	10bfffc4 	addi	r2,r2,-1
 800d370:	1180952e 	bgeu	r2,r6,800d5c8 <__umoddi3+0x520>
 800d374:	01400604 	movi	r5,24
 800d378:	2805883a 	mov	r2,r5
 800d37c:	003f6206 	br	800d108 <__alt_data_end+0xfc00d108>
 800d380:	00803fc4 	movi	r2,255
 800d384:	14c0932e 	bgeu	r2,r19,800d5d4 <__umoddi3+0x52c>
 800d388:	00800204 	movi	r2,8
 800d38c:	1007883a 	mov	r3,r2
 800d390:	003fb106 	br	800d258 <__alt_data_end+0xfc00d258>
 800d394:	3548d83a 	srl	r4,r6,r21
 800d398:	3d0e983a 	sll	r7,r7,r20
 800d39c:	8d10983a 	sll	r8,r17,r20
 800d3a0:	8d6cd83a 	srl	r22,r17,r21
 800d3a4:	3922b03a 	or	r17,r7,r4
 800d3a8:	882ed43a 	srli	r23,r17,16
 800d3ac:	8564d83a 	srl	r18,r16,r21
 800d3b0:	b009883a 	mov	r4,r22
 800d3b4:	b80b883a 	mov	r5,r23
 800d3b8:	44a4b03a 	or	r18,r8,r18
 800d3bc:	3526983a 	sll	r19,r6,r20
 800d3c0:	800d75c0 	call	800d75c <__umodsi3>
 800d3c4:	b009883a 	mov	r4,r22
 800d3c8:	b80b883a 	mov	r5,r23
 800d3cc:	1039883a 	mov	fp,r2
 800d3d0:	800d7540 	call	800d754 <__udivsi3>
 800d3d4:	102d883a 	mov	r22,r2
 800d3d8:	8a3fffcc 	andi	r8,r17,65535
 800d3dc:	e004943a 	slli	r2,fp,16
 800d3e0:	900cd43a 	srli	r6,r18,16
 800d3e4:	b239383a 	mul	fp,r22,r8
 800d3e8:	8520983a 	sll	r16,r16,r20
 800d3ec:	118ab03a 	or	r5,r2,r6
 800d3f0:	2f00042e 	bgeu	r5,fp,800d404 <__umoddi3+0x35c>
 800d3f4:	2c4b883a 	add	r5,r5,r17
 800d3f8:	b0bfffc4 	addi	r2,r22,-1
 800d3fc:	2c40822e 	bgeu	r5,r17,800d608 <__umoddi3+0x560>
 800d400:	102d883a 	mov	r22,r2
 800d404:	2f39c83a 	sub	fp,r5,fp
 800d408:	e009883a 	mov	r4,fp
 800d40c:	b80b883a 	mov	r5,r23
 800d410:	da000115 	stw	r8,4(sp)
 800d414:	800d75c0 	call	800d75c <__umodsi3>
 800d418:	e009883a 	mov	r4,fp
 800d41c:	b80b883a 	mov	r5,r23
 800d420:	d8800015 	stw	r2,0(sp)
 800d424:	800d7540 	call	800d754 <__udivsi3>
 800d428:	d9800017 	ldw	r6,0(sp)
 800d42c:	da000117 	ldw	r8,4(sp)
 800d430:	94bfffcc 	andi	r18,r18,65535
 800d434:	300c943a 	slli	r6,r6,16
 800d438:	1209383a 	mul	r4,r2,r8
 800d43c:	3490b03a 	or	r8,r6,r18
 800d440:	4100042e 	bgeu	r8,r4,800d454 <__umoddi3+0x3ac>
 800d444:	4451883a 	add	r8,r8,r17
 800d448:	10ffffc4 	addi	r3,r2,-1
 800d44c:	44406a2e 	bgeu	r8,r17,800d5f8 <__umoddi3+0x550>
 800d450:	1805883a 	mov	r2,r3
 800d454:	b012943a 	slli	r9,r22,16
 800d458:	9abfffcc 	andi	r10,r19,65535
 800d45c:	980ed43a 	srli	r7,r19,16
 800d460:	124ab03a 	or	r5,r2,r9
 800d464:	2a7fffcc 	andi	r9,r5,65535
 800d468:	280ad43a 	srli	r5,r5,16
 800d46c:	4a8d383a 	mul	r6,r9,r10
 800d470:	49d3383a 	mul	r9,r9,r7
 800d474:	2a95383a 	mul	r10,r5,r10
 800d478:	3004d43a 	srli	r2,r6,16
 800d47c:	4111c83a 	sub	r8,r8,r4
 800d480:	5253883a 	add	r9,r10,r9
 800d484:	4893883a 	add	r9,r9,r2
 800d488:	29cb383a 	mul	r5,r5,r7
 800d48c:	4a80022e 	bgeu	r9,r10,800d498 <__umoddi3+0x3f0>
 800d490:	00800074 	movhi	r2,1
 800d494:	288b883a 	add	r5,r5,r2
 800d498:	4808d43a 	srli	r4,r9,16
 800d49c:	4812943a 	slli	r9,r9,16
 800d4a0:	31bfffcc 	andi	r6,r6,65535
 800d4a4:	290b883a 	add	r5,r5,r4
 800d4a8:	498d883a 	add	r6,r9,r6
 800d4ac:	41403a36 	bltu	r8,r5,800d598 <__umoddi3+0x4f0>
 800d4b0:	41405d26 	beq	r8,r5,800d628 <__umoddi3+0x580>
 800d4b4:	4149c83a 	sub	r4,r8,r5
 800d4b8:	300f883a 	mov	r7,r6
 800d4bc:	81cfc83a 	sub	r7,r16,r7
 800d4c0:	81c7803a 	cmpltu	r3,r16,r7
 800d4c4:	20c7c83a 	sub	r3,r4,r3
 800d4c8:	1d44983a 	sll	r2,r3,r21
 800d4cc:	3d0ed83a 	srl	r7,r7,r20
 800d4d0:	1d06d83a 	srl	r3,r3,r20
 800d4d4:	11c4b03a 	or	r2,r2,r7
 800d4d8:	003f9206 	br	800d324 <__alt_data_end+0xfc00d324>
 800d4dc:	0025883a 	mov	r18,zero
 800d4e0:	003f1806 	br	800d144 <__alt_data_end+0xfc00d144>
 800d4e4:	98a6983a 	sll	r19,r19,r2
 800d4e8:	88e8d83a 	srl	r20,r17,r3
 800d4ec:	80c6d83a 	srl	r3,r16,r3
 800d4f0:	982cd43a 	srli	r22,r19,16
 800d4f4:	88a2983a 	sll	r17,r17,r2
 800d4f8:	a009883a 	mov	r4,r20
 800d4fc:	b00b883a 	mov	r5,r22
 800d500:	88eab03a 	or	r21,r17,r3
 800d504:	1025883a 	mov	r18,r2
 800d508:	800d75c0 	call	800d75c <__umodsi3>
 800d50c:	a009883a 	mov	r4,r20
 800d510:	b00b883a 	mov	r5,r22
 800d514:	1023883a 	mov	r17,r2
 800d518:	800d7540 	call	800d754 <__udivsi3>
 800d51c:	9f3fffcc 	andi	fp,r19,65535
 800d520:	8822943a 	slli	r17,r17,16
 800d524:	a80ad43a 	srli	r5,r21,16
 800d528:	1705383a 	mul	r2,r2,fp
 800d52c:	84a8983a 	sll	r20,r16,r18
 800d530:	8948b03a 	or	r4,r17,r5
 800d534:	2080042e 	bgeu	r4,r2,800d548 <__umoddi3+0x4a0>
 800d538:	24c9883a 	add	r4,r4,r19
 800d53c:	24c00236 	bltu	r4,r19,800d548 <__umoddi3+0x4a0>
 800d540:	2080012e 	bgeu	r4,r2,800d548 <__umoddi3+0x4a0>
 800d544:	24c9883a 	add	r4,r4,r19
 800d548:	20afc83a 	sub	r23,r4,r2
 800d54c:	b809883a 	mov	r4,r23
 800d550:	b00b883a 	mov	r5,r22
 800d554:	800d75c0 	call	800d75c <__umodsi3>
 800d558:	1023883a 	mov	r17,r2
 800d55c:	b809883a 	mov	r4,r23
 800d560:	b00b883a 	mov	r5,r22
 800d564:	800d7540 	call	800d754 <__udivsi3>
 800d568:	8822943a 	slli	r17,r17,16
 800d56c:	1705383a 	mul	r2,r2,fp
 800d570:	a93fffcc 	andi	r4,r21,65535
 800d574:	8908b03a 	or	r4,r17,r4
 800d578:	2080042e 	bgeu	r4,r2,800d58c <__umoddi3+0x4e4>
 800d57c:	24c9883a 	add	r4,r4,r19
 800d580:	24c00236 	bltu	r4,r19,800d58c <__umoddi3+0x4e4>
 800d584:	2080012e 	bgeu	r4,r2,800d58c <__umoddi3+0x4e4>
 800d588:	24c9883a 	add	r4,r4,r19
 800d58c:	20a3c83a 	sub	r17,r4,r2
 800d590:	e021883a 	mov	r16,fp
 800d594:	003f3d06 	br	800d28c <__alt_data_end+0xfc00d28c>
 800d598:	34cfc83a 	sub	r7,r6,r19
 800d59c:	2c4bc83a 	sub	r5,r5,r17
 800d5a0:	31cd803a 	cmpltu	r6,r6,r7
 800d5a4:	298dc83a 	sub	r6,r5,r6
 800d5a8:	4189c83a 	sub	r4,r8,r6
 800d5ac:	003fc306 	br	800d4bc <__alt_data_end+0xfc00d4bc>
 800d5b0:	000b883a 	mov	r5,zero
 800d5b4:	002b883a 	mov	r21,zero
 800d5b8:	003f0a06 	br	800d1e4 <__alt_data_end+0xfc00d1e4>
 800d5bc:	01400404 	movi	r5,16
 800d5c0:	282b883a 	mov	r21,r5
 800d5c4:	003f0706 	br	800d1e4 <__alt_data_end+0xfc00d1e4>
 800d5c8:	01400404 	movi	r5,16
 800d5cc:	2805883a 	mov	r2,r5
 800d5d0:	003ecd06 	br	800d108 <__alt_data_end+0xfc00d108>
 800d5d4:	0005883a 	mov	r2,zero
 800d5d8:	0007883a 	mov	r3,zero
 800d5dc:	003f1e06 	br	800d258 <__alt_data_end+0xfc00d258>
 800d5e0:	00800404 	movi	r2,16
 800d5e4:	1007883a 	mov	r3,r2
 800d5e8:	003f1b06 	br	800d258 <__alt_data_end+0xfc00d258>
 800d5ec:	000b883a 	mov	r5,zero
 800d5f0:	0005883a 	mov	r2,zero
 800d5f4:	003ec406 	br	800d108 <__alt_data_end+0xfc00d108>
 800d5f8:	413f952e 	bgeu	r8,r4,800d450 <__alt_data_end+0xfc00d450>
 800d5fc:	10bfff84 	addi	r2,r2,-2
 800d600:	4451883a 	add	r8,r8,r17
 800d604:	003f9306 	br	800d454 <__alt_data_end+0xfc00d454>
 800d608:	2f3f7d2e 	bgeu	r5,fp,800d400 <__alt_data_end+0xfc00d400>
 800d60c:	b5bfff84 	addi	r22,r22,-2
 800d610:	2c4b883a 	add	r5,r5,r17
 800d614:	003f7b06 	br	800d404 <__alt_data_end+0xfc00d404>
 800d618:	34cd883a 	add	r6,r6,r19
 800d61c:	003f2a06 	br	800d2c8 <__alt_data_end+0xfc00d2c8>
 800d620:	8005883a 	mov	r2,r16
 800d624:	003efe06 	br	800d220 <__alt_data_end+0xfc00d220>
 800d628:	81bfdb36 	bltu	r16,r6,800d598 <__alt_data_end+0xfc00d598>
 800d62c:	300f883a 	mov	r7,r6
 800d630:	0009883a 	mov	r4,zero
 800d634:	003fa106 	br	800d4bc <__alt_data_end+0xfc00d4bc>

0800d638 <udivmodsi4>:
 800d638:	2900182e 	bgeu	r5,r4,800d69c <udivmodsi4+0x64>
 800d63c:	28001716 	blt	r5,zero,800d69c <udivmodsi4+0x64>
 800d640:	00800804 	movi	r2,32
 800d644:	00c00044 	movi	r3,1
 800d648:	00000206 	br	800d654 <udivmodsi4+0x1c>
 800d64c:	10001126 	beq	r2,zero,800d694 <udivmodsi4+0x5c>
 800d650:	28000516 	blt	r5,zero,800d668 <udivmodsi4+0x30>
 800d654:	294b883a 	add	r5,r5,r5
 800d658:	10bfffc4 	addi	r2,r2,-1
 800d65c:	18c7883a 	add	r3,r3,r3
 800d660:	293ffa36 	bltu	r5,r4,800d64c <__alt_data_end+0xfc00d64c>
 800d664:	18000b26 	beq	r3,zero,800d694 <udivmodsi4+0x5c>
 800d668:	0005883a 	mov	r2,zero
 800d66c:	21400236 	bltu	r4,r5,800d678 <udivmodsi4+0x40>
 800d670:	2149c83a 	sub	r4,r4,r5
 800d674:	10c4b03a 	or	r2,r2,r3
 800d678:	1806d07a 	srli	r3,r3,1
 800d67c:	280ad07a 	srli	r5,r5,1
 800d680:	183ffa1e 	bne	r3,zero,800d66c <__alt_data_end+0xfc00d66c>
 800d684:	3000011e 	bne	r6,zero,800d68c <udivmodsi4+0x54>
 800d688:	f800283a 	ret
 800d68c:	2005883a 	mov	r2,r4
 800d690:	f800283a 	ret
 800d694:	0005883a 	mov	r2,zero
 800d698:	003ffa06 	br	800d684 <__alt_data_end+0xfc00d684>
 800d69c:	00c00044 	movi	r3,1
 800d6a0:	003ff106 	br	800d668 <__alt_data_end+0xfc00d668>

0800d6a4 <__divsi3>:
 800d6a4:	defffe04 	addi	sp,sp,-8
 800d6a8:	dfc00115 	stw	ra,4(sp)
 800d6ac:	dc000015 	stw	r16,0(sp)
 800d6b0:	20000b16 	blt	r4,zero,800d6e0 <__divsi3+0x3c>
 800d6b4:	0021883a 	mov	r16,zero
 800d6b8:	28000c16 	blt	r5,zero,800d6ec <__divsi3+0x48>
 800d6bc:	000d883a 	mov	r6,zero
 800d6c0:	800d6380 	call	800d638 <udivmodsi4>
 800d6c4:	0407c83a 	sub	r3,zero,r16
 800d6c8:	1884f03a 	xor	r2,r3,r2
 800d6cc:	1405883a 	add	r2,r2,r16
 800d6d0:	dfc00117 	ldw	ra,4(sp)
 800d6d4:	dc000017 	ldw	r16,0(sp)
 800d6d8:	dec00204 	addi	sp,sp,8
 800d6dc:	f800283a 	ret
 800d6e0:	0109c83a 	sub	r4,zero,r4
 800d6e4:	04000044 	movi	r16,1
 800d6e8:	283ff40e 	bge	r5,zero,800d6bc <__alt_data_end+0xfc00d6bc>
 800d6ec:	014bc83a 	sub	r5,zero,r5
 800d6f0:	8400005c 	xori	r16,r16,1
 800d6f4:	003ff106 	br	800d6bc <__alt_data_end+0xfc00d6bc>

0800d6f8 <__modsi3>:
 800d6f8:	defffd04 	addi	sp,sp,-12
 800d6fc:	dfc00215 	stw	ra,8(sp)
 800d700:	dc400115 	stw	r17,4(sp)
 800d704:	dc000015 	stw	r16,0(sp)
 800d708:	20000c16 	blt	r4,zero,800d73c <__modsi3+0x44>
 800d70c:	0023883a 	mov	r17,zero
 800d710:	0021883a 	mov	r16,zero
 800d714:	28000d16 	blt	r5,zero,800d74c <__modsi3+0x54>
 800d718:	01800044 	movi	r6,1
 800d71c:	800d6380 	call	800d638 <udivmodsi4>
 800d720:	1404f03a 	xor	r2,r2,r16
 800d724:	8885883a 	add	r2,r17,r2
 800d728:	dfc00217 	ldw	ra,8(sp)
 800d72c:	dc400117 	ldw	r17,4(sp)
 800d730:	dc000017 	ldw	r16,0(sp)
 800d734:	dec00304 	addi	sp,sp,12
 800d738:	f800283a 	ret
 800d73c:	0109c83a 	sub	r4,zero,r4
 800d740:	04400044 	movi	r17,1
 800d744:	043fffc4 	movi	r16,-1
 800d748:	283ff30e 	bge	r5,zero,800d718 <__alt_data_end+0xfc00d718>
 800d74c:	014bc83a 	sub	r5,zero,r5
 800d750:	003ff106 	br	800d718 <__alt_data_end+0xfc00d718>

0800d754 <__udivsi3>:
 800d754:	000d883a 	mov	r6,zero
 800d758:	800d6381 	jmpi	800d638 <udivmodsi4>

0800d75c <__umodsi3>:
 800d75c:	01800044 	movi	r6,1
 800d760:	800d6381 	jmpi	800d638 <udivmodsi4>

0800d764 <__adddf3>:
 800d764:	02000434 	movhi	r8,16
 800d768:	423fffc4 	addi	r8,r8,-1
 800d76c:	defffb04 	addi	sp,sp,-20
 800d770:	2a12703a 	and	r9,r5,r8
 800d774:	2806d7fa 	srli	r3,r5,31
 800d778:	3a10703a 	and	r8,r7,r8
 800d77c:	3804d53a 	srli	r2,r7,20
 800d780:	3014d77a 	srli	r10,r6,29
 800d784:	dc000015 	stw	r16,0(sp)
 800d788:	481290fa 	slli	r9,r9,3
 800d78c:	2820d53a 	srli	r16,r5,20
 800d790:	401090fa 	slli	r8,r8,3
 800d794:	200ad77a 	srli	r5,r4,29
 800d798:	380ed7fa 	srli	r7,r7,31
 800d79c:	dc800215 	stw	r18,8(sp)
 800d7a0:	dc400115 	stw	r17,4(sp)
 800d7a4:	dfc00415 	stw	ra,16(sp)
 800d7a8:	dcc00315 	stw	r19,12(sp)
 800d7ac:	1c803fcc 	andi	r18,r3,255
 800d7b0:	8401ffcc 	andi	r16,r16,2047
 800d7b4:	494ab03a 	or	r5,r9,r5
 800d7b8:	202290fa 	slli	r17,r4,3
 800d7bc:	1081ffcc 	andi	r2,r2,2047
 800d7c0:	4290b03a 	or	r8,r8,r10
 800d7c4:	300c90fa 	slli	r6,r6,3
 800d7c8:	91c07026 	beq	r18,r7,800d98c <__adddf3+0x228>
 800d7cc:	8087c83a 	sub	r3,r16,r2
 800d7d0:	00c0b30e 	bge	zero,r3,800daa0 <__adddf3+0x33c>
 800d7d4:	10002a1e 	bne	r2,zero,800d880 <__adddf3+0x11c>
 800d7d8:	4184b03a 	or	r2,r8,r6
 800d7dc:	1000991e 	bne	r2,zero,800da44 <__adddf3+0x2e0>
 800d7e0:	888001cc 	andi	r2,r17,7
 800d7e4:	10005b26 	beq	r2,zero,800d954 <__adddf3+0x1f0>
 800d7e8:	88c003cc 	andi	r3,r17,15
 800d7ec:	00800104 	movi	r2,4
 800d7f0:	18805826 	beq	r3,r2,800d954 <__adddf3+0x1f0>
 800d7f4:	89800104 	addi	r6,r17,4
 800d7f8:	3463803a 	cmpltu	r17,r6,r17
 800d7fc:	2c4b883a 	add	r5,r5,r17
 800d800:	2880202c 	andhi	r2,r5,128
 800d804:	9007883a 	mov	r3,r18
 800d808:	3023883a 	mov	r17,r6
 800d80c:	10005426 	beq	r2,zero,800d960 <__adddf3+0x1fc>
 800d810:	84000044 	addi	r16,r16,1
 800d814:	0081ffc4 	movi	r2,2047
 800d818:	8080c126 	beq	r16,r2,800db20 <__adddf3+0x3bc>
 800d81c:	013fe034 	movhi	r4,65408
 800d820:	213fffc4 	addi	r4,r4,-1
 800d824:	290a703a 	and	r5,r5,r4
 800d828:	2804977a 	slli	r2,r5,29
 800d82c:	280a927a 	slli	r5,r5,9
 800d830:	8822d0fa 	srli	r17,r17,3
 800d834:	8401ffcc 	andi	r16,r16,2047
 800d838:	2808d33a 	srli	r4,r5,12
 800d83c:	1444b03a 	or	r2,r2,r17
 800d840:	8401ffcc 	andi	r16,r16,2047
 800d844:	800a953a 	slli	r5,r16,20
 800d848:	18c03fcc 	andi	r3,r3,255
 800d84c:	04000434 	movhi	r16,16
 800d850:	180697fa 	slli	r3,r3,31
 800d854:	843fffc4 	addi	r16,r16,-1
 800d858:	2420703a 	and	r16,r4,r16
 800d85c:	8160b03a 	or	r16,r16,r5
 800d860:	80c6b03a 	or	r3,r16,r3
 800d864:	dfc00417 	ldw	ra,16(sp)
 800d868:	dcc00317 	ldw	r19,12(sp)
 800d86c:	dc800217 	ldw	r18,8(sp)
 800d870:	dc400117 	ldw	r17,4(sp)
 800d874:	dc000017 	ldw	r16,0(sp)
 800d878:	dec00504 	addi	sp,sp,20
 800d87c:	f800283a 	ret
 800d880:	0081ffc4 	movi	r2,2047
 800d884:	80bfd626 	beq	r16,r2,800d7e0 <__alt_data_end+0xfc00d7e0>
 800d888:	42002034 	orhi	r8,r8,128
 800d88c:	00800e04 	movi	r2,56
 800d890:	10c0a616 	blt	r2,r3,800db2c <__adddf3+0x3c8>
 800d894:	008007c4 	movi	r2,31
 800d898:	10c0c916 	blt	r2,r3,800dbc0 <__adddf3+0x45c>
 800d89c:	00800804 	movi	r2,32
 800d8a0:	10c5c83a 	sub	r2,r2,r3
 800d8a4:	408e983a 	sll	r7,r8,r2
 800d8a8:	30c8d83a 	srl	r4,r6,r3
 800d8ac:	3084983a 	sll	r2,r6,r2
 800d8b0:	40c6d83a 	srl	r3,r8,r3
 800d8b4:	390cb03a 	or	r6,r7,r4
 800d8b8:	1004c03a 	cmpne	r2,r2,zero
 800d8bc:	308cb03a 	or	r6,r6,r2
 800d8c0:	898dc83a 	sub	r6,r17,r6
 800d8c4:	89a3803a 	cmpltu	r17,r17,r6
 800d8c8:	28cbc83a 	sub	r5,r5,r3
 800d8cc:	2c4bc83a 	sub	r5,r5,r17
 800d8d0:	3023883a 	mov	r17,r6
 800d8d4:	2880202c 	andhi	r2,r5,128
 800d8d8:	10006d26 	beq	r2,zero,800da90 <__adddf3+0x32c>
 800d8dc:	04c02034 	movhi	r19,128
 800d8e0:	9cffffc4 	addi	r19,r19,-1
 800d8e4:	2ce6703a 	and	r19,r5,r19
 800d8e8:	98007e26 	beq	r19,zero,800dae4 <__adddf3+0x380>
 800d8ec:	9809883a 	mov	r4,r19
 800d8f0:	800fd000 	call	800fd00 <__clzsi2>
 800d8f4:	10fffe04 	addi	r3,r2,-8
 800d8f8:	010007c4 	movi	r4,31
 800d8fc:	20c07f16 	blt	r4,r3,800dafc <__adddf3+0x398>
 800d900:	01400a04 	movi	r5,40
 800d904:	2885c83a 	sub	r2,r5,r2
 800d908:	888ad83a 	srl	r5,r17,r2
 800d90c:	98e6983a 	sll	r19,r19,r3
 800d910:	88e2983a 	sll	r17,r17,r3
 800d914:	2ce6b03a 	or	r19,r5,r19
 800d918:	1c007c16 	blt	r3,r16,800db0c <__adddf3+0x3a8>
 800d91c:	1c21c83a 	sub	r16,r3,r16
 800d920:	81400044 	addi	r5,r16,1
 800d924:	00c007c4 	movi	r3,31
 800d928:	19409816 	blt	r3,r5,800db8c <__adddf3+0x428>
 800d92c:	1c21c83a 	sub	r16,r3,r16
 800d930:	8c08983a 	sll	r4,r17,r16
 800d934:	8946d83a 	srl	r3,r17,r5
 800d938:	9c20983a 	sll	r16,r19,r16
 800d93c:	2008c03a 	cmpne	r4,r4,zero
 800d940:	994ad83a 	srl	r5,r19,r5
 800d944:	1c06b03a 	or	r3,r3,r16
 800d948:	1922b03a 	or	r17,r3,r4
 800d94c:	0021883a 	mov	r16,zero
 800d950:	003fa306 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800d954:	2880202c 	andhi	r2,r5,128
 800d958:	9007883a 	mov	r3,r18
 800d95c:	103fac1e 	bne	r2,zero,800d810 <__alt_data_end+0xfc00d810>
 800d960:	2804977a 	slli	r2,r5,29
 800d964:	8822d0fa 	srli	r17,r17,3
 800d968:	0101ffc4 	movi	r4,2047
 800d96c:	280ad0fa 	srli	r5,r5,3
 800d970:	1444b03a 	or	r2,r2,r17
 800d974:	81002c26 	beq	r16,r4,800da28 <__adddf3+0x2c4>
 800d978:	8120703a 	and	r16,r16,r4
 800d97c:	01000434 	movhi	r4,16
 800d980:	213fffc4 	addi	r4,r4,-1
 800d984:	2908703a 	and	r4,r5,r4
 800d988:	003fad06 	br	800d840 <__alt_data_end+0xfc00d840>
 800d98c:	8089c83a 	sub	r4,r16,r2
 800d990:	01006a0e 	bge	zero,r4,800db3c <__adddf3+0x3d8>
 800d994:	10003326 	beq	r2,zero,800da64 <__adddf3+0x300>
 800d998:	0081ffc4 	movi	r2,2047
 800d99c:	80bf9026 	beq	r16,r2,800d7e0 <__alt_data_end+0xfc00d7e0>
 800d9a0:	42002034 	orhi	r8,r8,128
 800d9a4:	00800e04 	movi	r2,56
 800d9a8:	1100b116 	blt	r2,r4,800dc70 <__adddf3+0x50c>
 800d9ac:	008007c4 	movi	r2,31
 800d9b0:	1100e216 	blt	r2,r4,800dd3c <__adddf3+0x5d8>
 800d9b4:	00800804 	movi	r2,32
 800d9b8:	1105c83a 	sub	r2,r2,r4
 800d9bc:	4092983a 	sll	r9,r8,r2
 800d9c0:	310ed83a 	srl	r7,r6,r4
 800d9c4:	3084983a 	sll	r2,r6,r2
 800d9c8:	4110d83a 	srl	r8,r8,r4
 800d9cc:	49ccb03a 	or	r6,r9,r7
 800d9d0:	1004c03a 	cmpne	r2,r2,zero
 800d9d4:	308cb03a 	or	r6,r6,r2
 800d9d8:	344d883a 	add	r6,r6,r17
 800d9dc:	3463803a 	cmpltu	r17,r6,r17
 800d9e0:	414b883a 	add	r5,r8,r5
 800d9e4:	2c4b883a 	add	r5,r5,r17
 800d9e8:	3023883a 	mov	r17,r6
 800d9ec:	2880202c 	andhi	r2,r5,128
 800d9f0:	10002726 	beq	r2,zero,800da90 <__adddf3+0x32c>
 800d9f4:	84000044 	addi	r16,r16,1
 800d9f8:	0081ffc4 	movi	r2,2047
 800d9fc:	8080ae26 	beq	r16,r2,800dcb8 <__adddf3+0x554>
 800da00:	00bfe034 	movhi	r2,65408
 800da04:	10bfffc4 	addi	r2,r2,-1
 800da08:	288a703a 	and	r5,r5,r2
 800da0c:	880cd07a 	srli	r6,r17,1
 800da10:	280897fa 	slli	r4,r5,31
 800da14:	88c0004c 	andi	r3,r17,1
 800da18:	30e2b03a 	or	r17,r6,r3
 800da1c:	280ad07a 	srli	r5,r5,1
 800da20:	8922b03a 	or	r17,r17,r4
 800da24:	003f6e06 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800da28:	1148b03a 	or	r4,r2,r5
 800da2c:	20003c26 	beq	r4,zero,800db20 <__adddf3+0x3bc>
 800da30:	29000234 	orhi	r4,r5,8
 800da34:	01400434 	movhi	r5,16
 800da38:	297fffc4 	addi	r5,r5,-1
 800da3c:	2148703a 	and	r4,r4,r5
 800da40:	003f7f06 	br	800d840 <__alt_data_end+0xfc00d840>
 800da44:	18ffffc4 	addi	r3,r3,-1
 800da48:	18004d1e 	bne	r3,zero,800db80 <__adddf3+0x41c>
 800da4c:	898dc83a 	sub	r6,r17,r6
 800da50:	89a3803a 	cmpltu	r17,r17,r6
 800da54:	2a0bc83a 	sub	r5,r5,r8
 800da58:	2c4bc83a 	sub	r5,r5,r17
 800da5c:	3023883a 	mov	r17,r6
 800da60:	003f9c06 	br	800d8d4 <__alt_data_end+0xfc00d8d4>
 800da64:	4184b03a 	or	r2,r8,r6
 800da68:	103f5d26 	beq	r2,zero,800d7e0 <__alt_data_end+0xfc00d7e0>
 800da6c:	213fffc4 	addi	r4,r4,-1
 800da70:	203fd926 	beq	r4,zero,800d9d8 <__alt_data_end+0xfc00d9d8>
 800da74:	0081ffc4 	movi	r2,2047
 800da78:	80bfca1e 	bne	r16,r2,800d9a4 <__alt_data_end+0xfc00d9a4>
 800da7c:	003f5806 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800da80:	10c8b03a 	or	r4,r2,r3
 800da84:	20008b26 	beq	r4,zero,800dcb4 <__adddf3+0x550>
 800da88:	100b883a 	mov	r5,r2
 800da8c:	1823883a 	mov	r17,r3
 800da90:	888001cc 	andi	r2,r17,7
 800da94:	103f541e 	bne	r2,zero,800d7e8 <__alt_data_end+0xfc00d7e8>
 800da98:	9007883a 	mov	r3,r18
 800da9c:	003fb006 	br	800d960 <__alt_data_end+0xfc00d960>
 800daa0:	1800531e 	bne	r3,zero,800dbf0 <__adddf3+0x48c>
 800daa4:	80800044 	addi	r2,r16,1
 800daa8:	1081ffcc 	andi	r2,r2,2047
 800daac:	00c00044 	movi	r3,1
 800dab0:	1880990e 	bge	r3,r2,800dd18 <__adddf3+0x5b4>
 800dab4:	8985c83a 	sub	r2,r17,r6
 800dab8:	8887803a 	cmpltu	r3,r17,r2
 800dabc:	2a27c83a 	sub	r19,r5,r8
 800dac0:	98e7c83a 	sub	r19,r19,r3
 800dac4:	98c0202c 	andhi	r3,r19,128
 800dac8:	18006226 	beq	r3,zero,800dc54 <__adddf3+0x4f0>
 800dacc:	3463c83a 	sub	r17,r6,r17
 800dad0:	4151c83a 	sub	r8,r8,r5
 800dad4:	344d803a 	cmpltu	r6,r6,r17
 800dad8:	41a7c83a 	sub	r19,r8,r6
 800dadc:	3825883a 	mov	r18,r7
 800dae0:	983f821e 	bne	r19,zero,800d8ec <__alt_data_end+0xfc00d8ec>
 800dae4:	8809883a 	mov	r4,r17
 800dae8:	800fd000 	call	800fd00 <__clzsi2>
 800daec:	10800804 	addi	r2,r2,32
 800daf0:	10fffe04 	addi	r3,r2,-8
 800daf4:	010007c4 	movi	r4,31
 800daf8:	20ff810e 	bge	r4,r3,800d900 <__alt_data_end+0xfc00d900>
 800dafc:	14fff604 	addi	r19,r2,-40
 800db00:	8ce6983a 	sll	r19,r17,r19
 800db04:	0023883a 	mov	r17,zero
 800db08:	1c3f840e 	bge	r3,r16,800d91c <__alt_data_end+0xfc00d91c>
 800db0c:	017fe034 	movhi	r5,65408
 800db10:	297fffc4 	addi	r5,r5,-1
 800db14:	80e1c83a 	sub	r16,r16,r3
 800db18:	994a703a 	and	r5,r19,r5
 800db1c:	003f3006 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800db20:	0009883a 	mov	r4,zero
 800db24:	0005883a 	mov	r2,zero
 800db28:	003f4506 	br	800d840 <__alt_data_end+0xfc00d840>
 800db2c:	418cb03a 	or	r6,r8,r6
 800db30:	300cc03a 	cmpne	r6,r6,zero
 800db34:	0007883a 	mov	r3,zero
 800db38:	003f6106 	br	800d8c0 <__alt_data_end+0xfc00d8c0>
 800db3c:	2000921e 	bne	r4,zero,800dd88 <__adddf3+0x624>
 800db40:	80800044 	addi	r2,r16,1
 800db44:	11c1ffcc 	andi	r7,r2,2047
 800db48:	01000044 	movi	r4,1
 800db4c:	21c0610e 	bge	r4,r7,800dcd4 <__adddf3+0x570>
 800db50:	0101ffc4 	movi	r4,2047
 800db54:	1100a326 	beq	r2,r4,800dde4 <__adddf3+0x680>
 800db58:	344d883a 	add	r6,r6,r17
 800db5c:	3463803a 	cmpltu	r17,r6,r17
 800db60:	414b883a 	add	r5,r8,r5
 800db64:	2c4b883a 	add	r5,r5,r17
 800db68:	282297fa 	slli	r17,r5,31
 800db6c:	300cd07a 	srli	r6,r6,1
 800db70:	280ad07a 	srli	r5,r5,1
 800db74:	1021883a 	mov	r16,r2
 800db78:	89a2b03a 	or	r17,r17,r6
 800db7c:	003f1806 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800db80:	0081ffc4 	movi	r2,2047
 800db84:	80bf411e 	bne	r16,r2,800d88c <__alt_data_end+0xfc00d88c>
 800db88:	003f1506 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800db8c:	80bff844 	addi	r2,r16,-31
 800db90:	00c00804 	movi	r3,32
 800db94:	9884d83a 	srl	r2,r19,r2
 800db98:	28c04a26 	beq	r5,r3,800dcc4 <__adddf3+0x560>
 800db9c:	00c00fc4 	movi	r3,63
 800dba0:	1c21c83a 	sub	r16,r3,r16
 800dba4:	9c26983a 	sll	r19,r19,r16
 800dba8:	9c62b03a 	or	r17,r19,r17
 800dbac:	8822c03a 	cmpne	r17,r17,zero
 800dbb0:	88a2b03a 	or	r17,r17,r2
 800dbb4:	000b883a 	mov	r5,zero
 800dbb8:	0021883a 	mov	r16,zero
 800dbbc:	003fb406 	br	800da90 <__alt_data_end+0xfc00da90>
 800dbc0:	18bff804 	addi	r2,r3,-32
 800dbc4:	01000804 	movi	r4,32
 800dbc8:	4084d83a 	srl	r2,r8,r2
 800dbcc:	19003f26 	beq	r3,r4,800dccc <__adddf3+0x568>
 800dbd0:	01001004 	movi	r4,64
 800dbd4:	20c7c83a 	sub	r3,r4,r3
 800dbd8:	40d0983a 	sll	r8,r8,r3
 800dbdc:	418cb03a 	or	r6,r8,r6
 800dbe0:	300cc03a 	cmpne	r6,r6,zero
 800dbe4:	308cb03a 	or	r6,r6,r2
 800dbe8:	0007883a 	mov	r3,zero
 800dbec:	003f3406 	br	800d8c0 <__alt_data_end+0xfc00d8c0>
 800dbf0:	80002326 	beq	r16,zero,800dc80 <__adddf3+0x51c>
 800dbf4:	0101ffc4 	movi	r4,2047
 800dbf8:	11005e26 	beq	r2,r4,800dd74 <__adddf3+0x610>
 800dbfc:	00c7c83a 	sub	r3,zero,r3
 800dc00:	29402034 	orhi	r5,r5,128
 800dc04:	01000e04 	movi	r4,56
 800dc08:	20c07216 	blt	r4,r3,800ddd4 <__adddf3+0x670>
 800dc0c:	010007c4 	movi	r4,31
 800dc10:	20c0ce16 	blt	r4,r3,800df4c <__adddf3+0x7e8>
 800dc14:	01000804 	movi	r4,32
 800dc18:	20c9c83a 	sub	r4,r4,r3
 800dc1c:	2914983a 	sll	r10,r5,r4
 800dc20:	88d2d83a 	srl	r9,r17,r3
 800dc24:	8908983a 	sll	r4,r17,r4
 800dc28:	28c6d83a 	srl	r3,r5,r3
 800dc2c:	5262b03a 	or	r17,r10,r9
 800dc30:	2008c03a 	cmpne	r4,r4,zero
 800dc34:	8922b03a 	or	r17,r17,r4
 800dc38:	3463c83a 	sub	r17,r6,r17
 800dc3c:	40c7c83a 	sub	r3,r8,r3
 800dc40:	344d803a 	cmpltu	r6,r6,r17
 800dc44:	198bc83a 	sub	r5,r3,r6
 800dc48:	1021883a 	mov	r16,r2
 800dc4c:	3825883a 	mov	r18,r7
 800dc50:	003f2006 	br	800d8d4 <__alt_data_end+0xfc00d8d4>
 800dc54:	9886b03a 	or	r3,r19,r2
 800dc58:	1800141e 	bne	r3,zero,800dcac <__adddf3+0x548>
 800dc5c:	0007883a 	mov	r3,zero
 800dc60:	000b883a 	mov	r5,zero
 800dc64:	0023883a 	mov	r17,zero
 800dc68:	0021883a 	mov	r16,zero
 800dc6c:	003f3c06 	br	800d960 <__alt_data_end+0xfc00d960>
 800dc70:	418cb03a 	or	r6,r8,r6
 800dc74:	300cc03a 	cmpne	r6,r6,zero
 800dc78:	0011883a 	mov	r8,zero
 800dc7c:	003f5606 	br	800d9d8 <__alt_data_end+0xfc00d9d8>
 800dc80:	2c48b03a 	or	r4,r5,r17
 800dc84:	20003b26 	beq	r4,zero,800dd74 <__adddf3+0x610>
 800dc88:	00c6303a 	nor	r3,zero,r3
 800dc8c:	1800371e 	bne	r3,zero,800dd6c <__adddf3+0x608>
 800dc90:	3463c83a 	sub	r17,r6,r17
 800dc94:	414bc83a 	sub	r5,r8,r5
 800dc98:	344d803a 	cmpltu	r6,r6,r17
 800dc9c:	298bc83a 	sub	r5,r5,r6
 800dca0:	1021883a 	mov	r16,r2
 800dca4:	3825883a 	mov	r18,r7
 800dca8:	003f0a06 	br	800d8d4 <__alt_data_end+0xfc00d8d4>
 800dcac:	1023883a 	mov	r17,r2
 800dcb0:	003f0d06 	br	800d8e8 <__alt_data_end+0xfc00d8e8>
 800dcb4:	0007883a 	mov	r3,zero
 800dcb8:	000b883a 	mov	r5,zero
 800dcbc:	0023883a 	mov	r17,zero
 800dcc0:	003f2706 	br	800d960 <__alt_data_end+0xfc00d960>
 800dcc4:	0027883a 	mov	r19,zero
 800dcc8:	003fb706 	br	800dba8 <__alt_data_end+0xfc00dba8>
 800dccc:	0011883a 	mov	r8,zero
 800dcd0:	003fc206 	br	800dbdc <__alt_data_end+0xfc00dbdc>
 800dcd4:	2c44b03a 	or	r2,r5,r17
 800dcd8:	8000871e 	bne	r16,zero,800def8 <__adddf3+0x794>
 800dcdc:	1000b126 	beq	r2,zero,800dfa4 <__adddf3+0x840>
 800dce0:	4184b03a 	or	r2,r8,r6
 800dce4:	103ebe26 	beq	r2,zero,800d7e0 <__alt_data_end+0xfc00d7e0>
 800dce8:	3445883a 	add	r2,r6,r17
 800dcec:	1463803a 	cmpltu	r17,r2,r17
 800dcf0:	414b883a 	add	r5,r8,r5
 800dcf4:	2c4b883a 	add	r5,r5,r17
 800dcf8:	28c0202c 	andhi	r3,r5,128
 800dcfc:	1023883a 	mov	r17,r2
 800dd00:	183f6326 	beq	r3,zero,800da90 <__alt_data_end+0xfc00da90>
 800dd04:	00bfe034 	movhi	r2,65408
 800dd08:	10bfffc4 	addi	r2,r2,-1
 800dd0c:	2021883a 	mov	r16,r4
 800dd10:	288a703a 	and	r5,r5,r2
 800dd14:	003eb206 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800dd18:	2c44b03a 	or	r2,r5,r17
 800dd1c:	8000251e 	bne	r16,zero,800ddb4 <__adddf3+0x650>
 800dd20:	10004b1e 	bne	r2,zero,800de50 <__adddf3+0x6ec>
 800dd24:	4184b03a 	or	r2,r8,r6
 800dd28:	103fe226 	beq	r2,zero,800dcb4 <__alt_data_end+0xfc00dcb4>
 800dd2c:	400b883a 	mov	r5,r8
 800dd30:	3023883a 	mov	r17,r6
 800dd34:	3825883a 	mov	r18,r7
 800dd38:	003ea906 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800dd3c:	20bff804 	addi	r2,r4,-32
 800dd40:	01c00804 	movi	r7,32
 800dd44:	4084d83a 	srl	r2,r8,r2
 800dd48:	21c07e26 	beq	r4,r7,800df44 <__adddf3+0x7e0>
 800dd4c:	01c01004 	movi	r7,64
 800dd50:	3909c83a 	sub	r4,r7,r4
 800dd54:	4110983a 	sll	r8,r8,r4
 800dd58:	418cb03a 	or	r6,r8,r6
 800dd5c:	300cc03a 	cmpne	r6,r6,zero
 800dd60:	308cb03a 	or	r6,r6,r2
 800dd64:	0011883a 	mov	r8,zero
 800dd68:	003f1b06 	br	800d9d8 <__alt_data_end+0xfc00d9d8>
 800dd6c:	0101ffc4 	movi	r4,2047
 800dd70:	113fa41e 	bne	r2,r4,800dc04 <__alt_data_end+0xfc00dc04>
 800dd74:	400b883a 	mov	r5,r8
 800dd78:	3023883a 	mov	r17,r6
 800dd7c:	1021883a 	mov	r16,r2
 800dd80:	3825883a 	mov	r18,r7
 800dd84:	003e9606 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800dd88:	80001a1e 	bne	r16,zero,800ddf4 <__adddf3+0x690>
 800dd8c:	2c4eb03a 	or	r7,r5,r17
 800dd90:	38005526 	beq	r7,zero,800dee8 <__adddf3+0x784>
 800dd94:	0108303a 	nor	r4,zero,r4
 800dd98:	2000511e 	bne	r4,zero,800dee0 <__adddf3+0x77c>
 800dd9c:	89a3883a 	add	r17,r17,r6
 800dda0:	414b883a 	add	r5,r8,r5
 800dda4:	898d803a 	cmpltu	r6,r17,r6
 800dda8:	298b883a 	add	r5,r5,r6
 800ddac:	1021883a 	mov	r16,r2
 800ddb0:	003f0e06 	br	800d9ec <__alt_data_end+0xfc00d9ec>
 800ddb4:	1000341e 	bne	r2,zero,800de88 <__adddf3+0x724>
 800ddb8:	4184b03a 	or	r2,r8,r6
 800ddbc:	10006f26 	beq	r2,zero,800df7c <__adddf3+0x818>
 800ddc0:	400b883a 	mov	r5,r8
 800ddc4:	3023883a 	mov	r17,r6
 800ddc8:	3825883a 	mov	r18,r7
 800ddcc:	0401ffc4 	movi	r16,2047
 800ddd0:	003e8306 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800ddd4:	2c62b03a 	or	r17,r5,r17
 800ddd8:	8822c03a 	cmpne	r17,r17,zero
 800dddc:	0007883a 	mov	r3,zero
 800dde0:	003f9506 	br	800dc38 <__alt_data_end+0xfc00dc38>
 800dde4:	1021883a 	mov	r16,r2
 800dde8:	000b883a 	mov	r5,zero
 800ddec:	0023883a 	mov	r17,zero
 800ddf0:	003edb06 	br	800d960 <__alt_data_end+0xfc00d960>
 800ddf4:	01c1ffc4 	movi	r7,2047
 800ddf8:	11c03b26 	beq	r2,r7,800dee8 <__adddf3+0x784>
 800ddfc:	0109c83a 	sub	r4,zero,r4
 800de00:	29402034 	orhi	r5,r5,128
 800de04:	01c00e04 	movi	r7,56
 800de08:	39006216 	blt	r7,r4,800df94 <__adddf3+0x830>
 800de0c:	01c007c4 	movi	r7,31
 800de10:	39006b16 	blt	r7,r4,800dfc0 <__adddf3+0x85c>
 800de14:	01c00804 	movi	r7,32
 800de18:	390fc83a 	sub	r7,r7,r4
 800de1c:	29d4983a 	sll	r10,r5,r7
 800de20:	8912d83a 	srl	r9,r17,r4
 800de24:	89ce983a 	sll	r7,r17,r7
 800de28:	2908d83a 	srl	r4,r5,r4
 800de2c:	5262b03a 	or	r17,r10,r9
 800de30:	380ac03a 	cmpne	r5,r7,zero
 800de34:	8962b03a 	or	r17,r17,r5
 800de38:	89a3883a 	add	r17,r17,r6
 800de3c:	2211883a 	add	r8,r4,r8
 800de40:	898d803a 	cmpltu	r6,r17,r6
 800de44:	418b883a 	add	r5,r8,r6
 800de48:	1021883a 	mov	r16,r2
 800de4c:	003ee706 	br	800d9ec <__alt_data_end+0xfc00d9ec>
 800de50:	4184b03a 	or	r2,r8,r6
 800de54:	103e6226 	beq	r2,zero,800d7e0 <__alt_data_end+0xfc00d7e0>
 800de58:	8987c83a 	sub	r3,r17,r6
 800de5c:	88c9803a 	cmpltu	r4,r17,r3
 800de60:	2a05c83a 	sub	r2,r5,r8
 800de64:	1105c83a 	sub	r2,r2,r4
 800de68:	1100202c 	andhi	r4,r2,128
 800de6c:	203f0426 	beq	r4,zero,800da80 <__alt_data_end+0xfc00da80>
 800de70:	3463c83a 	sub	r17,r6,r17
 800de74:	414bc83a 	sub	r5,r8,r5
 800de78:	344d803a 	cmpltu	r6,r6,r17
 800de7c:	298bc83a 	sub	r5,r5,r6
 800de80:	3825883a 	mov	r18,r7
 800de84:	003e5606 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800de88:	4184b03a 	or	r2,r8,r6
 800de8c:	10002b26 	beq	r2,zero,800df3c <__adddf3+0x7d8>
 800de90:	2804d0fa 	srli	r2,r5,3
 800de94:	8822d0fa 	srli	r17,r17,3
 800de98:	280a977a 	slli	r5,r5,29
 800de9c:	10c0022c 	andhi	r3,r2,8
 800dea0:	2c62b03a 	or	r17,r5,r17
 800dea4:	18000826 	beq	r3,zero,800dec8 <__adddf3+0x764>
 800dea8:	4008d0fa 	srli	r4,r8,3
 800deac:	20c0022c 	andhi	r3,r4,8
 800deb0:	1800051e 	bne	r3,zero,800dec8 <__adddf3+0x764>
 800deb4:	300cd0fa 	srli	r6,r6,3
 800deb8:	4010977a 	slli	r8,r8,29
 800debc:	2005883a 	mov	r2,r4
 800dec0:	3825883a 	mov	r18,r7
 800dec4:	41a2b03a 	or	r17,r8,r6
 800dec8:	880ad77a 	srli	r5,r17,29
 800decc:	100490fa 	slli	r2,r2,3
 800ded0:	882290fa 	slli	r17,r17,3
 800ded4:	0401ffc4 	movi	r16,2047
 800ded8:	288ab03a 	or	r5,r5,r2
 800dedc:	003e4006 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800dee0:	01c1ffc4 	movi	r7,2047
 800dee4:	11ffc71e 	bne	r2,r7,800de04 <__alt_data_end+0xfc00de04>
 800dee8:	400b883a 	mov	r5,r8
 800deec:	3023883a 	mov	r17,r6
 800def0:	1021883a 	mov	r16,r2
 800def4:	003e3a06 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800def8:	10002d26 	beq	r2,zero,800dfb0 <__adddf3+0x84c>
 800defc:	4184b03a 	or	r2,r8,r6
 800df00:	10000e26 	beq	r2,zero,800df3c <__adddf3+0x7d8>
 800df04:	2804d0fa 	srli	r2,r5,3
 800df08:	8822d0fa 	srli	r17,r17,3
 800df0c:	280a977a 	slli	r5,r5,29
 800df10:	10c0022c 	andhi	r3,r2,8
 800df14:	2c62b03a 	or	r17,r5,r17
 800df18:	183feb26 	beq	r3,zero,800dec8 <__alt_data_end+0xfc00dec8>
 800df1c:	4008d0fa 	srli	r4,r8,3
 800df20:	20c0022c 	andhi	r3,r4,8
 800df24:	183fe81e 	bne	r3,zero,800dec8 <__alt_data_end+0xfc00dec8>
 800df28:	300cd0fa 	srli	r6,r6,3
 800df2c:	4010977a 	slli	r8,r8,29
 800df30:	2005883a 	mov	r2,r4
 800df34:	41a2b03a 	or	r17,r8,r6
 800df38:	003fe306 	br	800dec8 <__alt_data_end+0xfc00dec8>
 800df3c:	0401ffc4 	movi	r16,2047
 800df40:	003e2706 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800df44:	0011883a 	mov	r8,zero
 800df48:	003f8306 	br	800dd58 <__alt_data_end+0xfc00dd58>
 800df4c:	193ff804 	addi	r4,r3,-32
 800df50:	02400804 	movi	r9,32
 800df54:	2908d83a 	srl	r4,r5,r4
 800df58:	1a402526 	beq	r3,r9,800dff0 <__adddf3+0x88c>
 800df5c:	02401004 	movi	r9,64
 800df60:	48c7c83a 	sub	r3,r9,r3
 800df64:	28ca983a 	sll	r5,r5,r3
 800df68:	2c62b03a 	or	r17,r5,r17
 800df6c:	8822c03a 	cmpne	r17,r17,zero
 800df70:	8922b03a 	or	r17,r17,r4
 800df74:	0007883a 	mov	r3,zero
 800df78:	003f2f06 	br	800dc38 <__alt_data_end+0xfc00dc38>
 800df7c:	01402034 	movhi	r5,128
 800df80:	0007883a 	mov	r3,zero
 800df84:	297fffc4 	addi	r5,r5,-1
 800df88:	047ffe04 	movi	r17,-8
 800df8c:	0401ffc4 	movi	r16,2047
 800df90:	003e7306 	br	800d960 <__alt_data_end+0xfc00d960>
 800df94:	2c62b03a 	or	r17,r5,r17
 800df98:	8822c03a 	cmpne	r17,r17,zero
 800df9c:	0009883a 	mov	r4,zero
 800dfa0:	003fa506 	br	800de38 <__alt_data_end+0xfc00de38>
 800dfa4:	400b883a 	mov	r5,r8
 800dfa8:	3023883a 	mov	r17,r6
 800dfac:	003e0c06 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800dfb0:	400b883a 	mov	r5,r8
 800dfb4:	3023883a 	mov	r17,r6
 800dfb8:	0401ffc4 	movi	r16,2047
 800dfbc:	003e0806 	br	800d7e0 <__alt_data_end+0xfc00d7e0>
 800dfc0:	21fff804 	addi	r7,r4,-32
 800dfc4:	02400804 	movi	r9,32
 800dfc8:	29ced83a 	srl	r7,r5,r7
 800dfcc:	22400a26 	beq	r4,r9,800dff8 <__adddf3+0x894>
 800dfd0:	02401004 	movi	r9,64
 800dfd4:	4909c83a 	sub	r4,r9,r4
 800dfd8:	290a983a 	sll	r5,r5,r4
 800dfdc:	2c62b03a 	or	r17,r5,r17
 800dfe0:	8822c03a 	cmpne	r17,r17,zero
 800dfe4:	89e2b03a 	or	r17,r17,r7
 800dfe8:	0009883a 	mov	r4,zero
 800dfec:	003f9206 	br	800de38 <__alt_data_end+0xfc00de38>
 800dff0:	000b883a 	mov	r5,zero
 800dff4:	003fdc06 	br	800df68 <__alt_data_end+0xfc00df68>
 800dff8:	000b883a 	mov	r5,zero
 800dffc:	003ff706 	br	800dfdc <__alt_data_end+0xfc00dfdc>

0800e000 <__divdf3>:
 800e000:	defff204 	addi	sp,sp,-56
 800e004:	dd000815 	stw	r20,32(sp)
 800e008:	2828d53a 	srli	r20,r5,20
 800e00c:	dd800a15 	stw	r22,40(sp)
 800e010:	282cd7fa 	srli	r22,r5,31
 800e014:	dc000415 	stw	r16,16(sp)
 800e018:	04000434 	movhi	r16,16
 800e01c:	df000c15 	stw	fp,48(sp)
 800e020:	dcc00715 	stw	r19,28(sp)
 800e024:	dc800615 	stw	r18,24(sp)
 800e028:	dc400515 	stw	r17,20(sp)
 800e02c:	843fffc4 	addi	r16,r16,-1
 800e030:	dfc00d15 	stw	ra,52(sp)
 800e034:	ddc00b15 	stw	r23,44(sp)
 800e038:	dd400915 	stw	r21,36(sp)
 800e03c:	a501ffcc 	andi	r20,r20,2047
 800e040:	2025883a 	mov	r18,r4
 800e044:	2027883a 	mov	r19,r4
 800e048:	2c22703a 	and	r17,r5,r16
 800e04c:	b7003fcc 	andi	fp,r22,255
 800e050:	a0005e26 	beq	r20,zero,800e1cc <__divdf3+0x1cc>
 800e054:	0081ffc4 	movi	r2,2047
 800e058:	a0803526 	beq	r20,r2,800e130 <__divdf3+0x130>
 800e05c:	8c000434 	orhi	r16,r17,16
 800e060:	2004d77a 	srli	r2,r4,29
 800e064:	802090fa 	slli	r16,r16,3
 800e068:	202690fa 	slli	r19,r4,3
 800e06c:	a53f0044 	addi	r20,r20,-1023
 800e070:	80a2b03a 	or	r17,r16,r2
 800e074:	0025883a 	mov	r18,zero
 800e078:	0011883a 	mov	r8,zero
 800e07c:	380ad53a 	srli	r5,r7,20
 800e080:	382ed7fa 	srli	r23,r7,31
 800e084:	04000434 	movhi	r16,16
 800e088:	843fffc4 	addi	r16,r16,-1
 800e08c:	2941ffcc 	andi	r5,r5,2047
 800e090:	302b883a 	mov	r21,r6
 800e094:	3c20703a 	and	r16,r7,r16
 800e098:	ba403fcc 	andi	r9,r23,255
 800e09c:	28006726 	beq	r5,zero,800e23c <__divdf3+0x23c>
 800e0a0:	0081ffc4 	movi	r2,2047
 800e0a4:	28805f26 	beq	r5,r2,800e224 <__divdf3+0x224>
 800e0a8:	84000434 	orhi	r16,r16,16
 800e0ac:	3004d77a 	srli	r2,r6,29
 800e0b0:	802090fa 	slli	r16,r16,3
 800e0b4:	302a90fa 	slli	r21,r6,3
 800e0b8:	297f0044 	addi	r5,r5,-1023
 800e0bc:	80a0b03a 	or	r16,r16,r2
 800e0c0:	000f883a 	mov	r7,zero
 800e0c4:	3c86b03a 	or	r3,r7,r18
 800e0c8:	180690ba 	slli	r3,r3,2
 800e0cc:	00820074 	movhi	r2,2049
 800e0d0:	10b83c04 	addi	r2,r2,-7952
 800e0d4:	1887883a 	add	r3,r3,r2
 800e0d8:	18c00017 	ldw	r3,0(r3)
 800e0dc:	b5c8f03a 	xor	r4,r22,r23
 800e0e0:	200d883a 	mov	r6,r4
 800e0e4:	24803fcc 	andi	r18,r4,255
 800e0e8:	a169c83a 	sub	r20,r20,r5
 800e0ec:	1800683a 	jmp	r3
 800e0f0:	0800e338 	rdprs	zero,at,908
 800e0f4:	0800e168 	cmpgeui	zero,at,901
 800e0f8:	0800e2fc 	xorhi	zero,at,907
 800e0fc:	0800e14c 	andi	zero,at,901
 800e100:	0800e2fc 	xorhi	zero,at,907
 800e104:	0800e2d0 	cmplti	zero,at,907
 800e108:	0800e2fc 	xorhi	zero,at,907
 800e10c:	0800e14c 	andi	zero,at,901
 800e110:	0800e168 	cmpgeui	zero,at,901
 800e114:	0800e168 	cmpgeui	zero,at,901
 800e118:	0800e2d0 	cmplti	zero,at,907
 800e11c:	0800e14c 	andi	zero,at,901
 800e120:	0800e15c 	xori	zero,at,901
 800e124:	0800e15c 	xori	zero,at,901
 800e128:	0800e15c 	xori	zero,at,901
 800e12c:	0800e30c 	andi	zero,at,908
 800e130:	8904b03a 	or	r2,r17,r4
 800e134:	1000631e 	bne	r2,zero,800e2c4 <__divdf3+0x2c4>
 800e138:	04800204 	movi	r18,8
 800e13c:	0023883a 	mov	r17,zero
 800e140:	0027883a 	mov	r19,zero
 800e144:	02000084 	movi	r8,2
 800e148:	003fcc06 	br	800e07c <__alt_data_end+0xfc00e07c>
 800e14c:	8023883a 	mov	r17,r16
 800e150:	a827883a 	mov	r19,r21
 800e154:	4839883a 	mov	fp,r9
 800e158:	3811883a 	mov	r8,r7
 800e15c:	00800084 	movi	r2,2
 800e160:	40812a1e 	bne	r8,r2,800e60c <__divdf3+0x60c>
 800e164:	e025883a 	mov	r18,fp
 800e168:	9180004c 	andi	r6,r18,1
 800e16c:	0101ffc4 	movi	r4,2047
 800e170:	000b883a 	mov	r5,zero
 800e174:	0027883a 	mov	r19,zero
 800e178:	2008953a 	slli	r4,r4,20
 800e17c:	30c03fcc 	andi	r3,r6,255
 800e180:	04000434 	movhi	r16,16
 800e184:	180697fa 	slli	r3,r3,31
 800e188:	843fffc4 	addi	r16,r16,-1
 800e18c:	2c20703a 	and	r16,r5,r16
 800e190:	8120b03a 	or	r16,r16,r4
 800e194:	80c6b03a 	or	r3,r16,r3
 800e198:	9805883a 	mov	r2,r19
 800e19c:	dfc00d17 	ldw	ra,52(sp)
 800e1a0:	df000c17 	ldw	fp,48(sp)
 800e1a4:	ddc00b17 	ldw	r23,44(sp)
 800e1a8:	dd800a17 	ldw	r22,40(sp)
 800e1ac:	dd400917 	ldw	r21,36(sp)
 800e1b0:	dd000817 	ldw	r20,32(sp)
 800e1b4:	dcc00717 	ldw	r19,28(sp)
 800e1b8:	dc800617 	ldw	r18,24(sp)
 800e1bc:	dc400517 	ldw	r17,20(sp)
 800e1c0:	dc000417 	ldw	r16,16(sp)
 800e1c4:	dec00e04 	addi	sp,sp,56
 800e1c8:	f800283a 	ret
 800e1cc:	8904b03a 	or	r2,r17,r4
 800e1d0:	10003726 	beq	r2,zero,800e2b0 <__divdf3+0x2b0>
 800e1d4:	88011c26 	beq	r17,zero,800e648 <__divdf3+0x648>
 800e1d8:	8809883a 	mov	r4,r17
 800e1dc:	d9800315 	stw	r6,12(sp)
 800e1e0:	d9c00115 	stw	r7,4(sp)
 800e1e4:	800fd000 	call	800fd00 <__clzsi2>
 800e1e8:	d9800317 	ldw	r6,12(sp)
 800e1ec:	d9c00117 	ldw	r7,4(sp)
 800e1f0:	1007883a 	mov	r3,r2
 800e1f4:	01000a04 	movi	r4,40
 800e1f8:	1cfffe04 	addi	r19,r3,-8
 800e1fc:	20c9c83a 	sub	r4,r4,r3
 800e200:	8cca983a 	sll	r5,r17,r19
 800e204:	9108d83a 	srl	r4,r18,r4
 800e208:	94e6983a 	sll	r19,r18,r19
 800e20c:	2162b03a 	or	r17,r4,r5
 800e210:	053f0344 	movi	r20,-1011
 800e214:	a0e9c83a 	sub	r20,r20,r3
 800e218:	0025883a 	mov	r18,zero
 800e21c:	0011883a 	mov	r8,zero
 800e220:	003f9606 	br	800e07c <__alt_data_end+0xfc00e07c>
 800e224:	8184b03a 	or	r2,r16,r6
 800e228:	10001f1e 	bne	r2,zero,800e2a8 <__divdf3+0x2a8>
 800e22c:	0021883a 	mov	r16,zero
 800e230:	002b883a 	mov	r21,zero
 800e234:	01c00084 	movi	r7,2
 800e238:	003fa206 	br	800e0c4 <__alt_data_end+0xfc00e0c4>
 800e23c:	8184b03a 	or	r2,r16,r6
 800e240:	10001526 	beq	r2,zero,800e298 <__divdf3+0x298>
 800e244:	80010c26 	beq	r16,zero,800e678 <__divdf3+0x678>
 800e248:	8009883a 	mov	r4,r16
 800e24c:	d9800315 	stw	r6,12(sp)
 800e250:	da000215 	stw	r8,8(sp)
 800e254:	da400015 	stw	r9,0(sp)
 800e258:	800fd000 	call	800fd00 <__clzsi2>
 800e25c:	d9800317 	ldw	r6,12(sp)
 800e260:	da000217 	ldw	r8,8(sp)
 800e264:	da400017 	ldw	r9,0(sp)
 800e268:	1007883a 	mov	r3,r2
 800e26c:	01000a04 	movi	r4,40
 800e270:	1d7ffe04 	addi	r21,r3,-8
 800e274:	20c9c83a 	sub	r4,r4,r3
 800e278:	8560983a 	sll	r16,r16,r21
 800e27c:	3108d83a 	srl	r4,r6,r4
 800e280:	356a983a 	sll	r21,r6,r21
 800e284:	2420b03a 	or	r16,r4,r16
 800e288:	017f0344 	movi	r5,-1011
 800e28c:	28cbc83a 	sub	r5,r5,r3
 800e290:	000f883a 	mov	r7,zero
 800e294:	003f8b06 	br	800e0c4 <__alt_data_end+0xfc00e0c4>
 800e298:	0021883a 	mov	r16,zero
 800e29c:	002b883a 	mov	r21,zero
 800e2a0:	01c00044 	movi	r7,1
 800e2a4:	003f8706 	br	800e0c4 <__alt_data_end+0xfc00e0c4>
 800e2a8:	01c000c4 	movi	r7,3
 800e2ac:	003f8506 	br	800e0c4 <__alt_data_end+0xfc00e0c4>
 800e2b0:	04800104 	movi	r18,4
 800e2b4:	0023883a 	mov	r17,zero
 800e2b8:	0027883a 	mov	r19,zero
 800e2bc:	02000044 	movi	r8,1
 800e2c0:	003f6e06 	br	800e07c <__alt_data_end+0xfc00e07c>
 800e2c4:	04800304 	movi	r18,12
 800e2c8:	020000c4 	movi	r8,3
 800e2cc:	003f6b06 	br	800e07c <__alt_data_end+0xfc00e07c>
 800e2d0:	01400434 	movhi	r5,16
 800e2d4:	000d883a 	mov	r6,zero
 800e2d8:	297fffc4 	addi	r5,r5,-1
 800e2dc:	04ffffc4 	movi	r19,-1
 800e2e0:	0101ffc4 	movi	r4,2047
 800e2e4:	003fa406 	br	800e178 <__alt_data_end+0xfc00e178>
 800e2e8:	043f0084 	movi	r16,-1022
 800e2ec:	8521c83a 	sub	r16,r16,r20
 800e2f0:	00800e04 	movi	r2,56
 800e2f4:	1401200e 	bge	r2,r16,800e778 <__divdf3+0x778>
 800e2f8:	9180004c 	andi	r6,r18,1
 800e2fc:	0009883a 	mov	r4,zero
 800e300:	000b883a 	mov	r5,zero
 800e304:	0027883a 	mov	r19,zero
 800e308:	003f9b06 	br	800e178 <__alt_data_end+0xfc00e178>
 800e30c:	8880022c 	andhi	r2,r17,8
 800e310:	1000c726 	beq	r2,zero,800e630 <__divdf3+0x630>
 800e314:	8080022c 	andhi	r2,r16,8
 800e318:	1000c51e 	bne	r2,zero,800e630 <__divdf3+0x630>
 800e31c:	00800434 	movhi	r2,16
 800e320:	81400234 	orhi	r5,r16,8
 800e324:	10bfffc4 	addi	r2,r2,-1
 800e328:	b80d883a 	mov	r6,r23
 800e32c:	288a703a 	and	r5,r5,r2
 800e330:	a827883a 	mov	r19,r21
 800e334:	003fea06 	br	800e2e0 <__alt_data_end+0xfc00e2e0>
 800e338:	8440ea36 	bltu	r16,r17,800e6e4 <__divdf3+0x6e4>
 800e33c:	8c00e826 	beq	r17,r16,800e6e0 <__divdf3+0x6e0>
 800e340:	a53fffc4 	addi	r20,r20,-1
 800e344:	882d883a 	mov	r22,r17
 800e348:	000d883a 	mov	r6,zero
 800e34c:	a804d63a 	srli	r2,r21,24
 800e350:	8020923a 	slli	r16,r16,8
 800e354:	b009883a 	mov	r4,r22
 800e358:	d9800315 	stw	r6,12(sp)
 800e35c:	1420b03a 	or	r16,r2,r16
 800e360:	802ed43a 	srli	r23,r16,16
 800e364:	873fffcc 	andi	fp,r16,65535
 800e368:	a82a923a 	slli	r21,r21,8
 800e36c:	b80b883a 	mov	r5,r23
 800e370:	800d7540 	call	800d754 <__udivsi3>
 800e374:	b009883a 	mov	r4,r22
 800e378:	b80b883a 	mov	r5,r23
 800e37c:	1023883a 	mov	r17,r2
 800e380:	800d75c0 	call	800d75c <__umodsi3>
 800e384:	1004943a 	slli	r2,r2,16
 800e388:	9808d43a 	srli	r4,r19,16
 800e38c:	8f2d383a 	mul	r22,r17,fp
 800e390:	d9800317 	ldw	r6,12(sp)
 800e394:	1106b03a 	or	r3,r2,r4
 800e398:	1d80062e 	bgeu	r3,r22,800e3b4 <__divdf3+0x3b4>
 800e39c:	1c07883a 	add	r3,r3,r16
 800e3a0:	88bfffc4 	addi	r2,r17,-1
 800e3a4:	1c00dc36 	bltu	r3,r16,800e718 <__divdf3+0x718>
 800e3a8:	1d80db2e 	bgeu	r3,r22,800e718 <__divdf3+0x718>
 800e3ac:	8c7fff84 	addi	r17,r17,-2
 800e3b0:	1c07883a 	add	r3,r3,r16
 800e3b4:	1dadc83a 	sub	r22,r3,r22
 800e3b8:	b009883a 	mov	r4,r22
 800e3bc:	b80b883a 	mov	r5,r23
 800e3c0:	d9800315 	stw	r6,12(sp)
 800e3c4:	800d7540 	call	800d754 <__udivsi3>
 800e3c8:	b009883a 	mov	r4,r22
 800e3cc:	b80b883a 	mov	r5,r23
 800e3d0:	d8800015 	stw	r2,0(sp)
 800e3d4:	800d75c0 	call	800d75c <__umodsi3>
 800e3d8:	da400017 	ldw	r9,0(sp)
 800e3dc:	1004943a 	slli	r2,r2,16
 800e3e0:	9cffffcc 	andi	r19,r19,65535
 800e3e4:	4f07383a 	mul	r3,r9,fp
 800e3e8:	14c8b03a 	or	r4,r2,r19
 800e3ec:	d9800317 	ldw	r6,12(sp)
 800e3f0:	20c0062e 	bgeu	r4,r3,800e40c <__divdf3+0x40c>
 800e3f4:	2409883a 	add	r4,r4,r16
 800e3f8:	48bfffc4 	addi	r2,r9,-1
 800e3fc:	2400c436 	bltu	r4,r16,800e710 <__divdf3+0x710>
 800e400:	20c0c32e 	bgeu	r4,r3,800e710 <__divdf3+0x710>
 800e404:	4a7fff84 	addi	r9,r9,-2
 800e408:	2409883a 	add	r4,r4,r16
 800e40c:	8822943a 	slli	r17,r17,16
 800e410:	a80ed43a 	srli	r7,r21,16
 800e414:	aa3fffcc 	andi	r8,r21,65535
 800e418:	4c62b03a 	or	r17,r9,r17
 800e41c:	8816d43a 	srli	r11,r17,16
 800e420:	897fffcc 	andi	r5,r17,65535
 800e424:	2a15383a 	mul	r10,r5,r8
 800e428:	5a19383a 	mul	r12,r11,r8
 800e42c:	29cb383a 	mul	r5,r5,r7
 800e430:	5012d43a 	srli	r9,r10,16
 800e434:	20c5c83a 	sub	r2,r4,r3
 800e438:	614b883a 	add	r5,r12,r5
 800e43c:	2a4b883a 	add	r5,r5,r9
 800e440:	59c7383a 	mul	r3,r11,r7
 800e444:	2b00022e 	bgeu	r5,r12,800e450 <__divdf3+0x450>
 800e448:	01000074 	movhi	r4,1
 800e44c:	1907883a 	add	r3,r3,r4
 800e450:	2808d43a 	srli	r4,r5,16
 800e454:	280a943a 	slli	r5,r5,16
 800e458:	54ffffcc 	andi	r19,r10,65535
 800e45c:	1907883a 	add	r3,r3,r4
 800e460:	2ccb883a 	add	r5,r5,r19
 800e464:	10c09336 	bltu	r2,r3,800e6b4 <__divdf3+0x6b4>
 800e468:	10c0ad26 	beq	r2,r3,800e720 <__divdf3+0x720>
 800e46c:	10c7c83a 	sub	r3,r2,r3
 800e470:	3167c83a 	sub	r19,r6,r5
 800e474:	34ed803a 	cmpltu	r22,r6,r19
 800e478:	1dadc83a 	sub	r22,r3,r22
 800e47c:	b400b226 	beq	r22,r16,800e748 <__divdf3+0x748>
 800e480:	b009883a 	mov	r4,r22
 800e484:	b80b883a 	mov	r5,r23
 800e488:	d9c00115 	stw	r7,4(sp)
 800e48c:	da000215 	stw	r8,8(sp)
 800e490:	800d7540 	call	800d754 <__udivsi3>
 800e494:	b009883a 	mov	r4,r22
 800e498:	b80b883a 	mov	r5,r23
 800e49c:	d8800315 	stw	r2,12(sp)
 800e4a0:	800d75c0 	call	800d75c <__umodsi3>
 800e4a4:	d9800317 	ldw	r6,12(sp)
 800e4a8:	1004943a 	slli	r2,r2,16
 800e4ac:	9808d43a 	srli	r4,r19,16
 800e4b0:	372d383a 	mul	r22,r6,fp
 800e4b4:	d9c00117 	ldw	r7,4(sp)
 800e4b8:	1106b03a 	or	r3,r2,r4
 800e4bc:	da000217 	ldw	r8,8(sp)
 800e4c0:	1d80062e 	bgeu	r3,r22,800e4dc <__divdf3+0x4dc>
 800e4c4:	1c07883a 	add	r3,r3,r16
 800e4c8:	30bfffc4 	addi	r2,r6,-1
 800e4cc:	1c00a036 	bltu	r3,r16,800e750 <__divdf3+0x750>
 800e4d0:	1d809f2e 	bgeu	r3,r22,800e750 <__divdf3+0x750>
 800e4d4:	31bfff84 	addi	r6,r6,-2
 800e4d8:	1c07883a 	add	r3,r3,r16
 800e4dc:	1dadc83a 	sub	r22,r3,r22
 800e4e0:	b009883a 	mov	r4,r22
 800e4e4:	b80b883a 	mov	r5,r23
 800e4e8:	d9800315 	stw	r6,12(sp)
 800e4ec:	d9c00115 	stw	r7,4(sp)
 800e4f0:	da000215 	stw	r8,8(sp)
 800e4f4:	800d7540 	call	800d754 <__udivsi3>
 800e4f8:	b009883a 	mov	r4,r22
 800e4fc:	b80b883a 	mov	r5,r23
 800e500:	d8800015 	stw	r2,0(sp)
 800e504:	800d75c0 	call	800d75c <__umodsi3>
 800e508:	da400017 	ldw	r9,0(sp)
 800e50c:	1004943a 	slli	r2,r2,16
 800e510:	993fffcc 	andi	r4,r19,65535
 800e514:	4f39383a 	mul	fp,r9,fp
 800e518:	1106b03a 	or	r3,r2,r4
 800e51c:	d9800317 	ldw	r6,12(sp)
 800e520:	d9c00117 	ldw	r7,4(sp)
 800e524:	da000217 	ldw	r8,8(sp)
 800e528:	1f00062e 	bgeu	r3,fp,800e544 <__divdf3+0x544>
 800e52c:	1c07883a 	add	r3,r3,r16
 800e530:	48bfffc4 	addi	r2,r9,-1
 800e534:	1c008836 	bltu	r3,r16,800e758 <__divdf3+0x758>
 800e538:	1f00872e 	bgeu	r3,fp,800e758 <__divdf3+0x758>
 800e53c:	4a7fff84 	addi	r9,r9,-2
 800e540:	1c07883a 	add	r3,r3,r16
 800e544:	3008943a 	slli	r4,r6,16
 800e548:	1f07c83a 	sub	r3,r3,fp
 800e54c:	4926b03a 	or	r19,r9,r4
 800e550:	993fffcc 	andi	r4,r19,65535
 800e554:	980cd43a 	srli	r6,r19,16
 800e558:	220b383a 	mul	r5,r4,r8
 800e55c:	21c5383a 	mul	r2,r4,r7
 800e560:	3211383a 	mul	r8,r6,r8
 800e564:	2808d43a 	srli	r4,r5,16
 800e568:	31cf383a 	mul	r7,r6,r7
 800e56c:	4085883a 	add	r2,r8,r2
 800e570:	1105883a 	add	r2,r2,r4
 800e574:	1200022e 	bgeu	r2,r8,800e580 <__divdf3+0x580>
 800e578:	01000074 	movhi	r4,1
 800e57c:	390f883a 	add	r7,r7,r4
 800e580:	1008d43a 	srli	r4,r2,16
 800e584:	1004943a 	slli	r2,r2,16
 800e588:	297fffcc 	andi	r5,r5,65535
 800e58c:	390f883a 	add	r7,r7,r4
 800e590:	1145883a 	add	r2,r2,r5
 800e594:	19c06536 	bltu	r3,r7,800e72c <__divdf3+0x72c>
 800e598:	19c09f26 	beq	r3,r7,800e818 <__divdf3+0x818>
 800e59c:	9cc00054 	ori	r19,r19,1
 800e5a0:	a100ffc4 	addi	r4,r20,1023
 800e5a4:	013f500e 	bge	zero,r4,800e2e8 <__alt_data_end+0xfc00e2e8>
 800e5a8:	988001cc 	andi	r2,r19,7
 800e5ac:	10000726 	beq	r2,zero,800e5cc <__divdf3+0x5cc>
 800e5b0:	98c003cc 	andi	r3,r19,15
 800e5b4:	00800104 	movi	r2,4
 800e5b8:	18800426 	beq	r3,r2,800e5cc <__divdf3+0x5cc>
 800e5bc:	9885883a 	add	r2,r19,r2
 800e5c0:	14e1803a 	cmpltu	r16,r2,r19
 800e5c4:	8c23883a 	add	r17,r17,r16
 800e5c8:	1027883a 	mov	r19,r2
 800e5cc:	8880402c 	andhi	r2,r17,256
 800e5d0:	10000426 	beq	r2,zero,800e5e4 <__divdf3+0x5e4>
 800e5d4:	00bfc034 	movhi	r2,65280
 800e5d8:	10bfffc4 	addi	r2,r2,-1
 800e5dc:	a1010004 	addi	r4,r20,1024
 800e5e0:	88a2703a 	and	r17,r17,r2
 800e5e4:	0081ff84 	movi	r2,2046
 800e5e8:	113edf16 	blt	r2,r4,800e168 <__alt_data_end+0xfc00e168>
 800e5ec:	9826d0fa 	srli	r19,r19,3
 800e5f0:	8804977a 	slli	r2,r17,29
 800e5f4:	8820927a 	slli	r16,r17,9
 800e5f8:	2101ffcc 	andi	r4,r4,2047
 800e5fc:	14e6b03a 	or	r19,r2,r19
 800e600:	800ad33a 	srli	r5,r16,12
 800e604:	9180004c 	andi	r6,r18,1
 800e608:	003edb06 	br	800e178 <__alt_data_end+0xfc00e178>
 800e60c:	008000c4 	movi	r2,3
 800e610:	4080a826 	beq	r8,r2,800e8b4 <__divdf3+0x8b4>
 800e614:	00800044 	movi	r2,1
 800e618:	4080551e 	bne	r8,r2,800e770 <__divdf3+0x770>
 800e61c:	e00d883a 	mov	r6,fp
 800e620:	0009883a 	mov	r4,zero
 800e624:	000b883a 	mov	r5,zero
 800e628:	0027883a 	mov	r19,zero
 800e62c:	003ed206 	br	800e178 <__alt_data_end+0xfc00e178>
 800e630:	00800434 	movhi	r2,16
 800e634:	89400234 	orhi	r5,r17,8
 800e638:	10bfffc4 	addi	r2,r2,-1
 800e63c:	b00d883a 	mov	r6,r22
 800e640:	288a703a 	and	r5,r5,r2
 800e644:	003f2606 	br	800e2e0 <__alt_data_end+0xfc00e2e0>
 800e648:	d9800315 	stw	r6,12(sp)
 800e64c:	d9c00115 	stw	r7,4(sp)
 800e650:	800fd000 	call	800fd00 <__clzsi2>
 800e654:	10c00804 	addi	r3,r2,32
 800e658:	010009c4 	movi	r4,39
 800e65c:	d9800317 	ldw	r6,12(sp)
 800e660:	d9c00117 	ldw	r7,4(sp)
 800e664:	20fee30e 	bge	r4,r3,800e1f4 <__alt_data_end+0xfc00e1f4>
 800e668:	117ffe04 	addi	r5,r2,-8
 800e66c:	9162983a 	sll	r17,r18,r5
 800e670:	0027883a 	mov	r19,zero
 800e674:	003ee606 	br	800e210 <__alt_data_end+0xfc00e210>
 800e678:	3009883a 	mov	r4,r6
 800e67c:	d9800315 	stw	r6,12(sp)
 800e680:	da000215 	stw	r8,8(sp)
 800e684:	da400015 	stw	r9,0(sp)
 800e688:	800fd000 	call	800fd00 <__clzsi2>
 800e68c:	10c00804 	addi	r3,r2,32
 800e690:	010009c4 	movi	r4,39
 800e694:	d9800317 	ldw	r6,12(sp)
 800e698:	da000217 	ldw	r8,8(sp)
 800e69c:	da400017 	ldw	r9,0(sp)
 800e6a0:	20fef20e 	bge	r4,r3,800e26c <__alt_data_end+0xfc00e26c>
 800e6a4:	10bffe04 	addi	r2,r2,-8
 800e6a8:	a8a0983a 	sll	r16,r21,r2
 800e6ac:	002b883a 	mov	r21,zero
 800e6b0:	003ef506 	br	800e288 <__alt_data_end+0xfc00e288>
 800e6b4:	354d883a 	add	r6,r6,r21
 800e6b8:	3549803a 	cmpltu	r4,r6,r21
 800e6bc:	2409883a 	add	r4,r4,r16
 800e6c0:	2089883a 	add	r4,r4,r2
 800e6c4:	88bfffc4 	addi	r2,r17,-1
 800e6c8:	81000c2e 	bgeu	r16,r4,800e6fc <__divdf3+0x6fc>
 800e6cc:	20c04436 	bltu	r4,r3,800e7e0 <__divdf3+0x7e0>
 800e6d0:	19006f26 	beq	r3,r4,800e890 <__divdf3+0x890>
 800e6d4:	20c7c83a 	sub	r3,r4,r3
 800e6d8:	1023883a 	mov	r17,r2
 800e6dc:	003f6406 	br	800e470 <__alt_data_end+0xfc00e470>
 800e6e0:	9d7f1736 	bltu	r19,r21,800e340 <__alt_data_end+0xfc00e340>
 800e6e4:	9806d07a 	srli	r3,r19,1
 800e6e8:	880497fa 	slli	r2,r17,31
 800e6ec:	980c97fa 	slli	r6,r19,31
 800e6f0:	882cd07a 	srli	r22,r17,1
 800e6f4:	18a6b03a 	or	r19,r3,r2
 800e6f8:	003f1406 	br	800e34c <__alt_data_end+0xfc00e34c>
 800e6fc:	243ff51e 	bne	r4,r16,800e6d4 <__alt_data_end+0xfc00e6d4>
 800e700:	357ff22e 	bgeu	r6,r21,800e6cc <__alt_data_end+0xfc00e6cc>
 800e704:	80c7c83a 	sub	r3,r16,r3
 800e708:	1023883a 	mov	r17,r2
 800e70c:	003f5806 	br	800e470 <__alt_data_end+0xfc00e470>
 800e710:	1013883a 	mov	r9,r2
 800e714:	003f3d06 	br	800e40c <__alt_data_end+0xfc00e40c>
 800e718:	1023883a 	mov	r17,r2
 800e71c:	003f2506 	br	800e3b4 <__alt_data_end+0xfc00e3b4>
 800e720:	317fe436 	bltu	r6,r5,800e6b4 <__alt_data_end+0xfc00e6b4>
 800e724:	0007883a 	mov	r3,zero
 800e728:	003f5106 	br	800e470 <__alt_data_end+0xfc00e470>
 800e72c:	1c07883a 	add	r3,r3,r16
 800e730:	993fffc4 	addi	r4,r19,-1
 800e734:	1c000a2e 	bgeu	r3,r16,800e760 <__divdf3+0x760>
 800e738:	2027883a 	mov	r19,r4
 800e73c:	19ff971e 	bne	r3,r7,800e59c <__alt_data_end+0xfc00e59c>
 800e740:	a8bf961e 	bne	r21,r2,800e59c <__alt_data_end+0xfc00e59c>
 800e744:	003f9606 	br	800e5a0 <__alt_data_end+0xfc00e5a0>
 800e748:	04ffffc4 	movi	r19,-1
 800e74c:	003f9406 	br	800e5a0 <__alt_data_end+0xfc00e5a0>
 800e750:	100d883a 	mov	r6,r2
 800e754:	003f6106 	br	800e4dc <__alt_data_end+0xfc00e4dc>
 800e758:	1013883a 	mov	r9,r2
 800e75c:	003f7906 	br	800e544 <__alt_data_end+0xfc00e544>
 800e760:	19c02636 	bltu	r3,r7,800e7fc <__divdf3+0x7fc>
 800e764:	38c04d26 	beq	r7,r3,800e89c <__divdf3+0x89c>
 800e768:	2027883a 	mov	r19,r4
 800e76c:	003f8b06 	br	800e59c <__alt_data_end+0xfc00e59c>
 800e770:	e025883a 	mov	r18,fp
 800e774:	003f8a06 	br	800e5a0 <__alt_data_end+0xfc00e5a0>
 800e778:	008007c4 	movi	r2,31
 800e77c:	14002a16 	blt	r2,r16,800e828 <__divdf3+0x828>
 800e780:	a5010784 	addi	r20,r20,1054
 800e784:	8d04983a 	sll	r2,r17,r20
 800e788:	9c06d83a 	srl	r3,r19,r16
 800e78c:	9d28983a 	sll	r20,r19,r20
 800e790:	8c20d83a 	srl	r16,r17,r16
 800e794:	1886b03a 	or	r3,r3,r2
 800e798:	a004c03a 	cmpne	r2,r20,zero
 800e79c:	1884b03a 	or	r2,r3,r2
 800e7a0:	10c001cc 	andi	r3,r2,7
 800e7a4:	18000726 	beq	r3,zero,800e7c4 <__divdf3+0x7c4>
 800e7a8:	110003cc 	andi	r4,r2,15
 800e7ac:	00c00104 	movi	r3,4
 800e7b0:	20c00426 	beq	r4,r3,800e7c4 <__divdf3+0x7c4>
 800e7b4:	10c00104 	addi	r3,r2,4
 800e7b8:	1885803a 	cmpltu	r2,r3,r2
 800e7bc:	80a1883a 	add	r16,r16,r2
 800e7c0:	1805883a 	mov	r2,r3
 800e7c4:	80c0202c 	andhi	r3,r16,128
 800e7c8:	18002d26 	beq	r3,zero,800e880 <__divdf3+0x880>
 800e7cc:	9180004c 	andi	r6,r18,1
 800e7d0:	01000044 	movi	r4,1
 800e7d4:	000b883a 	mov	r5,zero
 800e7d8:	0027883a 	mov	r19,zero
 800e7dc:	003e6606 	br	800e178 <__alt_data_end+0xfc00e178>
 800e7e0:	354d883a 	add	r6,r6,r21
 800e7e4:	356d803a 	cmpltu	r22,r6,r21
 800e7e8:	b42d883a 	add	r22,r22,r16
 800e7ec:	b12d883a 	add	r22,r22,r4
 800e7f0:	8c7fff84 	addi	r17,r17,-2
 800e7f4:	b0c7c83a 	sub	r3,r22,r3
 800e7f8:	003f1d06 	br	800e470 <__alt_data_end+0xfc00e470>
 800e7fc:	ad4b883a 	add	r5,r21,r21
 800e800:	2d6b803a 	cmpltu	r21,r5,r21
 800e804:	ac2b883a 	add	r21,r21,r16
 800e808:	1d47883a 	add	r3,r3,r21
 800e80c:	993fff84 	addi	r4,r19,-2
 800e810:	282b883a 	mov	r21,r5
 800e814:	003fc806 	br	800e738 <__alt_data_end+0xfc00e738>
 800e818:	103fc41e 	bne	r2,zero,800e72c <__alt_data_end+0xfc00e72c>
 800e81c:	002b883a 	mov	r21,zero
 800e820:	a8bf5e1e 	bne	r21,r2,800e59c <__alt_data_end+0xfc00e59c>
 800e824:	003f5e06 	br	800e5a0 <__alt_data_end+0xfc00e5a0>
 800e828:	00bef884 	movi	r2,-1054
 800e82c:	1505c83a 	sub	r2,r2,r20
 800e830:	00c00804 	movi	r3,32
 800e834:	8884d83a 	srl	r2,r17,r2
 800e838:	80c01c26 	beq	r16,r3,800e8ac <__divdf3+0x8ac>
 800e83c:	a0c10f84 	addi	r3,r20,1086
 800e840:	88c6983a 	sll	r3,r17,r3
 800e844:	1cc6b03a 	or	r3,r3,r19
 800e848:	1806c03a 	cmpne	r3,r3,zero
 800e84c:	1884b03a 	or	r2,r3,r2
 800e850:	140001cc 	andi	r16,r2,7
 800e854:	8000061e 	bne	r16,zero,800e870 <__divdf3+0x870>
 800e858:	000b883a 	mov	r5,zero
 800e85c:	1004d0fa 	srli	r2,r2,3
 800e860:	9180004c 	andi	r6,r18,1
 800e864:	0009883a 	mov	r4,zero
 800e868:	1426b03a 	or	r19,r2,r16
 800e86c:	003e4206 	br	800e178 <__alt_data_end+0xfc00e178>
 800e870:	110003cc 	andi	r4,r2,15
 800e874:	00c00104 	movi	r3,4
 800e878:	0021883a 	mov	r16,zero
 800e87c:	20ffcd1e 	bne	r4,r3,800e7b4 <__alt_data_end+0xfc00e7b4>
 800e880:	800a927a 	slli	r5,r16,9
 800e884:	8020977a 	slli	r16,r16,29
 800e888:	280ad33a 	srli	r5,r5,12
 800e88c:	003ff306 	br	800e85c <__alt_data_end+0xfc00e85c>
 800e890:	317fd336 	bltu	r6,r5,800e7e0 <__alt_data_end+0xfc00e7e0>
 800e894:	1023883a 	mov	r17,r2
 800e898:	003fa206 	br	800e724 <__alt_data_end+0xfc00e724>
 800e89c:	a8bfd736 	bltu	r21,r2,800e7fc <__alt_data_end+0xfc00e7fc>
 800e8a0:	2027883a 	mov	r19,r4
 800e8a4:	a8bf3d1e 	bne	r21,r2,800e59c <__alt_data_end+0xfc00e59c>
 800e8a8:	003f3d06 	br	800e5a0 <__alt_data_end+0xfc00e5a0>
 800e8ac:	0007883a 	mov	r3,zero
 800e8b0:	003fe406 	br	800e844 <__alt_data_end+0xfc00e844>
 800e8b4:	00800434 	movhi	r2,16
 800e8b8:	89400234 	orhi	r5,r17,8
 800e8bc:	10bfffc4 	addi	r2,r2,-1
 800e8c0:	e00d883a 	mov	r6,fp
 800e8c4:	288a703a 	and	r5,r5,r2
 800e8c8:	003e8506 	br	800e2e0 <__alt_data_end+0xfc00e2e0>

0800e8cc <__eqdf2>:
 800e8cc:	2804d53a 	srli	r2,r5,20
 800e8d0:	3806d53a 	srli	r3,r7,20
 800e8d4:	02000434 	movhi	r8,16
 800e8d8:	423fffc4 	addi	r8,r8,-1
 800e8dc:	1081ffcc 	andi	r2,r2,2047
 800e8e0:	0241ffc4 	movi	r9,2047
 800e8e4:	2a14703a 	and	r10,r5,r8
 800e8e8:	18c1ffcc 	andi	r3,r3,2047
 800e8ec:	3a10703a 	and	r8,r7,r8
 800e8f0:	280ad7fa 	srli	r5,r5,31
 800e8f4:	380ed7fa 	srli	r7,r7,31
 800e8f8:	12400f26 	beq	r2,r9,800e938 <__eqdf2+0x6c>
 800e8fc:	0241ffc4 	movi	r9,2047
 800e900:	1a400326 	beq	r3,r9,800e910 <__eqdf2+0x44>
 800e904:	10c00526 	beq	r2,r3,800e91c <__eqdf2+0x50>
 800e908:	00800044 	movi	r2,1
 800e90c:	f800283a 	ret
 800e910:	4192b03a 	or	r9,r8,r6
 800e914:	483ffc1e 	bne	r9,zero,800e908 <__alt_data_end+0xfc00e908>
 800e918:	10fffb1e 	bne	r2,r3,800e908 <__alt_data_end+0xfc00e908>
 800e91c:	523ffa1e 	bne	r10,r8,800e908 <__alt_data_end+0xfc00e908>
 800e920:	21bff91e 	bne	r4,r6,800e908 <__alt_data_end+0xfc00e908>
 800e924:	29c00826 	beq	r5,r7,800e948 <__eqdf2+0x7c>
 800e928:	103ff71e 	bne	r2,zero,800e908 <__alt_data_end+0xfc00e908>
 800e92c:	5104b03a 	or	r2,r10,r4
 800e930:	1004c03a 	cmpne	r2,r2,zero
 800e934:	f800283a 	ret
 800e938:	5112b03a 	or	r9,r10,r4
 800e93c:	483fef26 	beq	r9,zero,800e8fc <__alt_data_end+0xfc00e8fc>
 800e940:	00800044 	movi	r2,1
 800e944:	f800283a 	ret
 800e948:	0005883a 	mov	r2,zero
 800e94c:	f800283a 	ret

0800e950 <__gedf2>:
 800e950:	2804d53a 	srli	r2,r5,20
 800e954:	3806d53a 	srli	r3,r7,20
 800e958:	02000434 	movhi	r8,16
 800e95c:	423fffc4 	addi	r8,r8,-1
 800e960:	0241ffc4 	movi	r9,2047
 800e964:	1081ffcc 	andi	r2,r2,2047
 800e968:	2a14703a 	and	r10,r5,r8
 800e96c:	1a46703a 	and	r3,r3,r9
 800e970:	3a10703a 	and	r8,r7,r8
 800e974:	280ad7fa 	srli	r5,r5,31
 800e978:	380ed7fa 	srli	r7,r7,31
 800e97c:	12400b26 	beq	r2,r9,800e9ac <__gedf2+0x5c>
 800e980:	1a401626 	beq	r3,r9,800e9dc <__gedf2+0x8c>
 800e984:	10000c1e 	bne	r2,zero,800e9b8 <__gedf2+0x68>
 800e988:	5112b03a 	or	r9,r10,r4
 800e98c:	4813003a 	cmpeq	r9,r9,zero
 800e990:	4817883a 	mov	r11,r9
 800e994:	18000c1e 	bne	r3,zero,800e9c8 <__gedf2+0x78>
 800e998:	4198b03a 	or	r12,r8,r6
 800e99c:	60000a1e 	bne	r12,zero,800e9c8 <__gedf2+0x78>
 800e9a0:	48001326 	beq	r9,zero,800e9f0 <__gedf2+0xa0>
 800e9a4:	0005883a 	mov	r2,zero
 800e9a8:	f800283a 	ret
 800e9ac:	5112b03a 	or	r9,r10,r4
 800e9b0:	4800191e 	bne	r9,zero,800ea18 <__gedf2+0xc8>
 800e9b4:	18800926 	beq	r3,r2,800e9dc <__gedf2+0x8c>
 800e9b8:	18000b1e 	bne	r3,zero,800e9e8 <__gedf2+0x98>
 800e9bc:	4192b03a 	or	r9,r8,r6
 800e9c0:	0017883a 	mov	r11,zero
 800e9c4:	48000a26 	beq	r9,zero,800e9f0 <__gedf2+0xa0>
 800e9c8:	39c03fcc 	andi	r7,r7,255
 800e9cc:	58000726 	beq	r11,zero,800e9ec <__gedf2+0x9c>
 800e9d0:	3800081e 	bne	r7,zero,800e9f4 <__gedf2+0xa4>
 800e9d4:	00bfffc4 	movi	r2,-1
 800e9d8:	f800283a 	ret
 800e9dc:	4192b03a 	or	r9,r8,r6
 800e9e0:	48000d1e 	bne	r9,zero,800ea18 <__gedf2+0xc8>
 800e9e4:	103fe826 	beq	r2,zero,800e988 <__alt_data_end+0xfc00e988>
 800e9e8:	39c03fcc 	andi	r7,r7,255
 800e9ec:	29c00326 	beq	r5,r7,800e9fc <__gedf2+0xac>
 800e9f0:	283ff81e 	bne	r5,zero,800e9d4 <__alt_data_end+0xfc00e9d4>
 800e9f4:	00800044 	movi	r2,1
 800e9f8:	f800283a 	ret
 800e9fc:	18bffc16 	blt	r3,r2,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ea00:	10c00316 	blt	r2,r3,800ea10 <__gedf2+0xc0>
 800ea04:	42bffa36 	bltu	r8,r10,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ea08:	52000526 	beq	r10,r8,800ea20 <__gedf2+0xd0>
 800ea0c:	523fe52e 	bgeu	r10,r8,800e9a4 <__alt_data_end+0xfc00e9a4>
 800ea10:	283ff026 	beq	r5,zero,800e9d4 <__alt_data_end+0xfc00e9d4>
 800ea14:	003ff706 	br	800e9f4 <__alt_data_end+0xfc00e9f4>
 800ea18:	00bfff84 	movi	r2,-2
 800ea1c:	f800283a 	ret
 800ea20:	313ff336 	bltu	r6,r4,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ea24:	21bfdf2e 	bgeu	r4,r6,800e9a4 <__alt_data_end+0xfc00e9a4>
 800ea28:	283fea26 	beq	r5,zero,800e9d4 <__alt_data_end+0xfc00e9d4>
 800ea2c:	003ff106 	br	800e9f4 <__alt_data_end+0xfc00e9f4>

0800ea30 <__ledf2>:
 800ea30:	2804d53a 	srli	r2,r5,20
 800ea34:	3810d53a 	srli	r8,r7,20
 800ea38:	00c00434 	movhi	r3,16
 800ea3c:	18ffffc4 	addi	r3,r3,-1
 800ea40:	0241ffc4 	movi	r9,2047
 800ea44:	1081ffcc 	andi	r2,r2,2047
 800ea48:	28d4703a 	and	r10,r5,r3
 800ea4c:	4250703a 	and	r8,r8,r9
 800ea50:	38c6703a 	and	r3,r7,r3
 800ea54:	280ad7fa 	srli	r5,r5,31
 800ea58:	380ed7fa 	srli	r7,r7,31
 800ea5c:	12400b26 	beq	r2,r9,800ea8c <__ledf2+0x5c>
 800ea60:	42401926 	beq	r8,r9,800eac8 <__ledf2+0x98>
 800ea64:	10000c1e 	bne	r2,zero,800ea98 <__ledf2+0x68>
 800ea68:	5112b03a 	or	r9,r10,r4
 800ea6c:	4813003a 	cmpeq	r9,r9,zero
 800ea70:	4817883a 	mov	r11,r9
 800ea74:	40000f26 	beq	r8,zero,800eab4 <__ledf2+0x84>
 800ea78:	39c03fcc 	andi	r7,r7,255
 800ea7c:	58001826 	beq	r11,zero,800eae0 <__ledf2+0xb0>
 800ea80:	38000a1e 	bne	r7,zero,800eaac <__ledf2+0x7c>
 800ea84:	00bfffc4 	movi	r2,-1
 800ea88:	f800283a 	ret
 800ea8c:	5112b03a 	or	r9,r10,r4
 800ea90:	48000f1e 	bne	r9,zero,800ead0 <__ledf2+0xa0>
 800ea94:	40800c26 	beq	r8,r2,800eac8 <__ledf2+0x98>
 800ea98:	4000101e 	bne	r8,zero,800eadc <__ledf2+0xac>
 800ea9c:	1992b03a 	or	r9,r3,r6
 800eaa0:	0017883a 	mov	r11,zero
 800eaa4:	483ff41e 	bne	r9,zero,800ea78 <__alt_data_end+0xfc00ea78>
 800eaa8:	283ff61e 	bne	r5,zero,800ea84 <__alt_data_end+0xfc00ea84>
 800eaac:	00800044 	movi	r2,1
 800eab0:	f800283a 	ret
 800eab4:	1998b03a 	or	r12,r3,r6
 800eab8:	603fef1e 	bne	r12,zero,800ea78 <__alt_data_end+0xfc00ea78>
 800eabc:	483ffa26 	beq	r9,zero,800eaa8 <__alt_data_end+0xfc00eaa8>
 800eac0:	0005883a 	mov	r2,zero
 800eac4:	f800283a 	ret
 800eac8:	1992b03a 	or	r9,r3,r6
 800eacc:	48000226 	beq	r9,zero,800ead8 <__ledf2+0xa8>
 800ead0:	00800084 	movi	r2,2
 800ead4:	f800283a 	ret
 800ead8:	103fe326 	beq	r2,zero,800ea68 <__alt_data_end+0xfc00ea68>
 800eadc:	39c03fcc 	andi	r7,r7,255
 800eae0:	29fff11e 	bne	r5,r7,800eaa8 <__alt_data_end+0xfc00eaa8>
 800eae4:	40bff016 	blt	r8,r2,800eaa8 <__alt_data_end+0xfc00eaa8>
 800eae8:	12000316 	blt	r2,r8,800eaf8 <__ledf2+0xc8>
 800eaec:	1abfee36 	bltu	r3,r10,800eaa8 <__alt_data_end+0xfc00eaa8>
 800eaf0:	50c00326 	beq	r10,r3,800eb00 <__ledf2+0xd0>
 800eaf4:	50fff22e 	bgeu	r10,r3,800eac0 <__alt_data_end+0xfc00eac0>
 800eaf8:	283fe226 	beq	r5,zero,800ea84 <__alt_data_end+0xfc00ea84>
 800eafc:	003feb06 	br	800eaac <__alt_data_end+0xfc00eaac>
 800eb00:	313fe936 	bltu	r6,r4,800eaa8 <__alt_data_end+0xfc00eaa8>
 800eb04:	21bfee2e 	bgeu	r4,r6,800eac0 <__alt_data_end+0xfc00eac0>
 800eb08:	283fde26 	beq	r5,zero,800ea84 <__alt_data_end+0xfc00ea84>
 800eb0c:	003fe706 	br	800eaac <__alt_data_end+0xfc00eaac>

0800eb10 <__muldf3>:
 800eb10:	defff204 	addi	sp,sp,-56
 800eb14:	2804d53a 	srli	r2,r5,20
 800eb18:	dd800a15 	stw	r22,40(sp)
 800eb1c:	282cd7fa 	srli	r22,r5,31
 800eb20:	dc000415 	stw	r16,16(sp)
 800eb24:	04000434 	movhi	r16,16
 800eb28:	df000c15 	stw	fp,48(sp)
 800eb2c:	dd000815 	stw	r20,32(sp)
 800eb30:	dcc00715 	stw	r19,28(sp)
 800eb34:	dc800615 	stw	r18,24(sp)
 800eb38:	dc400515 	stw	r17,20(sp)
 800eb3c:	843fffc4 	addi	r16,r16,-1
 800eb40:	dfc00d15 	stw	ra,52(sp)
 800eb44:	ddc00b15 	stw	r23,44(sp)
 800eb48:	dd400915 	stw	r21,36(sp)
 800eb4c:	1501ffcc 	andi	r20,r2,2047
 800eb50:	2023883a 	mov	r17,r4
 800eb54:	2025883a 	mov	r18,r4
 800eb58:	2c20703a 	and	r16,r5,r16
 800eb5c:	b027883a 	mov	r19,r22
 800eb60:	b7003fcc 	andi	fp,r22,255
 800eb64:	a0005926 	beq	r20,zero,800eccc <__muldf3+0x1bc>
 800eb68:	0081ffc4 	movi	r2,2047
 800eb6c:	a0803426 	beq	r20,r2,800ec40 <__muldf3+0x130>
 800eb70:	84000434 	orhi	r16,r16,16
 800eb74:	2004d77a 	srli	r2,r4,29
 800eb78:	802090fa 	slli	r16,r16,3
 800eb7c:	202490fa 	slli	r18,r4,3
 800eb80:	a53f0044 	addi	r20,r20,-1023
 800eb84:	80a0b03a 	or	r16,r16,r2
 800eb88:	002b883a 	mov	r21,zero
 800eb8c:	0015883a 	mov	r10,zero
 800eb90:	3812d53a 	srli	r9,r7,20
 800eb94:	3806d7fa 	srli	r3,r7,31
 800eb98:	02000434 	movhi	r8,16
 800eb9c:	423fffc4 	addi	r8,r8,-1
 800eba0:	4941ffcc 	andi	r5,r9,2047
 800eba4:	302f883a 	mov	r23,r6
 800eba8:	3a22703a 	and	r17,r7,r8
 800ebac:	1ac03fcc 	andi	r11,r3,255
 800ebb0:	28006226 	beq	r5,zero,800ed3c <__muldf3+0x22c>
 800ebb4:	0081ffc4 	movi	r2,2047
 800ebb8:	28805a26 	beq	r5,r2,800ed24 <__muldf3+0x214>
 800ebbc:	8a000434 	orhi	r8,r17,16
 800ebc0:	3004d77a 	srli	r2,r6,29
 800ebc4:	401090fa 	slli	r8,r8,3
 800ebc8:	302e90fa 	slli	r23,r6,3
 800ebcc:	297f0044 	addi	r5,r5,-1023
 800ebd0:	40a2b03a 	or	r17,r8,r2
 800ebd4:	0013883a 	mov	r9,zero
 800ebd8:	4d4cb03a 	or	r6,r9,r21
 800ebdc:	300c90ba 	slli	r6,r6,2
 800ebe0:	02020074 	movhi	r8,2049
 800ebe4:	423b0004 	addi	r8,r8,-5120
 800ebe8:	320d883a 	add	r6,r6,r8
 800ebec:	31800017 	ldw	r6,0(r6)
 800ebf0:	a14b883a 	add	r5,r20,r5
 800ebf4:	1dacf03a 	xor	r22,r3,r22
 800ebf8:	2b000044 	addi	r12,r5,1
 800ebfc:	3000683a 	jmp	r6
 800ec00:	0800ee3c 	xorhi	zero,at,952
 800ec04:	0800ee28 	cmpgeui	zero,at,952
 800ec08:	0800ee28 	cmpgeui	zero,at,952
 800ec0c:	0800ee14 	ori	zero,at,952
 800ec10:	0800ec5c 	xori	zero,at,945
 800ec14:	0800ec5c 	xori	zero,at,945
 800ec18:	0800edfc 	xorhi	zero,at,951
 800ec1c:	0800ee14 	ori	zero,at,952
 800ec20:	0800ec5c 	xori	zero,at,945
 800ec24:	0800edfc 	xorhi	zero,at,951
 800ec28:	0800ec5c 	xori	zero,at,945
 800ec2c:	0800ee14 	ori	zero,at,952
 800ec30:	0800ec60 	cmpeqi	zero,at,945
 800ec34:	0800ec60 	cmpeqi	zero,at,945
 800ec38:	0800ec60 	cmpeqi	zero,at,945
 800ec3c:	0800f038 	rdprs	zero,at,960
 800ec40:	8104b03a 	or	r2,r16,r4
 800ec44:	10006a1e 	bne	r2,zero,800edf0 <__muldf3+0x2e0>
 800ec48:	05400204 	movi	r21,8
 800ec4c:	0021883a 	mov	r16,zero
 800ec50:	0025883a 	mov	r18,zero
 800ec54:	02800084 	movi	r10,2
 800ec58:	003fcd06 	br	800eb90 <__alt_data_end+0xfc00eb90>
 800ec5c:	b039883a 	mov	fp,r22
 800ec60:	00800084 	movi	r2,2
 800ec64:	50804e1e 	bne	r10,r2,800eda0 <__muldf3+0x290>
 800ec68:	e4c0004c 	andi	r19,fp,1
 800ec6c:	0101ffc4 	movi	r4,2047
 800ec70:	0021883a 	mov	r16,zero
 800ec74:	0025883a 	mov	r18,zero
 800ec78:	2008953a 	slli	r4,r4,20
 800ec7c:	98c03fcc 	andi	r3,r19,255
 800ec80:	01400434 	movhi	r5,16
 800ec84:	297fffc4 	addi	r5,r5,-1
 800ec88:	180697fa 	slli	r3,r3,31
 800ec8c:	8160703a 	and	r16,r16,r5
 800ec90:	8120b03a 	or	r16,r16,r4
 800ec94:	80c6b03a 	or	r3,r16,r3
 800ec98:	9005883a 	mov	r2,r18
 800ec9c:	dfc00d17 	ldw	ra,52(sp)
 800eca0:	df000c17 	ldw	fp,48(sp)
 800eca4:	ddc00b17 	ldw	r23,44(sp)
 800eca8:	dd800a17 	ldw	r22,40(sp)
 800ecac:	dd400917 	ldw	r21,36(sp)
 800ecb0:	dd000817 	ldw	r20,32(sp)
 800ecb4:	dcc00717 	ldw	r19,28(sp)
 800ecb8:	dc800617 	ldw	r18,24(sp)
 800ecbc:	dc400517 	ldw	r17,20(sp)
 800ecc0:	dc000417 	ldw	r16,16(sp)
 800ecc4:	dec00e04 	addi	sp,sp,56
 800ecc8:	f800283a 	ret
 800eccc:	8104b03a 	or	r2,r16,r4
 800ecd0:	10004226 	beq	r2,zero,800eddc <__muldf3+0x2cc>
 800ecd4:	8000f926 	beq	r16,zero,800f0bc <__muldf3+0x5ac>
 800ecd8:	8009883a 	mov	r4,r16
 800ecdc:	d9800315 	stw	r6,12(sp)
 800ece0:	d9c00015 	stw	r7,0(sp)
 800ece4:	800fd000 	call	800fd00 <__clzsi2>
 800ece8:	d9800317 	ldw	r6,12(sp)
 800ecec:	d9c00017 	ldw	r7,0(sp)
 800ecf0:	1007883a 	mov	r3,r2
 800ecf4:	01000a04 	movi	r4,40
 800ecf8:	18bffe04 	addi	r2,r3,-8
 800ecfc:	20c9c83a 	sub	r4,r4,r3
 800ed00:	80a0983a 	sll	r16,r16,r2
 800ed04:	8908d83a 	srl	r4,r17,r4
 800ed08:	88a4983a 	sll	r18,r17,r2
 800ed0c:	2420b03a 	or	r16,r4,r16
 800ed10:	017f0344 	movi	r5,-1011
 800ed14:	28e9c83a 	sub	r20,r5,r3
 800ed18:	002b883a 	mov	r21,zero
 800ed1c:	0015883a 	mov	r10,zero
 800ed20:	003f9b06 	br	800eb90 <__alt_data_end+0xfc00eb90>
 800ed24:	8984b03a 	or	r2,r17,r6
 800ed28:	10002a1e 	bne	r2,zero,800edd4 <__muldf3+0x2c4>
 800ed2c:	0023883a 	mov	r17,zero
 800ed30:	002f883a 	mov	r23,zero
 800ed34:	02400084 	movi	r9,2
 800ed38:	003fa706 	br	800ebd8 <__alt_data_end+0xfc00ebd8>
 800ed3c:	8984b03a 	or	r2,r17,r6
 800ed40:	10002026 	beq	r2,zero,800edc4 <__muldf3+0x2b4>
 800ed44:	8800cc26 	beq	r17,zero,800f078 <__muldf3+0x568>
 800ed48:	8809883a 	mov	r4,r17
 800ed4c:	d8c00215 	stw	r3,8(sp)
 800ed50:	d9800315 	stw	r6,12(sp)
 800ed54:	da800015 	stw	r10,0(sp)
 800ed58:	dac00115 	stw	r11,4(sp)
 800ed5c:	800fd000 	call	800fd00 <__clzsi2>
 800ed60:	d8c00217 	ldw	r3,8(sp)
 800ed64:	d9800317 	ldw	r6,12(sp)
 800ed68:	da800017 	ldw	r10,0(sp)
 800ed6c:	dac00117 	ldw	r11,4(sp)
 800ed70:	1009883a 	mov	r4,r2
 800ed74:	01400a04 	movi	r5,40
 800ed78:	25fffe04 	addi	r23,r4,-8
 800ed7c:	290bc83a 	sub	r5,r5,r4
 800ed80:	8dd0983a 	sll	r8,r17,r23
 800ed84:	314ad83a 	srl	r5,r6,r5
 800ed88:	35ee983a 	sll	r23,r6,r23
 800ed8c:	2a22b03a 	or	r17,r5,r8
 800ed90:	017f0344 	movi	r5,-1011
 800ed94:	290bc83a 	sub	r5,r5,r4
 800ed98:	0013883a 	mov	r9,zero
 800ed9c:	003f8e06 	br	800ebd8 <__alt_data_end+0xfc00ebd8>
 800eda0:	008000c4 	movi	r2,3
 800eda4:	50811d26 	beq	r10,r2,800f21c <__muldf3+0x70c>
 800eda8:	00800044 	movi	r2,1
 800edac:	5080e01e 	bne	r10,r2,800f130 <__muldf3+0x620>
 800edb0:	e0a6703a 	and	r19,fp,r2
 800edb4:	0009883a 	mov	r4,zero
 800edb8:	0021883a 	mov	r16,zero
 800edbc:	0025883a 	mov	r18,zero
 800edc0:	003fad06 	br	800ec78 <__alt_data_end+0xfc00ec78>
 800edc4:	0023883a 	mov	r17,zero
 800edc8:	002f883a 	mov	r23,zero
 800edcc:	02400044 	movi	r9,1
 800edd0:	003f8106 	br	800ebd8 <__alt_data_end+0xfc00ebd8>
 800edd4:	024000c4 	movi	r9,3
 800edd8:	003f7f06 	br	800ebd8 <__alt_data_end+0xfc00ebd8>
 800eddc:	05400104 	movi	r21,4
 800ede0:	0021883a 	mov	r16,zero
 800ede4:	0025883a 	mov	r18,zero
 800ede8:	02800044 	movi	r10,1
 800edec:	003f6806 	br	800eb90 <__alt_data_end+0xfc00eb90>
 800edf0:	05400304 	movi	r21,12
 800edf4:	028000c4 	movi	r10,3
 800edf8:	003f6506 	br	800eb90 <__alt_data_end+0xfc00eb90>
 800edfc:	04000434 	movhi	r16,16
 800ee00:	0027883a 	mov	r19,zero
 800ee04:	843fffc4 	addi	r16,r16,-1
 800ee08:	04bfffc4 	movi	r18,-1
 800ee0c:	0101ffc4 	movi	r4,2047
 800ee10:	003f9906 	br	800ec78 <__alt_data_end+0xfc00ec78>
 800ee14:	8821883a 	mov	r16,r17
 800ee18:	b825883a 	mov	r18,r23
 800ee1c:	5839883a 	mov	fp,r11
 800ee20:	4815883a 	mov	r10,r9
 800ee24:	003f8e06 	br	800ec60 <__alt_data_end+0xfc00ec60>
 800ee28:	8821883a 	mov	r16,r17
 800ee2c:	b825883a 	mov	r18,r23
 800ee30:	b039883a 	mov	fp,r22
 800ee34:	4815883a 	mov	r10,r9
 800ee38:	003f8906 	br	800ec60 <__alt_data_end+0xfc00ec60>
 800ee3c:	b80cd43a 	srli	r6,r23,16
 800ee40:	9006d43a 	srli	r3,r18,16
 800ee44:	90bfffcc 	andi	r2,r18,65535
 800ee48:	bdffffcc 	andi	r23,r23,65535
 800ee4c:	b891383a 	mul	r8,r23,r2
 800ee50:	b8c9383a 	mul	r4,r23,r3
 800ee54:	309b383a 	mul	r13,r6,r2
 800ee58:	400ed43a 	srli	r7,r8,16
 800ee5c:	30df383a 	mul	r15,r6,r3
 800ee60:	235b883a 	add	r13,r4,r13
 800ee64:	69db883a 	add	r13,r13,r7
 800ee68:	6900022e 	bgeu	r13,r4,800ee74 <__muldf3+0x364>
 800ee6c:	01000074 	movhi	r4,1
 800ee70:	791f883a 	add	r15,r15,r4
 800ee74:	8828d43a 	srli	r20,r17,16
 800ee78:	8c7fffcc 	andi	r17,r17,65535
 800ee7c:	888f383a 	mul	r7,r17,r2
 800ee80:	88d3383a 	mul	r9,r17,r3
 800ee84:	a0a5383a 	mul	r18,r20,r2
 800ee88:	3816d43a 	srli	r11,r7,16
 800ee8c:	6814943a 	slli	r10,r13,16
 800ee90:	4ca5883a 	add	r18,r9,r18
 800ee94:	423fffcc 	andi	r8,r8,65535
 800ee98:	92e5883a 	add	r18,r18,r11
 800ee9c:	6808d43a 	srli	r4,r13,16
 800eea0:	5215883a 	add	r10,r10,r8
 800eea4:	a0c7383a 	mul	r3,r20,r3
 800eea8:	9240022e 	bgeu	r18,r9,800eeb4 <__muldf3+0x3a4>
 800eeac:	00800074 	movhi	r2,1
 800eeb0:	1887883a 	add	r3,r3,r2
 800eeb4:	802ad43a 	srli	r21,r16,16
 800eeb8:	80bfffcc 	andi	r2,r16,65535
 800eebc:	b893383a 	mul	r9,r23,r2
 800eec0:	3091383a 	mul	r8,r6,r2
 800eec4:	bd6f383a 	mul	r23,r23,r21
 800eec8:	9026943a 	slli	r19,r18,16
 800eecc:	481ad43a 	srli	r13,r9,16
 800eed0:	9024d43a 	srli	r18,r18,16
 800eed4:	39ffffcc 	andi	r7,r7,65535
 800eed8:	ba11883a 	add	r8,r23,r8
 800eedc:	99e7883a 	add	r19,r19,r7
 800eee0:	4351883a 	add	r8,r8,r13
 800eee4:	1c97883a 	add	r11,r3,r18
 800eee8:	354d383a 	mul	r6,r6,r21
 800eeec:	9925883a 	add	r18,r19,r4
 800eef0:	45c0022e 	bgeu	r8,r23,800eefc <__muldf3+0x3ec>
 800eef4:	00c00074 	movhi	r3,1
 800eef8:	30cd883a 	add	r6,r6,r3
 800eefc:	8889383a 	mul	r4,r17,r2
 800ef00:	8d63383a 	mul	r17,r17,r21
 800ef04:	a085383a 	mul	r2,r20,r2
 800ef08:	200ed43a 	srli	r7,r4,16
 800ef0c:	401cd43a 	srli	r14,r8,16
 800ef10:	401a943a 	slli	r13,r8,16
 800ef14:	8885883a 	add	r2,r17,r2
 800ef18:	4a3fffcc 	andi	r8,r9,65535
 800ef1c:	11c5883a 	add	r2,r2,r7
 800ef20:	339d883a 	add	r14,r6,r14
 800ef24:	6a11883a 	add	r8,r13,r8
 800ef28:	a561383a 	mul	r16,r20,r21
 800ef2c:	1440022e 	bgeu	r2,r17,800ef38 <__muldf3+0x428>
 800ef30:	00c00074 	movhi	r3,1
 800ef34:	80e1883a 	add	r16,r16,r3
 800ef38:	1006943a 	slli	r3,r2,16
 800ef3c:	213fffcc 	andi	r4,r4,65535
 800ef40:	93db883a 	add	r13,r18,r15
 800ef44:	1909883a 	add	r4,r3,r4
 800ef48:	22c7883a 	add	r3,r4,r11
 800ef4c:	6cd3803a 	cmpltu	r9,r13,r19
 800ef50:	6a09883a 	add	r4,r13,r8
 800ef54:	1a5b883a 	add	r13,r3,r9
 800ef58:	2211803a 	cmpltu	r8,r4,r8
 800ef5c:	734d883a 	add	r6,r14,r13
 800ef60:	100ed43a 	srli	r7,r2,16
 800ef64:	6a53803a 	cmpltu	r9,r13,r9
 800ef68:	3205883a 	add	r2,r6,r8
 800ef6c:	1ac7803a 	cmpltu	r3,r3,r11
 800ef70:	1211803a 	cmpltu	r8,r2,r8
 800ef74:	48c6b03a 	or	r3,r9,r3
 800ef78:	338d803a 	cmpltu	r6,r6,r14
 800ef7c:	19c7883a 	add	r3,r3,r7
 800ef80:	418cb03a 	or	r6,r8,r6
 800ef84:	1987883a 	add	r3,r3,r6
 800ef88:	2024927a 	slli	r18,r4,9
 800ef8c:	1c07883a 	add	r3,r3,r16
 800ef90:	1806927a 	slli	r3,r3,9
 800ef94:	1020d5fa 	srli	r16,r2,23
 800ef98:	2008d5fa 	srli	r4,r4,23
 800ef9c:	9294b03a 	or	r10,r18,r10
 800efa0:	1004927a 	slli	r2,r2,9
 800efa4:	5024c03a 	cmpne	r18,r10,zero
 800efa8:	1c20b03a 	or	r16,r3,r16
 800efac:	9108b03a 	or	r4,r18,r4
 800efb0:	80c0402c 	andhi	r3,r16,256
 800efb4:	20a4b03a 	or	r18,r4,r2
 800efb8:	18000726 	beq	r3,zero,800efd8 <__muldf3+0x4c8>
 800efbc:	9006d07a 	srli	r3,r18,1
 800efc0:	800897fa 	slli	r4,r16,31
 800efc4:	9080004c 	andi	r2,r18,1
 800efc8:	8020d07a 	srli	r16,r16,1
 800efcc:	10c4b03a 	or	r2,r2,r3
 800efd0:	1124b03a 	or	r18,r2,r4
 800efd4:	600b883a 	mov	r5,r12
 800efd8:	2900ffc4 	addi	r4,r5,1023
 800efdc:	01004b0e 	bge	zero,r4,800f10c <__muldf3+0x5fc>
 800efe0:	908001cc 	andi	r2,r18,7
 800efe4:	10000726 	beq	r2,zero,800f004 <__muldf3+0x4f4>
 800efe8:	90c003cc 	andi	r3,r18,15
 800efec:	00800104 	movi	r2,4
 800eff0:	18800426 	beq	r3,r2,800f004 <__muldf3+0x4f4>
 800eff4:	9087883a 	add	r3,r18,r2
 800eff8:	1c85803a 	cmpltu	r2,r3,r18
 800effc:	80a1883a 	add	r16,r16,r2
 800f000:	1825883a 	mov	r18,r3
 800f004:	8080402c 	andhi	r2,r16,256
 800f008:	10000426 	beq	r2,zero,800f01c <__muldf3+0x50c>
 800f00c:	00bfc034 	movhi	r2,65280
 800f010:	10bfffc4 	addi	r2,r2,-1
 800f014:	29010004 	addi	r4,r5,1024
 800f018:	80a0703a 	and	r16,r16,r2
 800f01c:	0081ff84 	movi	r2,2046
 800f020:	1100320e 	bge	r2,r4,800f0ec <__muldf3+0x5dc>
 800f024:	b4c0004c 	andi	r19,r22,1
 800f028:	0101ffc4 	movi	r4,2047
 800f02c:	0021883a 	mov	r16,zero
 800f030:	0025883a 	mov	r18,zero
 800f034:	003f1006 	br	800ec78 <__alt_data_end+0xfc00ec78>
 800f038:	8080022c 	andhi	r2,r16,8
 800f03c:	10000926 	beq	r2,zero,800f064 <__muldf3+0x554>
 800f040:	8880022c 	andhi	r2,r17,8
 800f044:	1000071e 	bne	r2,zero,800f064 <__muldf3+0x554>
 800f048:	00800434 	movhi	r2,16
 800f04c:	8c000234 	orhi	r16,r17,8
 800f050:	10bfffc4 	addi	r2,r2,-1
 800f054:	1827883a 	mov	r19,r3
 800f058:	80a0703a 	and	r16,r16,r2
 800f05c:	b825883a 	mov	r18,r23
 800f060:	003f6a06 	br	800ee0c <__alt_data_end+0xfc00ee0c>
 800f064:	00800434 	movhi	r2,16
 800f068:	84000234 	orhi	r16,r16,8
 800f06c:	10bfffc4 	addi	r2,r2,-1
 800f070:	80a0703a 	and	r16,r16,r2
 800f074:	003f6506 	br	800ee0c <__alt_data_end+0xfc00ee0c>
 800f078:	3009883a 	mov	r4,r6
 800f07c:	d8c00215 	stw	r3,8(sp)
 800f080:	d9800315 	stw	r6,12(sp)
 800f084:	da800015 	stw	r10,0(sp)
 800f088:	dac00115 	stw	r11,4(sp)
 800f08c:	800fd000 	call	800fd00 <__clzsi2>
 800f090:	11000804 	addi	r4,r2,32
 800f094:	014009c4 	movi	r5,39
 800f098:	d8c00217 	ldw	r3,8(sp)
 800f09c:	d9800317 	ldw	r6,12(sp)
 800f0a0:	da800017 	ldw	r10,0(sp)
 800f0a4:	dac00117 	ldw	r11,4(sp)
 800f0a8:	293f320e 	bge	r5,r4,800ed74 <__alt_data_end+0xfc00ed74>
 800f0ac:	10bffe04 	addi	r2,r2,-8
 800f0b0:	b8a2983a 	sll	r17,r23,r2
 800f0b4:	002f883a 	mov	r23,zero
 800f0b8:	003f3506 	br	800ed90 <__alt_data_end+0xfc00ed90>
 800f0bc:	d9800315 	stw	r6,12(sp)
 800f0c0:	d9c00015 	stw	r7,0(sp)
 800f0c4:	800fd000 	call	800fd00 <__clzsi2>
 800f0c8:	10c00804 	addi	r3,r2,32
 800f0cc:	010009c4 	movi	r4,39
 800f0d0:	d9800317 	ldw	r6,12(sp)
 800f0d4:	d9c00017 	ldw	r7,0(sp)
 800f0d8:	20ff060e 	bge	r4,r3,800ecf4 <__alt_data_end+0xfc00ecf4>
 800f0dc:	10bffe04 	addi	r2,r2,-8
 800f0e0:	88a0983a 	sll	r16,r17,r2
 800f0e4:	0025883a 	mov	r18,zero
 800f0e8:	003f0906 	br	800ed10 <__alt_data_end+0xfc00ed10>
 800f0ec:	9004d0fa 	srli	r2,r18,3
 800f0f0:	8024977a 	slli	r18,r16,29
 800f0f4:	8020927a 	slli	r16,r16,9
 800f0f8:	2101ffcc 	andi	r4,r4,2047
 800f0fc:	90a4b03a 	or	r18,r18,r2
 800f100:	8020d33a 	srli	r16,r16,12
 800f104:	b4c0004c 	andi	r19,r22,1
 800f108:	003edb06 	br	800ec78 <__alt_data_end+0xfc00ec78>
 800f10c:	00ff0084 	movi	r3,-1022
 800f110:	1947c83a 	sub	r3,r3,r5
 800f114:	00800e04 	movi	r2,56
 800f118:	10c0080e 	bge	r2,r3,800f13c <__muldf3+0x62c>
 800f11c:	b4c0004c 	andi	r19,r22,1
 800f120:	0009883a 	mov	r4,zero
 800f124:	0021883a 	mov	r16,zero
 800f128:	0025883a 	mov	r18,zero
 800f12c:	003ed206 	br	800ec78 <__alt_data_end+0xfc00ec78>
 800f130:	600b883a 	mov	r5,r12
 800f134:	e02d883a 	mov	r22,fp
 800f138:	003fa706 	br	800efd8 <__alt_data_end+0xfc00efd8>
 800f13c:	008007c4 	movi	r2,31
 800f140:	10c01816 	blt	r2,r3,800f1a4 <__muldf3+0x694>
 800f144:	29410784 	addi	r5,r5,1054
 800f148:	8144983a 	sll	r2,r16,r5
 800f14c:	90c8d83a 	srl	r4,r18,r3
 800f150:	914a983a 	sll	r5,r18,r5
 800f154:	80c6d83a 	srl	r3,r16,r3
 800f158:	2088b03a 	or	r4,r4,r2
 800f15c:	2804c03a 	cmpne	r2,r5,zero
 800f160:	2084b03a 	or	r2,r4,r2
 800f164:	110001cc 	andi	r4,r2,7
 800f168:	20000726 	beq	r4,zero,800f188 <__muldf3+0x678>
 800f16c:	114003cc 	andi	r5,r2,15
 800f170:	01000104 	movi	r4,4
 800f174:	29000426 	beq	r5,r4,800f188 <__muldf3+0x678>
 800f178:	11000104 	addi	r4,r2,4
 800f17c:	2085803a 	cmpltu	r2,r4,r2
 800f180:	1887883a 	add	r3,r3,r2
 800f184:	2005883a 	mov	r2,r4
 800f188:	1900202c 	andhi	r4,r3,128
 800f18c:	20001826 	beq	r4,zero,800f1f0 <__muldf3+0x6e0>
 800f190:	b4c0004c 	andi	r19,r22,1
 800f194:	01000044 	movi	r4,1
 800f198:	0021883a 	mov	r16,zero
 800f19c:	0025883a 	mov	r18,zero
 800f1a0:	003eb506 	br	800ec78 <__alt_data_end+0xfc00ec78>
 800f1a4:	00bef884 	movi	r2,-1054
 800f1a8:	1145c83a 	sub	r2,r2,r5
 800f1ac:	8088d83a 	srl	r4,r16,r2
 800f1b0:	00800804 	movi	r2,32
 800f1b4:	18801726 	beq	r3,r2,800f214 <__muldf3+0x704>
 800f1b8:	28810f84 	addi	r2,r5,1086
 800f1bc:	8084983a 	sll	r2,r16,r2
 800f1c0:	1484b03a 	or	r2,r2,r18
 800f1c4:	1004c03a 	cmpne	r2,r2,zero
 800f1c8:	1104b03a 	or	r2,r2,r4
 800f1cc:	10c001cc 	andi	r3,r2,7
 800f1d0:	18000b1e 	bne	r3,zero,800f200 <__muldf3+0x6f0>
 800f1d4:	0021883a 	mov	r16,zero
 800f1d8:	1004d0fa 	srli	r2,r2,3
 800f1dc:	b4c0004c 	andi	r19,r22,1
 800f1e0:	0009883a 	mov	r4,zero
 800f1e4:	10e4b03a 	or	r18,r2,r3
 800f1e8:	003ea306 	br	800ec78 <__alt_data_end+0xfc00ec78>
 800f1ec:	0007883a 	mov	r3,zero
 800f1f0:	1820927a 	slli	r16,r3,9
 800f1f4:	1806977a 	slli	r3,r3,29
 800f1f8:	8020d33a 	srli	r16,r16,12
 800f1fc:	003ff606 	br	800f1d8 <__alt_data_end+0xfc00f1d8>
 800f200:	110003cc 	andi	r4,r2,15
 800f204:	00c00104 	movi	r3,4
 800f208:	20fff826 	beq	r4,r3,800f1ec <__alt_data_end+0xfc00f1ec>
 800f20c:	0007883a 	mov	r3,zero
 800f210:	003fd906 	br	800f178 <__alt_data_end+0xfc00f178>
 800f214:	0005883a 	mov	r2,zero
 800f218:	003fe906 	br	800f1c0 <__alt_data_end+0xfc00f1c0>
 800f21c:	00800434 	movhi	r2,16
 800f220:	84000234 	orhi	r16,r16,8
 800f224:	10bfffc4 	addi	r2,r2,-1
 800f228:	e4c0004c 	andi	r19,fp,1
 800f22c:	80a0703a 	and	r16,r16,r2
 800f230:	003ef606 	br	800ee0c <__alt_data_end+0xfc00ee0c>

0800f234 <__subdf3>:
 800f234:	00c00434 	movhi	r3,16
 800f238:	18ffffc4 	addi	r3,r3,-1
 800f23c:	defffb04 	addi	sp,sp,-20
 800f240:	28d2703a 	and	r9,r5,r3
 800f244:	3814d53a 	srli	r10,r7,20
 800f248:	38c6703a 	and	r3,r7,r3
 800f24c:	3004d77a 	srli	r2,r6,29
 800f250:	dc800215 	stw	r18,8(sp)
 800f254:	dc000015 	stw	r16,0(sp)
 800f258:	2824d7fa 	srli	r18,r5,31
 800f25c:	2820d53a 	srli	r16,r5,20
 800f260:	481290fa 	slli	r9,r9,3
 800f264:	200ad77a 	srli	r5,r4,29
 800f268:	180690fa 	slli	r3,r3,3
 800f26c:	dc400115 	stw	r17,4(sp)
 800f270:	dfc00415 	stw	ra,16(sp)
 800f274:	202290fa 	slli	r17,r4,3
 800f278:	dcc00315 	stw	r19,12(sp)
 800f27c:	5281ffcc 	andi	r10,r10,2047
 800f280:	0101ffc4 	movi	r4,2047
 800f284:	9011883a 	mov	r8,r18
 800f288:	8401ffcc 	andi	r16,r16,2047
 800f28c:	94803fcc 	andi	r18,r18,255
 800f290:	494ab03a 	or	r5,r9,r5
 800f294:	380ed7fa 	srli	r7,r7,31
 800f298:	1886b03a 	or	r3,r3,r2
 800f29c:	300c90fa 	slli	r6,r6,3
 800f2a0:	51009026 	beq	r10,r4,800f4e4 <__subdf3+0x2b0>
 800f2a4:	39c0005c 	xori	r7,r7,1
 800f2a8:	8285c83a 	sub	r2,r16,r10
 800f2ac:	91c06f26 	beq	r18,r7,800f46c <__subdf3+0x238>
 800f2b0:	0080b10e 	bge	zero,r2,800f578 <__subdf3+0x344>
 800f2b4:	50002a1e 	bne	r10,zero,800f360 <__subdf3+0x12c>
 800f2b8:	1988b03a 	or	r4,r3,r6
 800f2bc:	2000941e 	bne	r4,zero,800f510 <__subdf3+0x2dc>
 800f2c0:	888001cc 	andi	r2,r17,7
 800f2c4:	10005b26 	beq	r2,zero,800f434 <__subdf3+0x200>
 800f2c8:	88c003cc 	andi	r3,r17,15
 800f2cc:	00800104 	movi	r2,4
 800f2d0:	18805826 	beq	r3,r2,800f434 <__subdf3+0x200>
 800f2d4:	88c00104 	addi	r3,r17,4
 800f2d8:	1c63803a 	cmpltu	r17,r3,r17
 800f2dc:	2c4b883a 	add	r5,r5,r17
 800f2e0:	2880202c 	andhi	r2,r5,128
 800f2e4:	9200004c 	andi	r8,r18,1
 800f2e8:	1823883a 	mov	r17,r3
 800f2ec:	10005426 	beq	r2,zero,800f440 <__subdf3+0x20c>
 800f2f0:	84000044 	addi	r16,r16,1
 800f2f4:	0081ffc4 	movi	r2,2047
 800f2f8:	8080bf26 	beq	r16,r2,800f5f8 <__subdf3+0x3c4>
 800f2fc:	013fe034 	movhi	r4,65408
 800f300:	213fffc4 	addi	r4,r4,-1
 800f304:	290a703a 	and	r5,r5,r4
 800f308:	2804977a 	slli	r2,r5,29
 800f30c:	280a927a 	slli	r5,r5,9
 800f310:	8822d0fa 	srli	r17,r17,3
 800f314:	8401ffcc 	andi	r16,r16,2047
 800f318:	2808d33a 	srli	r4,r5,12
 800f31c:	1444b03a 	or	r2,r2,r17
 800f320:	8401ffcc 	andi	r16,r16,2047
 800f324:	800a953a 	slli	r5,r16,20
 800f328:	40c03fcc 	andi	r3,r8,255
 800f32c:	04000434 	movhi	r16,16
 800f330:	180697fa 	slli	r3,r3,31
 800f334:	843fffc4 	addi	r16,r16,-1
 800f338:	2420703a 	and	r16,r4,r16
 800f33c:	8160b03a 	or	r16,r16,r5
 800f340:	80c6b03a 	or	r3,r16,r3
 800f344:	dfc00417 	ldw	ra,16(sp)
 800f348:	dcc00317 	ldw	r19,12(sp)
 800f34c:	dc800217 	ldw	r18,8(sp)
 800f350:	dc400117 	ldw	r17,4(sp)
 800f354:	dc000017 	ldw	r16,0(sp)
 800f358:	dec00504 	addi	sp,sp,20
 800f35c:	f800283a 	ret
 800f360:	0101ffc4 	movi	r4,2047
 800f364:	813fd626 	beq	r16,r4,800f2c0 <__alt_data_end+0xfc00f2c0>
 800f368:	18c02034 	orhi	r3,r3,128
 800f36c:	01000e04 	movi	r4,56
 800f370:	2080a416 	blt	r4,r2,800f604 <__subdf3+0x3d0>
 800f374:	010007c4 	movi	r4,31
 800f378:	2080c716 	blt	r4,r2,800f698 <__subdf3+0x464>
 800f37c:	01000804 	movi	r4,32
 800f380:	2089c83a 	sub	r4,r4,r2
 800f384:	1910983a 	sll	r8,r3,r4
 800f388:	308ed83a 	srl	r7,r6,r2
 800f38c:	3108983a 	sll	r4,r6,r4
 800f390:	1884d83a 	srl	r2,r3,r2
 800f394:	41ccb03a 	or	r6,r8,r7
 800f398:	2008c03a 	cmpne	r4,r4,zero
 800f39c:	310cb03a 	or	r6,r6,r4
 800f3a0:	898dc83a 	sub	r6,r17,r6
 800f3a4:	89a3803a 	cmpltu	r17,r17,r6
 800f3a8:	288bc83a 	sub	r5,r5,r2
 800f3ac:	2c4bc83a 	sub	r5,r5,r17
 800f3b0:	3023883a 	mov	r17,r6
 800f3b4:	2880202c 	andhi	r2,r5,128
 800f3b8:	10006b26 	beq	r2,zero,800f568 <__subdf3+0x334>
 800f3bc:	04c02034 	movhi	r19,128
 800f3c0:	9cffffc4 	addi	r19,r19,-1
 800f3c4:	2ce6703a 	and	r19,r5,r19
 800f3c8:	98007c26 	beq	r19,zero,800f5bc <__subdf3+0x388>
 800f3cc:	9809883a 	mov	r4,r19
 800f3d0:	800fd000 	call	800fd00 <__clzsi2>
 800f3d4:	10fffe04 	addi	r3,r2,-8
 800f3d8:	010007c4 	movi	r4,31
 800f3dc:	20c07d16 	blt	r4,r3,800f5d4 <__subdf3+0x3a0>
 800f3e0:	01400a04 	movi	r5,40
 800f3e4:	2885c83a 	sub	r2,r5,r2
 800f3e8:	888ad83a 	srl	r5,r17,r2
 800f3ec:	98e6983a 	sll	r19,r19,r3
 800f3f0:	88e2983a 	sll	r17,r17,r3
 800f3f4:	2ce6b03a 	or	r19,r5,r19
 800f3f8:	1c007a16 	blt	r3,r16,800f5e4 <__subdf3+0x3b0>
 800f3fc:	1c21c83a 	sub	r16,r3,r16
 800f400:	81400044 	addi	r5,r16,1
 800f404:	00c007c4 	movi	r3,31
 800f408:	19409616 	blt	r3,r5,800f664 <__subdf3+0x430>
 800f40c:	1c21c83a 	sub	r16,r3,r16
 800f410:	8c08983a 	sll	r4,r17,r16
 800f414:	8946d83a 	srl	r3,r17,r5
 800f418:	9c20983a 	sll	r16,r19,r16
 800f41c:	2008c03a 	cmpne	r4,r4,zero
 800f420:	994ad83a 	srl	r5,r19,r5
 800f424:	1c06b03a 	or	r3,r3,r16
 800f428:	1922b03a 	or	r17,r3,r4
 800f42c:	0021883a 	mov	r16,zero
 800f430:	003fa306 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f434:	2880202c 	andhi	r2,r5,128
 800f438:	9200004c 	andi	r8,r18,1
 800f43c:	103fac1e 	bne	r2,zero,800f2f0 <__alt_data_end+0xfc00f2f0>
 800f440:	2804977a 	slli	r2,r5,29
 800f444:	8822d0fa 	srli	r17,r17,3
 800f448:	00c1ffc4 	movi	r3,2047
 800f44c:	280ad0fa 	srli	r5,r5,3
 800f450:	1444b03a 	or	r2,r2,r17
 800f454:	80c02726 	beq	r16,r3,800f4f4 <__subdf3+0x2c0>
 800f458:	01000434 	movhi	r4,16
 800f45c:	213fffc4 	addi	r4,r4,-1
 800f460:	80e0703a 	and	r16,r16,r3
 800f464:	2908703a 	and	r4,r5,r4
 800f468:	003fad06 	br	800f320 <__alt_data_end+0xfc00f320>
 800f46c:	0080690e 	bge	zero,r2,800f614 <__subdf3+0x3e0>
 800f470:	50002f26 	beq	r10,zero,800f530 <__subdf3+0x2fc>
 800f474:	0101ffc4 	movi	r4,2047
 800f478:	813f9126 	beq	r16,r4,800f2c0 <__alt_data_end+0xfc00f2c0>
 800f47c:	18c02034 	orhi	r3,r3,128
 800f480:	01000e04 	movi	r4,56
 800f484:	2080b00e 	bge	r4,r2,800f748 <__subdf3+0x514>
 800f488:	198cb03a 	or	r6,r3,r6
 800f48c:	300ec03a 	cmpne	r7,r6,zero
 800f490:	0005883a 	mov	r2,zero
 800f494:	3c4f883a 	add	r7,r7,r17
 800f498:	3c63803a 	cmpltu	r17,r7,r17
 800f49c:	114b883a 	add	r5,r2,r5
 800f4a0:	2c4b883a 	add	r5,r5,r17
 800f4a4:	3823883a 	mov	r17,r7
 800f4a8:	2880202c 	andhi	r2,r5,128
 800f4ac:	10002e26 	beq	r2,zero,800f568 <__subdf3+0x334>
 800f4b0:	84000044 	addi	r16,r16,1
 800f4b4:	0081ffc4 	movi	r2,2047
 800f4b8:	8080de26 	beq	r16,r2,800f834 <__subdf3+0x600>
 800f4bc:	00bfe034 	movhi	r2,65408
 800f4c0:	10bfffc4 	addi	r2,r2,-1
 800f4c4:	288a703a 	and	r5,r5,r2
 800f4c8:	880cd07a 	srli	r6,r17,1
 800f4cc:	280897fa 	slli	r4,r5,31
 800f4d0:	88c0004c 	andi	r3,r17,1
 800f4d4:	30e2b03a 	or	r17,r6,r3
 800f4d8:	280ad07a 	srli	r5,r5,1
 800f4dc:	8922b03a 	or	r17,r17,r4
 800f4e0:	003f7706 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f4e4:	1984b03a 	or	r2,r3,r6
 800f4e8:	103f6e26 	beq	r2,zero,800f2a4 <__alt_data_end+0xfc00f2a4>
 800f4ec:	39c03fcc 	andi	r7,r7,255
 800f4f0:	003f6d06 	br	800f2a8 <__alt_data_end+0xfc00f2a8>
 800f4f4:	1146b03a 	or	r3,r2,r5
 800f4f8:	18003f26 	beq	r3,zero,800f5f8 <__subdf3+0x3c4>
 800f4fc:	00c00434 	movhi	r3,16
 800f500:	29000234 	orhi	r4,r5,8
 800f504:	18ffffc4 	addi	r3,r3,-1
 800f508:	20c8703a 	and	r4,r4,r3
 800f50c:	003f8406 	br	800f320 <__alt_data_end+0xfc00f320>
 800f510:	10bfffc4 	addi	r2,r2,-1
 800f514:	1000501e 	bne	r2,zero,800f658 <__subdf3+0x424>
 800f518:	898fc83a 	sub	r7,r17,r6
 800f51c:	89e3803a 	cmpltu	r17,r17,r7
 800f520:	28cbc83a 	sub	r5,r5,r3
 800f524:	2c4bc83a 	sub	r5,r5,r17
 800f528:	3823883a 	mov	r17,r7
 800f52c:	003fa106 	br	800f3b4 <__alt_data_end+0xfc00f3b4>
 800f530:	1988b03a 	or	r4,r3,r6
 800f534:	203f6226 	beq	r4,zero,800f2c0 <__alt_data_end+0xfc00f2c0>
 800f538:	10bfffc4 	addi	r2,r2,-1
 800f53c:	10009b1e 	bne	r2,zero,800f7ac <__subdf3+0x578>
 800f540:	344d883a 	add	r6,r6,r17
 800f544:	3463803a 	cmpltu	r17,r6,r17
 800f548:	194b883a 	add	r5,r3,r5
 800f54c:	2c4b883a 	add	r5,r5,r17
 800f550:	3023883a 	mov	r17,r6
 800f554:	003fd406 	br	800f4a8 <__alt_data_end+0xfc00f4a8>
 800f558:	1106b03a 	or	r3,r2,r4
 800f55c:	1800b426 	beq	r3,zero,800f830 <__subdf3+0x5fc>
 800f560:	100b883a 	mov	r5,r2
 800f564:	2023883a 	mov	r17,r4
 800f568:	888001cc 	andi	r2,r17,7
 800f56c:	103f561e 	bne	r2,zero,800f2c8 <__alt_data_end+0xfc00f2c8>
 800f570:	9200004c 	andi	r8,r18,1
 800f574:	003fb206 	br	800f440 <__alt_data_end+0xfc00f440>
 800f578:	1000531e 	bne	r2,zero,800f6c8 <__subdf3+0x494>
 800f57c:	80800044 	addi	r2,r16,1
 800f580:	1081ffcc 	andi	r2,r2,2047
 800f584:	01000044 	movi	r4,1
 800f588:	2080a00e 	bge	r4,r2,800f80c <__subdf3+0x5d8>
 800f58c:	8985c83a 	sub	r2,r17,r6
 800f590:	8889803a 	cmpltu	r4,r17,r2
 800f594:	28e7c83a 	sub	r19,r5,r3
 800f598:	9927c83a 	sub	r19,r19,r4
 800f59c:	9900202c 	andhi	r4,r19,128
 800f5a0:	20006226 	beq	r4,zero,800f72c <__subdf3+0x4f8>
 800f5a4:	3463c83a 	sub	r17,r6,r17
 800f5a8:	194bc83a 	sub	r5,r3,r5
 800f5ac:	344d803a 	cmpltu	r6,r6,r17
 800f5b0:	29a7c83a 	sub	r19,r5,r6
 800f5b4:	3825883a 	mov	r18,r7
 800f5b8:	983f841e 	bne	r19,zero,800f3cc <__alt_data_end+0xfc00f3cc>
 800f5bc:	8809883a 	mov	r4,r17
 800f5c0:	800fd000 	call	800fd00 <__clzsi2>
 800f5c4:	10800804 	addi	r2,r2,32
 800f5c8:	10fffe04 	addi	r3,r2,-8
 800f5cc:	010007c4 	movi	r4,31
 800f5d0:	20ff830e 	bge	r4,r3,800f3e0 <__alt_data_end+0xfc00f3e0>
 800f5d4:	14fff604 	addi	r19,r2,-40
 800f5d8:	8ce6983a 	sll	r19,r17,r19
 800f5dc:	0023883a 	mov	r17,zero
 800f5e0:	1c3f860e 	bge	r3,r16,800f3fc <__alt_data_end+0xfc00f3fc>
 800f5e4:	017fe034 	movhi	r5,65408
 800f5e8:	297fffc4 	addi	r5,r5,-1
 800f5ec:	80e1c83a 	sub	r16,r16,r3
 800f5f0:	994a703a 	and	r5,r19,r5
 800f5f4:	003f3206 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f5f8:	0009883a 	mov	r4,zero
 800f5fc:	0005883a 	mov	r2,zero
 800f600:	003f4706 	br	800f320 <__alt_data_end+0xfc00f320>
 800f604:	198cb03a 	or	r6,r3,r6
 800f608:	300cc03a 	cmpne	r6,r6,zero
 800f60c:	0005883a 	mov	r2,zero
 800f610:	003f6306 	br	800f3a0 <__alt_data_end+0xfc00f3a0>
 800f614:	10009d1e 	bne	r2,zero,800f88c <__subdf3+0x658>
 800f618:	81c00044 	addi	r7,r16,1
 800f61c:	3881ffcc 	andi	r2,r7,2047
 800f620:	02400044 	movi	r9,1
 800f624:	4880680e 	bge	r9,r2,800f7c8 <__subdf3+0x594>
 800f628:	0081ffc4 	movi	r2,2047
 800f62c:	3880ae26 	beq	r7,r2,800f8e8 <__subdf3+0x6b4>
 800f630:	344d883a 	add	r6,r6,r17
 800f634:	3463803a 	cmpltu	r17,r6,r17
 800f638:	194b883a 	add	r5,r3,r5
 800f63c:	2c4b883a 	add	r5,r5,r17
 800f640:	282297fa 	slli	r17,r5,31
 800f644:	300cd07a 	srli	r6,r6,1
 800f648:	280ad07a 	srli	r5,r5,1
 800f64c:	3821883a 	mov	r16,r7
 800f650:	89a2b03a 	or	r17,r17,r6
 800f654:	003f1a06 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f658:	0101ffc4 	movi	r4,2047
 800f65c:	813f431e 	bne	r16,r4,800f36c <__alt_data_end+0xfc00f36c>
 800f660:	003f1706 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f664:	80bff844 	addi	r2,r16,-31
 800f668:	00c00804 	movi	r3,32
 800f66c:	9884d83a 	srl	r2,r19,r2
 800f670:	28c05126 	beq	r5,r3,800f7b8 <__subdf3+0x584>
 800f674:	00c00fc4 	movi	r3,63
 800f678:	1c21c83a 	sub	r16,r3,r16
 800f67c:	9c26983a 	sll	r19,r19,r16
 800f680:	9c62b03a 	or	r17,r19,r17
 800f684:	8822c03a 	cmpne	r17,r17,zero
 800f688:	88a2b03a 	or	r17,r17,r2
 800f68c:	000b883a 	mov	r5,zero
 800f690:	0021883a 	mov	r16,zero
 800f694:	003fb406 	br	800f568 <__alt_data_end+0xfc00f568>
 800f698:	113ff804 	addi	r4,r2,-32
 800f69c:	01c00804 	movi	r7,32
 800f6a0:	1908d83a 	srl	r4,r3,r4
 800f6a4:	11c04626 	beq	r2,r7,800f7c0 <__subdf3+0x58c>
 800f6a8:	01c01004 	movi	r7,64
 800f6ac:	3885c83a 	sub	r2,r7,r2
 800f6b0:	1884983a 	sll	r2,r3,r2
 800f6b4:	118cb03a 	or	r6,r2,r6
 800f6b8:	300cc03a 	cmpne	r6,r6,zero
 800f6bc:	310cb03a 	or	r6,r6,r4
 800f6c0:	0005883a 	mov	r2,zero
 800f6c4:	003f3606 	br	800f3a0 <__alt_data_end+0xfc00f3a0>
 800f6c8:	80002b26 	beq	r16,zero,800f778 <__subdf3+0x544>
 800f6cc:	0101ffc4 	movi	r4,2047
 800f6d0:	51006926 	beq	r10,r4,800f878 <__subdf3+0x644>
 800f6d4:	0085c83a 	sub	r2,zero,r2
 800f6d8:	29402034 	orhi	r5,r5,128
 800f6dc:	01000e04 	movi	r4,56
 800f6e0:	20807d16 	blt	r4,r2,800f8d8 <__subdf3+0x6a4>
 800f6e4:	010007c4 	movi	r4,31
 800f6e8:	2080d916 	blt	r4,r2,800fa50 <__subdf3+0x81c>
 800f6ec:	01000804 	movi	r4,32
 800f6f0:	2089c83a 	sub	r4,r4,r2
 800f6f4:	2912983a 	sll	r9,r5,r4
 800f6f8:	8890d83a 	srl	r8,r17,r2
 800f6fc:	8908983a 	sll	r4,r17,r4
 800f700:	2884d83a 	srl	r2,r5,r2
 800f704:	4a22b03a 	or	r17,r9,r8
 800f708:	2008c03a 	cmpne	r4,r4,zero
 800f70c:	8922b03a 	or	r17,r17,r4
 800f710:	3463c83a 	sub	r17,r6,r17
 800f714:	1885c83a 	sub	r2,r3,r2
 800f718:	344d803a 	cmpltu	r6,r6,r17
 800f71c:	118bc83a 	sub	r5,r2,r6
 800f720:	5021883a 	mov	r16,r10
 800f724:	3825883a 	mov	r18,r7
 800f728:	003f2206 	br	800f3b4 <__alt_data_end+0xfc00f3b4>
 800f72c:	9886b03a 	or	r3,r19,r2
 800f730:	18001c1e 	bne	r3,zero,800f7a4 <__subdf3+0x570>
 800f734:	0011883a 	mov	r8,zero
 800f738:	000b883a 	mov	r5,zero
 800f73c:	0023883a 	mov	r17,zero
 800f740:	0021883a 	mov	r16,zero
 800f744:	003f3e06 	br	800f440 <__alt_data_end+0xfc00f440>
 800f748:	010007c4 	movi	r4,31
 800f74c:	20803c16 	blt	r4,r2,800f840 <__subdf3+0x60c>
 800f750:	01000804 	movi	r4,32
 800f754:	2089c83a 	sub	r4,r4,r2
 800f758:	1912983a 	sll	r9,r3,r4
 800f75c:	308ed83a 	srl	r7,r6,r2
 800f760:	3108983a 	sll	r4,r6,r4
 800f764:	1884d83a 	srl	r2,r3,r2
 800f768:	49ceb03a 	or	r7,r9,r7
 800f76c:	2008c03a 	cmpne	r4,r4,zero
 800f770:	390eb03a 	or	r7,r7,r4
 800f774:	003f4706 	br	800f494 <__alt_data_end+0xfc00f494>
 800f778:	2c48b03a 	or	r4,r5,r17
 800f77c:	20003e26 	beq	r4,zero,800f878 <__subdf3+0x644>
 800f780:	0084303a 	nor	r2,zero,r2
 800f784:	10003a1e 	bne	r2,zero,800f870 <__subdf3+0x63c>
 800f788:	3463c83a 	sub	r17,r6,r17
 800f78c:	194bc83a 	sub	r5,r3,r5
 800f790:	344d803a 	cmpltu	r6,r6,r17
 800f794:	298bc83a 	sub	r5,r5,r6
 800f798:	5021883a 	mov	r16,r10
 800f79c:	3825883a 	mov	r18,r7
 800f7a0:	003f0406 	br	800f3b4 <__alt_data_end+0xfc00f3b4>
 800f7a4:	1023883a 	mov	r17,r2
 800f7a8:	003f0706 	br	800f3c8 <__alt_data_end+0xfc00f3c8>
 800f7ac:	0101ffc4 	movi	r4,2047
 800f7b0:	813f331e 	bne	r16,r4,800f480 <__alt_data_end+0xfc00f480>
 800f7b4:	003ec206 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f7b8:	0027883a 	mov	r19,zero
 800f7bc:	003fb006 	br	800f680 <__alt_data_end+0xfc00f680>
 800f7c0:	0005883a 	mov	r2,zero
 800f7c4:	003fbb06 	br	800f6b4 <__alt_data_end+0xfc00f6b4>
 800f7c8:	2c44b03a 	or	r2,r5,r17
 800f7cc:	80008b1e 	bne	r16,zero,800f9fc <__subdf3+0x7c8>
 800f7d0:	1000b526 	beq	r2,zero,800faa8 <__subdf3+0x874>
 800f7d4:	1984b03a 	or	r2,r3,r6
 800f7d8:	103eb926 	beq	r2,zero,800f2c0 <__alt_data_end+0xfc00f2c0>
 800f7dc:	3449883a 	add	r4,r6,r17
 800f7e0:	2463803a 	cmpltu	r17,r4,r17
 800f7e4:	194b883a 	add	r5,r3,r5
 800f7e8:	2c4b883a 	add	r5,r5,r17
 800f7ec:	2880202c 	andhi	r2,r5,128
 800f7f0:	2023883a 	mov	r17,r4
 800f7f4:	103f5c26 	beq	r2,zero,800f568 <__alt_data_end+0xfc00f568>
 800f7f8:	00bfe034 	movhi	r2,65408
 800f7fc:	10bfffc4 	addi	r2,r2,-1
 800f800:	4821883a 	mov	r16,r9
 800f804:	288a703a 	and	r5,r5,r2
 800f808:	003ead06 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f80c:	2c44b03a 	or	r2,r5,r17
 800f810:	8000291e 	bne	r16,zero,800f8b8 <__subdf3+0x684>
 800f814:	10004f1e 	bne	r2,zero,800f954 <__subdf3+0x720>
 800f818:	1984b03a 	or	r2,r3,r6
 800f81c:	10000426 	beq	r2,zero,800f830 <__subdf3+0x5fc>
 800f820:	180b883a 	mov	r5,r3
 800f824:	3023883a 	mov	r17,r6
 800f828:	3825883a 	mov	r18,r7
 800f82c:	003ea406 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f830:	0011883a 	mov	r8,zero
 800f834:	000b883a 	mov	r5,zero
 800f838:	0023883a 	mov	r17,zero
 800f83c:	003f0006 	br	800f440 <__alt_data_end+0xfc00f440>
 800f840:	11fff804 	addi	r7,r2,-32
 800f844:	19c8d83a 	srl	r4,r3,r7
 800f848:	01c00804 	movi	r7,32
 800f84c:	11c07e26 	beq	r2,r7,800fa48 <__subdf3+0x814>
 800f850:	01c01004 	movi	r7,64
 800f854:	3885c83a 	sub	r2,r7,r2
 800f858:	1884983a 	sll	r2,r3,r2
 800f85c:	118cb03a 	or	r6,r2,r6
 800f860:	300ec03a 	cmpne	r7,r6,zero
 800f864:	390eb03a 	or	r7,r7,r4
 800f868:	0005883a 	mov	r2,zero
 800f86c:	003f0906 	br	800f494 <__alt_data_end+0xfc00f494>
 800f870:	0101ffc4 	movi	r4,2047
 800f874:	513f991e 	bne	r10,r4,800f6dc <__alt_data_end+0xfc00f6dc>
 800f878:	180b883a 	mov	r5,r3
 800f87c:	3023883a 	mov	r17,r6
 800f880:	5021883a 	mov	r16,r10
 800f884:	3825883a 	mov	r18,r7
 800f888:	003e8d06 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f88c:	80001a1e 	bne	r16,zero,800f8f8 <__subdf3+0x6c4>
 800f890:	2c48b03a 	or	r4,r5,r17
 800f894:	20005526 	beq	r4,zero,800f9ec <__subdf3+0x7b8>
 800f898:	0084303a 	nor	r2,zero,r2
 800f89c:	1000511e 	bne	r2,zero,800f9e4 <__subdf3+0x7b0>
 800f8a0:	89a3883a 	add	r17,r17,r6
 800f8a4:	194b883a 	add	r5,r3,r5
 800f8a8:	898d803a 	cmpltu	r6,r17,r6
 800f8ac:	298b883a 	add	r5,r5,r6
 800f8b0:	5021883a 	mov	r16,r10
 800f8b4:	003efc06 	br	800f4a8 <__alt_data_end+0xfc00f4a8>
 800f8b8:	1000341e 	bne	r2,zero,800f98c <__subdf3+0x758>
 800f8bc:	1984b03a 	or	r2,r3,r6
 800f8c0:	10006f26 	beq	r2,zero,800fa80 <__subdf3+0x84c>
 800f8c4:	180b883a 	mov	r5,r3
 800f8c8:	3023883a 	mov	r17,r6
 800f8cc:	3825883a 	mov	r18,r7
 800f8d0:	0401ffc4 	movi	r16,2047
 800f8d4:	003e7a06 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f8d8:	2c62b03a 	or	r17,r5,r17
 800f8dc:	8822c03a 	cmpne	r17,r17,zero
 800f8e0:	0005883a 	mov	r2,zero
 800f8e4:	003f8a06 	br	800f710 <__alt_data_end+0xfc00f710>
 800f8e8:	3821883a 	mov	r16,r7
 800f8ec:	000b883a 	mov	r5,zero
 800f8f0:	0023883a 	mov	r17,zero
 800f8f4:	003ed206 	br	800f440 <__alt_data_end+0xfc00f440>
 800f8f8:	0101ffc4 	movi	r4,2047
 800f8fc:	51003b26 	beq	r10,r4,800f9ec <__subdf3+0x7b8>
 800f900:	0085c83a 	sub	r2,zero,r2
 800f904:	29402034 	orhi	r5,r5,128
 800f908:	01000e04 	movi	r4,56
 800f90c:	20806216 	blt	r4,r2,800fa98 <__subdf3+0x864>
 800f910:	010007c4 	movi	r4,31
 800f914:	20806b16 	blt	r4,r2,800fac4 <__subdf3+0x890>
 800f918:	01000804 	movi	r4,32
 800f91c:	2089c83a 	sub	r4,r4,r2
 800f920:	2912983a 	sll	r9,r5,r4
 800f924:	888ed83a 	srl	r7,r17,r2
 800f928:	8908983a 	sll	r4,r17,r4
 800f92c:	2884d83a 	srl	r2,r5,r2
 800f930:	49e2b03a 	or	r17,r9,r7
 800f934:	2008c03a 	cmpne	r4,r4,zero
 800f938:	8922b03a 	or	r17,r17,r4
 800f93c:	89a3883a 	add	r17,r17,r6
 800f940:	10c5883a 	add	r2,r2,r3
 800f944:	898d803a 	cmpltu	r6,r17,r6
 800f948:	118b883a 	add	r5,r2,r6
 800f94c:	5021883a 	mov	r16,r10
 800f950:	003ed506 	br	800f4a8 <__alt_data_end+0xfc00f4a8>
 800f954:	1984b03a 	or	r2,r3,r6
 800f958:	103e5926 	beq	r2,zero,800f2c0 <__alt_data_end+0xfc00f2c0>
 800f95c:	8989c83a 	sub	r4,r17,r6
 800f960:	8911803a 	cmpltu	r8,r17,r4
 800f964:	28c5c83a 	sub	r2,r5,r3
 800f968:	1205c83a 	sub	r2,r2,r8
 800f96c:	1200202c 	andhi	r8,r2,128
 800f970:	403ef926 	beq	r8,zero,800f558 <__alt_data_end+0xfc00f558>
 800f974:	3463c83a 	sub	r17,r6,r17
 800f978:	194bc83a 	sub	r5,r3,r5
 800f97c:	344d803a 	cmpltu	r6,r6,r17
 800f980:	298bc83a 	sub	r5,r5,r6
 800f984:	3825883a 	mov	r18,r7
 800f988:	003e4d06 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f98c:	1984b03a 	or	r2,r3,r6
 800f990:	10002b26 	beq	r2,zero,800fa40 <__subdf3+0x80c>
 800f994:	2808d0fa 	srli	r4,r5,3
 800f998:	8822d0fa 	srli	r17,r17,3
 800f99c:	280a977a 	slli	r5,r5,29
 800f9a0:	2080022c 	andhi	r2,r4,8
 800f9a4:	2c62b03a 	or	r17,r5,r17
 800f9a8:	10000826 	beq	r2,zero,800f9cc <__subdf3+0x798>
 800f9ac:	1810d0fa 	srli	r8,r3,3
 800f9b0:	4080022c 	andhi	r2,r8,8
 800f9b4:	1000051e 	bne	r2,zero,800f9cc <__subdf3+0x798>
 800f9b8:	300cd0fa 	srli	r6,r6,3
 800f9bc:	1804977a 	slli	r2,r3,29
 800f9c0:	4009883a 	mov	r4,r8
 800f9c4:	3825883a 	mov	r18,r7
 800f9c8:	11a2b03a 	or	r17,r2,r6
 800f9cc:	880ad77a 	srli	r5,r17,29
 800f9d0:	200890fa 	slli	r4,r4,3
 800f9d4:	882290fa 	slli	r17,r17,3
 800f9d8:	0401ffc4 	movi	r16,2047
 800f9dc:	290ab03a 	or	r5,r5,r4
 800f9e0:	003e3706 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f9e4:	0101ffc4 	movi	r4,2047
 800f9e8:	513fc71e 	bne	r10,r4,800f908 <__alt_data_end+0xfc00f908>
 800f9ec:	180b883a 	mov	r5,r3
 800f9f0:	3023883a 	mov	r17,r6
 800f9f4:	5021883a 	mov	r16,r10
 800f9f8:	003e3106 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800f9fc:	10002d26 	beq	r2,zero,800fab4 <__subdf3+0x880>
 800fa00:	1984b03a 	or	r2,r3,r6
 800fa04:	10000e26 	beq	r2,zero,800fa40 <__subdf3+0x80c>
 800fa08:	2808d0fa 	srli	r4,r5,3
 800fa0c:	8822d0fa 	srli	r17,r17,3
 800fa10:	280a977a 	slli	r5,r5,29
 800fa14:	2080022c 	andhi	r2,r4,8
 800fa18:	2c62b03a 	or	r17,r5,r17
 800fa1c:	103feb26 	beq	r2,zero,800f9cc <__alt_data_end+0xfc00f9cc>
 800fa20:	180ed0fa 	srli	r7,r3,3
 800fa24:	3880022c 	andhi	r2,r7,8
 800fa28:	103fe81e 	bne	r2,zero,800f9cc <__alt_data_end+0xfc00f9cc>
 800fa2c:	300cd0fa 	srli	r6,r6,3
 800fa30:	1804977a 	slli	r2,r3,29
 800fa34:	3809883a 	mov	r4,r7
 800fa38:	11a2b03a 	or	r17,r2,r6
 800fa3c:	003fe306 	br	800f9cc <__alt_data_end+0xfc00f9cc>
 800fa40:	0401ffc4 	movi	r16,2047
 800fa44:	003e1e06 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800fa48:	0005883a 	mov	r2,zero
 800fa4c:	003f8306 	br	800f85c <__alt_data_end+0xfc00f85c>
 800fa50:	113ff804 	addi	r4,r2,-32
 800fa54:	02000804 	movi	r8,32
 800fa58:	2908d83a 	srl	r4,r5,r4
 800fa5c:	12002526 	beq	r2,r8,800faf4 <__subdf3+0x8c0>
 800fa60:	02001004 	movi	r8,64
 800fa64:	4085c83a 	sub	r2,r8,r2
 800fa68:	288a983a 	sll	r5,r5,r2
 800fa6c:	2c62b03a 	or	r17,r5,r17
 800fa70:	8822c03a 	cmpne	r17,r17,zero
 800fa74:	8922b03a 	or	r17,r17,r4
 800fa78:	0005883a 	mov	r2,zero
 800fa7c:	003f2406 	br	800f710 <__alt_data_end+0xfc00f710>
 800fa80:	01402034 	movhi	r5,128
 800fa84:	0011883a 	mov	r8,zero
 800fa88:	297fffc4 	addi	r5,r5,-1
 800fa8c:	047ffe04 	movi	r17,-8
 800fa90:	0401ffc4 	movi	r16,2047
 800fa94:	003e6a06 	br	800f440 <__alt_data_end+0xfc00f440>
 800fa98:	2c62b03a 	or	r17,r5,r17
 800fa9c:	8822c03a 	cmpne	r17,r17,zero
 800faa0:	0005883a 	mov	r2,zero
 800faa4:	003fa506 	br	800f93c <__alt_data_end+0xfc00f93c>
 800faa8:	180b883a 	mov	r5,r3
 800faac:	3023883a 	mov	r17,r6
 800fab0:	003e0306 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800fab4:	180b883a 	mov	r5,r3
 800fab8:	3023883a 	mov	r17,r6
 800fabc:	0401ffc4 	movi	r16,2047
 800fac0:	003dff06 	br	800f2c0 <__alt_data_end+0xfc00f2c0>
 800fac4:	113ff804 	addi	r4,r2,-32
 800fac8:	01c00804 	movi	r7,32
 800facc:	2908d83a 	srl	r4,r5,r4
 800fad0:	11c00a26 	beq	r2,r7,800fafc <__subdf3+0x8c8>
 800fad4:	01c01004 	movi	r7,64
 800fad8:	3885c83a 	sub	r2,r7,r2
 800fadc:	288a983a 	sll	r5,r5,r2
 800fae0:	2c62b03a 	or	r17,r5,r17
 800fae4:	8822c03a 	cmpne	r17,r17,zero
 800fae8:	8922b03a 	or	r17,r17,r4
 800faec:	0005883a 	mov	r2,zero
 800faf0:	003f9206 	br	800f93c <__alt_data_end+0xfc00f93c>
 800faf4:	000b883a 	mov	r5,zero
 800faf8:	003fdc06 	br	800fa6c <__alt_data_end+0xfc00fa6c>
 800fafc:	000b883a 	mov	r5,zero
 800fb00:	003ff706 	br	800fae0 <__alt_data_end+0xfc00fae0>

0800fb04 <__fixdfsi>:
 800fb04:	2806d53a 	srli	r3,r5,20
 800fb08:	00800434 	movhi	r2,16
 800fb0c:	10bfffc4 	addi	r2,r2,-1
 800fb10:	18c1ffcc 	andi	r3,r3,2047
 800fb14:	0180ff84 	movi	r6,1022
 800fb18:	2884703a 	and	r2,r5,r2
 800fb1c:	280ad7fa 	srli	r5,r5,31
 800fb20:	30c0130e 	bge	r6,r3,800fb70 <__fixdfsi+0x6c>
 800fb24:	01810744 	movi	r6,1053
 800fb28:	30c00d16 	blt	r6,r3,800fb60 <__fixdfsi+0x5c>
 800fb2c:	01810cc4 	movi	r6,1075
 800fb30:	30cdc83a 	sub	r6,r6,r3
 800fb34:	01c007c4 	movi	r7,31
 800fb38:	10800434 	orhi	r2,r2,16
 800fb3c:	39800e0e 	bge	r7,r6,800fb78 <__fixdfsi+0x74>
 800fb40:	010104c4 	movi	r4,1043
 800fb44:	20c7c83a 	sub	r3,r4,r3
 800fb48:	10c6d83a 	srl	r3,r2,r3
 800fb4c:	29403fcc 	andi	r5,r5,255
 800fb50:	0145c83a 	sub	r2,zero,r5
 800fb54:	1884f03a 	xor	r2,r3,r2
 800fb58:	1145883a 	add	r2,r2,r5
 800fb5c:	f800283a 	ret
 800fb60:	00a00034 	movhi	r2,32768
 800fb64:	10bfffc4 	addi	r2,r2,-1
 800fb68:	2885883a 	add	r2,r5,r2
 800fb6c:	f800283a 	ret
 800fb70:	0005883a 	mov	r2,zero
 800fb74:	f800283a 	ret
 800fb78:	18fefb44 	addi	r3,r3,-1043
 800fb7c:	2188d83a 	srl	r4,r4,r6
 800fb80:	10c6983a 	sll	r3,r2,r3
 800fb84:	20c6b03a 	or	r3,r4,r3
 800fb88:	003ff006 	br	800fb4c <__alt_data_end+0xfc00fb4c>

0800fb8c <__floatsidf>:
 800fb8c:	defffd04 	addi	sp,sp,-12
 800fb90:	dc400115 	stw	r17,4(sp)
 800fb94:	dfc00215 	stw	ra,8(sp)
 800fb98:	dc000015 	stw	r16,0(sp)
 800fb9c:	2023883a 	mov	r17,r4
 800fba0:	20001426 	beq	r4,zero,800fbf4 <__floatsidf+0x68>
 800fba4:	2020d7fa 	srli	r16,r4,31
 800fba8:	80000126 	beq	r16,zero,800fbb0 <__floatsidf+0x24>
 800fbac:	0123c83a 	sub	r17,zero,r4
 800fbb0:	8809883a 	mov	r4,r17
 800fbb4:	800fd000 	call	800fd00 <__clzsi2>
 800fbb8:	01410784 	movi	r5,1054
 800fbbc:	00c00284 	movi	r3,10
 800fbc0:	288bc83a 	sub	r5,r5,r2
 800fbc4:	18801c16 	blt	r3,r2,800fc38 <__floatsidf+0xac>
 800fbc8:	00c002c4 	movi	r3,11
 800fbcc:	1887c83a 	sub	r3,r3,r2
 800fbd0:	88c8d83a 	srl	r4,r17,r3
 800fbd4:	00c00434 	movhi	r3,16
 800fbd8:	18ffffc4 	addi	r3,r3,-1
 800fbdc:	10800544 	addi	r2,r2,21
 800fbe0:	20c8703a 	and	r4,r4,r3
 800fbe4:	8884983a 	sll	r2,r17,r2
 800fbe8:	28c1ffcc 	andi	r3,r5,2047
 800fbec:	800d883a 	mov	r6,r16
 800fbf0:	00000406 	br	800fc04 <__floatsidf+0x78>
 800fbf4:	000d883a 	mov	r6,zero
 800fbf8:	0007883a 	mov	r3,zero
 800fbfc:	0009883a 	mov	r4,zero
 800fc00:	0005883a 	mov	r2,zero
 800fc04:	180a953a 	slli	r5,r3,20
 800fc08:	31803fcc 	andi	r6,r6,255
 800fc0c:	00c00434 	movhi	r3,16
 800fc10:	300c97fa 	slli	r6,r6,31
 800fc14:	18ffffc4 	addi	r3,r3,-1
 800fc18:	20c6703a 	and	r3,r4,r3
 800fc1c:	1946b03a 	or	r3,r3,r5
 800fc20:	1986b03a 	or	r3,r3,r6
 800fc24:	dfc00217 	ldw	ra,8(sp)
 800fc28:	dc400117 	ldw	r17,4(sp)
 800fc2c:	dc000017 	ldw	r16,0(sp)
 800fc30:	dec00304 	addi	sp,sp,12
 800fc34:	f800283a 	ret
 800fc38:	10fffd44 	addi	r3,r2,-11
 800fc3c:	88c8983a 	sll	r4,r17,r3
 800fc40:	00800434 	movhi	r2,16
 800fc44:	10bfffc4 	addi	r2,r2,-1
 800fc48:	2088703a 	and	r4,r4,r2
 800fc4c:	28c1ffcc 	andi	r3,r5,2047
 800fc50:	800d883a 	mov	r6,r16
 800fc54:	0005883a 	mov	r2,zero
 800fc58:	003fea06 	br	800fc04 <__alt_data_end+0xfc00fc04>

0800fc5c <__floatunsidf>:
 800fc5c:	defffe04 	addi	sp,sp,-8
 800fc60:	dc000015 	stw	r16,0(sp)
 800fc64:	dfc00115 	stw	ra,4(sp)
 800fc68:	2021883a 	mov	r16,r4
 800fc6c:	20001026 	beq	r4,zero,800fcb0 <__floatunsidf+0x54>
 800fc70:	800fd000 	call	800fd00 <__clzsi2>
 800fc74:	01410784 	movi	r5,1054
 800fc78:	100d883a 	mov	r6,r2
 800fc7c:	288bc83a 	sub	r5,r5,r2
 800fc80:	00800284 	movi	r2,10
 800fc84:	11801616 	blt	r2,r6,800fce0 <__floatunsidf+0x84>
 800fc88:	008002c4 	movi	r2,11
 800fc8c:	1185c83a 	sub	r2,r2,r6
 800fc90:	8084d83a 	srl	r2,r16,r2
 800fc94:	00c00434 	movhi	r3,16
 800fc98:	31c00544 	addi	r7,r6,21
 800fc9c:	18ffffc4 	addi	r3,r3,-1
 800fca0:	81e0983a 	sll	r16,r16,r7
 800fca4:	10cc703a 	and	r6,r2,r3
 800fca8:	2941ffcc 	andi	r5,r5,2047
 800fcac:	00000206 	br	800fcb8 <__floatunsidf+0x5c>
 800fcb0:	000b883a 	mov	r5,zero
 800fcb4:	000d883a 	mov	r6,zero
 800fcb8:	280a953a 	slli	r5,r5,20
 800fcbc:	00c00434 	movhi	r3,16
 800fcc0:	18ffffc4 	addi	r3,r3,-1
 800fcc4:	30c6703a 	and	r3,r6,r3
 800fcc8:	8005883a 	mov	r2,r16
 800fccc:	1946b03a 	or	r3,r3,r5
 800fcd0:	dfc00117 	ldw	ra,4(sp)
 800fcd4:	dc000017 	ldw	r16,0(sp)
 800fcd8:	dec00204 	addi	sp,sp,8
 800fcdc:	f800283a 	ret
 800fce0:	31bffd44 	addi	r6,r6,-11
 800fce4:	818c983a 	sll	r6,r16,r6
 800fce8:	00800434 	movhi	r2,16
 800fcec:	10bfffc4 	addi	r2,r2,-1
 800fcf0:	2941ffcc 	andi	r5,r5,2047
 800fcf4:	0021883a 	mov	r16,zero
 800fcf8:	308c703a 	and	r6,r6,r2
 800fcfc:	003fee06 	br	800fcb8 <__alt_data_end+0xfc00fcb8>

0800fd00 <__clzsi2>:
 800fd00:	00bfffd4 	movui	r2,65535
 800fd04:	11000b36 	bltu	r2,r4,800fd34 <__clzsi2+0x34>
 800fd08:	00803fc4 	movi	r2,255
 800fd0c:	1100122e 	bgeu	r2,r4,800fd58 <__clzsi2+0x58>
 800fd10:	00c00204 	movi	r3,8
 800fd14:	01400604 	movi	r5,24
 800fd18:	20c8d83a 	srl	r4,r4,r3
 800fd1c:	00820074 	movhi	r2,2049
 800fd20:	108b2404 	addi	r2,r2,11408
 800fd24:	1109883a 	add	r4,r2,r4
 800fd28:	20800003 	ldbu	r2,0(r4)
 800fd2c:	2885c83a 	sub	r2,r5,r2
 800fd30:	f800283a 	ret
 800fd34:	00804034 	movhi	r2,256
 800fd38:	10bfffc4 	addi	r2,r2,-1
 800fd3c:	11000336 	bltu	r2,r4,800fd4c <__clzsi2+0x4c>
 800fd40:	00c00404 	movi	r3,16
 800fd44:	180b883a 	mov	r5,r3
 800fd48:	003ff306 	br	800fd18 <__alt_data_end+0xfc00fd18>
 800fd4c:	00c00604 	movi	r3,24
 800fd50:	01400204 	movi	r5,8
 800fd54:	003ff006 	br	800fd18 <__alt_data_end+0xfc00fd18>
 800fd58:	0007883a 	mov	r3,zero
 800fd5c:	01400804 	movi	r5,32
 800fd60:	003fed06 	br	800fd18 <__alt_data_end+0xfc00fd18>

0800fd64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800fd64:	defffe04 	addi	sp,sp,-8
 800fd68:	dfc00115 	stw	ra,4(sp)
 800fd6c:	df000015 	stw	fp,0(sp)
 800fd70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800fd74:	00820074 	movhi	r2,2049
 800fd78:	10924204 	addi	r2,r2,18696
 800fd7c:	10800017 	ldw	r2,0(r2)
 800fd80:	10000526 	beq	r2,zero,800fd98 <alt_get_errno+0x34>
 800fd84:	00820074 	movhi	r2,2049
 800fd88:	10924204 	addi	r2,r2,18696
 800fd8c:	10800017 	ldw	r2,0(r2)
 800fd90:	103ee83a 	callr	r2
 800fd94:	00000206 	br	800fda0 <alt_get_errno+0x3c>
 800fd98:	00820074 	movhi	r2,2049
 800fd9c:	10991d04 	addi	r2,r2,25716
}
 800fda0:	e037883a 	mov	sp,fp
 800fda4:	dfc00117 	ldw	ra,4(sp)
 800fda8:	df000017 	ldw	fp,0(sp)
 800fdac:	dec00204 	addi	sp,sp,8
 800fdb0:	f800283a 	ret

0800fdb4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 800fdb4:	defffb04 	addi	sp,sp,-20
 800fdb8:	dfc00415 	stw	ra,16(sp)
 800fdbc:	df000315 	stw	fp,12(sp)
 800fdc0:	df000304 	addi	fp,sp,12
 800fdc4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 800fdc8:	e0bfff17 	ldw	r2,-4(fp)
 800fdcc:	10000616 	blt	r2,zero,800fde8 <close+0x34>
 800fdd0:	e0bfff17 	ldw	r2,-4(fp)
 800fdd4:	10c00324 	muli	r3,r2,12
 800fdd8:	00820074 	movhi	r2,2049
 800fddc:	108db404 	addi	r2,r2,14032
 800fde0:	1885883a 	add	r2,r3,r2
 800fde4:	00000106 	br	800fdec <close+0x38>
 800fde8:	0005883a 	mov	r2,zero
 800fdec:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 800fdf0:	e0bffd17 	ldw	r2,-12(fp)
 800fdf4:	10001926 	beq	r2,zero,800fe5c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 800fdf8:	e0bffd17 	ldw	r2,-12(fp)
 800fdfc:	10800017 	ldw	r2,0(r2)
 800fe00:	10800417 	ldw	r2,16(r2)
 800fe04:	10000626 	beq	r2,zero,800fe20 <close+0x6c>
 800fe08:	e0bffd17 	ldw	r2,-12(fp)
 800fe0c:	10800017 	ldw	r2,0(r2)
 800fe10:	10800417 	ldw	r2,16(r2)
 800fe14:	e13ffd17 	ldw	r4,-12(fp)
 800fe18:	103ee83a 	callr	r2
 800fe1c:	00000106 	br	800fe24 <close+0x70>
 800fe20:	0005883a 	mov	r2,zero
 800fe24:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 800fe28:	e13fff17 	ldw	r4,-4(fp)
 800fe2c:	80104b00 	call	80104b0 <alt_release_fd>
    if (rval < 0)
 800fe30:	e0bffe17 	ldw	r2,-8(fp)
 800fe34:	1000070e 	bge	r2,zero,800fe54 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 800fe38:	800fd640 	call	800fd64 <alt_get_errno>
 800fe3c:	1007883a 	mov	r3,r2
 800fe40:	e0bffe17 	ldw	r2,-8(fp)
 800fe44:	0085c83a 	sub	r2,zero,r2
 800fe48:	18800015 	stw	r2,0(r3)
      return -1;
 800fe4c:	00bfffc4 	movi	r2,-1
 800fe50:	00000706 	br	800fe70 <close+0xbc>
    }
    return 0;
 800fe54:	0005883a 	mov	r2,zero
 800fe58:	00000506 	br	800fe70 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 800fe5c:	800fd640 	call	800fd64 <alt_get_errno>
 800fe60:	1007883a 	mov	r3,r2
 800fe64:	00801444 	movi	r2,81
 800fe68:	18800015 	stw	r2,0(r3)
    return -1;
 800fe6c:	00bfffc4 	movi	r2,-1
  }
}
 800fe70:	e037883a 	mov	sp,fp
 800fe74:	dfc00117 	ldw	ra,4(sp)
 800fe78:	df000017 	ldw	fp,0(sp)
 800fe7c:	dec00204 	addi	sp,sp,8
 800fe80:	f800283a 	ret

0800fe84 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 800fe84:	defffc04 	addi	sp,sp,-16
 800fe88:	df000315 	stw	fp,12(sp)
 800fe8c:	df000304 	addi	fp,sp,12
 800fe90:	e13ffd15 	stw	r4,-12(fp)
 800fe94:	e17ffe15 	stw	r5,-8(fp)
 800fe98:	e1bfff15 	stw	r6,-4(fp)
  return len;
 800fe9c:	e0bfff17 	ldw	r2,-4(fp)
}
 800fea0:	e037883a 	mov	sp,fp
 800fea4:	df000017 	ldw	fp,0(sp)
 800fea8:	dec00104 	addi	sp,sp,4
 800feac:	f800283a 	ret

0800feb0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800feb0:	defffe04 	addi	sp,sp,-8
 800feb4:	dfc00115 	stw	ra,4(sp)
 800feb8:	df000015 	stw	fp,0(sp)
 800febc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800fec0:	00820074 	movhi	r2,2049
 800fec4:	10924204 	addi	r2,r2,18696
 800fec8:	10800017 	ldw	r2,0(r2)
 800fecc:	10000526 	beq	r2,zero,800fee4 <alt_get_errno+0x34>
 800fed0:	00820074 	movhi	r2,2049
 800fed4:	10924204 	addi	r2,r2,18696
 800fed8:	10800017 	ldw	r2,0(r2)
 800fedc:	103ee83a 	callr	r2
 800fee0:	00000206 	br	800feec <alt_get_errno+0x3c>
 800fee4:	00820074 	movhi	r2,2049
 800fee8:	10991d04 	addi	r2,r2,25716
}
 800feec:	e037883a 	mov	sp,fp
 800fef0:	dfc00117 	ldw	ra,4(sp)
 800fef4:	df000017 	ldw	fp,0(sp)
 800fef8:	dec00204 	addi	sp,sp,8
 800fefc:	f800283a 	ret

0800ff00 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 800ff00:	defffb04 	addi	sp,sp,-20
 800ff04:	dfc00415 	stw	ra,16(sp)
 800ff08:	df000315 	stw	fp,12(sp)
 800ff0c:	df000304 	addi	fp,sp,12
 800ff10:	e13ffe15 	stw	r4,-8(fp)
 800ff14:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 800ff18:	e0bffe17 	ldw	r2,-8(fp)
 800ff1c:	10000616 	blt	r2,zero,800ff38 <fstat+0x38>
 800ff20:	e0bffe17 	ldw	r2,-8(fp)
 800ff24:	10c00324 	muli	r3,r2,12
 800ff28:	00820074 	movhi	r2,2049
 800ff2c:	108db404 	addi	r2,r2,14032
 800ff30:	1885883a 	add	r2,r3,r2
 800ff34:	00000106 	br	800ff3c <fstat+0x3c>
 800ff38:	0005883a 	mov	r2,zero
 800ff3c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 800ff40:	e0bffd17 	ldw	r2,-12(fp)
 800ff44:	10001026 	beq	r2,zero,800ff88 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 800ff48:	e0bffd17 	ldw	r2,-12(fp)
 800ff4c:	10800017 	ldw	r2,0(r2)
 800ff50:	10800817 	ldw	r2,32(r2)
 800ff54:	10000726 	beq	r2,zero,800ff74 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 800ff58:	e0bffd17 	ldw	r2,-12(fp)
 800ff5c:	10800017 	ldw	r2,0(r2)
 800ff60:	10800817 	ldw	r2,32(r2)
 800ff64:	e13ffd17 	ldw	r4,-12(fp)
 800ff68:	e17fff17 	ldw	r5,-4(fp)
 800ff6c:	103ee83a 	callr	r2
 800ff70:	00000a06 	br	800ff9c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 800ff74:	e0bfff17 	ldw	r2,-4(fp)
 800ff78:	00c80004 	movi	r3,8192
 800ff7c:	10c00115 	stw	r3,4(r2)
      return 0;
 800ff80:	0005883a 	mov	r2,zero
 800ff84:	00000506 	br	800ff9c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 800ff88:	800feb00 	call	800feb0 <alt_get_errno>
 800ff8c:	1007883a 	mov	r3,r2
 800ff90:	00801444 	movi	r2,81
 800ff94:	18800015 	stw	r2,0(r3)
    return -1;
 800ff98:	00bfffc4 	movi	r2,-1
  }
}
 800ff9c:	e037883a 	mov	sp,fp
 800ffa0:	dfc00117 	ldw	ra,4(sp)
 800ffa4:	df000017 	ldw	fp,0(sp)
 800ffa8:	dec00204 	addi	sp,sp,8
 800ffac:	f800283a 	ret

0800ffb0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800ffb0:	defffe04 	addi	sp,sp,-8
 800ffb4:	dfc00115 	stw	ra,4(sp)
 800ffb8:	df000015 	stw	fp,0(sp)
 800ffbc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800ffc0:	00820074 	movhi	r2,2049
 800ffc4:	10924204 	addi	r2,r2,18696
 800ffc8:	10800017 	ldw	r2,0(r2)
 800ffcc:	10000526 	beq	r2,zero,800ffe4 <alt_get_errno+0x34>
 800ffd0:	00820074 	movhi	r2,2049
 800ffd4:	10924204 	addi	r2,r2,18696
 800ffd8:	10800017 	ldw	r2,0(r2)
 800ffdc:	103ee83a 	callr	r2
 800ffe0:	00000206 	br	800ffec <alt_get_errno+0x3c>
 800ffe4:	00820074 	movhi	r2,2049
 800ffe8:	10991d04 	addi	r2,r2,25716
}
 800ffec:	e037883a 	mov	sp,fp
 800fff0:	dfc00117 	ldw	ra,4(sp)
 800fff4:	df000017 	ldw	fp,0(sp)
 800fff8:	dec00204 	addi	sp,sp,8
 800fffc:	f800283a 	ret

08010000 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 8010000:	deffed04 	addi	sp,sp,-76
 8010004:	dfc01215 	stw	ra,72(sp)
 8010008:	df001115 	stw	fp,68(sp)
 801000c:	df001104 	addi	fp,sp,68
 8010010:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8010014:	e0bfff17 	ldw	r2,-4(fp)
 8010018:	10000616 	blt	r2,zero,8010034 <isatty+0x34>
 801001c:	e0bfff17 	ldw	r2,-4(fp)
 8010020:	10c00324 	muli	r3,r2,12
 8010024:	00820074 	movhi	r2,2049
 8010028:	108db404 	addi	r2,r2,14032
 801002c:	1885883a 	add	r2,r3,r2
 8010030:	00000106 	br	8010038 <isatty+0x38>
 8010034:	0005883a 	mov	r2,zero
 8010038:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 801003c:	e0bfef17 	ldw	r2,-68(fp)
 8010040:	10000e26 	beq	r2,zero,801007c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 8010044:	e0bfef17 	ldw	r2,-68(fp)
 8010048:	10800017 	ldw	r2,0(r2)
 801004c:	10800817 	ldw	r2,32(r2)
 8010050:	1000021e 	bne	r2,zero,801005c <isatty+0x5c>
    {
      return 1;
 8010054:	00800044 	movi	r2,1
 8010058:	00000d06 	br	8010090 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 801005c:	e0bff004 	addi	r2,fp,-64
 8010060:	e13fff17 	ldw	r4,-4(fp)
 8010064:	100b883a 	mov	r5,r2
 8010068:	800ff000 	call	800ff00 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 801006c:	e0bff117 	ldw	r2,-60(fp)
 8010070:	10880020 	cmpeqi	r2,r2,8192
 8010074:	10803fcc 	andi	r2,r2,255
 8010078:	00000506 	br	8010090 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801007c:	800ffb00 	call	800ffb0 <alt_get_errno>
 8010080:	1007883a 	mov	r3,r2
 8010084:	00801444 	movi	r2,81
 8010088:	18800015 	stw	r2,0(r3)
    return 0;
 801008c:	0005883a 	mov	r2,zero
  }
}
 8010090:	e037883a 	mov	sp,fp
 8010094:	dfc00117 	ldw	ra,4(sp)
 8010098:	df000017 	ldw	fp,0(sp)
 801009c:	dec00204 	addi	sp,sp,8
 80100a0:	f800283a 	ret

080100a4 <alt_load_section>:
 80100a4:	defffc04 	addi	sp,sp,-16
 80100a8:	df000315 	stw	fp,12(sp)
 80100ac:	df000304 	addi	fp,sp,12
 80100b0:	e13ffd15 	stw	r4,-12(fp)
 80100b4:	e17ffe15 	stw	r5,-8(fp)
 80100b8:	e1bfff15 	stw	r6,-4(fp)
 80100bc:	e0fffe17 	ldw	r3,-8(fp)
 80100c0:	e0bffd17 	ldw	r2,-12(fp)
 80100c4:	18800c26 	beq	r3,r2,80100f8 <alt_load_section+0x54>
 80100c8:	00000806 	br	80100ec <alt_load_section+0x48>
 80100cc:	e0bffe17 	ldw	r2,-8(fp)
 80100d0:	10c00104 	addi	r3,r2,4
 80100d4:	e0fffe15 	stw	r3,-8(fp)
 80100d8:	e0fffd17 	ldw	r3,-12(fp)
 80100dc:	19000104 	addi	r4,r3,4
 80100e0:	e13ffd15 	stw	r4,-12(fp)
 80100e4:	18c00017 	ldw	r3,0(r3)
 80100e8:	10c00015 	stw	r3,0(r2)
 80100ec:	e0fffe17 	ldw	r3,-8(fp)
 80100f0:	e0bfff17 	ldw	r2,-4(fp)
 80100f4:	18bff51e 	bne	r3,r2,80100cc <__alt_data_end+0xfc0100cc>
 80100f8:	e037883a 	mov	sp,fp
 80100fc:	df000017 	ldw	fp,0(sp)
 8010100:	dec00104 	addi	sp,sp,4
 8010104:	f800283a 	ret

08010108 <alt_load>:
 8010108:	defffe04 	addi	sp,sp,-8
 801010c:	dfc00115 	stw	ra,4(sp)
 8010110:	df000015 	stw	fp,0(sp)
 8010114:	d839883a 	mov	fp,sp
 8010118:	01020074 	movhi	r4,2049
 801011c:	21124704 	addi	r4,r4,18716
 8010120:	01420074 	movhi	r5,2049
 8010124:	294b7704 	addi	r5,r5,11740
 8010128:	01820074 	movhi	r6,2049
 801012c:	31924704 	addi	r6,r6,18716
 8010130:	80100a40 	call	80100a4 <alt_load_section>
 8010134:	01020034 	movhi	r4,2048
 8010138:	21000804 	addi	r4,r4,32
 801013c:	01420034 	movhi	r5,2048
 8010140:	29400804 	addi	r5,r5,32
 8010144:	01820034 	movhi	r6,2048
 8010148:	31806f04 	addi	r6,r6,444
 801014c:	80100a40 	call	80100a4 <alt_load_section>
 8010150:	01020074 	movhi	r4,2049
 8010154:	210a7f04 	addi	r4,r4,10748
 8010158:	01420074 	movhi	r5,2049
 801015c:	294a7f04 	addi	r5,r5,10748
 8010160:	01820074 	movhi	r6,2049
 8010164:	318b7704 	addi	r6,r6,11740
 8010168:	80100a40 	call	80100a4 <alt_load_section>
 801016c:	80119440 	call	8011944 <alt_dcache_flush_all>
 8010170:	8011b9c0 	call	8011b9c <alt_icache_flush_all>
 8010174:	e037883a 	mov	sp,fp
 8010178:	dfc00117 	ldw	ra,4(sp)
 801017c:	df000017 	ldw	fp,0(sp)
 8010180:	dec00204 	addi	sp,sp,8
 8010184:	f800283a 	ret

08010188 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8010188:	defffe04 	addi	sp,sp,-8
 801018c:	dfc00115 	stw	ra,4(sp)
 8010190:	df000015 	stw	fp,0(sp)
 8010194:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8010198:	00820074 	movhi	r2,2049
 801019c:	10924204 	addi	r2,r2,18696
 80101a0:	10800017 	ldw	r2,0(r2)
 80101a4:	10000526 	beq	r2,zero,80101bc <alt_get_errno+0x34>
 80101a8:	00820074 	movhi	r2,2049
 80101ac:	10924204 	addi	r2,r2,18696
 80101b0:	10800017 	ldw	r2,0(r2)
 80101b4:	103ee83a 	callr	r2
 80101b8:	00000206 	br	80101c4 <alt_get_errno+0x3c>
 80101bc:	00820074 	movhi	r2,2049
 80101c0:	10991d04 	addi	r2,r2,25716
}
 80101c4:	e037883a 	mov	sp,fp
 80101c8:	dfc00117 	ldw	ra,4(sp)
 80101cc:	df000017 	ldw	fp,0(sp)
 80101d0:	dec00204 	addi	sp,sp,8
 80101d4:	f800283a 	ret

080101d8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 80101d8:	defff904 	addi	sp,sp,-28
 80101dc:	dfc00615 	stw	ra,24(sp)
 80101e0:	df000515 	stw	fp,20(sp)
 80101e4:	df000504 	addi	fp,sp,20
 80101e8:	e13ffd15 	stw	r4,-12(fp)
 80101ec:	e17ffe15 	stw	r5,-8(fp)
 80101f0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 80101f4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80101f8:	e0bffd17 	ldw	r2,-12(fp)
 80101fc:	10000616 	blt	r2,zero,8010218 <lseek+0x40>
 8010200:	e0bffd17 	ldw	r2,-12(fp)
 8010204:	10c00324 	muli	r3,r2,12
 8010208:	00820074 	movhi	r2,2049
 801020c:	108db404 	addi	r2,r2,14032
 8010210:	1885883a 	add	r2,r3,r2
 8010214:	00000106 	br	801021c <lseek+0x44>
 8010218:	0005883a 	mov	r2,zero
 801021c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 8010220:	e0bffc17 	ldw	r2,-16(fp)
 8010224:	10001026 	beq	r2,zero,8010268 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 8010228:	e0bffc17 	ldw	r2,-16(fp)
 801022c:	10800017 	ldw	r2,0(r2)
 8010230:	10800717 	ldw	r2,28(r2)
 8010234:	10000926 	beq	r2,zero,801025c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 8010238:	e0bffc17 	ldw	r2,-16(fp)
 801023c:	10800017 	ldw	r2,0(r2)
 8010240:	10800717 	ldw	r2,28(r2)
 8010244:	e13ffc17 	ldw	r4,-16(fp)
 8010248:	e17ffe17 	ldw	r5,-8(fp)
 801024c:	e1bfff17 	ldw	r6,-4(fp)
 8010250:	103ee83a 	callr	r2
 8010254:	e0bffb15 	stw	r2,-20(fp)
 8010258:	00000506 	br	8010270 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 801025c:	00bfde84 	movi	r2,-134
 8010260:	e0bffb15 	stw	r2,-20(fp)
 8010264:	00000206 	br	8010270 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 8010268:	00bfebc4 	movi	r2,-81
 801026c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 8010270:	e0bffb17 	ldw	r2,-20(fp)
 8010274:	1000070e 	bge	r2,zero,8010294 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 8010278:	80101880 	call	8010188 <alt_get_errno>
 801027c:	1007883a 	mov	r3,r2
 8010280:	e0bffb17 	ldw	r2,-20(fp)
 8010284:	0085c83a 	sub	r2,zero,r2
 8010288:	18800015 	stw	r2,0(r3)
    rc = -1;
 801028c:	00bfffc4 	movi	r2,-1
 8010290:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 8010294:	e0bffb17 	ldw	r2,-20(fp)
}
 8010298:	e037883a 	mov	sp,fp
 801029c:	dfc00117 	ldw	ra,4(sp)
 80102a0:	df000017 	ldw	fp,0(sp)
 80102a4:	dec00204 	addi	sp,sp,8
 80102a8:	f800283a 	ret

080102ac <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 80102ac:	defffd04 	addi	sp,sp,-12
 80102b0:	dfc00215 	stw	ra,8(sp)
 80102b4:	df000115 	stw	fp,4(sp)
 80102b8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 80102bc:	0009883a 	mov	r4,zero
 80102c0:	80107400 	call	8010740 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 80102c4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 80102c8:	80107740 	call	8010774 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 80102cc:	01020074 	movhi	r4,2049
 80102d0:	210b6704 	addi	r4,r4,11676
 80102d4:	01420074 	movhi	r5,2049
 80102d8:	294b6704 	addi	r5,r5,11676
 80102dc:	01820074 	movhi	r6,2049
 80102e0:	318b6704 	addi	r6,r6,11676
 80102e4:	8011f5c0 	call	8011f5c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 80102e8:	8011a540 	call	8011a54 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 80102ec:	01020074 	movhi	r4,2049
 80102f0:	2106ac04 	addi	r4,r4,6832
 80102f4:	80126580 	call	8012658 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 80102f8:	d126e717 	ldw	r4,-25700(gp)
 80102fc:	d0e6e817 	ldw	r3,-25696(gp)
 8010300:	d0a6e917 	ldw	r2,-25692(gp)
 8010304:	180b883a 	mov	r5,r3
 8010308:	100d883a 	mov	r6,r2
 801030c:	80007600 	call	8000760 <main>
 8010310:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 8010314:	01000044 	movi	r4,1
 8010318:	800fdb40 	call	800fdb4 <close>
  exit (result);
 801031c:	e13fff17 	ldw	r4,-4(fp)
 8010320:	801266c0 	call	801266c <exit>

08010324 <__malloc_lock>:
 8010324:	defffe04 	addi	sp,sp,-8
 8010328:	df000115 	stw	fp,4(sp)
 801032c:	df000104 	addi	fp,sp,4
 8010330:	e13fff15 	stw	r4,-4(fp)
 8010334:	e037883a 	mov	sp,fp
 8010338:	df000017 	ldw	fp,0(sp)
 801033c:	dec00104 	addi	sp,sp,4
 8010340:	f800283a 	ret

08010344 <__malloc_unlock>:
 8010344:	defffe04 	addi	sp,sp,-8
 8010348:	df000115 	stw	fp,4(sp)
 801034c:	df000104 	addi	fp,sp,4
 8010350:	e13fff15 	stw	r4,-4(fp)
 8010354:	e037883a 	mov	sp,fp
 8010358:	df000017 	ldw	fp,0(sp)
 801035c:	dec00104 	addi	sp,sp,4
 8010360:	f800283a 	ret

08010364 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8010364:	defffe04 	addi	sp,sp,-8
 8010368:	dfc00115 	stw	ra,4(sp)
 801036c:	df000015 	stw	fp,0(sp)
 8010370:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8010374:	00820074 	movhi	r2,2049
 8010378:	10924204 	addi	r2,r2,18696
 801037c:	10800017 	ldw	r2,0(r2)
 8010380:	10000526 	beq	r2,zero,8010398 <alt_get_errno+0x34>
 8010384:	00820074 	movhi	r2,2049
 8010388:	10924204 	addi	r2,r2,18696
 801038c:	10800017 	ldw	r2,0(r2)
 8010390:	103ee83a 	callr	r2
 8010394:	00000206 	br	80103a0 <alt_get_errno+0x3c>
 8010398:	00820074 	movhi	r2,2049
 801039c:	10991d04 	addi	r2,r2,25716
}
 80103a0:	e037883a 	mov	sp,fp
 80103a4:	dfc00117 	ldw	ra,4(sp)
 80103a8:	df000017 	ldw	fp,0(sp)
 80103ac:	dec00204 	addi	sp,sp,8
 80103b0:	f800283a 	ret

080103b4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 80103b4:	defff904 	addi	sp,sp,-28
 80103b8:	dfc00615 	stw	ra,24(sp)
 80103bc:	df000515 	stw	fp,20(sp)
 80103c0:	df000504 	addi	fp,sp,20
 80103c4:	e13ffd15 	stw	r4,-12(fp)
 80103c8:	e17ffe15 	stw	r5,-8(fp)
 80103cc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80103d0:	e0bffd17 	ldw	r2,-12(fp)
 80103d4:	10000616 	blt	r2,zero,80103f0 <read+0x3c>
 80103d8:	e0bffd17 	ldw	r2,-12(fp)
 80103dc:	10c00324 	muli	r3,r2,12
 80103e0:	00820074 	movhi	r2,2049
 80103e4:	108db404 	addi	r2,r2,14032
 80103e8:	1885883a 	add	r2,r3,r2
 80103ec:	00000106 	br	80103f4 <read+0x40>
 80103f0:	0005883a 	mov	r2,zero
 80103f4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 80103f8:	e0bffb17 	ldw	r2,-20(fp)
 80103fc:	10002226 	beq	r2,zero,8010488 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8010400:	e0bffb17 	ldw	r2,-20(fp)
 8010404:	10800217 	ldw	r2,8(r2)
 8010408:	108000cc 	andi	r2,r2,3
 801040c:	10800060 	cmpeqi	r2,r2,1
 8010410:	1000181e 	bne	r2,zero,8010474 <read+0xc0>
        (fd->dev->read))
 8010414:	e0bffb17 	ldw	r2,-20(fp)
 8010418:	10800017 	ldw	r2,0(r2)
 801041c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8010420:	10001426 	beq	r2,zero,8010474 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 8010424:	e0bffb17 	ldw	r2,-20(fp)
 8010428:	10800017 	ldw	r2,0(r2)
 801042c:	10800517 	ldw	r2,20(r2)
 8010430:	e0ffff17 	ldw	r3,-4(fp)
 8010434:	e13ffb17 	ldw	r4,-20(fp)
 8010438:	e17ffe17 	ldw	r5,-8(fp)
 801043c:	180d883a 	mov	r6,r3
 8010440:	103ee83a 	callr	r2
 8010444:	e0bffc15 	stw	r2,-16(fp)
 8010448:	e0bffc17 	ldw	r2,-16(fp)
 801044c:	1000070e 	bge	r2,zero,801046c <read+0xb8>
        {
          ALT_ERRNO = -rval;
 8010450:	80103640 	call	8010364 <alt_get_errno>
 8010454:	1007883a 	mov	r3,r2
 8010458:	e0bffc17 	ldw	r2,-16(fp)
 801045c:	0085c83a 	sub	r2,zero,r2
 8010460:	18800015 	stw	r2,0(r3)
          return -1;
 8010464:	00bfffc4 	movi	r2,-1
 8010468:	00000c06 	br	801049c <read+0xe8>
        }
        return rval;
 801046c:	e0bffc17 	ldw	r2,-16(fp)
 8010470:	00000a06 	br	801049c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 8010474:	80103640 	call	8010364 <alt_get_errno>
 8010478:	1007883a 	mov	r3,r2
 801047c:	00800344 	movi	r2,13
 8010480:	18800015 	stw	r2,0(r3)
 8010484:	00000406 	br	8010498 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 8010488:	80103640 	call	8010364 <alt_get_errno>
 801048c:	1007883a 	mov	r3,r2
 8010490:	00801444 	movi	r2,81
 8010494:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8010498:	00bfffc4 	movi	r2,-1
}
 801049c:	e037883a 	mov	sp,fp
 80104a0:	dfc00117 	ldw	ra,4(sp)
 80104a4:	df000017 	ldw	fp,0(sp)
 80104a8:	dec00204 	addi	sp,sp,8
 80104ac:	f800283a 	ret

080104b0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 80104b0:	defffe04 	addi	sp,sp,-8
 80104b4:	df000115 	stw	fp,4(sp)
 80104b8:	df000104 	addi	fp,sp,4
 80104bc:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 80104c0:	e0bfff17 	ldw	r2,-4(fp)
 80104c4:	108000d0 	cmplti	r2,r2,3
 80104c8:	10000d1e 	bne	r2,zero,8010500 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 80104cc:	00820074 	movhi	r2,2049
 80104d0:	108db404 	addi	r2,r2,14032
 80104d4:	e0ffff17 	ldw	r3,-4(fp)
 80104d8:	18c00324 	muli	r3,r3,12
 80104dc:	10c5883a 	add	r2,r2,r3
 80104e0:	10800204 	addi	r2,r2,8
 80104e4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 80104e8:	00820074 	movhi	r2,2049
 80104ec:	108db404 	addi	r2,r2,14032
 80104f0:	e0ffff17 	ldw	r3,-4(fp)
 80104f4:	18c00324 	muli	r3,r3,12
 80104f8:	10c5883a 	add	r2,r2,r3
 80104fc:	10000015 	stw	zero,0(r2)
  }
}
 8010500:	e037883a 	mov	sp,fp
 8010504:	df000017 	ldw	fp,0(sp)
 8010508:	dec00104 	addi	sp,sp,4
 801050c:	f800283a 	ret

08010510 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 8010510:	defff904 	addi	sp,sp,-28
 8010514:	df000615 	stw	fp,24(sp)
 8010518:	df000604 	addi	fp,sp,24
 801051c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8010520:	0005303a 	rdctl	r2,status
 8010524:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8010528:	e0fffc17 	ldw	r3,-16(fp)
 801052c:	00bfff84 	movi	r2,-2
 8010530:	1884703a 	and	r2,r3,r2
 8010534:	1001703a 	wrctl	status,r2
  
  return context;
 8010538:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 801053c:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 8010540:	d0a00c17 	ldw	r2,-32720(gp)
 8010544:	10c000c4 	addi	r3,r2,3
 8010548:	00bfff04 	movi	r2,-4
 801054c:	1884703a 	and	r2,r3,r2
 8010550:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 8010554:	d0e00c17 	ldw	r3,-32720(gp)
 8010558:	e0bfff17 	ldw	r2,-4(fp)
 801055c:	1887883a 	add	r3,r3,r2
 8010560:	00830034 	movhi	r2,3072
 8010564:	10800004 	addi	r2,r2,0
 8010568:	10c0062e 	bgeu	r2,r3,8010584 <sbrk+0x74>
 801056c:	e0bffa17 	ldw	r2,-24(fp)
 8010570:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8010574:	e0bffd17 	ldw	r2,-12(fp)
 8010578:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 801057c:	00bfffc4 	movi	r2,-1
 8010580:	00000b06 	br	80105b0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 8010584:	d0a00c17 	ldw	r2,-32720(gp)
 8010588:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 801058c:	d0e00c17 	ldw	r3,-32720(gp)
 8010590:	e0bfff17 	ldw	r2,-4(fp)
 8010594:	1885883a 	add	r2,r3,r2
 8010598:	d0a00c15 	stw	r2,-32720(gp)
 801059c:	e0bffa17 	ldw	r2,-24(fp)
 80105a0:	e0bffe15 	stw	r2,-8(fp)
 80105a4:	e0bffe17 	ldw	r2,-8(fp)
 80105a8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 80105ac:	e0bffb17 	ldw	r2,-20(fp)
} 
 80105b0:	e037883a 	mov	sp,fp
 80105b4:	df000017 	ldw	fp,0(sp)
 80105b8:	dec00104 	addi	sp,sp,4
 80105bc:	f800283a 	ret

080105c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80105c0:	defffe04 	addi	sp,sp,-8
 80105c4:	dfc00115 	stw	ra,4(sp)
 80105c8:	df000015 	stw	fp,0(sp)
 80105cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80105d0:	00820074 	movhi	r2,2049
 80105d4:	10924204 	addi	r2,r2,18696
 80105d8:	10800017 	ldw	r2,0(r2)
 80105dc:	10000526 	beq	r2,zero,80105f4 <alt_get_errno+0x34>
 80105e0:	00820074 	movhi	r2,2049
 80105e4:	10924204 	addi	r2,r2,18696
 80105e8:	10800017 	ldw	r2,0(r2)
 80105ec:	103ee83a 	callr	r2
 80105f0:	00000206 	br	80105fc <alt_get_errno+0x3c>
 80105f4:	00820074 	movhi	r2,2049
 80105f8:	10991d04 	addi	r2,r2,25716
}
 80105fc:	e037883a 	mov	sp,fp
 8010600:	dfc00117 	ldw	ra,4(sp)
 8010604:	df000017 	ldw	fp,0(sp)
 8010608:	dec00204 	addi	sp,sp,8
 801060c:	f800283a 	ret

08010610 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 8010610:	defff904 	addi	sp,sp,-28
 8010614:	dfc00615 	stw	ra,24(sp)
 8010618:	df000515 	stw	fp,20(sp)
 801061c:	df000504 	addi	fp,sp,20
 8010620:	e13ffd15 	stw	r4,-12(fp)
 8010624:	e17ffe15 	stw	r5,-8(fp)
 8010628:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801062c:	e0bffd17 	ldw	r2,-12(fp)
 8010630:	10000616 	blt	r2,zero,801064c <write+0x3c>
 8010634:	e0bffd17 	ldw	r2,-12(fp)
 8010638:	10c00324 	muli	r3,r2,12
 801063c:	00820074 	movhi	r2,2049
 8010640:	108db404 	addi	r2,r2,14032
 8010644:	1885883a 	add	r2,r3,r2
 8010648:	00000106 	br	8010650 <write+0x40>
 801064c:	0005883a 	mov	r2,zero
 8010650:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8010654:	e0bffb17 	ldw	r2,-20(fp)
 8010658:	10002126 	beq	r2,zero,80106e0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 801065c:	e0bffb17 	ldw	r2,-20(fp)
 8010660:	10800217 	ldw	r2,8(r2)
 8010664:	108000cc 	andi	r2,r2,3
 8010668:	10001826 	beq	r2,zero,80106cc <write+0xbc>
 801066c:	e0bffb17 	ldw	r2,-20(fp)
 8010670:	10800017 	ldw	r2,0(r2)
 8010674:	10800617 	ldw	r2,24(r2)
 8010678:	10001426 	beq	r2,zero,80106cc <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 801067c:	e0bffb17 	ldw	r2,-20(fp)
 8010680:	10800017 	ldw	r2,0(r2)
 8010684:	10800617 	ldw	r2,24(r2)
 8010688:	e0ffff17 	ldw	r3,-4(fp)
 801068c:	e13ffb17 	ldw	r4,-20(fp)
 8010690:	e17ffe17 	ldw	r5,-8(fp)
 8010694:	180d883a 	mov	r6,r3
 8010698:	103ee83a 	callr	r2
 801069c:	e0bffc15 	stw	r2,-16(fp)
 80106a0:	e0bffc17 	ldw	r2,-16(fp)
 80106a4:	1000070e 	bge	r2,zero,80106c4 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 80106a8:	80105c00 	call	80105c0 <alt_get_errno>
 80106ac:	1007883a 	mov	r3,r2
 80106b0:	e0bffc17 	ldw	r2,-16(fp)
 80106b4:	0085c83a 	sub	r2,zero,r2
 80106b8:	18800015 	stw	r2,0(r3)
        return -1;
 80106bc:	00bfffc4 	movi	r2,-1
 80106c0:	00000c06 	br	80106f4 <write+0xe4>
      }
      return rval;
 80106c4:	e0bffc17 	ldw	r2,-16(fp)
 80106c8:	00000a06 	br	80106f4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 80106cc:	80105c00 	call	80105c0 <alt_get_errno>
 80106d0:	1007883a 	mov	r3,r2
 80106d4:	00800344 	movi	r2,13
 80106d8:	18800015 	stw	r2,0(r3)
 80106dc:	00000406 	br	80106f0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 80106e0:	80105c00 	call	80105c0 <alt_get_errno>
 80106e4:	1007883a 	mov	r3,r2
 80106e8:	00801444 	movi	r2,81
 80106ec:	18800015 	stw	r2,0(r3)
  }
  return -1;
 80106f0:	00bfffc4 	movi	r2,-1
}
 80106f4:	e037883a 	mov	sp,fp
 80106f8:	dfc00117 	ldw	ra,4(sp)
 80106fc:	df000017 	ldw	fp,0(sp)
 8010700:	dec00204 	addi	sp,sp,8
 8010704:	f800283a 	ret

08010708 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 8010708:	defffd04 	addi	sp,sp,-12
 801070c:	dfc00215 	stw	ra,8(sp)
 8010710:	df000115 	stw	fp,4(sp)
 8010714:	df000104 	addi	fp,sp,4
 8010718:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 801071c:	e13fff17 	ldw	r4,-4(fp)
 8010720:	01420074 	movhi	r5,2049
 8010724:	29523f04 	addi	r5,r5,18684
 8010728:	80119b00 	call	80119b0 <alt_dev_llist_insert>
}
 801072c:	e037883a 	mov	sp,fp
 8010730:	dfc00117 	ldw	ra,4(sp)
 8010734:	df000017 	ldw	fp,0(sp)
 8010738:	dec00204 	addi	sp,sp,8
 801073c:	f800283a 	ret

08010740 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 8010740:	defffd04 	addi	sp,sp,-12
 8010744:	dfc00215 	stw	ra,8(sp)
 8010748:	df000115 	stw	fp,4(sp)
 801074c:	df000104 	addi	fp,sp,4
 8010750:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
 8010754:	80123e40 	call	80123e4 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 8010758:	00800044 	movi	r2,1
 801075c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 8010760:	e037883a 	mov	sp,fp
 8010764:	dfc00117 	ldw	ra,4(sp)
 8010768:	df000017 	ldw	fp,0(sp)
 801076c:	dec00204 	addi	sp,sp,8
 8010770:	f800283a 	ret

08010774 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 8010774:	defffe04 	addi	sp,sp,-8
 8010778:	dfc00115 	stw	ra,4(sp)
 801077c:	df000015 	stw	fp,0(sp)
 8010780:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 8010784:	01082004 	movi	r4,8320
 8010788:	000b883a 	mov	r5,zero
 801078c:	01800104 	movi	r6,4
 8010790:	01c0fa04 	movi	r7,1000
 8010794:	80112a40 	call	80112a4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_1, timer_1);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 8010798:	01020074 	movhi	r4,2049
 801079c:	210e1e04 	addi	r4,r4,14456
 80107a0:	000b883a 	mov	r5,zero
 80107a4:	01800144 	movi	r6,5
 80107a8:	80109480 	call	8010948 <altera_avalon_jtag_uart_init>
 80107ac:	01020074 	movhi	r4,2049
 80107b0:	210e1404 	addi	r4,r4,14416
 80107b4:	80107080 	call	8010708 <alt_dev_reg>
    ALTERA_UP_AVALON_CHARACTER_LCD_INIT ( CHARACTER_LCD_0, character_lcd_0);
 80107b8:	01020074 	movhi	r4,2049
 80107bc:	21122c04 	addi	r4,r4,18608
 80107c0:	80113dc0 	call	80113dc <alt_up_character_lcd_init>
 80107c4:	01020074 	movhi	r4,2049
 80107c8:	21122c04 	addi	r4,r4,18608
 80107cc:	80107080 	call	8010708 <alt_dev_reg>
}
 80107d0:	e037883a 	mov	sp,fp
 80107d4:	dfc00117 	ldw	ra,4(sp)
 80107d8:	df000017 	ldw	fp,0(sp)
 80107dc:	dec00204 	addi	sp,sp,8
 80107e0:	f800283a 	ret

080107e4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 80107e4:	defffa04 	addi	sp,sp,-24
 80107e8:	dfc00515 	stw	ra,20(sp)
 80107ec:	df000415 	stw	fp,16(sp)
 80107f0:	df000404 	addi	fp,sp,16
 80107f4:	e13ffd15 	stw	r4,-12(fp)
 80107f8:	e17ffe15 	stw	r5,-8(fp)
 80107fc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8010800:	e0bffd17 	ldw	r2,-12(fp)
 8010804:	10800017 	ldw	r2,0(r2)
 8010808:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 801080c:	e0bffc17 	ldw	r2,-16(fp)
 8010810:	10c00a04 	addi	r3,r2,40
 8010814:	e0bffd17 	ldw	r2,-12(fp)
 8010818:	10800217 	ldw	r2,8(r2)
 801081c:	1809883a 	mov	r4,r3
 8010820:	e17ffe17 	ldw	r5,-8(fp)
 8010824:	e1bfff17 	ldw	r6,-4(fp)
 8010828:	100f883a 	mov	r7,r2
 801082c:	8010e0c0 	call	8010e0c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 8010830:	e037883a 	mov	sp,fp
 8010834:	dfc00117 	ldw	ra,4(sp)
 8010838:	df000017 	ldw	fp,0(sp)
 801083c:	dec00204 	addi	sp,sp,8
 8010840:	f800283a 	ret

08010844 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 8010844:	defffa04 	addi	sp,sp,-24
 8010848:	dfc00515 	stw	ra,20(sp)
 801084c:	df000415 	stw	fp,16(sp)
 8010850:	df000404 	addi	fp,sp,16
 8010854:	e13ffd15 	stw	r4,-12(fp)
 8010858:	e17ffe15 	stw	r5,-8(fp)
 801085c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8010860:	e0bffd17 	ldw	r2,-12(fp)
 8010864:	10800017 	ldw	r2,0(r2)
 8010868:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 801086c:	e0bffc17 	ldw	r2,-16(fp)
 8010870:	10c00a04 	addi	r3,r2,40
 8010874:	e0bffd17 	ldw	r2,-12(fp)
 8010878:	10800217 	ldw	r2,8(r2)
 801087c:	1809883a 	mov	r4,r3
 8010880:	e17ffe17 	ldw	r5,-8(fp)
 8010884:	e1bfff17 	ldw	r6,-4(fp)
 8010888:	100f883a 	mov	r7,r2
 801088c:	80110180 	call	8011018 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 8010890:	e037883a 	mov	sp,fp
 8010894:	dfc00117 	ldw	ra,4(sp)
 8010898:	df000017 	ldw	fp,0(sp)
 801089c:	dec00204 	addi	sp,sp,8
 80108a0:	f800283a 	ret

080108a4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 80108a4:	defffc04 	addi	sp,sp,-16
 80108a8:	dfc00315 	stw	ra,12(sp)
 80108ac:	df000215 	stw	fp,8(sp)
 80108b0:	df000204 	addi	fp,sp,8
 80108b4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80108b8:	e0bfff17 	ldw	r2,-4(fp)
 80108bc:	10800017 	ldw	r2,0(r2)
 80108c0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 80108c4:	e0bffe17 	ldw	r2,-8(fp)
 80108c8:	10c00a04 	addi	r3,r2,40
 80108cc:	e0bfff17 	ldw	r2,-4(fp)
 80108d0:	10800217 	ldw	r2,8(r2)
 80108d4:	1809883a 	mov	r4,r3
 80108d8:	100b883a 	mov	r5,r2
 80108dc:	8010cb80 	call	8010cb8 <altera_avalon_jtag_uart_close>
}
 80108e0:	e037883a 	mov	sp,fp
 80108e4:	dfc00117 	ldw	ra,4(sp)
 80108e8:	df000017 	ldw	fp,0(sp)
 80108ec:	dec00204 	addi	sp,sp,8
 80108f0:	f800283a 	ret

080108f4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 80108f4:	defffa04 	addi	sp,sp,-24
 80108f8:	dfc00515 	stw	ra,20(sp)
 80108fc:	df000415 	stw	fp,16(sp)
 8010900:	df000404 	addi	fp,sp,16
 8010904:	e13ffd15 	stw	r4,-12(fp)
 8010908:	e17ffe15 	stw	r5,-8(fp)
 801090c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 8010910:	e0bffd17 	ldw	r2,-12(fp)
 8010914:	10800017 	ldw	r2,0(r2)
 8010918:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 801091c:	e0bffc17 	ldw	r2,-16(fp)
 8010920:	10800a04 	addi	r2,r2,40
 8010924:	1009883a 	mov	r4,r2
 8010928:	e17ffe17 	ldw	r5,-8(fp)
 801092c:	e1bfff17 	ldw	r6,-4(fp)
 8010930:	8010d200 	call	8010d20 <altera_avalon_jtag_uart_ioctl>
}
 8010934:	e037883a 	mov	sp,fp
 8010938:	dfc00117 	ldw	ra,4(sp)
 801093c:	df000017 	ldw	fp,0(sp)
 8010940:	dec00204 	addi	sp,sp,8
 8010944:	f800283a 	ret

08010948 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 8010948:	defffa04 	addi	sp,sp,-24
 801094c:	dfc00515 	stw	ra,20(sp)
 8010950:	df000415 	stw	fp,16(sp)
 8010954:	df000404 	addi	fp,sp,16
 8010958:	e13ffd15 	stw	r4,-12(fp)
 801095c:	e17ffe15 	stw	r5,-8(fp)
 8010960:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8010964:	e0bffd17 	ldw	r2,-12(fp)
 8010968:	00c00044 	movi	r3,1
 801096c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 8010970:	e0bffd17 	ldw	r2,-12(fp)
 8010974:	10800017 	ldw	r2,0(r2)
 8010978:	10800104 	addi	r2,r2,4
 801097c:	1007883a 	mov	r3,r2
 8010980:	e0bffd17 	ldw	r2,-12(fp)
 8010984:	10800817 	ldw	r2,32(r2)
 8010988:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 801098c:	e0fffe17 	ldw	r3,-8(fp)
 8010990:	e0bfff17 	ldw	r2,-4(fp)
 8010994:	d8000015 	stw	zero,0(sp)
 8010998:	1809883a 	mov	r4,r3
 801099c:	100b883a 	mov	r5,r2
 80109a0:	01820074 	movhi	r6,2049
 80109a4:	31828304 	addi	r6,r6,2572
 80109a8:	e1fffd17 	ldw	r7,-12(fp)
 80109ac:	8011bcc0 	call	8011bcc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 80109b0:	e0bffd17 	ldw	r2,-12(fp)
 80109b4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 80109b8:	e0bffd17 	ldw	r2,-12(fp)
 80109bc:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 80109c0:	00820074 	movhi	r2,2049
 80109c4:	10992204 	addi	r2,r2,25736
 80109c8:	10800017 	ldw	r2,0(r2)
 80109cc:	1809883a 	mov	r4,r3
 80109d0:	100b883a 	mov	r5,r2
 80109d4:	01820074 	movhi	r6,2049
 80109d8:	31830404 	addi	r6,r6,3088
 80109dc:	e1fffd17 	ldw	r7,-12(fp)
 80109e0:	80118040 	call	8011804 <alt_alarm_start>
 80109e4:	1000040e 	bge	r2,zero,80109f8 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 80109e8:	e0fffd17 	ldw	r3,-12(fp)
 80109ec:	00a00034 	movhi	r2,32768
 80109f0:	10bfffc4 	addi	r2,r2,-1
 80109f4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 80109f8:	e037883a 	mov	sp,fp
 80109fc:	dfc00117 	ldw	ra,4(sp)
 8010a00:	df000017 	ldw	fp,0(sp)
 8010a04:	dec00204 	addi	sp,sp,8
 8010a08:	f800283a 	ret

08010a0c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 8010a0c:	defff804 	addi	sp,sp,-32
 8010a10:	df000715 	stw	fp,28(sp)
 8010a14:	df000704 	addi	fp,sp,28
 8010a18:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 8010a1c:	e0bfff17 	ldw	r2,-4(fp)
 8010a20:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 8010a24:	e0bffb17 	ldw	r2,-20(fp)
 8010a28:	10800017 	ldw	r2,0(r2)
 8010a2c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8010a30:	e0bffc17 	ldw	r2,-16(fp)
 8010a34:	10800104 	addi	r2,r2,4
 8010a38:	10800037 	ldwio	r2,0(r2)
 8010a3c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 8010a40:	e0bffd17 	ldw	r2,-12(fp)
 8010a44:	1080c00c 	andi	r2,r2,768
 8010a48:	1000011e 	bne	r2,zero,8010a50 <altera_avalon_jtag_uart_irq+0x44>
      break;
 8010a4c:	00006c06 	br	8010c00 <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 8010a50:	e0bffd17 	ldw	r2,-12(fp)
 8010a54:	1080400c 	andi	r2,r2,256
 8010a58:	10003426 	beq	r2,zero,8010b2c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 8010a5c:	00800074 	movhi	r2,1
 8010a60:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8010a64:	e0bffb17 	ldw	r2,-20(fp)
 8010a68:	10800a17 	ldw	r2,40(r2)
 8010a6c:	10800044 	addi	r2,r2,1
 8010a70:	1081ffcc 	andi	r2,r2,2047
 8010a74:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 8010a78:	e0bffb17 	ldw	r2,-20(fp)
 8010a7c:	10c00b17 	ldw	r3,44(r2)
 8010a80:	e0bffe17 	ldw	r2,-8(fp)
 8010a84:	1880011e 	bne	r3,r2,8010a8c <altera_avalon_jtag_uart_irq+0x80>
          break;
 8010a88:	00001606 	br	8010ae4 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 8010a8c:	e0bffc17 	ldw	r2,-16(fp)
 8010a90:	10800037 	ldwio	r2,0(r2)
 8010a94:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 8010a98:	e0bff917 	ldw	r2,-28(fp)
 8010a9c:	10a0000c 	andi	r2,r2,32768
 8010aa0:	1000011e 	bne	r2,zero,8010aa8 <altera_avalon_jtag_uart_irq+0x9c>
          break;
 8010aa4:	00000f06 	br	8010ae4 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 8010aa8:	e0bffb17 	ldw	r2,-20(fp)
 8010aac:	10800a17 	ldw	r2,40(r2)
 8010ab0:	e0fff917 	ldw	r3,-28(fp)
 8010ab4:	1809883a 	mov	r4,r3
 8010ab8:	e0fffb17 	ldw	r3,-20(fp)
 8010abc:	1885883a 	add	r2,r3,r2
 8010ac0:	10800e04 	addi	r2,r2,56
 8010ac4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8010ac8:	e0bffb17 	ldw	r2,-20(fp)
 8010acc:	10800a17 	ldw	r2,40(r2)
 8010ad0:	10800044 	addi	r2,r2,1
 8010ad4:	10c1ffcc 	andi	r3,r2,2047
 8010ad8:	e0bffb17 	ldw	r2,-20(fp)
 8010adc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 8010ae0:	003fe006 	br	8010a64 <__alt_data_end+0xfc010a64>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 8010ae4:	e0bff917 	ldw	r2,-28(fp)
 8010ae8:	10bfffec 	andhi	r2,r2,65535
 8010aec:	10000f26 	beq	r2,zero,8010b2c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8010af0:	e0bffb17 	ldw	r2,-20(fp)
 8010af4:	10c00817 	ldw	r3,32(r2)
 8010af8:	00bfff84 	movi	r2,-2
 8010afc:	1886703a 	and	r3,r3,r2
 8010b00:	e0bffb17 	ldw	r2,-20(fp)
 8010b04:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 8010b08:	e0bffc17 	ldw	r2,-16(fp)
 8010b0c:	10800104 	addi	r2,r2,4
 8010b10:	1007883a 	mov	r3,r2
 8010b14:	e0bffb17 	ldw	r2,-20(fp)
 8010b18:	10800817 	ldw	r2,32(r2)
 8010b1c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8010b20:	e0bffc17 	ldw	r2,-16(fp)
 8010b24:	10800104 	addi	r2,r2,4
 8010b28:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 8010b2c:	e0bffd17 	ldw	r2,-12(fp)
 8010b30:	1080800c 	andi	r2,r2,512
 8010b34:	10003126 	beq	r2,zero,8010bfc <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 8010b38:	e0bffd17 	ldw	r2,-12(fp)
 8010b3c:	1004d43a 	srli	r2,r2,16
 8010b40:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 8010b44:	00001406 	br	8010b98 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 8010b48:	e0bffc17 	ldw	r2,-16(fp)
 8010b4c:	e0fffb17 	ldw	r3,-20(fp)
 8010b50:	18c00d17 	ldw	r3,52(r3)
 8010b54:	e13ffb17 	ldw	r4,-20(fp)
 8010b58:	20c7883a 	add	r3,r4,r3
 8010b5c:	18c20e04 	addi	r3,r3,2104
 8010b60:	18c00003 	ldbu	r3,0(r3)
 8010b64:	18c03fcc 	andi	r3,r3,255
 8010b68:	18c0201c 	xori	r3,r3,128
 8010b6c:	18ffe004 	addi	r3,r3,-128
 8010b70:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8010b74:	e0bffb17 	ldw	r2,-20(fp)
 8010b78:	10800d17 	ldw	r2,52(r2)
 8010b7c:	10800044 	addi	r2,r2,1
 8010b80:	10c1ffcc 	andi	r3,r2,2047
 8010b84:	e0bffb17 	ldw	r2,-20(fp)
 8010b88:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 8010b8c:	e0bffa17 	ldw	r2,-24(fp)
 8010b90:	10bfffc4 	addi	r2,r2,-1
 8010b94:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 8010b98:	e0bffa17 	ldw	r2,-24(fp)
 8010b9c:	10000526 	beq	r2,zero,8010bb4 <altera_avalon_jtag_uart_irq+0x1a8>
 8010ba0:	e0bffb17 	ldw	r2,-20(fp)
 8010ba4:	10c00d17 	ldw	r3,52(r2)
 8010ba8:	e0bffb17 	ldw	r2,-20(fp)
 8010bac:	10800c17 	ldw	r2,48(r2)
 8010bb0:	18bfe51e 	bne	r3,r2,8010b48 <__alt_data_end+0xfc010b48>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 8010bb4:	e0bffa17 	ldw	r2,-24(fp)
 8010bb8:	10001026 	beq	r2,zero,8010bfc <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8010bbc:	e0bffb17 	ldw	r2,-20(fp)
 8010bc0:	10c00817 	ldw	r3,32(r2)
 8010bc4:	00bfff44 	movi	r2,-3
 8010bc8:	1886703a 	and	r3,r3,r2
 8010bcc:	e0bffb17 	ldw	r2,-20(fp)
 8010bd0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8010bd4:	e0bffb17 	ldw	r2,-20(fp)
 8010bd8:	10800017 	ldw	r2,0(r2)
 8010bdc:	10800104 	addi	r2,r2,4
 8010be0:	1007883a 	mov	r3,r2
 8010be4:	e0bffb17 	ldw	r2,-20(fp)
 8010be8:	10800817 	ldw	r2,32(r2)
 8010bec:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8010bf0:	e0bffc17 	ldw	r2,-16(fp)
 8010bf4:	10800104 	addi	r2,r2,4
 8010bf8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 8010bfc:	003f8c06 	br	8010a30 <__alt_data_end+0xfc010a30>
}
 8010c00:	e037883a 	mov	sp,fp
 8010c04:	df000017 	ldw	fp,0(sp)
 8010c08:	dec00104 	addi	sp,sp,4
 8010c0c:	f800283a 	ret

08010c10 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 8010c10:	defff804 	addi	sp,sp,-32
 8010c14:	df000715 	stw	fp,28(sp)
 8010c18:	df000704 	addi	fp,sp,28
 8010c1c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 8010c20:	e0bffb17 	ldw	r2,-20(fp)
 8010c24:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 8010c28:	e0bff917 	ldw	r2,-28(fp)
 8010c2c:	10800017 	ldw	r2,0(r2)
 8010c30:	10800104 	addi	r2,r2,4
 8010c34:	10800037 	ldwio	r2,0(r2)
 8010c38:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 8010c3c:	e0bffa17 	ldw	r2,-24(fp)
 8010c40:	1081000c 	andi	r2,r2,1024
 8010c44:	10000b26 	beq	r2,zero,8010c74 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 8010c48:	e0bff917 	ldw	r2,-28(fp)
 8010c4c:	10800017 	ldw	r2,0(r2)
 8010c50:	10800104 	addi	r2,r2,4
 8010c54:	1007883a 	mov	r3,r2
 8010c58:	e0bff917 	ldw	r2,-28(fp)
 8010c5c:	10800817 	ldw	r2,32(r2)
 8010c60:	10810014 	ori	r2,r2,1024
 8010c64:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 8010c68:	e0bff917 	ldw	r2,-28(fp)
 8010c6c:	10000915 	stw	zero,36(r2)
 8010c70:	00000a06 	br	8010c9c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 8010c74:	e0bff917 	ldw	r2,-28(fp)
 8010c78:	10c00917 	ldw	r3,36(r2)
 8010c7c:	00a00034 	movhi	r2,32768
 8010c80:	10bfff04 	addi	r2,r2,-4
 8010c84:	10c00536 	bltu	r2,r3,8010c9c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 8010c88:	e0bff917 	ldw	r2,-28(fp)
 8010c8c:	10800917 	ldw	r2,36(r2)
 8010c90:	10c00044 	addi	r3,r2,1
 8010c94:	e0bff917 	ldw	r2,-28(fp)
 8010c98:	10c00915 	stw	r3,36(r2)
 8010c9c:	00820074 	movhi	r2,2049
 8010ca0:	10992204 	addi	r2,r2,25736
 8010ca4:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 8010ca8:	e037883a 	mov	sp,fp
 8010cac:	df000017 	ldw	fp,0(sp)
 8010cb0:	dec00104 	addi	sp,sp,4
 8010cb4:	f800283a 	ret

08010cb8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 8010cb8:	defffd04 	addi	sp,sp,-12
 8010cbc:	df000215 	stw	fp,8(sp)
 8010cc0:	df000204 	addi	fp,sp,8
 8010cc4:	e13ffe15 	stw	r4,-8(fp)
 8010cc8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8010ccc:	00000506 	br	8010ce4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 8010cd0:	e0bfff17 	ldw	r2,-4(fp)
 8010cd4:	1090000c 	andi	r2,r2,16384
 8010cd8:	10000226 	beq	r2,zero,8010ce4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 8010cdc:	00bffd44 	movi	r2,-11
 8010ce0:	00000b06 	br	8010d10 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8010ce4:	e0bffe17 	ldw	r2,-8(fp)
 8010ce8:	10c00d17 	ldw	r3,52(r2)
 8010cec:	e0bffe17 	ldw	r2,-8(fp)
 8010cf0:	10800c17 	ldw	r2,48(r2)
 8010cf4:	18800526 	beq	r3,r2,8010d0c <altera_avalon_jtag_uart_close+0x54>
 8010cf8:	e0bffe17 	ldw	r2,-8(fp)
 8010cfc:	10c00917 	ldw	r3,36(r2)
 8010d00:	e0bffe17 	ldw	r2,-8(fp)
 8010d04:	10800117 	ldw	r2,4(r2)
 8010d08:	18bff136 	bltu	r3,r2,8010cd0 <__alt_data_end+0xfc010cd0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 8010d0c:	0005883a 	mov	r2,zero
}
 8010d10:	e037883a 	mov	sp,fp
 8010d14:	df000017 	ldw	fp,0(sp)
 8010d18:	dec00104 	addi	sp,sp,4
 8010d1c:	f800283a 	ret

08010d20 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 8010d20:	defffa04 	addi	sp,sp,-24
 8010d24:	df000515 	stw	fp,20(sp)
 8010d28:	df000504 	addi	fp,sp,20
 8010d2c:	e13ffd15 	stw	r4,-12(fp)
 8010d30:	e17ffe15 	stw	r5,-8(fp)
 8010d34:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 8010d38:	00bff9c4 	movi	r2,-25
 8010d3c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 8010d40:	e0bffe17 	ldw	r2,-8(fp)
 8010d44:	10da8060 	cmpeqi	r3,r2,27137
 8010d48:	1800031e 	bne	r3,zero,8010d58 <altera_avalon_jtag_uart_ioctl+0x38>
 8010d4c:	109a80a0 	cmpeqi	r2,r2,27138
 8010d50:	1000191e 	bne	r2,zero,8010db8 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 8010d54:	00002806 	br	8010df8 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 8010d58:	e0bffd17 	ldw	r2,-12(fp)
 8010d5c:	10c00117 	ldw	r3,4(r2)
 8010d60:	00a00034 	movhi	r2,32768
 8010d64:	10bfffc4 	addi	r2,r2,-1
 8010d68:	18801226 	beq	r3,r2,8010db4 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 8010d6c:	e0bfff17 	ldw	r2,-4(fp)
 8010d70:	10800017 	ldw	r2,0(r2)
 8010d74:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 8010d78:	e0bffc17 	ldw	r2,-16(fp)
 8010d7c:	10800090 	cmplti	r2,r2,2
 8010d80:	1000061e 	bne	r2,zero,8010d9c <altera_avalon_jtag_uart_ioctl+0x7c>
 8010d84:	e0fffc17 	ldw	r3,-16(fp)
 8010d88:	00a00034 	movhi	r2,32768
 8010d8c:	10bfffc4 	addi	r2,r2,-1
 8010d90:	18800226 	beq	r3,r2,8010d9c <altera_avalon_jtag_uart_ioctl+0x7c>
 8010d94:	e0bffc17 	ldw	r2,-16(fp)
 8010d98:	00000206 	br	8010da4 <altera_avalon_jtag_uart_ioctl+0x84>
 8010d9c:	00a00034 	movhi	r2,32768
 8010da0:	10bfff84 	addi	r2,r2,-2
 8010da4:	e0fffd17 	ldw	r3,-12(fp)
 8010da8:	18800115 	stw	r2,4(r3)
      rc = 0;
 8010dac:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8010db0:	00001106 	br	8010df8 <altera_avalon_jtag_uart_ioctl+0xd8>
 8010db4:	00001006 	br	8010df8 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 8010db8:	e0bffd17 	ldw	r2,-12(fp)
 8010dbc:	10c00117 	ldw	r3,4(r2)
 8010dc0:	00a00034 	movhi	r2,32768
 8010dc4:	10bfffc4 	addi	r2,r2,-1
 8010dc8:	18800a26 	beq	r3,r2,8010df4 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 8010dcc:	e0bffd17 	ldw	r2,-12(fp)
 8010dd0:	10c00917 	ldw	r3,36(r2)
 8010dd4:	e0bffd17 	ldw	r2,-12(fp)
 8010dd8:	10800117 	ldw	r2,4(r2)
 8010ddc:	1885803a 	cmpltu	r2,r3,r2
 8010de0:	10c03fcc 	andi	r3,r2,255
 8010de4:	e0bfff17 	ldw	r2,-4(fp)
 8010de8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 8010dec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8010df0:	00000006 	br	8010df4 <altera_avalon_jtag_uart_ioctl+0xd4>
 8010df4:	0001883a 	nop

  default:
    break;
  }

  return rc;
 8010df8:	e0bffb17 	ldw	r2,-20(fp)
}
 8010dfc:	e037883a 	mov	sp,fp
 8010e00:	df000017 	ldw	fp,0(sp)
 8010e04:	dec00104 	addi	sp,sp,4
 8010e08:	f800283a 	ret

08010e0c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 8010e0c:	defff304 	addi	sp,sp,-52
 8010e10:	dfc00c15 	stw	ra,48(sp)
 8010e14:	df000b15 	stw	fp,44(sp)
 8010e18:	df000b04 	addi	fp,sp,44
 8010e1c:	e13ffc15 	stw	r4,-16(fp)
 8010e20:	e17ffd15 	stw	r5,-12(fp)
 8010e24:	e1bffe15 	stw	r6,-8(fp)
 8010e28:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 8010e2c:	e0bffd17 	ldw	r2,-12(fp)
 8010e30:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8010e34:	00004906 	br	8010f5c <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 8010e38:	e0bffc17 	ldw	r2,-16(fp)
 8010e3c:	10800a17 	ldw	r2,40(r2)
 8010e40:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 8010e44:	e0bffc17 	ldw	r2,-16(fp)
 8010e48:	10800b17 	ldw	r2,44(r2)
 8010e4c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 8010e50:	e0fff717 	ldw	r3,-36(fp)
 8010e54:	e0bff817 	ldw	r2,-32(fp)
 8010e58:	18800536 	bltu	r3,r2,8010e70 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 8010e5c:	e0fff717 	ldw	r3,-36(fp)
 8010e60:	e0bff817 	ldw	r2,-32(fp)
 8010e64:	1885c83a 	sub	r2,r3,r2
 8010e68:	e0bff615 	stw	r2,-40(fp)
 8010e6c:	00000406 	br	8010e80 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 8010e70:	00c20004 	movi	r3,2048
 8010e74:	e0bff817 	ldw	r2,-32(fp)
 8010e78:	1885c83a 	sub	r2,r3,r2
 8010e7c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8010e80:	e0bff617 	ldw	r2,-40(fp)
 8010e84:	1000011e 	bne	r2,zero,8010e8c <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 8010e88:	00001d06 	br	8010f00 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 8010e8c:	e0fffe17 	ldw	r3,-8(fp)
 8010e90:	e0bff617 	ldw	r2,-40(fp)
 8010e94:	1880022e 	bgeu	r3,r2,8010ea0 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 8010e98:	e0bffe17 	ldw	r2,-8(fp)
 8010e9c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 8010ea0:	e0bff817 	ldw	r2,-32(fp)
 8010ea4:	10800e04 	addi	r2,r2,56
 8010ea8:	e0fffc17 	ldw	r3,-16(fp)
 8010eac:	1885883a 	add	r2,r3,r2
 8010eb0:	e13ff517 	ldw	r4,-44(fp)
 8010eb4:	100b883a 	mov	r5,r2
 8010eb8:	e1bff617 	ldw	r6,-40(fp)
 8010ebc:	8007abc0 	call	8007abc <memcpy>
      ptr   += n;
 8010ec0:	e0fff517 	ldw	r3,-44(fp)
 8010ec4:	e0bff617 	ldw	r2,-40(fp)
 8010ec8:	1885883a 	add	r2,r3,r2
 8010ecc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 8010ed0:	e0fffe17 	ldw	r3,-8(fp)
 8010ed4:	e0bff617 	ldw	r2,-40(fp)
 8010ed8:	1885c83a 	sub	r2,r3,r2
 8010edc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8010ee0:	e0fff817 	ldw	r3,-32(fp)
 8010ee4:	e0bff617 	ldw	r2,-40(fp)
 8010ee8:	1885883a 	add	r2,r3,r2
 8010eec:	10c1ffcc 	andi	r3,r2,2047
 8010ef0:	e0bffc17 	ldw	r2,-16(fp)
 8010ef4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 8010ef8:	e0bffe17 	ldw	r2,-8(fp)
 8010efc:	00bfce16 	blt	zero,r2,8010e38 <__alt_data_end+0xfc010e38>

    /* If we read any data then return it */
    if (ptr != buffer)
 8010f00:	e0fff517 	ldw	r3,-44(fp)
 8010f04:	e0bffd17 	ldw	r2,-12(fp)
 8010f08:	18800126 	beq	r3,r2,8010f10 <altera_avalon_jtag_uart_read+0x104>
      break;
 8010f0c:	00001506 	br	8010f64 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 8010f10:	e0bfff17 	ldw	r2,-4(fp)
 8010f14:	1090000c 	andi	r2,r2,16384
 8010f18:	10000126 	beq	r2,zero,8010f20 <altera_avalon_jtag_uart_read+0x114>
      break;
 8010f1c:	00001106 	br	8010f64 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 8010f20:	0001883a 	nop
 8010f24:	e0bffc17 	ldw	r2,-16(fp)
 8010f28:	10c00a17 	ldw	r3,40(r2)
 8010f2c:	e0bff717 	ldw	r2,-36(fp)
 8010f30:	1880051e 	bne	r3,r2,8010f48 <altera_avalon_jtag_uart_read+0x13c>
 8010f34:	e0bffc17 	ldw	r2,-16(fp)
 8010f38:	10c00917 	ldw	r3,36(r2)
 8010f3c:	e0bffc17 	ldw	r2,-16(fp)
 8010f40:	10800117 	ldw	r2,4(r2)
 8010f44:	18bff736 	bltu	r3,r2,8010f24 <__alt_data_end+0xfc010f24>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 8010f48:	e0bffc17 	ldw	r2,-16(fp)
 8010f4c:	10c00a17 	ldw	r3,40(r2)
 8010f50:	e0bff717 	ldw	r2,-36(fp)
 8010f54:	1880011e 	bne	r3,r2,8010f5c <altera_avalon_jtag_uart_read+0x150>
      break;
 8010f58:	00000206 	br	8010f64 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8010f5c:	e0bffe17 	ldw	r2,-8(fp)
 8010f60:	00bfb516 	blt	zero,r2,8010e38 <__alt_data_end+0xfc010e38>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 8010f64:	e0fff517 	ldw	r3,-44(fp)
 8010f68:	e0bffd17 	ldw	r2,-12(fp)
 8010f6c:	18801826 	beq	r3,r2,8010fd0 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8010f70:	0005303a 	rdctl	r2,status
 8010f74:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8010f78:	e0fffa17 	ldw	r3,-24(fp)
 8010f7c:	00bfff84 	movi	r2,-2
 8010f80:	1884703a 	and	r2,r3,r2
 8010f84:	1001703a 	wrctl	status,r2
  
  return context;
 8010f88:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 8010f8c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8010f90:	e0bffc17 	ldw	r2,-16(fp)
 8010f94:	10800817 	ldw	r2,32(r2)
 8010f98:	10c00054 	ori	r3,r2,1
 8010f9c:	e0bffc17 	ldw	r2,-16(fp)
 8010fa0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8010fa4:	e0bffc17 	ldw	r2,-16(fp)
 8010fa8:	10800017 	ldw	r2,0(r2)
 8010fac:	10800104 	addi	r2,r2,4
 8010fb0:	1007883a 	mov	r3,r2
 8010fb4:	e0bffc17 	ldw	r2,-16(fp)
 8010fb8:	10800817 	ldw	r2,32(r2)
 8010fbc:	18800035 	stwio	r2,0(r3)
 8010fc0:	e0bff917 	ldw	r2,-28(fp)
 8010fc4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8010fc8:	e0bffb17 	ldw	r2,-20(fp)
 8010fcc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 8010fd0:	e0fff517 	ldw	r3,-44(fp)
 8010fd4:	e0bffd17 	ldw	r2,-12(fp)
 8010fd8:	18800426 	beq	r3,r2,8010fec <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 8010fdc:	e0fff517 	ldw	r3,-44(fp)
 8010fe0:	e0bffd17 	ldw	r2,-12(fp)
 8010fe4:	1885c83a 	sub	r2,r3,r2
 8010fe8:	00000606 	br	8011004 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 8010fec:	e0bfff17 	ldw	r2,-4(fp)
 8010ff0:	1090000c 	andi	r2,r2,16384
 8010ff4:	10000226 	beq	r2,zero,8011000 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 8010ff8:	00bffd44 	movi	r2,-11
 8010ffc:	00000106 	br	8011004 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 8011000:	00bffec4 	movi	r2,-5
}
 8011004:	e037883a 	mov	sp,fp
 8011008:	dfc00117 	ldw	ra,4(sp)
 801100c:	df000017 	ldw	fp,0(sp)
 8011010:	dec00204 	addi	sp,sp,8
 8011014:	f800283a 	ret

08011018 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 8011018:	defff304 	addi	sp,sp,-52
 801101c:	dfc00c15 	stw	ra,48(sp)
 8011020:	df000b15 	stw	fp,44(sp)
 8011024:	df000b04 	addi	fp,sp,44
 8011028:	e13ffc15 	stw	r4,-16(fp)
 801102c:	e17ffd15 	stw	r5,-12(fp)
 8011030:	e1bffe15 	stw	r6,-8(fp)
 8011034:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 8011038:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 801103c:	e0bffd17 	ldw	r2,-12(fp)
 8011040:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8011044:	00003806 	br	8011128 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 8011048:	e0bffc17 	ldw	r2,-16(fp)
 801104c:	10800c17 	ldw	r2,48(r2)
 8011050:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 8011054:	e0bffc17 	ldw	r2,-16(fp)
 8011058:	10800d17 	ldw	r2,52(r2)
 801105c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 8011060:	e0fff817 	ldw	r3,-32(fp)
 8011064:	e0bff517 	ldw	r2,-44(fp)
 8011068:	1880062e 	bgeu	r3,r2,8011084 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 801106c:	e0fff517 	ldw	r3,-44(fp)
 8011070:	e0bff817 	ldw	r2,-32(fp)
 8011074:	1885c83a 	sub	r2,r3,r2
 8011078:	10bfffc4 	addi	r2,r2,-1
 801107c:	e0bff615 	stw	r2,-40(fp)
 8011080:	00000b06 	br	80110b0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 8011084:	e0bff517 	ldw	r2,-44(fp)
 8011088:	10000526 	beq	r2,zero,80110a0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 801108c:	00c20004 	movi	r3,2048
 8011090:	e0bff817 	ldw	r2,-32(fp)
 8011094:	1885c83a 	sub	r2,r3,r2
 8011098:	e0bff615 	stw	r2,-40(fp)
 801109c:	00000406 	br	80110b0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 80110a0:	00c1ffc4 	movi	r3,2047
 80110a4:	e0bff817 	ldw	r2,-32(fp)
 80110a8:	1885c83a 	sub	r2,r3,r2
 80110ac:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 80110b0:	e0bff617 	ldw	r2,-40(fp)
 80110b4:	1000011e 	bne	r2,zero,80110bc <altera_avalon_jtag_uart_write+0xa4>
        break;
 80110b8:	00001d06 	br	8011130 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 80110bc:	e0fffe17 	ldw	r3,-8(fp)
 80110c0:	e0bff617 	ldw	r2,-40(fp)
 80110c4:	1880022e 	bgeu	r3,r2,80110d0 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 80110c8:	e0bffe17 	ldw	r2,-8(fp)
 80110cc:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 80110d0:	e0bff817 	ldw	r2,-32(fp)
 80110d4:	10820e04 	addi	r2,r2,2104
 80110d8:	e0fffc17 	ldw	r3,-16(fp)
 80110dc:	1885883a 	add	r2,r3,r2
 80110e0:	1009883a 	mov	r4,r2
 80110e4:	e17ffd17 	ldw	r5,-12(fp)
 80110e8:	e1bff617 	ldw	r6,-40(fp)
 80110ec:	8007abc0 	call	8007abc <memcpy>
      ptr   += n;
 80110f0:	e0fffd17 	ldw	r3,-12(fp)
 80110f4:	e0bff617 	ldw	r2,-40(fp)
 80110f8:	1885883a 	add	r2,r3,r2
 80110fc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 8011100:	e0fffe17 	ldw	r3,-8(fp)
 8011104:	e0bff617 	ldw	r2,-40(fp)
 8011108:	1885c83a 	sub	r2,r3,r2
 801110c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8011110:	e0fff817 	ldw	r3,-32(fp)
 8011114:	e0bff617 	ldw	r2,-40(fp)
 8011118:	1885883a 	add	r2,r3,r2
 801111c:	10c1ffcc 	andi	r3,r2,2047
 8011120:	e0bffc17 	ldw	r2,-16(fp)
 8011124:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8011128:	e0bffe17 	ldw	r2,-8(fp)
 801112c:	00bfc616 	blt	zero,r2,8011048 <__alt_data_end+0xfc011048>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011130:	0005303a 	rdctl	r2,status
 8011134:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011138:	e0fffa17 	ldw	r3,-24(fp)
 801113c:	00bfff84 	movi	r2,-2
 8011140:	1884703a 	and	r2,r3,r2
 8011144:	1001703a 	wrctl	status,r2
  
  return context;
 8011148:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 801114c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8011150:	e0bffc17 	ldw	r2,-16(fp)
 8011154:	10800817 	ldw	r2,32(r2)
 8011158:	10c00094 	ori	r3,r2,2
 801115c:	e0bffc17 	ldw	r2,-16(fp)
 8011160:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8011164:	e0bffc17 	ldw	r2,-16(fp)
 8011168:	10800017 	ldw	r2,0(r2)
 801116c:	10800104 	addi	r2,r2,4
 8011170:	1007883a 	mov	r3,r2
 8011174:	e0bffc17 	ldw	r2,-16(fp)
 8011178:	10800817 	ldw	r2,32(r2)
 801117c:	18800035 	stwio	r2,0(r3)
 8011180:	e0bff917 	ldw	r2,-28(fp)
 8011184:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011188:	e0bffb17 	ldw	r2,-20(fp)
 801118c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 8011190:	e0bffe17 	ldw	r2,-8(fp)
 8011194:	0080120e 	bge	zero,r2,80111e0 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 8011198:	e0bfff17 	ldw	r2,-4(fp)
 801119c:	1090000c 	andi	r2,r2,16384
 80111a0:	10000126 	beq	r2,zero,80111a8 <altera_avalon_jtag_uart_write+0x190>
        break;
 80111a4:	00001006 	br	80111e8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 80111a8:	0001883a 	nop
 80111ac:	e0bffc17 	ldw	r2,-16(fp)
 80111b0:	10c00d17 	ldw	r3,52(r2)
 80111b4:	e0bff517 	ldw	r2,-44(fp)
 80111b8:	1880051e 	bne	r3,r2,80111d0 <altera_avalon_jtag_uart_write+0x1b8>
 80111bc:	e0bffc17 	ldw	r2,-16(fp)
 80111c0:	10c00917 	ldw	r3,36(r2)
 80111c4:	e0bffc17 	ldw	r2,-16(fp)
 80111c8:	10800117 	ldw	r2,4(r2)
 80111cc:	18bff736 	bltu	r3,r2,80111ac <__alt_data_end+0xfc0111ac>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 80111d0:	e0bffc17 	ldw	r2,-16(fp)
 80111d4:	10800917 	ldw	r2,36(r2)
 80111d8:	10000126 	beq	r2,zero,80111e0 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 80111dc:	00000206 	br	80111e8 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 80111e0:	e0bffe17 	ldw	r2,-8(fp)
 80111e4:	00bf9716 	blt	zero,r2,8011044 <__alt_data_end+0xfc011044>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 80111e8:	e0fffd17 	ldw	r3,-12(fp)
 80111ec:	e0bff717 	ldw	r2,-36(fp)
 80111f0:	18800426 	beq	r3,r2,8011204 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 80111f4:	e0fffd17 	ldw	r3,-12(fp)
 80111f8:	e0bff717 	ldw	r2,-36(fp)
 80111fc:	1885c83a 	sub	r2,r3,r2
 8011200:	00000606 	br	801121c <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 8011204:	e0bfff17 	ldw	r2,-4(fp)
 8011208:	1090000c 	andi	r2,r2,16384
 801120c:	10000226 	beq	r2,zero,8011218 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 8011210:	00bffd44 	movi	r2,-11
 8011214:	00000106 	br	801121c <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 8011218:	00bffec4 	movi	r2,-5
}
 801121c:	e037883a 	mov	sp,fp
 8011220:	dfc00117 	ldw	ra,4(sp)
 8011224:	df000017 	ldw	fp,0(sp)
 8011228:	dec00204 	addi	sp,sp,8
 801122c:	f800283a 	ret

08011230 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 8011230:	defffa04 	addi	sp,sp,-24
 8011234:	dfc00515 	stw	ra,20(sp)
 8011238:	df000415 	stw	fp,16(sp)
 801123c:	df000404 	addi	fp,sp,16
 8011240:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 8011244:	0007883a 	mov	r3,zero
 8011248:	e0bfff17 	ldw	r2,-4(fp)
 801124c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 8011250:	e0bfff17 	ldw	r2,-4(fp)
 8011254:	10800104 	addi	r2,r2,4
 8011258:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801125c:	0005303a 	rdctl	r2,status
 8011260:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011264:	e0fffd17 	ldw	r3,-12(fp)
 8011268:	00bfff84 	movi	r2,-2
 801126c:	1884703a 	and	r2,r3,r2
 8011270:	1001703a 	wrctl	status,r2
  
  return context;
 8011274:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 8011278:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 801127c:	80122e00 	call	80122e0 <alt_tick>
 8011280:	e0bffc17 	ldw	r2,-16(fp)
 8011284:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011288:	e0bffe17 	ldw	r2,-8(fp)
 801128c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 8011290:	e037883a 	mov	sp,fp
 8011294:	dfc00117 	ldw	ra,4(sp)
 8011298:	df000017 	ldw	fp,0(sp)
 801129c:	dec00204 	addi	sp,sp,8
 80112a0:	f800283a 	ret

080112a4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 80112a4:	defff804 	addi	sp,sp,-32
 80112a8:	dfc00715 	stw	ra,28(sp)
 80112ac:	df000615 	stw	fp,24(sp)
 80112b0:	df000604 	addi	fp,sp,24
 80112b4:	e13ffc15 	stw	r4,-16(fp)
 80112b8:	e17ffd15 	stw	r5,-12(fp)
 80112bc:	e1bffe15 	stw	r6,-8(fp)
 80112c0:	e1ffff15 	stw	r7,-4(fp)
 80112c4:	e0bfff17 	ldw	r2,-4(fp)
 80112c8:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 80112cc:	00820074 	movhi	r2,2049
 80112d0:	10992204 	addi	r2,r2,25736
 80112d4:	10800017 	ldw	r2,0(r2)
 80112d8:	1000041e 	bne	r2,zero,80112ec <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 80112dc:	00820074 	movhi	r2,2049
 80112e0:	10992204 	addi	r2,r2,25736
 80112e4:	e0fffb17 	ldw	r3,-20(fp)
 80112e8:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 80112ec:	e0bffc17 	ldw	r2,-16(fp)
 80112f0:	10800104 	addi	r2,r2,4
 80112f4:	00c001c4 	movi	r3,7
 80112f8:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 80112fc:	d8000015 	stw	zero,0(sp)
 8011300:	e13ffd17 	ldw	r4,-12(fp)
 8011304:	e17ffe17 	ldw	r5,-8(fp)
 8011308:	01820074 	movhi	r6,2049
 801130c:	31848c04 	addi	r6,r6,4656
 8011310:	e1fffc17 	ldw	r7,-16(fp)
 8011314:	8011bcc0 	call	8011bcc <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 8011318:	e037883a 	mov	sp,fp
 801131c:	dfc00117 	ldw	ra,4(sp)
 8011320:	df000017 	ldw	fp,0(sp)
 8011324:	dec00204 	addi	sp,sp,8
 8011328:	f800283a 	ret

0801132c <get_DDRAM_addr>:
 * @sa the datasheet for the LCD Display Controller on the DE2 Board
 * @note the function requires that the input are in the valid range
 *
 **/
unsigned char get_DDRAM_addr(unsigned x_pos, unsigned y_pos)
{
 801132c:	defffc04 	addi	sp,sp,-16
 8011330:	df000315 	stw	fp,12(sp)
 8011334:	df000304 	addi	fp,sp,12
 8011338:	e13ffe15 	stw	r4,-8(fp)
 801133c:	e17fff15 	stw	r5,-4(fp)
	//assume valid inputs
	unsigned char addr = 0x00000000;
 8011340:	e03ffd05 	stb	zero,-12(fp)
	if (y_pos == 0)
 8011344:	e0bfff17 	ldw	r2,-4(fp)
 8011348:	1000061e 	bne	r2,zero,8011364 <get_DDRAM_addr+0x38>
	{
		addr |= x_pos;
 801134c:	e0bffe17 	ldw	r2,-8(fp)
 8011350:	1007883a 	mov	r3,r2
 8011354:	e0bffd03 	ldbu	r2,-12(fp)
 8011358:	1884b03a 	or	r2,r3,r2
 801135c:	e0bffd05 	stb	r2,-12(fp)
 8011360:	00000806 	br	8011384 <get_DDRAM_addr+0x58>
	}
	else
	{
		addr |= x_pos;
 8011364:	e0bffe17 	ldw	r2,-8(fp)
 8011368:	1007883a 	mov	r3,r2
 801136c:	e0bffd03 	ldbu	r2,-12(fp)
 8011370:	1884b03a 	or	r2,r3,r2
 8011374:	e0bffd05 	stb	r2,-12(fp)
		addr |= 0x00000040;
 8011378:	e0bffd03 	ldbu	r2,-12(fp)
 801137c:	10801014 	ori	r2,r2,64
 8011380:	e0bffd05 	stb	r2,-12(fp)
	}
	// b_7 is always 1 for DDRAM address, see datasheet
	return (addr | 0x00000080);
 8011384:	e0fffd03 	ldbu	r3,-12(fp)
 8011388:	00bfe004 	movi	r2,-128
 801138c:	1884b03a 	or	r2,r3,r2
}
 8011390:	e037883a 	mov	sp,fp
 8011394:	df000017 	ldw	fp,0(sp)
 8011398:	dec00104 	addi	sp,sp,4
 801139c:	f800283a 	ret

080113a0 <alt_up_character_lcd_send_cmd>:
 * @param cmd -- the command bits 
 *
 * @return nothing
 **/
void alt_up_character_lcd_send_cmd(alt_up_character_lcd_dev *lcd, unsigned char cmd)
{
 80113a0:	defffd04 	addi	sp,sp,-12
 80113a4:	df000215 	stw	fp,8(sp)
 80113a8:	df000204 	addi	fp,sp,8
 80113ac:	e13ffe15 	stw	r4,-8(fp)
 80113b0:	2805883a 	mov	r2,r5
 80113b4:	e0bfff05 	stb	r2,-4(fp)
 	// NOTE: We use the term Instruction Register and Control Register interchangeably
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, cmd);
 80113b8:	e0bffe17 	ldw	r2,-8(fp)
 80113bc:	10800a17 	ldw	r2,40(r2)
 80113c0:	1007883a 	mov	r3,r2
 80113c4:	e0bfff03 	ldbu	r2,-4(fp)
 80113c8:	18800025 	stbio	r2,0(r3)
}
 80113cc:	e037883a 	mov	sp,fp
 80113d0:	df000017 	ldw	fp,0(sp)
 80113d4:	dec00104 	addi	sp,sp,4
 80113d8:	f800283a 	ret

080113dc <alt_up_character_lcd_init>:
 * file for a detailed description of each function
 */
////////////////////////////////////////////////////////////////////////////

void alt_up_character_lcd_init(alt_up_character_lcd_dev *lcd)
{
 80113dc:	defffe04 	addi	sp,sp,-8
 80113e0:	df000115 	stw	fp,4(sp)
 80113e4:	df000104 	addi	fp,sp,4
 80113e8:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, ALT_UP_CHARACTER_LCD_COMM_CLEAR_DISPLAY);
 80113ec:	e0bfff17 	ldw	r2,-4(fp)
 80113f0:	10800a17 	ldw	r2,40(r2)
 80113f4:	1007883a 	mov	r3,r2
 80113f8:	00800044 	movi	r2,1
 80113fc:	18800025 	stbio	r2,0(r3)
	// register the device 
	// see "Developing Device Drivers for the HAL" in "Nios II Software Developer's Handbook"
}
 8011400:	e037883a 	mov	sp,fp
 8011404:	df000017 	ldw	fp,0(sp)
 8011408:	dec00104 	addi	sp,sp,4
 801140c:	f800283a 	ret

08011410 <alt_up_character_lcd_open_dev>:

alt_up_character_lcd_dev* alt_up_character_lcd_open_dev(const char* name)
{
 8011410:	defffc04 	addi	sp,sp,-16
 8011414:	dfc00315 	stw	ra,12(sp)
 8011418:	df000215 	stw	fp,8(sp)
 801141c:	df000204 	addi	fp,sp,8
 8011420:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_character_lcd_dev *dev = (alt_up_character_lcd_dev*)alt_find_dev(name, &alt_dev_list);
 8011424:	e13fff17 	ldw	r4,-4(fp)
 8011428:	01420074 	movhi	r5,2049
 801142c:	29523f04 	addi	r5,r5,18684
 8011430:	8011b0c0 	call	8011b0c <alt_find_dev>
 8011434:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 8011438:	e0bffe17 	ldw	r2,-8(fp)
}
 801143c:	e037883a 	mov	sp,fp
 8011440:	dfc00117 	ldw	ra,4(sp)
 8011444:	df000017 	ldw	fp,0(sp)
 8011448:	dec00204 	addi	sp,sp,8
 801144c:	f800283a 	ret

08011450 <alt_up_character_lcd_write>:

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
 8011450:	defffb04 	addi	sp,sp,-20
 8011454:	df000415 	stw	fp,16(sp)
 8011458:	df000404 	addi	fp,sp,16
 801145c:	e13ffd15 	stw	r4,-12(fp)
 8011460:	e17ffe15 	stw	r5,-8(fp)
 8011464:	e1bfff15 	stw	r6,-4(fp)
	unsigned int i;
	for (i = 0; i < len; i++)
 8011468:	e03ffc15 	stw	zero,-16(fp)
 801146c:	00000f06 	br	80114ac <alt_up_character_lcd_write+0x5c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
 8011470:	e0bffd17 	ldw	r2,-12(fp)
 8011474:	10800a17 	ldw	r2,40(r2)
 8011478:	10800044 	addi	r2,r2,1
 801147c:	1009883a 	mov	r4,r2
 8011480:	e0fffe17 	ldw	r3,-8(fp)
 8011484:	e0bffc17 	ldw	r2,-16(fp)
 8011488:	1885883a 	add	r2,r3,r2
 801148c:	10800003 	ldbu	r2,0(r2)
 8011490:	10803fcc 	andi	r2,r2,255
 8011494:	1080201c 	xori	r2,r2,128
 8011498:	10bfe004 	addi	r2,r2,-128
 801149c:	20800025 	stbio	r2,0(r4)
}

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
	unsigned int i;
	for (i = 0; i < len; i++)
 80114a0:	e0bffc17 	ldw	r2,-16(fp)
 80114a4:	10800044 	addi	r2,r2,1
 80114a8:	e0bffc15 	stw	r2,-16(fp)
 80114ac:	e0fffc17 	ldw	r3,-16(fp)
 80114b0:	e0bfff17 	ldw	r2,-4(fp)
 80114b4:	18bfee36 	bltu	r3,r2,8011470 <__alt_data_end+0xfc011470>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
	}
}
 80114b8:	e037883a 	mov	sp,fp
 80114bc:	df000017 	ldw	fp,0(sp)
 80114c0:	dec00104 	addi	sp,sp,4
 80114c4:	f800283a 	ret

080114c8 <alt_up_character_lcd_string>:

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
 80114c8:	defffd04 	addi	sp,sp,-12
 80114cc:	df000215 	stw	fp,8(sp)
 80114d0:	df000204 	addi	fp,sp,8
 80114d4:	e13ffe15 	stw	r4,-8(fp)
 80114d8:	e17fff15 	stw	r5,-4(fp)
	while ( *ptr )
 80114dc:	00000d06 	br	8011514 <alt_up_character_lcd_string+0x4c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
 80114e0:	e0bffe17 	ldw	r2,-8(fp)
 80114e4:	10800a17 	ldw	r2,40(r2)
 80114e8:	10800044 	addi	r2,r2,1
 80114ec:	1007883a 	mov	r3,r2
 80114f0:	e0bfff17 	ldw	r2,-4(fp)
 80114f4:	10800003 	ldbu	r2,0(r2)
 80114f8:	10803fcc 	andi	r2,r2,255
 80114fc:	1080201c 	xori	r2,r2,128
 8011500:	10bfe004 	addi	r2,r2,-128
 8011504:	18800025 	stbio	r2,0(r3)
		++ptr;
 8011508:	e0bfff17 	ldw	r2,-4(fp)
 801150c:	10800044 	addi	r2,r2,1
 8011510:	e0bfff15 	stw	r2,-4(fp)
	}
}

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
	while ( *ptr )
 8011514:	e0bfff17 	ldw	r2,-4(fp)
 8011518:	10800003 	ldbu	r2,0(r2)
 801151c:	10803fcc 	andi	r2,r2,255
 8011520:	1080201c 	xori	r2,r2,128
 8011524:	10bfe004 	addi	r2,r2,-128
 8011528:	103fed1e 	bne	r2,zero,80114e0 <__alt_data_end+0xfc0114e0>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
		++ptr;
	}
}
 801152c:	e037883a 	mov	sp,fp
 8011530:	df000017 	ldw	fp,0(sp)
 8011534:	dec00104 	addi	sp,sp,4
 8011538:	f800283a 	ret

0801153c <alt_up_character_lcd_write_fd>:

// this function isn't used, and is included for future upgrades
int alt_up_character_lcd_write_fd(alt_fd *fd, const char *ptr, int len)
{
 801153c:	defffb04 	addi	sp,sp,-20
 8011540:	dfc00415 	stw	ra,16(sp)
 8011544:	df000315 	stw	fp,12(sp)
 8011548:	df000304 	addi	fp,sp,12
 801154c:	e13ffd15 	stw	r4,-12(fp)
 8011550:	e17ffe15 	stw	r5,-8(fp)
 8011554:	e1bfff15 	stw	r6,-4(fp)
	alt_up_character_lcd_write( (alt_up_character_lcd_dev *) fd->dev, ptr, (unsigned int) len);
 8011558:	e0bffd17 	ldw	r2,-12(fp)
 801155c:	10c00017 	ldw	r3,0(r2)
 8011560:	e0bfff17 	ldw	r2,-4(fp)
 8011564:	1809883a 	mov	r4,r3
 8011568:	e17ffe17 	ldw	r5,-8(fp)
 801156c:	100d883a 	mov	r6,r2
 8011570:	80114500 	call	8011450 <alt_up_character_lcd_write>
	return 0;
 8011574:	0005883a 	mov	r2,zero
}
 8011578:	e037883a 	mov	sp,fp
 801157c:	dfc00117 	ldw	ra,4(sp)
 8011580:	df000017 	ldw	fp,0(sp)
 8011584:	dec00204 	addi	sp,sp,8
 8011588:	f800283a 	ret

0801158c <alt_up_character_lcd_set_cursor_pos>:

int alt_up_character_lcd_set_cursor_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, 
	 unsigned y_pos)
{
 801158c:	defffa04 	addi	sp,sp,-24
 8011590:	dfc00515 	stw	ra,20(sp)
 8011594:	df000415 	stw	fp,16(sp)
 8011598:	df000404 	addi	fp,sp,16
 801159c:	e13ffd15 	stw	r4,-12(fp)
 80115a0:	e17ffe15 	stw	r5,-8(fp)
 80115a4:	e1bfff15 	stw	r6,-4(fp)
	//boundary check
	if (x_pos > 39 || y_pos > 1 )
 80115a8:	e0bffe17 	ldw	r2,-8(fp)
 80115ac:	10800a28 	cmpgeui	r2,r2,40
 80115b0:	1000031e 	bne	r2,zero,80115c0 <alt_up_character_lcd_set_cursor_pos+0x34>
 80115b4:	e0bfff17 	ldw	r2,-4(fp)
 80115b8:	108000b0 	cmpltui	r2,r2,2
 80115bc:	1000021e 	bne	r2,zero,80115c8 <alt_up_character_lcd_set_cursor_pos+0x3c>
		// invalid argument
		return -1;
 80115c0:	00bfffc4 	movi	r2,-1
 80115c4:	00000906 	br	80115ec <alt_up_character_lcd_set_cursor_pos+0x60>
	// calculate address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
 80115c8:	e13ffe17 	ldw	r4,-8(fp)
 80115cc:	e17fff17 	ldw	r5,-4(fp)
 80115d0:	801132c0 	call	801132c <get_DDRAM_addr>
 80115d4:	e0bffc05 	stb	r2,-16(fp)
	// set the cursor
	alt_up_character_lcd_send_cmd(lcd, addr);
 80115d8:	e0bffc03 	ldbu	r2,-16(fp)
 80115dc:	e13ffd17 	ldw	r4,-12(fp)
 80115e0:	100b883a 	mov	r5,r2
 80115e4:	80113a00 	call	80113a0 <alt_up_character_lcd_send_cmd>
	return 0;
 80115e8:	0005883a 	mov	r2,zero
}
 80115ec:	e037883a 	mov	sp,fp
 80115f0:	dfc00117 	ldw	ra,4(sp)
 80115f4:	df000017 	ldw	fp,0(sp)
 80115f8:	dec00204 	addi	sp,sp,8
 80115fc:	f800283a 	ret

08011600 <alt_up_character_lcd_shift_cursor>:

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
 8011600:	defffb04 	addi	sp,sp,-20
 8011604:	dfc00415 	stw	ra,16(sp)
 8011608:	df000315 	stw	fp,12(sp)
 801160c:	df000304 	addi	fp,sp,12
 8011610:	e13ffe15 	stw	r4,-8(fp)
 8011614:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
 8011618:	e0bfff17 	ldw	r2,-4(fp)
 801161c:	1000011e 	bne	r2,zero,8011624 <alt_up_character_lcd_shift_cursor+0x24>
		// don't ask me to do nothing 
		return;
 8011620:	00001406 	br	8011674 <alt_up_character_lcd_shift_cursor+0x74>

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
 8011624:	e0bfff17 	ldw	r2,-4(fp)
 8011628:	0080020e 	bge	zero,r2,8011634 <alt_up_character_lcd_shift_cursor+0x34>
 801162c:	00800504 	movi	r2,20
 8011630:	00000106 	br	8011638 <alt_up_character_lcd_shift_cursor+0x38>
 8011634:	00800404 	movi	r2,16
 8011638:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
 801163c:	e0bfff17 	ldw	r2,-4(fp)
 8011640:	1000010e 	bge	r2,zero,8011648 <alt_up_character_lcd_shift_cursor+0x48>
 8011644:	0085c83a 	sub	r2,zero,r2
 8011648:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 801164c:	00000406 	br	8011660 <alt_up_character_lcd_shift_cursor+0x60>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
 8011650:	e0bffd43 	ldbu	r2,-11(fp)
 8011654:	e13ffe17 	ldw	r4,-8(fp)
 8011658:	100b883a 	mov	r5,r2
 801165c:	80113a00 	call	80113a0 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 8011660:	e0bffd03 	ldbu	r2,-12(fp)
 8011664:	10ffffc4 	addi	r3,r2,-1
 8011668:	e0fffd05 	stb	r3,-12(fp)
 801166c:	10803fcc 	andi	r2,r2,255
 8011670:	103ff71e 	bne	r2,zero,8011650 <__alt_data_end+0xfc011650>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
 8011674:	e037883a 	mov	sp,fp
 8011678:	dfc00117 	ldw	ra,4(sp)
 801167c:	df000017 	ldw	fp,0(sp)
 8011680:	dec00204 	addi	sp,sp,8
 8011684:	f800283a 	ret

08011688 <alt_up_character_lcd_shift_display>:

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
 8011688:	defffb04 	addi	sp,sp,-20
 801168c:	dfc00415 	stw	ra,16(sp)
 8011690:	df000315 	stw	fp,12(sp)
 8011694:	df000304 	addi	fp,sp,12
 8011698:	e13ffe15 	stw	r4,-8(fp)
 801169c:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
 80116a0:	e0bfff17 	ldw	r2,-4(fp)
 80116a4:	1000011e 	bne	r2,zero,80116ac <alt_up_character_lcd_shift_display+0x24>
		// don't ask me to do nothing 
		return;
 80116a8:	00001406 	br	80116fc <alt_up_character_lcd_shift_display+0x74>

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
 80116ac:	e0bfff17 	ldw	r2,-4(fp)
 80116b0:	0080020e 	bge	zero,r2,80116bc <alt_up_character_lcd_shift_display+0x34>
 80116b4:	00800704 	movi	r2,28
 80116b8:	00000106 	br	80116c0 <alt_up_character_lcd_shift_display+0x38>
 80116bc:	00800604 	movi	r2,24
 80116c0:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
 80116c4:	e0bfff17 	ldw	r2,-4(fp)
 80116c8:	1000010e 	bge	r2,zero,80116d0 <alt_up_character_lcd_shift_display+0x48>
 80116cc:	0085c83a 	sub	r2,zero,r2
 80116d0:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 80116d4:	00000406 	br	80116e8 <alt_up_character_lcd_shift_display+0x60>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
 80116d8:	e0bffd43 	ldbu	r2,-11(fp)
 80116dc:	e13ffe17 	ldw	r4,-8(fp)
 80116e0:	100b883a 	mov	r5,r2
 80116e4:	80113a00 	call	80113a0 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 80116e8:	e0bffd03 	ldbu	r2,-12(fp)
 80116ec:	10ffffc4 	addi	r3,r2,-1
 80116f0:	e0fffd05 	stb	r3,-12(fp)
 80116f4:	10803fcc 	andi	r2,r2,255
 80116f8:	103ff71e 	bne	r2,zero,80116d8 <__alt_data_end+0xfc0116d8>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
 80116fc:	e037883a 	mov	sp,fp
 8011700:	dfc00117 	ldw	ra,4(sp)
 8011704:	df000017 	ldw	fp,0(sp)
 8011708:	dec00204 	addi	sp,sp,8
 801170c:	f800283a 	ret

08011710 <alt_up_character_lcd_erase_pos>:

int alt_up_character_lcd_erase_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, unsigned y_pos)
{
 8011710:	defffa04 	addi	sp,sp,-24
 8011714:	dfc00515 	stw	ra,20(sp)
 8011718:	df000415 	stw	fp,16(sp)
 801171c:	df000404 	addi	fp,sp,16
 8011720:	e13ffd15 	stw	r4,-12(fp)
 8011724:	e17ffe15 	stw	r5,-8(fp)
 8011728:	e1bfff15 	stw	r6,-4(fp)
	// boundary check
	if (x_pos > 39 || y_pos > 1 )
 801172c:	e0bffe17 	ldw	r2,-8(fp)
 8011730:	10800a28 	cmpgeui	r2,r2,40
 8011734:	1000031e 	bne	r2,zero,8011744 <alt_up_character_lcd_erase_pos+0x34>
 8011738:	e0bfff17 	ldw	r2,-4(fp)
 801173c:	108000b0 	cmpltui	r2,r2,2
 8011740:	1000021e 	bne	r2,zero,801174c <alt_up_character_lcd_erase_pos+0x3c>
		return -1;
 8011744:	00bfffc4 	movi	r2,-1
 8011748:	00000f06 	br	8011788 <alt_up_character_lcd_erase_pos+0x78>

	// get address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
 801174c:	e13ffe17 	ldw	r4,-8(fp)
 8011750:	e17fff17 	ldw	r5,-4(fp)
 8011754:	801132c0 	call	801132c <get_DDRAM_addr>
 8011758:	e0bffc05 	stb	r2,-16(fp)
	// set cursor to dest point
	alt_up_character_lcd_send_cmd(lcd, addr);
 801175c:	e0bffc03 	ldbu	r2,-16(fp)
 8011760:	e13ffd17 	ldw	r4,-12(fp)
 8011764:	100b883a 	mov	r5,r2
 8011768:	80113a00 	call	80113a0 <alt_up_character_lcd_send_cmd>
	//send an empty char as erase (refer to the Character Generator ROM part of the Datasheet)
	IOWR_ALT_UP_CHARACTER_LCD_DATA(lcd->base, (0x00000002) );
 801176c:	e0bffd17 	ldw	r2,-12(fp)
 8011770:	10800a17 	ldw	r2,40(r2)
 8011774:	10800044 	addi	r2,r2,1
 8011778:	1007883a 	mov	r3,r2
 801177c:	00800084 	movi	r2,2
 8011780:	18800025 	stbio	r2,0(r3)
	return 0;
 8011784:	0005883a 	mov	r2,zero
}
 8011788:	e037883a 	mov	sp,fp
 801178c:	dfc00117 	ldw	ra,4(sp)
 8011790:	df000017 	ldw	fp,0(sp)
 8011794:	dec00204 	addi	sp,sp,8
 8011798:	f800283a 	ret

0801179c <alt_up_character_lcd_cursor_off>:

void alt_up_character_lcd_cursor_off(alt_up_character_lcd_dev *lcd)
{
 801179c:	defffd04 	addi	sp,sp,-12
 80117a0:	dfc00215 	stw	ra,8(sp)
 80117a4:	df000115 	stw	fp,4(sp)
 80117a8:	df000104 	addi	fp,sp,4
 80117ac:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_OFF);
 80117b0:	e13fff17 	ldw	r4,-4(fp)
 80117b4:	01400304 	movi	r5,12
 80117b8:	80113a00 	call	80113a0 <alt_up_character_lcd_send_cmd>
}
 80117bc:	e037883a 	mov	sp,fp
 80117c0:	dfc00117 	ldw	ra,4(sp)
 80117c4:	df000017 	ldw	fp,0(sp)
 80117c8:	dec00204 	addi	sp,sp,8
 80117cc:	f800283a 	ret

080117d0 <alt_up_character_lcd_cursor_blink_on>:

void alt_up_character_lcd_cursor_blink_on(alt_up_character_lcd_dev *lcd)
{
 80117d0:	defffd04 	addi	sp,sp,-12
 80117d4:	dfc00215 	stw	ra,8(sp)
 80117d8:	df000115 	stw	fp,4(sp)
 80117dc:	df000104 	addi	fp,sp,4
 80117e0:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_BLINK_ON);
 80117e4:	e13fff17 	ldw	r4,-4(fp)
 80117e8:	014003c4 	movi	r5,15
 80117ec:	80113a00 	call	80113a0 <alt_up_character_lcd_send_cmd>
}
 80117f0:	e037883a 	mov	sp,fp
 80117f4:	dfc00117 	ldw	ra,4(sp)
 80117f8:	df000017 	ldw	fp,0(sp)
 80117fc:	dec00204 	addi	sp,sp,8
 8011800:	f800283a 	ret

08011804 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 8011804:	defff504 	addi	sp,sp,-44
 8011808:	df000a15 	stw	fp,40(sp)
 801180c:	df000a04 	addi	fp,sp,40
 8011810:	e13ffc15 	stw	r4,-16(fp)
 8011814:	e17ffd15 	stw	r5,-12(fp)
 8011818:	e1bffe15 	stw	r6,-8(fp)
 801181c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 8011820:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8011824:	00820074 	movhi	r2,2049
 8011828:	10992204 	addi	r2,r2,25736
 801182c:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 8011830:	10003f26 	beq	r2,zero,8011930 <alt_alarm_start+0x12c>
  {
    if (alarm)
 8011834:	e0bffc17 	ldw	r2,-16(fp)
 8011838:	10003b26 	beq	r2,zero,8011928 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 801183c:	e0bffc17 	ldw	r2,-16(fp)
 8011840:	e0fffe17 	ldw	r3,-8(fp)
 8011844:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 8011848:	e0bffc17 	ldw	r2,-16(fp)
 801184c:	e0ffff17 	ldw	r3,-4(fp)
 8011850:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011854:	0005303a 	rdctl	r2,status
 8011858:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801185c:	e0fff817 	ldw	r3,-32(fp)
 8011860:	00bfff84 	movi	r2,-2
 8011864:	1884703a 	and	r2,r3,r2
 8011868:	1001703a 	wrctl	status,r2
  
  return context;
 801186c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 8011870:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8011874:	00820074 	movhi	r2,2049
 8011878:	10992304 	addi	r2,r2,25740
 801187c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 8011880:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 8011884:	e0fffd17 	ldw	r3,-12(fp)
 8011888:	e0bff617 	ldw	r2,-40(fp)
 801188c:	1885883a 	add	r2,r3,r2
 8011890:	10c00044 	addi	r3,r2,1
 8011894:	e0bffc17 	ldw	r2,-16(fp)
 8011898:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 801189c:	e0bffc17 	ldw	r2,-16(fp)
 80118a0:	10c00217 	ldw	r3,8(r2)
 80118a4:	e0bff617 	ldw	r2,-40(fp)
 80118a8:	1880042e 	bgeu	r3,r2,80118bc <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 80118ac:	e0bffc17 	ldw	r2,-16(fp)
 80118b0:	00c00044 	movi	r3,1
 80118b4:	10c00405 	stb	r3,16(r2)
 80118b8:	00000206 	br	80118c4 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 80118bc:	e0bffc17 	ldw	r2,-16(fp)
 80118c0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 80118c4:	e0fffc17 	ldw	r3,-16(fp)
 80118c8:	00820074 	movhi	r2,2049
 80118cc:	10924504 	addi	r2,r2,18708
 80118d0:	e0bff915 	stw	r2,-28(fp)
 80118d4:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 80118d8:	e0bffa17 	ldw	r2,-24(fp)
 80118dc:	e0fff917 	ldw	r3,-28(fp)
 80118e0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 80118e4:	e0bff917 	ldw	r2,-28(fp)
 80118e8:	10c00017 	ldw	r3,0(r2)
 80118ec:	e0bffa17 	ldw	r2,-24(fp)
 80118f0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 80118f4:	e0bff917 	ldw	r2,-28(fp)
 80118f8:	10800017 	ldw	r2,0(r2)
 80118fc:	e0fffa17 	ldw	r3,-24(fp)
 8011900:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 8011904:	e0bff917 	ldw	r2,-28(fp)
 8011908:	e0fffa17 	ldw	r3,-24(fp)
 801190c:	10c00015 	stw	r3,0(r2)
 8011910:	e0bff717 	ldw	r2,-36(fp)
 8011914:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011918:	e0bffb17 	ldw	r2,-20(fp)
 801191c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 8011920:	0005883a 	mov	r2,zero
 8011924:	00000306 	br	8011934 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 8011928:	00bffa84 	movi	r2,-22
 801192c:	00000106 	br	8011934 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 8011930:	00bfde84 	movi	r2,-134
  }
}
 8011934:	e037883a 	mov	sp,fp
 8011938:	df000017 	ldw	fp,0(sp)
 801193c:	dec00104 	addi	sp,sp,4
 8011940:	f800283a 	ret

08011944 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 8011944:	deffff04 	addi	sp,sp,-4
 8011948:	df000015 	stw	fp,0(sp)
 801194c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 8011950:	e037883a 	mov	sp,fp
 8011954:	df000017 	ldw	fp,0(sp)
 8011958:	dec00104 	addi	sp,sp,4
 801195c:	f800283a 	ret

08011960 <alt_get_errno>:
 8011960:	defffe04 	addi	sp,sp,-8
 8011964:	dfc00115 	stw	ra,4(sp)
 8011968:	df000015 	stw	fp,0(sp)
 801196c:	d839883a 	mov	fp,sp
 8011970:	00820074 	movhi	r2,2049
 8011974:	10924204 	addi	r2,r2,18696
 8011978:	10800017 	ldw	r2,0(r2)
 801197c:	10000526 	beq	r2,zero,8011994 <alt_get_errno+0x34>
 8011980:	00820074 	movhi	r2,2049
 8011984:	10924204 	addi	r2,r2,18696
 8011988:	10800017 	ldw	r2,0(r2)
 801198c:	103ee83a 	callr	r2
 8011990:	00000206 	br	801199c <alt_get_errno+0x3c>
 8011994:	00820074 	movhi	r2,2049
 8011998:	10991d04 	addi	r2,r2,25716
 801199c:	e037883a 	mov	sp,fp
 80119a0:	dfc00117 	ldw	ra,4(sp)
 80119a4:	df000017 	ldw	fp,0(sp)
 80119a8:	dec00204 	addi	sp,sp,8
 80119ac:	f800283a 	ret

080119b0 <alt_dev_llist_insert>:
 80119b0:	defffa04 	addi	sp,sp,-24
 80119b4:	dfc00515 	stw	ra,20(sp)
 80119b8:	df000415 	stw	fp,16(sp)
 80119bc:	df000404 	addi	fp,sp,16
 80119c0:	e13ffe15 	stw	r4,-8(fp)
 80119c4:	e17fff15 	stw	r5,-4(fp)
 80119c8:	e0bffe17 	ldw	r2,-8(fp)
 80119cc:	10000326 	beq	r2,zero,80119dc <alt_dev_llist_insert+0x2c>
 80119d0:	e0bffe17 	ldw	r2,-8(fp)
 80119d4:	10800217 	ldw	r2,8(r2)
 80119d8:	1000061e 	bne	r2,zero,80119f4 <alt_dev_llist_insert+0x44>
 80119dc:	80119600 	call	8011960 <alt_get_errno>
 80119e0:	1007883a 	mov	r3,r2
 80119e4:	00800584 	movi	r2,22
 80119e8:	18800015 	stw	r2,0(r3)
 80119ec:	00bffa84 	movi	r2,-22
 80119f0:	00001306 	br	8011a40 <alt_dev_llist_insert+0x90>
 80119f4:	e0bffe17 	ldw	r2,-8(fp)
 80119f8:	e0ffff17 	ldw	r3,-4(fp)
 80119fc:	e0fffc15 	stw	r3,-16(fp)
 8011a00:	e0bffd15 	stw	r2,-12(fp)
 8011a04:	e0bffd17 	ldw	r2,-12(fp)
 8011a08:	e0fffc17 	ldw	r3,-16(fp)
 8011a0c:	10c00115 	stw	r3,4(r2)
 8011a10:	e0bffc17 	ldw	r2,-16(fp)
 8011a14:	10c00017 	ldw	r3,0(r2)
 8011a18:	e0bffd17 	ldw	r2,-12(fp)
 8011a1c:	10c00015 	stw	r3,0(r2)
 8011a20:	e0bffc17 	ldw	r2,-16(fp)
 8011a24:	10800017 	ldw	r2,0(r2)
 8011a28:	e0fffd17 	ldw	r3,-12(fp)
 8011a2c:	10c00115 	stw	r3,4(r2)
 8011a30:	e0bffc17 	ldw	r2,-16(fp)
 8011a34:	e0fffd17 	ldw	r3,-12(fp)
 8011a38:	10c00015 	stw	r3,0(r2)
 8011a3c:	0005883a 	mov	r2,zero
 8011a40:	e037883a 	mov	sp,fp
 8011a44:	dfc00117 	ldw	ra,4(sp)
 8011a48:	df000017 	ldw	fp,0(sp)
 8011a4c:	dec00204 	addi	sp,sp,8
 8011a50:	f800283a 	ret

08011a54 <_do_ctors>:
 8011a54:	defffd04 	addi	sp,sp,-12
 8011a58:	dfc00215 	stw	ra,8(sp)
 8011a5c:	df000115 	stw	fp,4(sp)
 8011a60:	df000104 	addi	fp,sp,4
 8011a64:	00820074 	movhi	r2,2049
 8011a68:	108a7e04 	addi	r2,r2,10744
 8011a6c:	e0bfff15 	stw	r2,-4(fp)
 8011a70:	00000606 	br	8011a8c <_do_ctors+0x38>
 8011a74:	e0bfff17 	ldw	r2,-4(fp)
 8011a78:	10800017 	ldw	r2,0(r2)
 8011a7c:	103ee83a 	callr	r2
 8011a80:	e0bfff17 	ldw	r2,-4(fp)
 8011a84:	10bfff04 	addi	r2,r2,-4
 8011a88:	e0bfff15 	stw	r2,-4(fp)
 8011a8c:	e0ffff17 	ldw	r3,-4(fp)
 8011a90:	00820074 	movhi	r2,2049
 8011a94:	108a7f04 	addi	r2,r2,10748
 8011a98:	18bff62e 	bgeu	r3,r2,8011a74 <__alt_data_end+0xfc011a74>
 8011a9c:	e037883a 	mov	sp,fp
 8011aa0:	dfc00117 	ldw	ra,4(sp)
 8011aa4:	df000017 	ldw	fp,0(sp)
 8011aa8:	dec00204 	addi	sp,sp,8
 8011aac:	f800283a 	ret

08011ab0 <_do_dtors>:
 8011ab0:	defffd04 	addi	sp,sp,-12
 8011ab4:	dfc00215 	stw	ra,8(sp)
 8011ab8:	df000115 	stw	fp,4(sp)
 8011abc:	df000104 	addi	fp,sp,4
 8011ac0:	00820074 	movhi	r2,2049
 8011ac4:	108a7e04 	addi	r2,r2,10744
 8011ac8:	e0bfff15 	stw	r2,-4(fp)
 8011acc:	00000606 	br	8011ae8 <_do_dtors+0x38>
 8011ad0:	e0bfff17 	ldw	r2,-4(fp)
 8011ad4:	10800017 	ldw	r2,0(r2)
 8011ad8:	103ee83a 	callr	r2
 8011adc:	e0bfff17 	ldw	r2,-4(fp)
 8011ae0:	10bfff04 	addi	r2,r2,-4
 8011ae4:	e0bfff15 	stw	r2,-4(fp)
 8011ae8:	e0ffff17 	ldw	r3,-4(fp)
 8011aec:	00820074 	movhi	r2,2049
 8011af0:	108a7f04 	addi	r2,r2,10748
 8011af4:	18bff62e 	bgeu	r3,r2,8011ad0 <__alt_data_end+0xfc011ad0>
 8011af8:	e037883a 	mov	sp,fp
 8011afc:	dfc00117 	ldw	ra,4(sp)
 8011b00:	df000017 	ldw	fp,0(sp)
 8011b04:	dec00204 	addi	sp,sp,8
 8011b08:	f800283a 	ret

08011b0c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 8011b0c:	defffa04 	addi	sp,sp,-24
 8011b10:	dfc00515 	stw	ra,20(sp)
 8011b14:	df000415 	stw	fp,16(sp)
 8011b18:	df000404 	addi	fp,sp,16
 8011b1c:	e13ffe15 	stw	r4,-8(fp)
 8011b20:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 8011b24:	e0bfff17 	ldw	r2,-4(fp)
 8011b28:	10800017 	ldw	r2,0(r2)
 8011b2c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 8011b30:	e13ffe17 	ldw	r4,-8(fp)
 8011b34:	80009780 	call	8000978 <strlen>
 8011b38:	10800044 	addi	r2,r2,1
 8011b3c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8011b40:	00000d06 	br	8011b78 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 8011b44:	e0bffc17 	ldw	r2,-16(fp)
 8011b48:	10c00217 	ldw	r3,8(r2)
 8011b4c:	e0bffd17 	ldw	r2,-12(fp)
 8011b50:	1809883a 	mov	r4,r3
 8011b54:	e17ffe17 	ldw	r5,-8(fp)
 8011b58:	100d883a 	mov	r6,r2
 8011b5c:	80126a40 	call	80126a4 <memcmp>
 8011b60:	1000021e 	bne	r2,zero,8011b6c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 8011b64:	e0bffc17 	ldw	r2,-16(fp)
 8011b68:	00000706 	br	8011b88 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 8011b6c:	e0bffc17 	ldw	r2,-16(fp)
 8011b70:	10800017 	ldw	r2,0(r2)
 8011b74:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8011b78:	e0fffc17 	ldw	r3,-16(fp)
 8011b7c:	e0bfff17 	ldw	r2,-4(fp)
 8011b80:	18bff01e 	bne	r3,r2,8011b44 <__alt_data_end+0xfc011b44>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 8011b84:	0005883a 	mov	r2,zero
}
 8011b88:	e037883a 	mov	sp,fp
 8011b8c:	dfc00117 	ldw	ra,4(sp)
 8011b90:	df000017 	ldw	fp,0(sp)
 8011b94:	dec00204 	addi	sp,sp,8
 8011b98:	f800283a 	ret

08011b9c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 8011b9c:	defffe04 	addi	sp,sp,-8
 8011ba0:	dfc00115 	stw	ra,4(sp)
 8011ba4:	df000015 	stw	fp,0(sp)
 8011ba8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 8011bac:	0009883a 	mov	r4,zero
 8011bb0:	01440004 	movi	r5,4096
 8011bb4:	80125cc0 	call	80125cc <alt_icache_flush>
#endif
}
 8011bb8:	e037883a 	mov	sp,fp
 8011bbc:	dfc00117 	ldw	ra,4(sp)
 8011bc0:	df000017 	ldw	fp,0(sp)
 8011bc4:	dec00204 	addi	sp,sp,8
 8011bc8:	f800283a 	ret

08011bcc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 8011bcc:	defff904 	addi	sp,sp,-28
 8011bd0:	dfc00615 	stw	ra,24(sp)
 8011bd4:	df000515 	stw	fp,20(sp)
 8011bd8:	df000504 	addi	fp,sp,20
 8011bdc:	e13ffc15 	stw	r4,-16(fp)
 8011be0:	e17ffd15 	stw	r5,-12(fp)
 8011be4:	e1bffe15 	stw	r6,-8(fp)
 8011be8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 8011bec:	e0800217 	ldw	r2,8(fp)
 8011bf0:	d8800015 	stw	r2,0(sp)
 8011bf4:	e13ffc17 	ldw	r4,-16(fp)
 8011bf8:	e17ffd17 	ldw	r5,-12(fp)
 8011bfc:	e1bffe17 	ldw	r6,-8(fp)
 8011c00:	e1ffff17 	ldw	r7,-4(fp)
 8011c04:	8011dac0 	call	8011dac <alt_iic_isr_register>
}  
 8011c08:	e037883a 	mov	sp,fp
 8011c0c:	dfc00117 	ldw	ra,4(sp)
 8011c10:	df000017 	ldw	fp,0(sp)
 8011c14:	dec00204 	addi	sp,sp,8
 8011c18:	f800283a 	ret

08011c1c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 8011c1c:	defff904 	addi	sp,sp,-28
 8011c20:	df000615 	stw	fp,24(sp)
 8011c24:	df000604 	addi	fp,sp,24
 8011c28:	e13ffe15 	stw	r4,-8(fp)
 8011c2c:	e17fff15 	stw	r5,-4(fp)
 8011c30:	e0bfff17 	ldw	r2,-4(fp)
 8011c34:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011c38:	0005303a 	rdctl	r2,status
 8011c3c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011c40:	e0fffb17 	ldw	r3,-20(fp)
 8011c44:	00bfff84 	movi	r2,-2
 8011c48:	1884703a 	and	r2,r3,r2
 8011c4c:	1001703a 	wrctl	status,r2
  
  return context;
 8011c50:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8011c54:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 8011c58:	e0bffa17 	ldw	r2,-24(fp)
 8011c5c:	00c00044 	movi	r3,1
 8011c60:	1884983a 	sll	r2,r3,r2
 8011c64:	1007883a 	mov	r3,r2
 8011c68:	00820074 	movhi	r2,2049
 8011c6c:	10992104 	addi	r2,r2,25732
 8011c70:	10800017 	ldw	r2,0(r2)
 8011c74:	1886b03a 	or	r3,r3,r2
 8011c78:	00820074 	movhi	r2,2049
 8011c7c:	10992104 	addi	r2,r2,25732
 8011c80:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8011c84:	00820074 	movhi	r2,2049
 8011c88:	10992104 	addi	r2,r2,25732
 8011c8c:	10800017 	ldw	r2,0(r2)
 8011c90:	100170fa 	wrctl	ienable,r2
 8011c94:	e0bffc17 	ldw	r2,-16(fp)
 8011c98:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011c9c:	e0bffd17 	ldw	r2,-12(fp)
 8011ca0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8011ca4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 8011ca8:	0001883a 	nop
}
 8011cac:	e037883a 	mov	sp,fp
 8011cb0:	df000017 	ldw	fp,0(sp)
 8011cb4:	dec00104 	addi	sp,sp,4
 8011cb8:	f800283a 	ret

08011cbc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 8011cbc:	defff904 	addi	sp,sp,-28
 8011cc0:	df000615 	stw	fp,24(sp)
 8011cc4:	df000604 	addi	fp,sp,24
 8011cc8:	e13ffe15 	stw	r4,-8(fp)
 8011ccc:	e17fff15 	stw	r5,-4(fp)
 8011cd0:	e0bfff17 	ldw	r2,-4(fp)
 8011cd4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011cd8:	0005303a 	rdctl	r2,status
 8011cdc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011ce0:	e0fffb17 	ldw	r3,-20(fp)
 8011ce4:	00bfff84 	movi	r2,-2
 8011ce8:	1884703a 	and	r2,r3,r2
 8011cec:	1001703a 	wrctl	status,r2
  
  return context;
 8011cf0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8011cf4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 8011cf8:	e0bffa17 	ldw	r2,-24(fp)
 8011cfc:	00c00044 	movi	r3,1
 8011d00:	1884983a 	sll	r2,r3,r2
 8011d04:	0084303a 	nor	r2,zero,r2
 8011d08:	1007883a 	mov	r3,r2
 8011d0c:	00820074 	movhi	r2,2049
 8011d10:	10992104 	addi	r2,r2,25732
 8011d14:	10800017 	ldw	r2,0(r2)
 8011d18:	1886703a 	and	r3,r3,r2
 8011d1c:	00820074 	movhi	r2,2049
 8011d20:	10992104 	addi	r2,r2,25732
 8011d24:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8011d28:	00820074 	movhi	r2,2049
 8011d2c:	10992104 	addi	r2,r2,25732
 8011d30:	10800017 	ldw	r2,0(r2)
 8011d34:	100170fa 	wrctl	ienable,r2
 8011d38:	e0bffc17 	ldw	r2,-16(fp)
 8011d3c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011d40:	e0bffd17 	ldw	r2,-12(fp)
 8011d44:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8011d48:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 8011d4c:	0001883a 	nop
}
 8011d50:	e037883a 	mov	sp,fp
 8011d54:	df000017 	ldw	fp,0(sp)
 8011d58:	dec00104 	addi	sp,sp,4
 8011d5c:	f800283a 	ret

08011d60 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 8011d60:	defffc04 	addi	sp,sp,-16
 8011d64:	df000315 	stw	fp,12(sp)
 8011d68:	df000304 	addi	fp,sp,12
 8011d6c:	e13ffe15 	stw	r4,-8(fp)
 8011d70:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 8011d74:	000530fa 	rdctl	r2,ienable
 8011d78:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 8011d7c:	e0bfff17 	ldw	r2,-4(fp)
 8011d80:	00c00044 	movi	r3,1
 8011d84:	1884983a 	sll	r2,r3,r2
 8011d88:	1007883a 	mov	r3,r2
 8011d8c:	e0bffd17 	ldw	r2,-12(fp)
 8011d90:	1884703a 	and	r2,r3,r2
 8011d94:	1004c03a 	cmpne	r2,r2,zero
 8011d98:	10803fcc 	andi	r2,r2,255
}
 8011d9c:	e037883a 	mov	sp,fp
 8011da0:	df000017 	ldw	fp,0(sp)
 8011da4:	dec00104 	addi	sp,sp,4
 8011da8:	f800283a 	ret

08011dac <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 8011dac:	defff504 	addi	sp,sp,-44
 8011db0:	dfc00a15 	stw	ra,40(sp)
 8011db4:	df000915 	stw	fp,36(sp)
 8011db8:	df000904 	addi	fp,sp,36
 8011dbc:	e13ffc15 	stw	r4,-16(fp)
 8011dc0:	e17ffd15 	stw	r5,-12(fp)
 8011dc4:	e1bffe15 	stw	r6,-8(fp)
 8011dc8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 8011dcc:	00bffa84 	movi	r2,-22
 8011dd0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 8011dd4:	e0bffd17 	ldw	r2,-12(fp)
 8011dd8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 8011ddc:	e0bff817 	ldw	r2,-32(fp)
 8011de0:	10800808 	cmpgei	r2,r2,32
 8011de4:	1000271e 	bne	r2,zero,8011e84 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011de8:	0005303a 	rdctl	r2,status
 8011dec:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011df0:	e0fffa17 	ldw	r3,-24(fp)
 8011df4:	00bfff84 	movi	r2,-2
 8011df8:	1884703a 	and	r2,r3,r2
 8011dfc:	1001703a 	wrctl	status,r2
  
  return context;
 8011e00:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 8011e04:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
 8011e08:	00820074 	movhi	r2,2049
 8011e0c:	10992e04 	addi	r2,r2,25784
 8011e10:	e0fff817 	ldw	r3,-32(fp)
 8011e14:	180690fa 	slli	r3,r3,3
 8011e18:	10c5883a 	add	r2,r2,r3
 8011e1c:	e0fffe17 	ldw	r3,-8(fp)
 8011e20:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 8011e24:	00820074 	movhi	r2,2049
 8011e28:	10992e04 	addi	r2,r2,25784
 8011e2c:	e0fff817 	ldw	r3,-32(fp)
 8011e30:	180690fa 	slli	r3,r3,3
 8011e34:	10c5883a 	add	r2,r2,r3
 8011e38:	10800104 	addi	r2,r2,4
 8011e3c:	e0ffff17 	ldw	r3,-4(fp)
 8011e40:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 8011e44:	e0bffe17 	ldw	r2,-8(fp)
 8011e48:	10000526 	beq	r2,zero,8011e60 <alt_iic_isr_register+0xb4>
 8011e4c:	e0bff817 	ldw	r2,-32(fp)
 8011e50:	e13ffc17 	ldw	r4,-16(fp)
 8011e54:	100b883a 	mov	r5,r2
 8011e58:	8011c1c0 	call	8011c1c <alt_ic_irq_enable>
 8011e5c:	00000406 	br	8011e70 <alt_iic_isr_register+0xc4>
 8011e60:	e0bff817 	ldw	r2,-32(fp)
 8011e64:	e13ffc17 	ldw	r4,-16(fp)
 8011e68:	100b883a 	mov	r5,r2
 8011e6c:	8011cbc0 	call	8011cbc <alt_ic_irq_disable>
 8011e70:	e0bff715 	stw	r2,-36(fp)
 8011e74:	e0bff917 	ldw	r2,-28(fp)
 8011e78:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011e7c:	e0bffb17 	ldw	r2,-20(fp)
 8011e80:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 8011e84:	e0bff717 	ldw	r2,-36(fp)
}
 8011e88:	e037883a 	mov	sp,fp
 8011e8c:	dfc00117 	ldw	ra,4(sp)
 8011e90:	df000017 	ldw	fp,0(sp)
 8011e94:	dec00204 	addi	sp,sp,8
 8011e98:	f800283a 	ret

08011e9c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 8011e9c:	defff904 	addi	sp,sp,-28
 8011ea0:	dfc00615 	stw	ra,24(sp)
 8011ea4:	df000515 	stw	fp,20(sp)
 8011ea8:	df000504 	addi	fp,sp,20
 8011eac:	e13ffc15 	stw	r4,-16(fp)
 8011eb0:	e17ffd15 	stw	r5,-12(fp)
 8011eb4:	e1bffe15 	stw	r6,-8(fp)
 8011eb8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 8011ebc:	e13ffd17 	ldw	r4,-12(fp)
 8011ec0:	e17ffe17 	ldw	r5,-8(fp)
 8011ec4:	e1bfff17 	ldw	r6,-4(fp)
 8011ec8:	80120f00 	call	80120f0 <open>
 8011ecc:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 8011ed0:	e0bffb17 	ldw	r2,-20(fp)
 8011ed4:	10001c16 	blt	r2,zero,8011f48 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 8011ed8:	00820074 	movhi	r2,2049
 8011edc:	108db404 	addi	r2,r2,14032
 8011ee0:	e0fffb17 	ldw	r3,-20(fp)
 8011ee4:	18c00324 	muli	r3,r3,12
 8011ee8:	10c5883a 	add	r2,r2,r3
 8011eec:	10c00017 	ldw	r3,0(r2)
 8011ef0:	e0bffc17 	ldw	r2,-16(fp)
 8011ef4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 8011ef8:	00820074 	movhi	r2,2049
 8011efc:	108db404 	addi	r2,r2,14032
 8011f00:	e0fffb17 	ldw	r3,-20(fp)
 8011f04:	18c00324 	muli	r3,r3,12
 8011f08:	10c5883a 	add	r2,r2,r3
 8011f0c:	10800104 	addi	r2,r2,4
 8011f10:	10c00017 	ldw	r3,0(r2)
 8011f14:	e0bffc17 	ldw	r2,-16(fp)
 8011f18:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 8011f1c:	00820074 	movhi	r2,2049
 8011f20:	108db404 	addi	r2,r2,14032
 8011f24:	e0fffb17 	ldw	r3,-20(fp)
 8011f28:	18c00324 	muli	r3,r3,12
 8011f2c:	10c5883a 	add	r2,r2,r3
 8011f30:	10800204 	addi	r2,r2,8
 8011f34:	10c00017 	ldw	r3,0(r2)
 8011f38:	e0bffc17 	ldw	r2,-16(fp)
 8011f3c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 8011f40:	e13ffb17 	ldw	r4,-20(fp)
 8011f44:	80104b00 	call	80104b0 <alt_release_fd>
  }
} 
 8011f48:	e037883a 	mov	sp,fp
 8011f4c:	dfc00117 	ldw	ra,4(sp)
 8011f50:	df000017 	ldw	fp,0(sp)
 8011f54:	dec00204 	addi	sp,sp,8
 8011f58:	f800283a 	ret

08011f5c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 8011f5c:	defffb04 	addi	sp,sp,-20
 8011f60:	dfc00415 	stw	ra,16(sp)
 8011f64:	df000315 	stw	fp,12(sp)
 8011f68:	df000304 	addi	fp,sp,12
 8011f6c:	e13ffd15 	stw	r4,-12(fp)
 8011f70:	e17ffe15 	stw	r5,-8(fp)
 8011f74:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 8011f78:	01020074 	movhi	r4,2049
 8011f7c:	210db704 	addi	r4,r4,14044
 8011f80:	e17ffd17 	ldw	r5,-12(fp)
 8011f84:	01800044 	movi	r6,1
 8011f88:	01c07fc4 	movi	r7,511
 8011f8c:	8011e9c0 	call	8011e9c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 8011f90:	01020074 	movhi	r4,2049
 8011f94:	210db404 	addi	r4,r4,14032
 8011f98:	e17ffe17 	ldw	r5,-8(fp)
 8011f9c:	000d883a 	mov	r6,zero
 8011fa0:	01c07fc4 	movi	r7,511
 8011fa4:	8011e9c0 	call	8011e9c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 8011fa8:	01020074 	movhi	r4,2049
 8011fac:	210dba04 	addi	r4,r4,14056
 8011fb0:	e17fff17 	ldw	r5,-4(fp)
 8011fb4:	01800044 	movi	r6,1
 8011fb8:	01c07fc4 	movi	r7,511
 8011fbc:	8011e9c0 	call	8011e9c <alt_open_fd>
}  
 8011fc0:	e037883a 	mov	sp,fp
 8011fc4:	dfc00117 	ldw	ra,4(sp)
 8011fc8:	df000017 	ldw	fp,0(sp)
 8011fcc:	dec00204 	addi	sp,sp,8
 8011fd0:	f800283a 	ret

08011fd4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8011fd4:	defffe04 	addi	sp,sp,-8
 8011fd8:	dfc00115 	stw	ra,4(sp)
 8011fdc:	df000015 	stw	fp,0(sp)
 8011fe0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8011fe4:	00820074 	movhi	r2,2049
 8011fe8:	10924204 	addi	r2,r2,18696
 8011fec:	10800017 	ldw	r2,0(r2)
 8011ff0:	10000526 	beq	r2,zero,8012008 <alt_get_errno+0x34>
 8011ff4:	00820074 	movhi	r2,2049
 8011ff8:	10924204 	addi	r2,r2,18696
 8011ffc:	10800017 	ldw	r2,0(r2)
 8012000:	103ee83a 	callr	r2
 8012004:	00000206 	br	8012010 <alt_get_errno+0x3c>
 8012008:	00820074 	movhi	r2,2049
 801200c:	10991d04 	addi	r2,r2,25716
}
 8012010:	e037883a 	mov	sp,fp
 8012014:	dfc00117 	ldw	ra,4(sp)
 8012018:	df000017 	ldw	fp,0(sp)
 801201c:	dec00204 	addi	sp,sp,8
 8012020:	f800283a 	ret

08012024 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 8012024:	defffd04 	addi	sp,sp,-12
 8012028:	df000215 	stw	fp,8(sp)
 801202c:	df000204 	addi	fp,sp,8
 8012030:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 8012034:	e0bfff17 	ldw	r2,-4(fp)
 8012038:	10800217 	ldw	r2,8(r2)
 801203c:	10d00034 	orhi	r3,r2,16384
 8012040:	e0bfff17 	ldw	r2,-4(fp)
 8012044:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8012048:	e03ffe15 	stw	zero,-8(fp)
 801204c:	00001d06 	br	80120c4 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8012050:	00820074 	movhi	r2,2049
 8012054:	108db404 	addi	r2,r2,14032
 8012058:	e0fffe17 	ldw	r3,-8(fp)
 801205c:	18c00324 	muli	r3,r3,12
 8012060:	10c5883a 	add	r2,r2,r3
 8012064:	10c00017 	ldw	r3,0(r2)
 8012068:	e0bfff17 	ldw	r2,-4(fp)
 801206c:	10800017 	ldw	r2,0(r2)
 8012070:	1880111e 	bne	r3,r2,80120b8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8012074:	00820074 	movhi	r2,2049
 8012078:	108db404 	addi	r2,r2,14032
 801207c:	e0fffe17 	ldw	r3,-8(fp)
 8012080:	18c00324 	muli	r3,r3,12
 8012084:	10c5883a 	add	r2,r2,r3
 8012088:	10800204 	addi	r2,r2,8
 801208c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8012090:	1000090e 	bge	r2,zero,80120b8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 8012094:	e0bffe17 	ldw	r2,-8(fp)
 8012098:	10c00324 	muli	r3,r2,12
 801209c:	00820074 	movhi	r2,2049
 80120a0:	108db404 	addi	r2,r2,14032
 80120a4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 80120a8:	e0bfff17 	ldw	r2,-4(fp)
 80120ac:	18800226 	beq	r3,r2,80120b8 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 80120b0:	00bffcc4 	movi	r2,-13
 80120b4:	00000a06 	br	80120e0 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 80120b8:	e0bffe17 	ldw	r2,-8(fp)
 80120bc:	10800044 	addi	r2,r2,1
 80120c0:	e0bffe15 	stw	r2,-8(fp)
 80120c4:	00820074 	movhi	r2,2049
 80120c8:	10924104 	addi	r2,r2,18692
 80120cc:	10800017 	ldw	r2,0(r2)
 80120d0:	1007883a 	mov	r3,r2
 80120d4:	e0bffe17 	ldw	r2,-8(fp)
 80120d8:	18bfdd2e 	bgeu	r3,r2,8012050 <__alt_data_end+0xfc012050>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 80120dc:	0005883a 	mov	r2,zero
}
 80120e0:	e037883a 	mov	sp,fp
 80120e4:	df000017 	ldw	fp,0(sp)
 80120e8:	dec00104 	addi	sp,sp,4
 80120ec:	f800283a 	ret

080120f0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 80120f0:	defff604 	addi	sp,sp,-40
 80120f4:	dfc00915 	stw	ra,36(sp)
 80120f8:	df000815 	stw	fp,32(sp)
 80120fc:	df000804 	addi	fp,sp,32
 8012100:	e13ffd15 	stw	r4,-12(fp)
 8012104:	e17ffe15 	stw	r5,-8(fp)
 8012108:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 801210c:	00bfffc4 	movi	r2,-1
 8012110:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 8012114:	00bffb44 	movi	r2,-19
 8012118:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 801211c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 8012120:	e13ffd17 	ldw	r4,-12(fp)
 8012124:	01420074 	movhi	r5,2049
 8012128:	29523f04 	addi	r5,r5,18684
 801212c:	8011b0c0 	call	8011b0c <alt_find_dev>
 8012130:	e0bff815 	stw	r2,-32(fp)
 8012134:	e0bff817 	ldw	r2,-32(fp)
 8012138:	1000051e 	bne	r2,zero,8012150 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 801213c:	e13ffd17 	ldw	r4,-12(fp)
 8012140:	80124040 	call	8012404 <alt_find_file>
 8012144:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 8012148:	00800044 	movi	r2,1
 801214c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 8012150:	e0bff817 	ldw	r2,-32(fp)
 8012154:	10002926 	beq	r2,zero,80121fc <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
 8012158:	e13ff817 	ldw	r4,-32(fp)
 801215c:	80125180 	call	8012518 <alt_get_fd>
 8012160:	e0bff915 	stw	r2,-28(fp)
 8012164:	e0bff917 	ldw	r2,-28(fp)
 8012168:	1000030e 	bge	r2,zero,8012178 <open+0x88>
    {
      status = index;
 801216c:	e0bff917 	ldw	r2,-28(fp)
 8012170:	e0bffa15 	stw	r2,-24(fp)
 8012174:	00002306 	br	8012204 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
 8012178:	e0bff917 	ldw	r2,-28(fp)
 801217c:	10c00324 	muli	r3,r2,12
 8012180:	00820074 	movhi	r2,2049
 8012184:	108db404 	addi	r2,r2,14032
 8012188:	1885883a 	add	r2,r3,r2
 801218c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 8012190:	e0fffe17 	ldw	r3,-8(fp)
 8012194:	00900034 	movhi	r2,16384
 8012198:	10bfffc4 	addi	r2,r2,-1
 801219c:	1886703a 	and	r3,r3,r2
 80121a0:	e0bffc17 	ldw	r2,-16(fp)
 80121a4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 80121a8:	e0bffb17 	ldw	r2,-20(fp)
 80121ac:	1000051e 	bne	r2,zero,80121c4 <open+0xd4>
 80121b0:	e13ffc17 	ldw	r4,-16(fp)
 80121b4:	80120240 	call	8012024 <alt_file_locked>
 80121b8:	e0bffa15 	stw	r2,-24(fp)
 80121bc:	e0bffa17 	ldw	r2,-24(fp)
 80121c0:	10001016 	blt	r2,zero,8012204 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 80121c4:	e0bff817 	ldw	r2,-32(fp)
 80121c8:	10800317 	ldw	r2,12(r2)
 80121cc:	10000826 	beq	r2,zero,80121f0 <open+0x100>
 80121d0:	e0bff817 	ldw	r2,-32(fp)
 80121d4:	10800317 	ldw	r2,12(r2)
 80121d8:	e13ffc17 	ldw	r4,-16(fp)
 80121dc:	e17ffd17 	ldw	r5,-12(fp)
 80121e0:	e1bffe17 	ldw	r6,-8(fp)
 80121e4:	e1ffff17 	ldw	r7,-4(fp)
 80121e8:	103ee83a 	callr	r2
 80121ec:	00000106 	br	80121f4 <open+0x104>
 80121f0:	0005883a 	mov	r2,zero
 80121f4:	e0bffa15 	stw	r2,-24(fp)
 80121f8:	00000206 	br	8012204 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
 80121fc:	00bffb44 	movi	r2,-19
 8012200:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 8012204:	e0bffa17 	ldw	r2,-24(fp)
 8012208:	1000090e 	bge	r2,zero,8012230 <open+0x140>
  {
    alt_release_fd (index);  
 801220c:	e13ff917 	ldw	r4,-28(fp)
 8012210:	80104b00 	call	80104b0 <alt_release_fd>
    ALT_ERRNO = -status;
 8012214:	8011fd40 	call	8011fd4 <alt_get_errno>
 8012218:	1007883a 	mov	r3,r2
 801221c:	e0bffa17 	ldw	r2,-24(fp)
 8012220:	0085c83a 	sub	r2,zero,r2
 8012224:	18800015 	stw	r2,0(r3)
    return -1;
 8012228:	00bfffc4 	movi	r2,-1
 801222c:	00000106 	br	8012234 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
 8012230:	e0bff917 	ldw	r2,-28(fp)
}
 8012234:	e037883a 	mov	sp,fp
 8012238:	dfc00117 	ldw	ra,4(sp)
 801223c:	df000017 	ldw	fp,0(sp)
 8012240:	dec00204 	addi	sp,sp,8
 8012244:	f800283a 	ret

08012248 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 8012248:	defffa04 	addi	sp,sp,-24
 801224c:	df000515 	stw	fp,20(sp)
 8012250:	df000504 	addi	fp,sp,20
 8012254:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8012258:	0005303a 	rdctl	r2,status
 801225c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8012260:	e0fffc17 	ldw	r3,-16(fp)
 8012264:	00bfff84 	movi	r2,-2
 8012268:	1884703a 	and	r2,r3,r2
 801226c:	1001703a 	wrctl	status,r2
  
  return context;
 8012270:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 8012274:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 8012278:	e0bfff17 	ldw	r2,-4(fp)
 801227c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 8012280:	e0bffd17 	ldw	r2,-12(fp)
 8012284:	10800017 	ldw	r2,0(r2)
 8012288:	e0fffd17 	ldw	r3,-12(fp)
 801228c:	18c00117 	ldw	r3,4(r3)
 8012290:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 8012294:	e0bffd17 	ldw	r2,-12(fp)
 8012298:	10800117 	ldw	r2,4(r2)
 801229c:	e0fffd17 	ldw	r3,-12(fp)
 80122a0:	18c00017 	ldw	r3,0(r3)
 80122a4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 80122a8:	e0bffd17 	ldw	r2,-12(fp)
 80122ac:	e0fffd17 	ldw	r3,-12(fp)
 80122b0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 80122b4:	e0bffd17 	ldw	r2,-12(fp)
 80122b8:	e0fffd17 	ldw	r3,-12(fp)
 80122bc:	10c00015 	stw	r3,0(r2)
 80122c0:	e0bffb17 	ldw	r2,-20(fp)
 80122c4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80122c8:	e0bffe17 	ldw	r2,-8(fp)
 80122cc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 80122d0:	e037883a 	mov	sp,fp
 80122d4:	df000017 	ldw	fp,0(sp)
 80122d8:	dec00104 	addi	sp,sp,4
 80122dc:	f800283a 	ret

080122e0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 80122e0:	defffb04 	addi	sp,sp,-20
 80122e4:	dfc00415 	stw	ra,16(sp)
 80122e8:	df000315 	stw	fp,12(sp)
 80122ec:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 80122f0:	d0a00e17 	ldw	r2,-32712(gp)
 80122f4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 80122f8:	d0a6ec17 	ldw	r2,-25680(gp)
 80122fc:	10800044 	addi	r2,r2,1
 8012300:	d0a6ec15 	stw	r2,-25680(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8012304:	00002e06 	br	80123c0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 8012308:	e0bffd17 	ldw	r2,-12(fp)
 801230c:	10800017 	ldw	r2,0(r2)
 8012310:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 8012314:	e0bffd17 	ldw	r2,-12(fp)
 8012318:	10800403 	ldbu	r2,16(r2)
 801231c:	10803fcc 	andi	r2,r2,255
 8012320:	10000426 	beq	r2,zero,8012334 <alt_tick+0x54>
 8012324:	d0a6ec17 	ldw	r2,-25680(gp)
 8012328:	1000021e 	bne	r2,zero,8012334 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 801232c:	e0bffd17 	ldw	r2,-12(fp)
 8012330:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 8012334:	e0bffd17 	ldw	r2,-12(fp)
 8012338:	10800217 	ldw	r2,8(r2)
 801233c:	d0e6ec17 	ldw	r3,-25680(gp)
 8012340:	18801d36 	bltu	r3,r2,80123b8 <alt_tick+0xd8>
 8012344:	e0bffd17 	ldw	r2,-12(fp)
 8012348:	10800403 	ldbu	r2,16(r2)
 801234c:	10803fcc 	andi	r2,r2,255
 8012350:	1000191e 	bne	r2,zero,80123b8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 8012354:	e0bffd17 	ldw	r2,-12(fp)
 8012358:	10800317 	ldw	r2,12(r2)
 801235c:	e0fffd17 	ldw	r3,-12(fp)
 8012360:	18c00517 	ldw	r3,20(r3)
 8012364:	1809883a 	mov	r4,r3
 8012368:	103ee83a 	callr	r2
 801236c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 8012370:	e0bfff17 	ldw	r2,-4(fp)
 8012374:	1000031e 	bne	r2,zero,8012384 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 8012378:	e13ffd17 	ldw	r4,-12(fp)
 801237c:	80122480 	call	8012248 <alt_alarm_stop>
 8012380:	00000d06 	br	80123b8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 8012384:	e0bffd17 	ldw	r2,-12(fp)
 8012388:	10c00217 	ldw	r3,8(r2)
 801238c:	e0bfff17 	ldw	r2,-4(fp)
 8012390:	1887883a 	add	r3,r3,r2
 8012394:	e0bffd17 	ldw	r2,-12(fp)
 8012398:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 801239c:	e0bffd17 	ldw	r2,-12(fp)
 80123a0:	10c00217 	ldw	r3,8(r2)
 80123a4:	d0a6ec17 	ldw	r2,-25680(gp)
 80123a8:	1880032e 	bgeu	r3,r2,80123b8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 80123ac:	e0bffd17 	ldw	r2,-12(fp)
 80123b0:	00c00044 	movi	r3,1
 80123b4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 80123b8:	e0bffe17 	ldw	r2,-8(fp)
 80123bc:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 80123c0:	e0fffd17 	ldw	r3,-12(fp)
 80123c4:	d0a00e04 	addi	r2,gp,-32712
 80123c8:	18bfcf1e 	bne	r3,r2,8012308 <__alt_data_end+0xfc012308>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 80123cc:	0001883a 	nop
}
 80123d0:	e037883a 	mov	sp,fp
 80123d4:	dfc00117 	ldw	ra,4(sp)
 80123d8:	df000017 	ldw	fp,0(sp)
 80123dc:	dec00204 	addi	sp,sp,8
 80123e0:	f800283a 	ret

080123e4 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 80123e4:	deffff04 	addi	sp,sp,-4
 80123e8:	df000015 	stw	fp,0(sp)
 80123ec:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 80123f0:	000170fa 	wrctl	ienable,zero
}
 80123f4:	e037883a 	mov	sp,fp
 80123f8:	df000017 	ldw	fp,0(sp)
 80123fc:	dec00104 	addi	sp,sp,4
 8012400:	f800283a 	ret

08012404 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 8012404:	defffb04 	addi	sp,sp,-20
 8012408:	dfc00415 	stw	ra,16(sp)
 801240c:	df000315 	stw	fp,12(sp)
 8012410:	df000304 	addi	fp,sp,12
 8012414:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 8012418:	00820074 	movhi	r2,2049
 801241c:	10923d04 	addi	r2,r2,18676
 8012420:	10800017 	ldw	r2,0(r2)
 8012424:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 8012428:	00003106 	br	80124f0 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 801242c:	e0bffd17 	ldw	r2,-12(fp)
 8012430:	10800217 	ldw	r2,8(r2)
 8012434:	1009883a 	mov	r4,r2
 8012438:	80009780 	call	8000978 <strlen>
 801243c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 8012440:	e0bffd17 	ldw	r2,-12(fp)
 8012444:	10c00217 	ldw	r3,8(r2)
 8012448:	e0bffe17 	ldw	r2,-8(fp)
 801244c:	10bfffc4 	addi	r2,r2,-1
 8012450:	1885883a 	add	r2,r3,r2
 8012454:	10800003 	ldbu	r2,0(r2)
 8012458:	10803fcc 	andi	r2,r2,255
 801245c:	1080201c 	xori	r2,r2,128
 8012460:	10bfe004 	addi	r2,r2,-128
 8012464:	10800bd8 	cmpnei	r2,r2,47
 8012468:	1000031e 	bne	r2,zero,8012478 <alt_find_file+0x74>
    {
      len -= 1;
 801246c:	e0bffe17 	ldw	r2,-8(fp)
 8012470:	10bfffc4 	addi	r2,r2,-1
 8012474:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 8012478:	e0bffe17 	ldw	r2,-8(fp)
 801247c:	e0ffff17 	ldw	r3,-4(fp)
 8012480:	1885883a 	add	r2,r3,r2
 8012484:	10800003 	ldbu	r2,0(r2)
 8012488:	10803fcc 	andi	r2,r2,255
 801248c:	1080201c 	xori	r2,r2,128
 8012490:	10bfe004 	addi	r2,r2,-128
 8012494:	10800be0 	cmpeqi	r2,r2,47
 8012498:	1000081e 	bne	r2,zero,80124bc <alt_find_file+0xb8>
 801249c:	e0bffe17 	ldw	r2,-8(fp)
 80124a0:	e0ffff17 	ldw	r3,-4(fp)
 80124a4:	1885883a 	add	r2,r3,r2
 80124a8:	10800003 	ldbu	r2,0(r2)
 80124ac:	10803fcc 	andi	r2,r2,255
 80124b0:	1080201c 	xori	r2,r2,128
 80124b4:	10bfe004 	addi	r2,r2,-128
 80124b8:	10000a1e 	bne	r2,zero,80124e4 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 80124bc:	e0bffd17 	ldw	r2,-12(fp)
 80124c0:	10c00217 	ldw	r3,8(r2)
 80124c4:	e0bffe17 	ldw	r2,-8(fp)
 80124c8:	1809883a 	mov	r4,r3
 80124cc:	e17fff17 	ldw	r5,-4(fp)
 80124d0:	100d883a 	mov	r6,r2
 80124d4:	80126a40 	call	80126a4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 80124d8:	1000021e 	bne	r2,zero,80124e4 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 80124dc:	e0bffd17 	ldw	r2,-12(fp)
 80124e0:	00000806 	br	8012504 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 80124e4:	e0bffd17 	ldw	r2,-12(fp)
 80124e8:	10800017 	ldw	r2,0(r2)
 80124ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 80124f0:	e0fffd17 	ldw	r3,-12(fp)
 80124f4:	00820074 	movhi	r2,2049
 80124f8:	10923d04 	addi	r2,r2,18676
 80124fc:	18bfcb1e 	bne	r3,r2,801242c <__alt_data_end+0xfc01242c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 8012500:	0005883a 	mov	r2,zero
}
 8012504:	e037883a 	mov	sp,fp
 8012508:	dfc00117 	ldw	ra,4(sp)
 801250c:	df000017 	ldw	fp,0(sp)
 8012510:	dec00204 	addi	sp,sp,8
 8012514:	f800283a 	ret

08012518 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 8012518:	defffc04 	addi	sp,sp,-16
 801251c:	df000315 	stw	fp,12(sp)
 8012520:	df000304 	addi	fp,sp,12
 8012524:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 8012528:	00bffa04 	movi	r2,-24
 801252c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8012530:	e03ffd15 	stw	zero,-12(fp)
 8012534:	00001d06 	br	80125ac <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
 8012538:	00820074 	movhi	r2,2049
 801253c:	108db404 	addi	r2,r2,14032
 8012540:	e0fffd17 	ldw	r3,-12(fp)
 8012544:	18c00324 	muli	r3,r3,12
 8012548:	10c5883a 	add	r2,r2,r3
 801254c:	10800017 	ldw	r2,0(r2)
 8012550:	1000131e 	bne	r2,zero,80125a0 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
 8012554:	00820074 	movhi	r2,2049
 8012558:	108db404 	addi	r2,r2,14032
 801255c:	e0fffd17 	ldw	r3,-12(fp)
 8012560:	18c00324 	muli	r3,r3,12
 8012564:	10c5883a 	add	r2,r2,r3
 8012568:	e0ffff17 	ldw	r3,-4(fp)
 801256c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 8012570:	00820074 	movhi	r2,2049
 8012574:	10924104 	addi	r2,r2,18692
 8012578:	10c00017 	ldw	r3,0(r2)
 801257c:	e0bffd17 	ldw	r2,-12(fp)
 8012580:	1880040e 	bge	r3,r2,8012594 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
 8012584:	00820074 	movhi	r2,2049
 8012588:	10924104 	addi	r2,r2,18692
 801258c:	e0fffd17 	ldw	r3,-12(fp)
 8012590:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 8012594:	e0bffd17 	ldw	r2,-12(fp)
 8012598:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 801259c:	00000606 	br	80125b8 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 80125a0:	e0bffd17 	ldw	r2,-12(fp)
 80125a4:	10800044 	addi	r2,r2,1
 80125a8:	e0bffd15 	stw	r2,-12(fp)
 80125ac:	e0bffd17 	ldw	r2,-12(fp)
 80125b0:	10800810 	cmplti	r2,r2,32
 80125b4:	103fe01e 	bne	r2,zero,8012538 <__alt_data_end+0xfc012538>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 80125b8:	e0bffe17 	ldw	r2,-8(fp)
}
 80125bc:	e037883a 	mov	sp,fp
 80125c0:	df000017 	ldw	fp,0(sp)
 80125c4:	dec00104 	addi	sp,sp,4
 80125c8:	f800283a 	ret

080125cc <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 80125cc:	defffb04 	addi	sp,sp,-20
 80125d0:	df000415 	stw	fp,16(sp)
 80125d4:	df000404 	addi	fp,sp,16
 80125d8:	e13ffe15 	stw	r4,-8(fp)
 80125dc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 80125e0:	e0bfff17 	ldw	r2,-4(fp)
 80125e4:	10840070 	cmpltui	r2,r2,4097
 80125e8:	1000021e 	bne	r2,zero,80125f4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 80125ec:	00840004 	movi	r2,4096
 80125f0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 80125f4:	e0fffe17 	ldw	r3,-8(fp)
 80125f8:	e0bfff17 	ldw	r2,-4(fp)
 80125fc:	1885883a 	add	r2,r3,r2
 8012600:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 8012604:	e0bffe17 	ldw	r2,-8(fp)
 8012608:	e0bffc15 	stw	r2,-16(fp)
 801260c:	00000506 	br	8012624 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 8012610:	e0bffc17 	ldw	r2,-16(fp)
 8012614:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 8012618:	e0bffc17 	ldw	r2,-16(fp)
 801261c:	10800804 	addi	r2,r2,32
 8012620:	e0bffc15 	stw	r2,-16(fp)
 8012624:	e0fffc17 	ldw	r3,-16(fp)
 8012628:	e0bffd17 	ldw	r2,-12(fp)
 801262c:	18bff836 	bltu	r3,r2,8012610 <__alt_data_end+0xfc012610>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 8012630:	e0bffe17 	ldw	r2,-8(fp)
 8012634:	108007cc 	andi	r2,r2,31
 8012638:	10000226 	beq	r2,zero,8012644 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 801263c:	e0bffc17 	ldw	r2,-16(fp)
 8012640:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 8012644:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 8012648:	e037883a 	mov	sp,fp
 801264c:	df000017 	ldw	fp,0(sp)
 8012650:	dec00104 	addi	sp,sp,4
 8012654:	f800283a 	ret

08012658 <atexit>:
 8012658:	200b883a 	mov	r5,r4
 801265c:	000d883a 	mov	r6,zero
 8012660:	0009883a 	mov	r4,zero
 8012664:	000f883a 	mov	r7,zero
 8012668:	80127201 	jmpi	8012720 <__register_exitproc>

0801266c <exit>:
 801266c:	defffe04 	addi	sp,sp,-8
 8012670:	000b883a 	mov	r5,zero
 8012674:	dc000015 	stw	r16,0(sp)
 8012678:	dfc00115 	stw	ra,4(sp)
 801267c:	2021883a 	mov	r16,r4
 8012680:	80128340 	call	8012834 <__call_exitprocs>
 8012684:	00820074 	movhi	r2,2049
 8012688:	10923704 	addi	r2,r2,18652
 801268c:	11000017 	ldw	r4,0(r2)
 8012690:	20800f17 	ldw	r2,60(r4)
 8012694:	10000126 	beq	r2,zero,801269c <exit+0x30>
 8012698:	103ee83a 	callr	r2
 801269c:	8009883a 	mov	r4,r16
 80126a0:	80129c80 	call	80129c8 <_exit>

080126a4 <memcmp>:
 80126a4:	01c000c4 	movi	r7,3
 80126a8:	3980192e 	bgeu	r7,r6,8012710 <memcmp+0x6c>
 80126ac:	2144b03a 	or	r2,r4,r5
 80126b0:	11c4703a 	and	r2,r2,r7
 80126b4:	10000f26 	beq	r2,zero,80126f4 <memcmp+0x50>
 80126b8:	20800003 	ldbu	r2,0(r4)
 80126bc:	28c00003 	ldbu	r3,0(r5)
 80126c0:	10c0151e 	bne	r2,r3,8012718 <memcmp+0x74>
 80126c4:	31bfff84 	addi	r6,r6,-2
 80126c8:	01ffffc4 	movi	r7,-1
 80126cc:	00000406 	br	80126e0 <memcmp+0x3c>
 80126d0:	20800003 	ldbu	r2,0(r4)
 80126d4:	28c00003 	ldbu	r3,0(r5)
 80126d8:	31bfffc4 	addi	r6,r6,-1
 80126dc:	10c00e1e 	bne	r2,r3,8012718 <memcmp+0x74>
 80126e0:	21000044 	addi	r4,r4,1
 80126e4:	29400044 	addi	r5,r5,1
 80126e8:	31fff91e 	bne	r6,r7,80126d0 <__alt_data_end+0xfc0126d0>
 80126ec:	0005883a 	mov	r2,zero
 80126f0:	f800283a 	ret
 80126f4:	20c00017 	ldw	r3,0(r4)
 80126f8:	28800017 	ldw	r2,0(r5)
 80126fc:	1880041e 	bne	r3,r2,8012710 <memcmp+0x6c>
 8012700:	31bfff04 	addi	r6,r6,-4
 8012704:	21000104 	addi	r4,r4,4
 8012708:	29400104 	addi	r5,r5,4
 801270c:	39bff936 	bltu	r7,r6,80126f4 <__alt_data_end+0xfc0126f4>
 8012710:	303fe91e 	bne	r6,zero,80126b8 <__alt_data_end+0xfc0126b8>
 8012714:	003ff506 	br	80126ec <__alt_data_end+0xfc0126ec>
 8012718:	10c5c83a 	sub	r2,r2,r3
 801271c:	f800283a 	ret

08012720 <__register_exitproc>:
 8012720:	00820074 	movhi	r2,2049
 8012724:	defffa04 	addi	sp,sp,-24
 8012728:	10923704 	addi	r2,r2,18652
 801272c:	dc000315 	stw	r16,12(sp)
 8012730:	14000017 	ldw	r16,0(r2)
 8012734:	dc400415 	stw	r17,16(sp)
 8012738:	dfc00515 	stw	ra,20(sp)
 801273c:	80805217 	ldw	r2,328(r16)
 8012740:	2023883a 	mov	r17,r4
 8012744:	10003626 	beq	r2,zero,8012820 <__register_exitproc+0x100>
 8012748:	10c00117 	ldw	r3,4(r2)
 801274c:	010007c4 	movi	r4,31
 8012750:	20c00e16 	blt	r4,r3,801278c <__register_exitproc+0x6c>
 8012754:	1a400044 	addi	r9,r3,1
 8012758:	8800211e 	bne	r17,zero,80127e0 <__register_exitproc+0xc0>
 801275c:	18c00084 	addi	r3,r3,2
 8012760:	18c7883a 	add	r3,r3,r3
 8012764:	18c7883a 	add	r3,r3,r3
 8012768:	12400115 	stw	r9,4(r2)
 801276c:	10c7883a 	add	r3,r2,r3
 8012770:	19400015 	stw	r5,0(r3)
 8012774:	0005883a 	mov	r2,zero
 8012778:	dfc00517 	ldw	ra,20(sp)
 801277c:	dc400417 	ldw	r17,16(sp)
 8012780:	dc000317 	ldw	r16,12(sp)
 8012784:	dec00604 	addi	sp,sp,24
 8012788:	f800283a 	ret
 801278c:	00800034 	movhi	r2,0
 8012790:	10800004 	addi	r2,r2,0
 8012794:	10002526 	beq	r2,zero,801282c <__register_exitproc+0x10c>
 8012798:	01006404 	movi	r4,400
 801279c:	d9400015 	stw	r5,0(sp)
 80127a0:	d9800115 	stw	r6,4(sp)
 80127a4:	d9c00215 	stw	r7,8(sp)
 80127a8:	00000000 	call	0 <__reset-0x8000000>
 80127ac:	d9400017 	ldw	r5,0(sp)
 80127b0:	d9800117 	ldw	r6,4(sp)
 80127b4:	d9c00217 	ldw	r7,8(sp)
 80127b8:	10001c26 	beq	r2,zero,801282c <__register_exitproc+0x10c>
 80127bc:	80c05217 	ldw	r3,328(r16)
 80127c0:	10000115 	stw	zero,4(r2)
 80127c4:	02400044 	movi	r9,1
 80127c8:	10c00015 	stw	r3,0(r2)
 80127cc:	80805215 	stw	r2,328(r16)
 80127d0:	10006215 	stw	zero,392(r2)
 80127d4:	10006315 	stw	zero,396(r2)
 80127d8:	0007883a 	mov	r3,zero
 80127dc:	883fdf26 	beq	r17,zero,801275c <__alt_data_end+0xfc01275c>
 80127e0:	18d1883a 	add	r8,r3,r3
 80127e4:	4211883a 	add	r8,r8,r8
 80127e8:	1211883a 	add	r8,r2,r8
 80127ec:	41802215 	stw	r6,136(r8)
 80127f0:	01000044 	movi	r4,1
 80127f4:	11806217 	ldw	r6,392(r2)
 80127f8:	20c8983a 	sll	r4,r4,r3
 80127fc:	310cb03a 	or	r6,r6,r4
 8012800:	11806215 	stw	r6,392(r2)
 8012804:	41c04215 	stw	r7,264(r8)
 8012808:	01800084 	movi	r6,2
 801280c:	89bfd31e 	bne	r17,r6,801275c <__alt_data_end+0xfc01275c>
 8012810:	11806317 	ldw	r6,396(r2)
 8012814:	3108b03a 	or	r4,r6,r4
 8012818:	11006315 	stw	r4,396(r2)
 801281c:	003fcf06 	br	801275c <__alt_data_end+0xfc01275c>
 8012820:	80805304 	addi	r2,r16,332
 8012824:	80805215 	stw	r2,328(r16)
 8012828:	003fc706 	br	8012748 <__alt_data_end+0xfc012748>
 801282c:	00bfffc4 	movi	r2,-1
 8012830:	003fd106 	br	8012778 <__alt_data_end+0xfc012778>

08012834 <__call_exitprocs>:
 8012834:	00820074 	movhi	r2,2049
 8012838:	10923704 	addi	r2,r2,18652
 801283c:	10800017 	ldw	r2,0(r2)
 8012840:	defff404 	addi	sp,sp,-48
 8012844:	dd800815 	stw	r22,32(sp)
 8012848:	d8800015 	stw	r2,0(sp)
 801284c:	10805204 	addi	r2,r2,328
 8012850:	dd000615 	stw	r20,24(sp)
 8012854:	dc800415 	stw	r18,16(sp)
 8012858:	dfc00b15 	stw	ra,44(sp)
 801285c:	df000a15 	stw	fp,40(sp)
 8012860:	ddc00915 	stw	r23,36(sp)
 8012864:	dd400715 	stw	r21,28(sp)
 8012868:	dcc00515 	stw	r19,20(sp)
 801286c:	dc400315 	stw	r17,12(sp)
 8012870:	dc000215 	stw	r16,8(sp)
 8012874:	2025883a 	mov	r18,r4
 8012878:	2829883a 	mov	r20,r5
 801287c:	d8800115 	stw	r2,4(sp)
 8012880:	05bfffc4 	movi	r22,-1
 8012884:	d8800017 	ldw	r2,0(sp)
 8012888:	14c05217 	ldw	r19,328(r2)
 801288c:	98001d26 	beq	r19,zero,8012904 <__call_exitprocs+0xd0>
 8012890:	dd400117 	ldw	r21,4(sp)
 8012894:	98800117 	ldw	r2,4(r19)
 8012898:	173fffc4 	addi	fp,r2,-1
 801289c:	e0000d16 	blt	fp,zero,80128d4 <__call_exitprocs+0xa0>
 80128a0:	14000044 	addi	r16,r2,1
 80128a4:	8421883a 	add	r16,r16,r16
 80128a8:	8421883a 	add	r16,r16,r16
 80128ac:	84402004 	addi	r17,r16,128
 80128b0:	9c63883a 	add	r17,r19,r17
 80128b4:	9c21883a 	add	r16,r19,r16
 80128b8:	a0001e26 	beq	r20,zero,8012934 <__call_exitprocs+0x100>
 80128bc:	80804017 	ldw	r2,256(r16)
 80128c0:	15001c26 	beq	r2,r20,8012934 <__call_exitprocs+0x100>
 80128c4:	e73fffc4 	addi	fp,fp,-1
 80128c8:	843fff04 	addi	r16,r16,-4
 80128cc:	8c7fff04 	addi	r17,r17,-4
 80128d0:	e5bff91e 	bne	fp,r22,80128b8 <__alt_data_end+0xfc0128b8>
 80128d4:	00800034 	movhi	r2,0
 80128d8:	10800004 	addi	r2,r2,0
 80128dc:	10000926 	beq	r2,zero,8012904 <__call_exitprocs+0xd0>
 80128e0:	98800117 	ldw	r2,4(r19)
 80128e4:	1000311e 	bne	r2,zero,80129ac <__call_exitprocs+0x178>
 80128e8:	98800017 	ldw	r2,0(r19)
 80128ec:	10003426 	beq	r2,zero,80129c0 <__call_exitprocs+0x18c>
 80128f0:	9809883a 	mov	r4,r19
 80128f4:	a8800015 	stw	r2,0(r21)
 80128f8:	00000000 	call	0 <__reset-0x8000000>
 80128fc:	acc00017 	ldw	r19,0(r21)
 8012900:	983fe41e 	bne	r19,zero,8012894 <__alt_data_end+0xfc012894>
 8012904:	dfc00b17 	ldw	ra,44(sp)
 8012908:	df000a17 	ldw	fp,40(sp)
 801290c:	ddc00917 	ldw	r23,36(sp)
 8012910:	dd800817 	ldw	r22,32(sp)
 8012914:	dd400717 	ldw	r21,28(sp)
 8012918:	dd000617 	ldw	r20,24(sp)
 801291c:	dcc00517 	ldw	r19,20(sp)
 8012920:	dc800417 	ldw	r18,16(sp)
 8012924:	dc400317 	ldw	r17,12(sp)
 8012928:	dc000217 	ldw	r16,8(sp)
 801292c:	dec00c04 	addi	sp,sp,48
 8012930:	f800283a 	ret
 8012934:	98800117 	ldw	r2,4(r19)
 8012938:	80c00017 	ldw	r3,0(r16)
 801293c:	10bfffc4 	addi	r2,r2,-1
 8012940:	17001526 	beq	r2,fp,8012998 <__call_exitprocs+0x164>
 8012944:	80000015 	stw	zero,0(r16)
 8012948:	183fde26 	beq	r3,zero,80128c4 <__alt_data_end+0xfc0128c4>
 801294c:	00800044 	movi	r2,1
 8012950:	1708983a 	sll	r4,r2,fp
 8012954:	98806217 	ldw	r2,392(r19)
 8012958:	9dc00117 	ldw	r23,4(r19)
 801295c:	2084703a 	and	r2,r4,r2
 8012960:	1000061e 	bne	r2,zero,801297c <__call_exitprocs+0x148>
 8012964:	183ee83a 	callr	r3
 8012968:	98800117 	ldw	r2,4(r19)
 801296c:	15ffc51e 	bne	r2,r23,8012884 <__alt_data_end+0xfc012884>
 8012970:	a8800017 	ldw	r2,0(r21)
 8012974:	14ffd326 	beq	r2,r19,80128c4 <__alt_data_end+0xfc0128c4>
 8012978:	003fc206 	br	8012884 <__alt_data_end+0xfc012884>
 801297c:	98806317 	ldw	r2,396(r19)
 8012980:	2084703a 	and	r2,r4,r2
 8012984:	1000061e 	bne	r2,zero,80129a0 <__call_exitprocs+0x16c>
 8012988:	89400017 	ldw	r5,0(r17)
 801298c:	9009883a 	mov	r4,r18
 8012990:	183ee83a 	callr	r3
 8012994:	003ff406 	br	8012968 <__alt_data_end+0xfc012968>
 8012998:	9f000115 	stw	fp,4(r19)
 801299c:	003fea06 	br	8012948 <__alt_data_end+0xfc012948>
 80129a0:	89000017 	ldw	r4,0(r17)
 80129a4:	183ee83a 	callr	r3
 80129a8:	003fef06 	br	8012968 <__alt_data_end+0xfc012968>
 80129ac:	98800017 	ldw	r2,0(r19)
 80129b0:	982b883a 	mov	r21,r19
 80129b4:	1027883a 	mov	r19,r2
 80129b8:	983fb61e 	bne	r19,zero,8012894 <__alt_data_end+0xfc012894>
 80129bc:	003fd106 	br	8012904 <__alt_data_end+0xfc012904>
 80129c0:	0005883a 	mov	r2,zero
 80129c4:	003ffa06 	br	80129b0 <__alt_data_end+0xfc0129b0>

080129c8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 80129c8:	defffd04 	addi	sp,sp,-12
 80129cc:	df000215 	stw	fp,8(sp)
 80129d0:	df000204 	addi	fp,sp,8
 80129d4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 80129d8:	0001883a 	nop
 80129dc:	e0bfff17 	ldw	r2,-4(fp)
 80129e0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 80129e4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 80129e8:	10000226 	beq	r2,zero,80129f4 <_exit+0x2c>
    ALT_SIM_FAIL();
 80129ec:	002af070 	cmpltui	zero,zero,43969
 80129f0:	00000106 	br	80129f8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 80129f4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 80129f8:	003fff06 	br	80129f8 <__alt_data_end+0xfc0129f8>
